{"version":3,"file":"103.js","sources":["webpack://neuroglancer/./src/credentials_provider/shared_common.ts","webpack://neuroglancer/./src/datasource/boss/base.ts","webpack://neuroglancer/./src/datasource/brainmaps/base.ts","webpack://neuroglancer/./src/datasource/deepzoom/base.ts","webpack://neuroglancer/./src/datasource/dvid/base.ts","webpack://neuroglancer/./src/datasource/n5/base.ts","webpack://neuroglancer/./src/datasource/nifti/base.ts","webpack://neuroglancer/./src/datasource/precomputed/base.ts","webpack://neuroglancer/./src/datasource/render/base.ts","webpack://neuroglancer/./src/datasource/zarr/base.ts","webpack://neuroglancer/./src/datasource/zarr/codec/index.ts","webpack://neuroglancer/./src/datasource/zarr/metadata/index.ts","webpack://neuroglancer/./src/gpu_hash/hash_function.ts","webpack://neuroglancer/./src/mesh/base.ts","webpack://neuroglancer/./src/perspective_view/base.ts","webpack://neuroglancer/./src/render_layer_common.ts","webpack://neuroglancer/./src/single_mesh/base.ts","webpack://neuroglancer/./src/skeleton/base.ts","webpack://neuroglancer/./src/sliceview/chunk_layout.ts","webpack://neuroglancer/./src/util/animation_frame_debounce.ts","webpack://neuroglancer/./src/util/disjoint_sets.ts","webpack://neuroglancer/./src/util/float32_to_string.ts","webpack://neuroglancer/./src/util/linked_list.0.ts","webpack://neuroglancer/./src/util/memoize.ts","webpack://neuroglancer/./src/util/object_id.ts","webpack://neuroglancer/./src/util/string.ts","webpack://neuroglancer/./src/util/trackable_enum.ts","webpack://neuroglancer/./src/util/uint64.ts","webpack://neuroglancer/./src/webgl/context.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const CREDENTIALS_PROVIDER_RPC_ID = \"CredentialsProvider\";\nexport const CREDENTIALS_PROVIDER_GET_RPC_ID = \"CredentialsProvider.get\";\n","/**\n * @license\n * Copyright 2017 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { vec2 } from \"#src/util/geom.js\";\n\nexport class BossSourceParameters {\n  baseUrl: string;\n  collection: string;\n  experiment: string;\n  channel: string;\n  resolution: string;\n}\n\nexport class VolumeChunkSourceParameters extends BossSourceParameters {\n  encoding: string;\n  window: vec2 | undefined;\n\n  static RPC_ID = \"boss/VolumeChunkSource\";\n\n  static stringify(parameters: VolumeChunkSourceParameters) {\n    return `boss:volume:${parameters.baseUrl}/${parameters.collection}/${parameters.experiment}/${parameters.channel}/${parameters.resolution}/${parameters.encoding}`;\n  }\n}\n\nexport class MeshSourceParameters {\n  baseUrl: string;\n\n  static RPC_ID = \"boss/MeshChunkSource\";\n\n  static stringify(parameters: MeshSourceParameters) {\n    return `boss:mesh:${parameters.baseUrl}`;\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { BrainmapsInstance } from \"#src/datasource/brainmaps/api.js\";\nimport type { vec3 } from \"#src/util/geom.js\";\n\nexport enum VolumeChunkEncoding {\n  RAW = 0,\n  JPEG = 1,\n  COMPRESSED_SEGMENTATION = 2,\n}\n\nexport class ChangeSpec {\n  changeStackId: string;\n  /**\n   * Apply changes prior to this timestamp (in milliseconds since epoch).  If 0, no changes should\n   * be applied.  If negative, all changes should be applied.\n   */\n  timeStamp?: number;\n  skipEquivalences?: boolean;\n}\n\nexport class VolumeSourceParameters {\n  instance: BrainmapsInstance;\n  volumeId: string;\n  scaleIndex: number;\n  encoding: VolumeChunkEncoding;\n  jpegQuality: number | undefined;\n  changeSpec: ChangeSpec | undefined;\n\n  static RPC_ID = \"brainmaps/VolumeChunkSource\";\n}\n\nexport interface SingleMeshInfo {\n  name: string;\n  type: string;\n}\n\nexport interface MultiscaleMeshLOD {\n  info: SingleMeshInfo;\n  scale: number;\n\n  /**\n   * Shape of the chunk for this level of detail, as a multiple of the base chunk shape.\n   */\n  relativeBlockShape: vec3;\n\n  /**\n   * Size of chunk grid, in chunks.\n   */\n  gridShape: Uint32Array;\n}\n\nexport interface MultiscaleMeshInfo {\n  /**\n   * Prefix\n   */\n  key: string;\n\n  /**\n   * Chunk shape in spatial units (nm) for lod 0.\n   */\n  chunkShape: vec3;\n\n  lods: MultiscaleMeshLOD[];\n}\n\nexport class MultiscaleMeshSourceParameters {\n  instance: BrainmapsInstance;\n  volumeId: string;\n  info: MultiscaleMeshInfo;\n  changeSpec: ChangeSpec | undefined;\n\n  static RPC_ID = \"brainmaps/MultiscaleMeshSource\";\n}\n\nexport class MeshSourceParameters {\n  instance: BrainmapsInstance;\n  volumeId: string;\n  meshName: string;\n  changeSpec: ChangeSpec | undefined;\n\n  static RPC_ID = \"brainmaps/MeshSource\";\n}\n\nexport class SkeletonSourceParameters {\n  instance: BrainmapsInstance;\n  volumeId: string;\n  meshName: string;\n  changeSpec: ChangeSpec | undefined;\n\n  static RPC_ID = \"brainmaps/SkeletonSource\";\n}\n\nexport class AnnotationSourceParameters {\n  instance: BrainmapsInstance;\n  volumeId: string;\n  changestack: string;\n  upperVoxelBound: Float32Array;\n\n  static RPC_ID = \"brainmaps/Annotation\";\n}\n\nexport class AnnotationSpatialIndexSourceParameters {\n  instance: BrainmapsInstance;\n  volumeId: string;\n  changestack: string;\n\n  static RPC_ID = \"brainmaps/AnnotationSpatialIndex\";\n}\n","/**\n * @license\n * Copyright 2016 Google Inc., 2023 Gergely Csucs\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum ImageTileEncoding {\n  JPG = 0,\n  JPEG = 1,\n  PNG = 2,\n}\n\nexport class ImageTileSourceParameters {\n  url: string;\n  encoding: ImageTileEncoding;\n  format: string;\n  tilesize: number;\n  overlap: number;\n\n  static RPC_ID = \"deepzoom/ImageTileSource\";\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum VolumeChunkEncoding {\n  JPEG = 0,\n  RAW = 1,\n  COMPRESSED_SEGMENTATION = 2,\n  COMPRESSED_SEGMENTATIONARRAY = 3,\n}\n\nexport class DVIDSourceParameters {\n  baseUrl: string;\n  nodeKey: string;\n  dataInstanceKey: string;\n  authServer?: string;\n  user?: string;\n}\n\nexport class VolumeChunkSourceParameters extends DVIDSourceParameters {\n  dataScale: string;\n  encoding: VolumeChunkEncoding;\n  static RPC_ID = \"dvid/VolumeChunkSource\";\n}\n\nexport class SkeletonSourceParameters extends DVIDSourceParameters {\n  static RPC_ID = \"dvid/SkeletonSource\";\n}\n\nexport class MeshSourceParameters extends DVIDSourceParameters {\n  static RPC_ID = \"dvid/MeshSource\";\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum VolumeChunkEncoding {\n  RAW,\n  ZLIB,\n  GZIP,\n  BLOSC,\n  ZSTD,\n}\n\nexport class VolumeChunkSourceParameters {\n  url: string;\n  encoding: VolumeChunkEncoding;\n\n  static RPC_ID = \"n5/VolumeChunkSource\";\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { DataType } from \"#src/sliceview/volume/base.js\";\n\nexport const GET_NIFTI_VOLUME_INFO_RPC_ID = \"nifti/getNiftiVolumeInfo\";\n\nexport interface NiftiVolumeInfo {\n  rank: number;\n  sourceNames: string[];\n  viewNames: string[];\n  viewScales: Float64Array;\n  sourceScales: Float64Array;\n  units: string[];\n  dataType: DataType;\n  transform: Float64Array;\n  description: string;\n  volumeSize: Uint32Array;\n}\n\nexport class VolumeSourceParameters {\n  url: string;\n\n  static RPC_ID = \"nifti/VolumeChunkSource\";\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  AnnotationPropertySpec,\n  AnnotationType,\n} from \"#src/annotation/index.js\";\nimport type { VertexAttributeInfo } from \"#src/skeleton/base.js\";\nimport type { mat4 } from \"#src/util/geom.js\";\n\nexport enum VolumeChunkEncoding {\n  RAW = 0,\n  JPEG = 1,\n  COMPRESSED_SEGMENTATION = 2,\n  COMPRESSO = 3,\n  PNG = 4,\n  JXL = 5,\n}\n\nexport class VolumeChunkSourceParameters {\n  url: string;\n  encoding: VolumeChunkEncoding;\n  sharding: ShardingParameters | undefined;\n\n  static RPC_ID = \"precomputed/VolumeChunkSource\";\n}\n\nexport class MeshSourceParameters {\n  url: string;\n  lod: number;\n\n  static RPC_ID = \"precomputed/MeshSource\";\n}\n\nexport enum DataEncoding {\n  RAW = 0,\n  GZIP = 1,\n}\n\nexport enum ShardingHashFunction {\n  IDENTITY = 0,\n  MURMURHASH3_X86_128 = 1,\n}\n\nexport interface ShardingParameters {\n  hash: ShardingHashFunction;\n  preshiftBits: number;\n  minishardBits: number;\n  shardBits: number;\n  minishardIndexEncoding: DataEncoding;\n  dataEncoding: DataEncoding;\n}\n\nexport class MultiscaleMeshMetadata {\n  transform: mat4;\n  lodScaleMultiplier: number;\n  vertexQuantizationBits: number;\n  sharding: ShardingParameters | undefined;\n}\n\nexport class MultiscaleMeshSourceParameters {\n  url: string;\n  metadata: MultiscaleMeshMetadata;\n\n  static RPC_ID = \"precomputed/MultiscaleMeshSource\";\n}\n\nexport interface SkeletonMetadata {\n  transform: mat4;\n  vertexAttributes: Map<string, VertexAttributeInfo>;\n  sharding: ShardingParameters | undefined;\n}\n\nexport class SkeletonSourceParameters {\n  url: string;\n  metadata: SkeletonMetadata;\n\n  static RPC_ID = \"precomputed/SkeletonSource\";\n}\n\nexport class AnnotationSpatialIndexSourceParameters {\n  url: string;\n  sharding: ShardingParameters | undefined;\n  static RPC_ID = \"precomputed/AnnotationSpatialIndexSource\";\n}\n\nexport class AnnotationSourceParameters {\n  rank: number;\n  relationships: {\n    url: string;\n    name: string;\n    sharding: ShardingParameters | undefined;\n  }[];\n  properties: AnnotationPropertySpec[];\n  byId: { url: string; sharding: ShardingParameters | undefined };\n  type: AnnotationType;\n  static RPC_ID = \"precomputed/AnnotationSource\";\n}\n\nexport class IndexedSegmentPropertySourceParameters {\n  url: string;\n  sharding: ShardingParameters | undefined;\n  static RPC_ID = \"precomputed/IndexedSegmentPropertySource\";\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class RenderBaseSourceParameters {\n  baseUrl: string;\n  owner: string;\n  project: string;\n  stack: string;\n  channel: string | undefined;\n}\n\nexport class RenderSourceParameters extends RenderBaseSourceParameters {\n  minIntensity: number | undefined;\n  maxIntensity: number | undefined;\n  maxTileSpecsToRender: number | undefined;\n  filter: boolean | undefined;\n}\n\nexport class TileChunkSourceParameters extends RenderSourceParameters {\n  dims: string;\n  level: number;\n  encoding: string;\n\n  static RPC_ID = \"render/TileChunkSource\";\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ArrayMetadata } from \"#src/datasource/zarr/metadata/index.js\";\n\nexport class VolumeChunkSourceParameters {\n  url: string;\n  metadata: ArrayMetadata;\n  static RPC_ID = \"zarr/VolumeChunkSource\";\n}\n","/**\n * @license\n * Copyright 2023 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { DataType } from \"#src/util/data_type.js\";\n\nexport enum CodecKind {\n  arrayToArray = 0,\n  arrayToBytes = 1,\n  bytesToBytes = 2,\n}\n\nexport interface CodecSpec<Kind extends CodecKind = CodecKind> {\n  kind: Kind;\n  name: string;\n  configuration: unknown;\n}\n\nexport interface CodecChainSpec {\n  [CodecKind.arrayToArray]: CodecSpec<CodecKind.arrayToArray>[];\n  [CodecKind.arrayToBytes]: CodecSpec<CodecKind.arrayToBytes>;\n  [CodecKind.bytesToBytes]: CodecSpec<CodecKind.bytesToBytes>[];\n  arrayInfo: CodecArrayInfo[];\n  layoutInfo: CodecArrayLayoutInfo[];\n  shardingInfo?: ShardingInfo;\n  encodedSize: (number | undefined)[];\n}\n\nexport interface ShardingInfo {\n  subChunkShape: number[];\n  subChunkGridShape: number[];\n  subChunkCodecs: CodecChainSpec;\n}\n\nexport interface CodecArrayInfo {\n  dataType: DataType;\n  // Specifies the chunk shape, indexed by logical dimension.\n  chunkShape: number[];\n}\n\nexport interface CodecArrayLayoutInfo {\n  // Maps the physical dimension index of the array (assuming C order storage) to the logical\n  // dimension of the (transformed) array.\n  //\n  // `physicalToLogicalDimension[0]` is the logical dimension index of the outer-most (largest\n  // stride) dimension.\n  //\n  // `physicalToLogicalDimension[physicalToLogicalDimension.length-1]` is the logical dimension\n  // index of the inner-most (unit stride) dimension.\n  physicalToLogicalDimension: number[];\n\n  // Specifies the read chunk shape, indexed by logical dimension.\n  readChunkShape: number[];\n}\n","/**\n * @license\n * Copyright 2023 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { CodecChainSpec } from \"#src/datasource/zarr/codec/index.js\";\nimport type { DataType } from \"#src/util/data_type.js\";\nimport type { Uint64 } from \"#src/util/uint64.js\";\n\nexport enum ChunkKeyEncoding {\n  DEFAULT = 0,\n  V2 = 1,\n}\n\nexport type DimensionSeparator = \"/\" | \".\";\n\nexport type NodeType = \"array\" | \"group\";\n\nexport interface ArrayMetadata {\n  zarrVersion: 2 | 3;\n  nodeType: \"array\";\n  rank: number;\n  shape: number[];\n  chunkShape: number[];\n  dataType: DataType;\n  fillValue: number | Uint64;\n  dimensionNames: (string | null)[];\n  dimensionUnits: (string | null)[];\n  userAttributes: Record<string, unknown>;\n  dimensionSeparator: DimensionSeparator;\n  chunkKeyEncoding: ChunkKeyEncoding;\n  codecs: CodecChainSpec;\n}\n\nexport interface GroupMetadata {\n  zarrVersion: 2 | 3;\n  nodeType: \"group\";\n  userAttributes: Record<string, unknown>;\n}\n\nexport type Metadata = ArrayMetadata | GroupMetadata;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst k1 = 0xcc9e2d51;\nconst k2 = 0x1b873593;\n\n// MurmurHash excluding the final mixing steps.\nexport function hashCombine(state: number, value: number) {\n  value >>>= 0;\n  state >>>= 0;\n\n  value = Math.imul(value, k1) >>> 0;\n  value = ((value << 15) | (value >>> 17)) >>> 0;\n  value = Math.imul(value, k2) >>> 0;\n  state = (state ^ value) >>> 0;\n  state = ((state << 13) | (state >>> 19)) >>> 0;\n  state = (state * 5 + 0xe6546b64) >>> 0;\n  return state;\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const MESH_LAYER_RPC_ID = \"mesh/MeshLayer\";\nexport const MULTISCALE_MESH_LAYER_RPC_ID = \"mesh/MultiscaleMeshLayer\";\nexport const FRAGMENT_SOURCE_RPC_ID = \"mesh/FragmentSource\";\n\nexport const MULTISCALE_FRAGMENT_SOURCE_RPC_ID =\n  \"mesh/MultiscaleFragmentSource\";\n\nexport type EncodedVertexPositions = Float32Array | Uint32Array | Uint16Array;\nexport type MeshVertexIndices = Uint16Array | Uint32Array;\nexport type OctahedronVertexNormals = Uint8Array;\n\nexport interface EncodedMeshData {\n  vertexPositions: EncodedVertexPositions;\n  vertexNormals: OctahedronVertexNormals;\n  indices: MeshVertexIndices;\n  strips: boolean;\n}\n\nexport interface MultiscaleFragmentFormat {\n  /**\n   * If `true`, vertex positions are specified relative to the fragment bounds, meaning (0, 0, 0) is\n   * the start corner of the fragment and (1, 1, 1) is the end corner.\n   *\n   * If `false`, vertex positions are in \"model\" coordinates.\n   */\n  fragmentRelativeVertices: boolean;\n\n  vertexPositionFormat: VertexPositionFormat;\n}\n\nexport enum VertexPositionFormat {\n  float32 = 0,\n  uint10 = 1,\n  uint16 = 2,\n}\n","/**\n * @license\n * Copyright 2018 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PERSPECTIVE_VIEW_RPC_ID = \"perspective_view/PerspectiveView\";\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const RENDERED_VIEW_ADD_LAYER_RPC_ID = \"rendered_view.addLayer\";\nexport const RENDERED_VIEW_REMOVE_LAYER_RPC_ID = \"rendered_view.removeLayer\";\nexport const PROJECTION_PARAMETERS_RPC_ID = \"SharedProjectionParameters\";\nexport const PROJECTION_PARAMETERS_CHANGED_RPC_METHOD_ID =\n  \"SharedProjectionParameters.changed\";\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { DataType } from \"#src/util/data_type.js\";\n\nexport const SINGLE_MESH_LAYER_RPC_ID = \"single_mesh/SingleMeshLayer\";\nexport const GET_SINGLE_MESH_INFO_RPC_ID = \"single_mesh/getSingleMeshInfo\";\n\nexport const SINGLE_MESH_CHUNK_KEY = \"\";\n\nexport interface VertexAttributeInfo {\n  name: string;\n  dataType: DataType;\n  numComponents: number;\n  source?: string;\n  min?: number;\n  max?: number;\n}\n\nexport interface SingleMeshInfo {\n  numVertices: number;\n  numTriangles: number;\n  // Perhaps bounding box?\n  // Perhaps transform data?\n  vertexAttributes: VertexAttributeInfo[];\n}\n\nexport interface SingleMeshData {\n  vertexPositions: Float32Array<ArrayBuffer>;\n  indices: Uint32Array<ArrayBuffer>;\n  vertexNormals?: Float32Array<ArrayBuffer>;\n  vertexAttributes: Float32Array<ArrayBuffer>[];\n}\n\nexport class SingleMeshSourceParameters {\n  meshSourceUrl: string;\n}\n\nexport class SingleMeshSourceParametersWithInfo extends SingleMeshSourceParameters {\n  info: SingleMeshInfo;\n\n  static RPC_ID = \"single_mesh/SingleMeshSource\";\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { DataType } from \"#src/util/data_type.js\";\n\nexport const SKELETON_LAYER_RPC_ID = \"skeleton/SkeletonLayer\";\n\nexport interface VertexAttributeInfo {\n  dataType: DataType;\n  numComponents: number;\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  mat4,\n  transformVectorByMat4,\n  transformVectorByMat4Transpose,\n  vec3,\n} from \"#src/util/geom.js\";\nimport * as matrix from \"#src/util/matrix.js\";\n\nexport class ChunkLayout {\n  /**\n   * Size of each chunk in \"chunk\" coordinates.\n   */\n  size: vec3;\n\n  /**\n   * Transform from local \"chunk\" coordinates to global voxel coordinates.\n   */\n  transform: mat4;\n\n  /**\n   * Inverse of transform.  Transform from global voxel coordinates to \"chunk\" coordinates.\n   */\n  invTransform: mat4;\n\n  /**\n   * Determinant of `transform`.\n   */\n  detTransform: number;\n\n  finiteRank: number;\n\n  constructor(size: vec3, transform: mat4, finiteRank: number) {\n    this.size = vec3.clone(size);\n    this.transform = mat4.clone(transform);\n    this.finiteRank = finiteRank;\n    const invTransform = mat4.create();\n    const det = matrix.inverse(invTransform, 4, transform, 4, 4);\n    if (det === 0) {\n      throw new Error(\"Transform is singular\");\n    }\n    this.invTransform = invTransform;\n    this.detTransform = det;\n  }\n  toObject() {\n    return {\n      size: this.size,\n      transform: this.transform,\n      finiteRank: this.finiteRank,\n    };\n  }\n\n  static fromObject(msg: any) {\n    return new ChunkLayout(msg.size, msg.transform, msg.finiteRank);\n  }\n\n  /**\n   * Transform global spatial coordinates to local spatial coordinates.\n   */\n  globalToLocalSpatial(out: vec3, globalSpatial: vec3): vec3 {\n    return vec3.transformMat4(out, globalSpatial, this.invTransform);\n  }\n\n  localSpatialVectorToGlobal(out: vec3, localVector: vec3): vec3 {\n    return transformVectorByMat4(out, localVector, this.transform);\n  }\n\n  /**\n   * Returns the unnormalized normal vector.\n   */\n  globalToLocalNormal(globalNormal: vec3, localNormal: vec3) {\n    return transformVectorByMat4Transpose(\n      globalNormal,\n      localNormal,\n      this.transform,\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface DebouncedFunction {\n  /**\n   * Ensures the wrapped function will be run at the next animation frame.\n   */\n  (): void;\n\n  /**\n   * Cancels any outstanding call.\n   */\n  cancel(): void;\n\n  /**\n   * Runs any outstanding call immediately.\n   */\n  flush(): void;\n}\n\n/**\n * Returns a function that, when called, ensures `callback` is invoked at the next animation frame.\n */\nexport function animationFrameDebounce(\n  callback: () => void,\n): DebouncedFunction {\n  let handle = -1;\n  const cancel = () => {\n    if (handle !== -1) {\n      cancelAnimationFrame(handle);\n      handle = -1;\n    }\n  };\n  const flush = () => {\n    if (handle !== -1) {\n      handle = -1;\n      callback();\n    }\n  };\n  return Object.assign(\n    () => {\n      if (handle === -1) {\n        handle = requestAnimationFrame(() => {\n          handle = -1;\n          callback();\n        });\n      }\n    },\n    { flush, cancel },\n  );\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VisibleSegmentEquivalencePolicy } from \"#src/segmentation_graph/segment_id.js\";\nimport type { WatchableValueInterface } from \"#src/trackable_value.js\";\nimport { WatchableValue } from \"#src/trackable_value.js\";\nimport { Uint64 } from \"#src/util/uint64.js\";\n\nconst rankSymbol = Symbol(\"disjoint_sets:rank\");\nconst parentSymbol = Symbol(\"disjoint_sets:parent\");\nconst nextSymbol = Symbol(\"disjoint_sets:next\");\nconst prevSymbol = Symbol(\"disjoint_sets:prev\");\n\nfunction findRepresentative(v: any): any {\n  // First pass: find the root, which will be stored in ancestor.\n  let old = v;\n  let ancestor = v[parentSymbol];\n  while (ancestor !== v) {\n    v = ancestor;\n    ancestor = v[parentSymbol];\n  }\n  // Second pass: set all of the parent pointers along the path from the\n  // original element `old' to refer directly to the root `ancestor'.\n  v = old[parentSymbol];\n  while (ancestor !== v) {\n    old[parentSymbol] = ancestor;\n    old = v;\n    v = old[parentSymbol];\n  }\n  return ancestor;\n}\n\nfunction linkUnequalSetRepresentatives(i: any, j: any): any {\n  const iRank = i[rankSymbol];\n  const jRank = j[rankSymbol];\n  if (iRank > jRank) {\n    j[parentSymbol] = i;\n    return i;\n  }\n\n  i[parentSymbol] = j;\n  if (iRank === jRank) {\n    j[rankSymbol] = jRank + 1;\n  }\n  return j;\n}\n\nfunction spliceCircularLists(i: any, j: any) {\n  const iPrev = i[prevSymbol];\n  const jPrev = j[prevSymbol];\n\n  // Connect end of i to beginning of j.\n  j[prevSymbol] = iPrev;\n  iPrev[nextSymbol] = j;\n\n  // Connect end of j to beginning of i.\n  i[prevSymbol] = jPrev;\n  jPrev[nextSymbol] = i;\n}\n\nfunction* setElementIterator(i: any) {\n  let j = i;\n  do {\n    yield j;\n    j = j[nextSymbol];\n  } while (j !== i);\n}\n\nfunction initializeElement(v: any) {\n  v[parentSymbol] = v;\n  v[rankSymbol] = 0;\n  v[nextSymbol] = v[prevSymbol] = v;\n}\n\nconst minSymbol = Symbol(\"disjoint_sets:min\");\n\nfunction isRootElement(v: any) {\n  return v[parentSymbol] === v;\n}\n\n/**\n * Represents a collection of disjoint sets of Uint64 values.\n *\n * Supports merging sets, retrieving the minimum Uint64 value contained in a set (the representative\n * value), and iterating over the elements contained in a set.\n */\nexport class DisjointUint64Sets {\n  private map = new Map<string, Uint64>();\n  visibleSegmentEquivalencePolicy: WatchableValueInterface<VisibleSegmentEquivalencePolicy> =\n    new WatchableValue<VisibleSegmentEquivalencePolicy>(\n      VisibleSegmentEquivalencePolicy.MIN_REPRESENTATIVE,\n    );\n  generation = 0;\n\n  has(x: Uint64): boolean {\n    const key = x.toString();\n    const element = this.map.get(key);\n    return element !== undefined;\n  }\n\n  get(x: Uint64): Uint64 {\n    const key = x.toString();\n    const element = this.map.get(key);\n    if (element === undefined) {\n      return x;\n    }\n    return findRepresentative(element)[minSymbol];\n  }\n\n  isMinElement(x: Uint64) {\n    const y = this.get(x);\n    return y === x || Uint64.equal(y, x);\n  }\n\n  private makeSet(x: Uint64): Uint64 {\n    const key = x.toString();\n    const { map } = this;\n    let element = map.get(key);\n    if (element === undefined) {\n      element = x.clone();\n      initializeElement(element);\n      (<any>element)[minSymbol] = element;\n      map.set(key, element);\n      return element;\n    }\n    return findRepresentative(element);\n  }\n\n  /**\n   * Union the sets containing `a` and `b`.\n   * @returns `false` if `a` and `b` are already in the same set, otherwise `true`.\n   */\n  link(a: Uint64, b: Uint64): boolean {\n    a = this.makeSet(a);\n    b = this.makeSet(b);\n    if (a === b) {\n      return false;\n    }\n    this.generation++;\n    const newNode = linkUnequalSetRepresentatives(a, b);\n    spliceCircularLists(a, b);\n    const aMin = (<any>a)[minSymbol];\n    const bMin = (<any>b)[minSymbol];\n    const isMax =\n      (this.visibleSegmentEquivalencePolicy.value &\n        VisibleSegmentEquivalencePolicy.MAX_REPRESENTATIVE) !==\n      0;\n    newNode[minSymbol] = Uint64.less(aMin, bMin) === isMax ? bMin : aMin;\n    return true;\n  }\n\n  linkAll(ids: Uint64[]) {\n    for (let i = 1, length = ids.length; i < length; ++i) {\n      this.link(ids[0], ids[i]);\n    }\n  }\n\n  /**\n   * Unlinks all members of the specified set.\n   */\n  deleteSet(x: Uint64) {\n    const { map } = this;\n    let changed = false;\n    for (const y of this.setElements(x)) {\n      map.delete(y.toString());\n      changed = true;\n    }\n    if (changed) {\n      ++this.generation;\n    }\n    return changed;\n  }\n\n  *setElements(a: Uint64): IterableIterator<Uint64> {\n    const key = a.toString();\n    const element = this.map.get(key);\n    if (element === undefined) {\n      yield a;\n    } else {\n      yield* setElementIterator(element);\n    }\n  }\n\n  clear() {\n    const { map } = this;\n    if (map.size === 0) {\n      return false;\n    }\n    ++this.generation;\n    map.clear();\n    return true;\n  }\n\n  get size() {\n    return this.map.size;\n  }\n\n  *mappings(temp = <[Uint64, Uint64]>new Array<Uint64>(2)) {\n    for (const element of this.map.values()) {\n      temp[0] = element;\n      temp[1] = findRepresentative(element)[minSymbol];\n      yield temp;\n    }\n  }\n\n  *roots() {\n    for (const element of this.map.values()) {\n      if (isRootElement(element)) {\n        yield element;\n      }\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.mappings();\n  }\n\n  /**\n   * Returns an array of arrays of strings, where the arrays contained in the outer array correspond\n   * to the disjoint sets, and the strings are the base-10 string representations of the members of\n   * each set.  The members are sorted in numerical order, and the sets are sorted in numerical\n   * order of their smallest elements.\n   */\n  toJSON(): string[][] {\n    const sets = new Array<Uint64[]>();\n    for (const element of this.map.values()) {\n      if (isRootElement(element)) {\n        const members = new Array<Uint64>();\n        for (const member of setElementIterator(element)) {\n          members.push(member);\n        }\n        members.sort(Uint64.compare);\n        sets.push(members);\n      }\n    }\n    sets.sort((a, b) => Uint64.compare(a[0], b[0]));\n    return sets.map((set) => set.map((element) => element.toString()));\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst tempArray = new Float32Array(1);\n\n/**\n * Converts `x` into its nearest single precision float representation and\n * returns a minimal string representation, with as many digits as necessary\n * to uniquely distinguish single precision `x` from its adjacent single\n * precision values.\n *\n * E.g.: 0.299999999000000017179701217174d → 0.30000001192092896f → '0.3')\n */\nexport function float32ToString(x: number) {\n  tempArray[0] = x;\n  x = tempArray[0];\n  for (let digits = 1; digits < 21; ++digits) {\n    const result = x.toPrecision(digits);\n    tempArray[0] = parseFloat(result);\n    if (tempArray[0] === x) {\n      return result;\n    }\n  }\n  return x.toString();\n}\n","// DO NOT EDIT.  Generated from templates/util/linked_list.template.ts.\n/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ninterface Node<T> {\n  next0: T | null;\n  prev0: T | null;\n}\n\nexport default class {\n  static insertAfter<T extends Node<T>>(head: T, x: T) {\n    const next = <T>head.next0;\n    x.next0 = next;\n    x.prev0 = head;\n    head.next0 = x;\n    next.prev0 = x;\n  }\n  static insertBefore<T extends Node<T>>(head: T, x: T) {\n    const prev = <T>head.prev0;\n    x.prev0 = prev;\n    x.next0 = head;\n    head.prev0 = x;\n    prev.next0 = x;\n  }\n  static front<T extends Node<T>>(head: T) {\n    const next = head.next0;\n    if (next === head) {\n      return null;\n    }\n    return next;\n  }\n  static back<T extends Node<T>>(head: T) {\n    const next = head.prev0;\n    if (next === head) {\n      return null;\n    }\n    return next;\n  }\n  static pop<T extends Node<T>>(x: T) {\n    const next = <T>x.next0;\n    const prev = <T>x.prev0;\n    next.prev0 = prev;\n    prev.next0 = next;\n    x.next0 = null;\n    x.prev0 = null;\n    return x;\n  }\n  static *iterator<T extends Node<T>>(head: T) {\n    for (let x = <T>head.next0; x !== head; x = <T>x.next0) {\n      yield x;\n    }\n  }\n  static *reverseIterator<T extends Node<T>>(head: T) {\n    for (let x = <T>head.prev0; x !== head; x = <T>x.prev0) {\n      yield x;\n    }\n  }\n  static initializeHead<T extends Node<T>>(head: T) {\n    head.next0 = head.prev0 = head;\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { RefCounted } from \"#src/util/disposable.js\";\nimport { RefCountedValue } from \"#src/util/disposable.js\";\nimport { stableStringify } from \"#src/util/json.js\";\n\nexport class Memoize<Key, Value extends RefCounted> {\n  private map = new Map<Key, Value>();\n\n  /**\n   * If getter throws an exception, no value is added.\n   */\n  get<T extends Value>(key: Key, getter: () => T): T {\n    const { map } = this;\n    let obj = <T>map.get(key);\n    if (obj === undefined) {\n      obj = getter();\n      obj.registerDisposer(() => {\n        map.delete(key);\n      });\n      map.set(key, obj);\n    } else {\n      obj.addRef();\n    }\n    return obj;\n  }\n}\n\nexport class StringMemoize extends Memoize<string, RefCounted> {\n  get<T extends RefCounted>(x: any, getter: () => T) {\n    if (typeof x !== \"string\") {\n      x = stableStringify(x);\n    }\n    return super.get(x, getter);\n  }\n\n  getUncounted<T>(x: any, getter: () => T) {\n    return this.get(x, () => new RefCountedValue(getter())).value;\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst OBJECT_ID_SYMBOL = Symbol(\"objectId\");\nlet nextObjectId = 0;\n\n/**\n * Returns a string that uniquely identifies a particular primitive value or object instance.\n */\nexport function getObjectId(x: any) {\n  if (x instanceof Object) {\n    let id = x[OBJECT_ID_SYMBOL];\n    if (id === undefined) {\n      id = x[OBJECT_ID_SYMBOL] = nextObjectId++;\n    }\n    return `o${id}`;\n  }\n  return \"\" + JSON.stringify(x);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function defaultStringCompare(a: string, b: string) {\n  return a < b ? -1 : a > b ? +1 : 0;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { verifyEnumString } from \"#src/util/json.js\";\nimport { NullarySignal } from \"#src/util/signal.js\";\nimport type { Trackable } from \"#src/util/trackable.js\";\n\nexport class TrackableEnum<T extends number> implements Trackable {\n  changed = new NullarySignal();\n\n  constructor(\n    public enumType: { [x: string]: any },\n    private value_: T,\n    private defaultValue: T = value_,\n  ) {}\n\n  set value(value: T) {\n    if (this.value_ !== value) {\n      this.value_ = value;\n      this.changed.dispatch();\n    }\n  }\n\n  get value() {\n    return this.value_;\n  }\n\n  reset() {\n    this.value = this.defaultValue;\n  }\n\n  restoreState(obj: any) {\n    this.value = verifyEnumString(obj, this.enumType);\n  }\n\n  toJSON(): string | undefined {\n    if (this.value_ === this.defaultValue) return undefined;\n    return this.enumType[this.value_].toLowerCase();\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst randomTempBuffer = new Uint32Array(2);\n\nconst trueBase = 0x100000000;\n\n// For dealing with the string representation in base b, we will represent the 64-bit number as\n//\n//   highPrime * intermediateBase[b] + lowPrime,\n//\n// where:\n//\n//   intermediateBaseForBase[b] = Math.pow(b, lowDigitsforBase[b]),\n//\n// and\n//\n//   lowDigitsForBase[b] = Math.floor(Math.log(Math.pow(2,53 - 32)) / Math.log(b)).\n\ninterface StringConversionData {\n  lowDigits: number;\n\n  lowBase: number;\n\n  pattern: RegExp;\n}\n\nconst stringConversionData: StringConversionData[] = [];\nfor (let base = 2; base <= 36; ++base) {\n  const lowDigits = Math.floor(32 / Math.log2(base));\n  const lowBase = base ** lowDigits;\n  let patternString = `^[0-${String.fromCharCode(\n    \"0\".charCodeAt(0) + Math.min(9, base - 1),\n  )}`;\n  if (base > 10) {\n    patternString += `a-${String.fromCharCode(\"a\".charCodeAt(0) + base - 11)}`;\n    patternString += `A-${String.fromCharCode(\"A\".charCodeAt(0) + base - 11)}`;\n  }\n  const maxDigits = Math.ceil(64 / Math.log2(base));\n  patternString += `]{1,${maxDigits}}$`;\n  const pattern = new RegExp(patternString);\n  stringConversionData[base] = { lowDigits, lowBase, pattern };\n}\n\n/**\n * Returns the high 32 bits of the result of the 32-bit integer multiply `a` and `b`.\n *\n * The low 32-bits can be obtained using the built-in `Math.imul` function.\n */\nfunction uint32MultiplyHigh(a: number, b: number) {\n  a >>>= 0;\n  b >>>= 0;\n\n  const a00 = a & 0xffff;\n  const a16 = a >>> 16;\n  const b00 = b & 0xffff;\n  const b16 = b >>> 16;\n\n  const c00 = a00 * b00;\n  let c16 = (c00 >>> 16) + a16 * b00;\n  let c32 = c16 >>> 16;\n  c16 = (c16 & 0xffff) + a00 * b16;\n  c32 += c16 >>> 16;\n  let c48 = c32 >>> 16;\n  c32 = (c32 & 0xffff) + a16 * b16;\n  c48 += c32 >>> 16;\n\n  return (((c48 & 0xffff) << 16) | (c32 & 0xffff)) >>> 0;\n}\n\nexport class Uint64 {\n  constructor(\n    public low = 0,\n    public high = 0,\n  ) {}\n\n  clone() {\n    return new Uint64(this.low, this.high);\n  }\n\n  assign(x: Uint64) {\n    this.low = x.low;\n    this.high = x.high;\n  }\n\n  toString(base = 10): string {\n    let vLow = this.low;\n    let vHigh = this.high;\n    if (vHigh === 0) {\n      return vLow.toString(base);\n    }\n    vHigh *= trueBase;\n    const { lowBase, lowDigits } = stringConversionData[base];\n    const vHighExtra = vHigh % lowBase;\n    vHigh = Number(BigInt(vHigh) / BigInt(lowBase));\n    vLow += vHighExtra;\n    vHigh += Math.floor(vLow / lowBase);\n    vLow = vLow % lowBase;\n    const vLowStr = vLow.toString(base);\n    return (\n      vHigh.toString(base) + \"0\".repeat(lowDigits - vLowStr.length) + vLowStr\n    );\n  }\n\n  /**\n   * Returns true if a is strictly less than b.\n   */\n  static less(a: Uint64, b: Uint64): boolean {\n    return a.high < b.high || (a.high === b.high && a.low < b.low);\n  }\n\n  /**\n   * Returns a negative number if a is strictly less than b, 0 if a is equal to b, or a positive\n   * number if a is strictly greater than b.\n   */\n  static compare(a: Uint64, b: Uint64): number {\n    return a.high - b.high || a.low - b.low;\n  }\n\n  static ZERO = new Uint64(0, 0);\n  static ONE = new Uint64(1, 0);\n\n  static equal(a: Uint64, b: Uint64) {\n    return a.low === b.low && a.high === b.high;\n  }\n\n  static min(a: Uint64, b: Uint64): Uint64 {\n    return Uint64.less(a, b) ? a : b;\n  }\n\n  static max(a: Uint64, b: Uint64): Uint64 {\n    return Uint64.less(a, b) ? b : a;\n  }\n\n  static random() {\n    crypto.getRandomValues(randomTempBuffer);\n    return new Uint64(randomTempBuffer[0], randomTempBuffer[1]);\n  }\n\n  tryParseString(s: string, base = 10) {\n    const { lowDigits, lowBase, pattern } = stringConversionData[base];\n    if (!pattern.test(s)) {\n      return false;\n    }\n    if (s.length <= lowDigits) {\n      this.low = parseInt(s, base);\n      this.high = 0;\n      return true;\n    }\n    const splitPoint = s.length - lowDigits;\n    const lowPrime = parseInt(s.substr(splitPoint), base);\n    const highPrime = parseInt(s.substr(0, splitPoint), base);\n\n    let high: number;\n    let low: number;\n\n    if (lowBase === trueBase) {\n      high = highPrime;\n      low = lowPrime;\n    } else {\n      const highRemainder = Math.imul(highPrime, lowBase) >>> 0;\n      high =\n        uint32MultiplyHigh(highPrime, lowBase) +\n        (Math.imul(Math.floor(highPrime / trueBase), lowBase) >>> 0);\n      low = lowPrime + highRemainder;\n      if (low >= trueBase) {\n        ++high;\n        low -= trueBase;\n      }\n    }\n    if (low >>> 0 !== low || high >>> 0 !== high) {\n      return false;\n    }\n    this.low = low;\n    this.high = high;\n    return true;\n  }\n\n  parseString(s: string, base = 10) {\n    if (!this.tryParseString(s, base)) {\n      throw new Error(\n        `Failed to parse string as uint64 value: ${JSON.stringify(s)}.`,\n      );\n    }\n    return this;\n  }\n\n  static parseString(s: string, base = 10) {\n    const x = new Uint64();\n    return x.parseString(s, base);\n  }\n\n  valid() {\n    const { low, high } = this;\n    return low >>> 0 === low && high >>> 0 === high;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n\n  static lshift(out: Uint64, input: Uint64, bits: number): Uint64 {\n    const { low, high } = input;\n    if (bits === 0) {\n      out.low = low;\n      out.high = high;\n    } else if (bits < 32) {\n      out.low = low << bits;\n      out.high = (high << bits) | (low >>> (32 - bits));\n    } else {\n      out.low = 0;\n      out.high = low << (bits - 32);\n    }\n    return out;\n  }\n\n  static rshift(out: Uint64, input: Uint64, bits: number) {\n    const { low, high } = input;\n    if (bits === 0) {\n      out.low = low;\n      out.high = high;\n    } else if (bits < 32) {\n      out.low = (low >>> bits) | (high << (32 - bits));\n      out.high = high >>> bits;\n    } else {\n      out.low = high >>> (bits - 32);\n      out.high = 0;\n    }\n    return out;\n  }\n\n  static or(out: Uint64, a: Uint64, b: Uint64): Uint64 {\n    out.low = a.low | b.low;\n    out.high = a.high | b.high;\n    return out;\n  }\n\n  static xor(out: Uint64, a: Uint64, b: Uint64): Uint64 {\n    out.low = a.low ^ b.low;\n    out.high = a.high ^ b.high;\n    return out;\n  }\n\n  static and(out: Uint64, a: Uint64, b: Uint64): Uint64 {\n    out.low = a.low & b.low;\n    out.high = a.high & b.high;\n    return out;\n  }\n\n  static add(out: Uint64, a: Uint64, b: Uint64): Uint64 {\n    const lowSum = a.low + b.low;\n    let highSum = a.high + b.high;\n    const low = lowSum >>> 0;\n    if (low !== lowSum) highSum += 1;\n    out.low = low;\n    out.high = highSum >>> 0;\n    return out;\n  }\n\n  static addUint32(out: Uint64, a: Uint64, b: number): Uint64 {\n    const lowSum = a.low + b;\n    let highSum = a.high;\n    const low = lowSum >>> 0;\n    if (low !== lowSum) highSum += 1;\n    out.low = low;\n    out.high = highSum >>> 0;\n    return out;\n  }\n\n  static decrement(out: Uint64, input: Uint64): Uint64 {\n    let { low, high } = input;\n    if (low === 0) {\n      high -= 1;\n    }\n    out.low = (low - 1) >>> 0;\n    out.high = high >>> 0;\n    return out;\n  }\n\n  static increment(out: Uint64, input: Uint64): Uint64 {\n    let { low, high } = input;\n    if (low === 0xffffffff) high += 1;\n    out.low = (low + 1) >>> 0;\n    out.high = high >>> 0;\n    return out;\n  }\n\n  static subtract(out: Uint64, a: Uint64, b: Uint64): Uint64 {\n    const lowSum = a.low - b.low;\n    let highSum = a.high - b.high;\n    const low = lowSum >>> 0;\n    if (low !== lowSum) highSum -= 1;\n    out.low = low;\n    out.high = highSum >>> 0;\n    return out;\n  }\n\n  static absDifference(out: Uint64, a: Uint64, b: Uint64): Uint64 {\n    return Uint64.less(a, b)\n      ? Uint64.subtract(out, b, a)\n      : Uint64.subtract(out, a, b);\n  }\n\n  static multiplyUint32(out: Uint64, a: Uint64, b: number): Uint64 {\n    const { low, high } = a;\n    out.low = Math.imul(low, b) >>> 0;\n    out.high = (Math.imul(high, b) + uint32MultiplyHigh(low, b)) >>> 0;\n    return out;\n  }\n\n  static lowMask(out: Uint64, bits: number) {\n    if (bits === 0) {\n      out.high = out.low = 0;\n    } else if (bits <= 32) {\n      out.high = 0;\n      out.low = 0xffffffff >>> (32 - bits);\n    } else {\n      out.high = 0xffffffff >>> (bits - 32);\n      out.low = 0xffffffff;\n    }\n    return out;\n  }\n\n  toNumber() {\n    return this.low + this.high * 0x100000000;\n  }\n\n  setFromNumber(value: number) {\n    value = Math.round(value);\n    if (value < 0) {\n      this.low = this.high = 0;\n    } else if (value >= 0x10000000000000000) {\n      this.low = this.high = 0xffffffff;\n    } else {\n      this.low = value % 0x100000000;\n      this.high = Math.floor(value / 0x100000000);\n    }\n  }\n\n  static fromNumber(value: number) {\n    const x = new Uint64();\n    x.setFromNumber(value);\n    return x;\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { RefCounted } from \"#src/util/disposable.js\";\nimport { Memoize } from \"#src/util/memoize.js\";\n\nexport interface GL extends WebGL2RenderingContext {\n  memoize: Memoize<any, RefCounted>;\n  maxTextureSize: number;\n  maxTextureImageUnits: number;\n  max3dTextureSize: number;\n  tempTextureUnit: number;\n}\n\nexport const DEBUG_SHADERS = false;\n\nexport function initializeWebGL(canvas: HTMLCanvasElement) {\n  const options: any = {\n    antialias: false,\n    stencil: true,\n  };\n  if (DEBUG_SHADERS) {\n    console.log(\"DEBUGGING via preserveDrawingBuffer\");\n    options.preserveDrawingBuffer = true;\n  }\n  const gl = <GL>canvas.getContext(\"webgl2\", options);\n  if (gl == null) {\n    throw new Error(\"WebGL not supported.\");\n  }\n  gl.memoize = new Memoize<any, RefCounted>();\n  gl.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n  gl.max3dTextureSize = gl.getParameter(gl.MAX_3D_TEXTURE_SIZE);\n  gl.maxTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  gl.tempTextureUnit = gl.maxTextureImageUnits - 1;\n\n  // FIXME: verify that we received a stencil buffer\n  // var contextAttributes = gl.getContextAttributes();\n  // var haveStencilBuffer = contextAttributes.stencil;\n\n  for (const extension of [\"EXT_color_buffer_float\"]) {\n    if (!gl.getExtension(extension)) {\n      throw new Error(`${extension} extension not available`);\n    }\n  }\n\n  // Extensions to attempt to add but not fail if they are not available.\n  for (const extension of [\n    // Some versions of Firefox 67.0 seem to require this extension being added in addition\n    // to EXT_color_buffer_float, despite the note here indicating it is unnecessary:\n    // https://developer.mozilla.org/en-US/docs/Web/API/EXT_float_blend\n    //\n    // See https://github.com/google/neuroglancer/issues/140\n    \"EXT_float_blend\",\n  ]) {\n    gl.getExtension(extension);\n  }\n  return gl;\n}\n"],"names":["CREDENTIALS_PROVIDER_RPC_ID","CREDENTIALS_PROVIDER_GET_RPC_ID","BossSourceParameters","VolumeChunkSourceParameters","parameters","MeshSourceParameters","VolumeChunkEncoding","VolumeSourceParameters","MultiscaleMeshSourceParameters","SkeletonSourceParameters","AnnotationSourceParameters","AnnotationSpatialIndexSourceParameters","ImageTileEncoding","ImageTileSourceParameters","DVIDSourceParameters","GET_NIFTI_VOLUME_INFO_RPC_ID","DataEncoding","ShardingHashFunction","IndexedSegmentPropertySourceParameters","RenderBaseSourceParameters","RenderSourceParameters","TileChunkSourceParameters","CodecKind","ChunkKeyEncoding","hashCombine","state","value","Math","MESH_LAYER_RPC_ID","MULTISCALE_MESH_LAYER_RPC_ID","FRAGMENT_SOURCE_RPC_ID","MULTISCALE_FRAGMENT_SOURCE_RPC_ID","VertexPositionFormat","PERSPECTIVE_VIEW_RPC_ID","RENDERED_VIEW_ADD_LAYER_RPC_ID","RENDERED_VIEW_REMOVE_LAYER_RPC_ID","PROJECTION_PARAMETERS_RPC_ID","PROJECTION_PARAMETERS_CHANGED_RPC_METHOD_ID","SINGLE_MESH_LAYER_RPC_ID","GET_SINGLE_MESH_INFO_RPC_ID","SINGLE_MESH_CHUNK_KEY","SingleMeshSourceParameters","SingleMeshSourceParametersWithInfo","SKELETON_LAYER_RPC_ID","ChunkLayout","size","transform","finiteRank","vec3","mat4","invTransform","det","matrix","Error","msg","out","globalSpatial","localVector","transformVectorByMat4","globalNormal","localNormal","transformVectorByMat4Transpose","animationFrameDebounce","callback","handle","Object","requestAnimationFrame","flush","cancel","cancelAnimationFrame","rankSymbol","Symbol","parentSymbol","nextSymbol","prevSymbol","findRepresentative","v","old","ancestor","setElementIterator","i","j","minSymbol","isRootElement","DisjointUint64Sets","Map","WatchableValue","VisibleSegmentEquivalencePolicy","x","key","element","undefined","y","Uint64","map","a","b","newNode","linkUnequalSetRepresentatives","iRank","jRank","spliceCircularLists","iPrev","jPrev","aMin","bMin","isMax","ids","length","changed","temp","sets","Array","members","member","set","tempArray","Float32Array","float32ToString","digits","result","parseFloat","head","next","prev","Memoize","getter","obj","StringMemoize","stableStringify","RefCountedValue","OBJECT_ID_SYMBOL","nextObjectId","getObjectId","id","JSON","defaultStringCompare","TrackableEnum","enumType","value_","defaultValue","NullarySignal","verifyEnumString","randomTempBuffer","Uint32Array","stringConversionData","base","lowDigits","lowBase","patternString","String","maxDigits","pattern","RegExp","uint32MultiplyHigh","a00","a16","b00","b16","c16","c00","c32","c48","low","high","vLow","vHigh","vHighExtra","Number","BigInt","vLowStr","crypto","s","parseInt","splitPoint","lowPrime","highPrime","highRemainder","input","bits","lowSum","highSum","initializeWebGL","canvas","options","gl","extension"],"mappings":"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"}