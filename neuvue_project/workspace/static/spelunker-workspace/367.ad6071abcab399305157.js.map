{"version":3,"file":"367.ad6071abcab399305157.js","mappings":"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","sources":["webpack://neuroglancer/./src/credentials_provider/http_request.ts","webpack://neuroglancer/./src/credentials_provider/oauth2.ts","webpack://neuroglancer/./src/credentials_provider/shared_common.ts","webpack://neuroglancer/./src/datasource/boss/base.ts","webpack://neuroglancer/./src/datasource/brainmaps/base.ts","webpack://neuroglancer/./src/datasource/deepzoom/base.ts","webpack://neuroglancer/./src/datasource/dvid/base.ts","webpack://neuroglancer/./src/datasource/n5/base.ts","webpack://neuroglancer/./src/datasource/nifti/base.ts","webpack://neuroglancer/./src/datasource/precomputed/base.ts","webpack://neuroglancer/./src/datasource/render/base.ts","webpack://neuroglancer/./src/datasource/zarr/base.ts","webpack://neuroglancer/./src/datasource/zarr/codec/index.ts","webpack://neuroglancer/./src/gpu_hash/hash_function.ts","webpack://neuroglancer/./src/mesh/base.ts","webpack://neuroglancer/./src/perspective_view/base.ts","webpack://neuroglancer/./src/render_layer_common.ts","webpack://neuroglancer/./src/single_mesh/base.ts","webpack://neuroglancer/./src/skeleton/base.ts","webpack://neuroglancer/./src/sliceview/chunk_layout.ts","webpack://neuroglancer/./src/util/animation_frame_debounce.ts","webpack://neuroglancer/./src/util/disjoint_sets.ts","webpack://neuroglancer/./src/util/float32_to_string.ts","webpack://neuroglancer/./src/util/linked_list.0.ts","webpack://neuroglancer/./src/util/memoize.ts","webpack://neuroglancer/./src/util/string.ts","webpack://neuroglancer/./src/util/trackable_enum.ts","webpack://neuroglancer/./src/util/uint64.ts","webpack://neuroglancer/./src/webgl/context.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  CredentialsProvider,\n  CredentialsWithGeneration,\n} from \"#src/credentials_provider/index.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport { throwIfCanceled, uncancelableToken } from \"#src/util/cancellation.js\";\nimport type { ResponseTransform } from \"#src/util/http_request.js\";\nimport {\n  cancellableFetchOk,\n  HttpError,\n  pickDelay,\n} from \"#src/util/http_request.js\";\n\nconst maxCredentialsAttempts = 3;\n\nexport async function fetchWithCredentials<Credentials, T>(\n  credentialsProvider: CredentialsProvider<Credentials>,\n  input: RequestInfo | ((credentials: Credentials) => RequestInfo),\n  init: RequestInit,\n  transformResponse: ResponseTransform<T>,\n  applyCredentials: (\n    credentials: Credentials,\n    requestInit: RequestInit,\n  ) => RequestInit,\n  errorHandler: (\n    httpError: HttpError,\n    credentials: Credentials,\n  ) => \"refresh\" | Promise<\"refresh\">,\n  cancellationToken: CancellationToken = uncancelableToken,\n): Promise<T> {\n  let credentials: CredentialsWithGeneration<Credentials> | undefined;\n  for (let credentialsAttempt = 0; ; ) {\n    throwIfCanceled(cancellationToken);\n    if (credentialsAttempt > 1) {\n      // Don't delay on the first attempt, and also don't delay on the second attempt, since if the\n      // credentials have expired and there is no problem on the server there is no reason to delay\n      // requesting new credentials.\n      await new Promise((resolve) =>\n        setTimeout(resolve, pickDelay(credentialsAttempt - 2)),\n      );\n    }\n    credentials = await credentialsProvider.get(credentials, cancellationToken);\n    try {\n      return await cancellableFetchOk(\n        typeof input === \"function\" ? input(credentials.credentials) : input,\n        applyCredentials(credentials.credentials, init),\n        transformResponse,\n        cancellationToken,\n      );\n    } catch (error) {\n      if (error instanceof HttpError) {\n        if (\n          (await errorHandler(error, credentials.credentials)) === \"refresh\"\n        ) {\n          if (++credentialsAttempt === maxCredentialsAttempts) throw error;\n          continue;\n        }\n      }\n      throw error;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { fetchWithCredentials } from \"#src/credentials_provider/http_request.js\";\nimport type { CredentialsProvider } from \"#src/credentials_provider/index.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport { uncancelableToken } from \"#src/util/cancellation.js\";\nimport type { ResponseTransform } from \"#src/util/http_request.js\";\nimport { cancellableFetchOk } from \"#src/util/http_request.js\";\n\n/**\n * OAuth2 token\n */\nexport interface OAuth2Credentials {\n  tokenType: string;\n  accessToken: string;\n  email?: string;\n}\n\nexport function fetchWithOAuth2Credentials<T>(\n  credentialsProvider: CredentialsProvider<OAuth2Credentials> | undefined,\n  input: RequestInfo,\n  init: RequestInit,\n  transformResponse: ResponseTransform<T>,\n  cancellationToken: CancellationToken = uncancelableToken,\n): Promise<T> {\n  if (credentialsProvider === undefined) {\n    return cancellableFetchOk(\n      input,\n      init,\n      transformResponse,\n      cancellationToken,\n    );\n  }\n  return fetchWithCredentials(\n    credentialsProvider,\n    input,\n    init,\n    transformResponse,\n    (credentials, init) => {\n      if (!credentials.accessToken) return init;\n      const headers = new Headers(init.headers);\n      headers.set(\n        \"Authorization\",\n        `${credentials.tokenType} ${credentials.accessToken}`,\n      );\n      return { ...init, headers };\n    },\n    credentialsProvider.errorHandler!,\n    cancellationToken,\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const CREDENTIALS_PROVIDER_RPC_ID = \"CredentialsProvider\";\nexport const CREDENTIALS_PROVIDER_GET_RPC_ID = \"CredentialsProvider.get\";\n","/**\n * @license\n * Copyright 2017 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { vec2 } from \"#src/util/geom.js\";\n\nexport class BossSourceParameters {\n  baseUrl: string;\n  collection: string;\n  experiment: string;\n  channel: string;\n  resolution: string;\n}\n\nexport class VolumeChunkSourceParameters extends BossSourceParameters {\n  encoding: string;\n  window: vec2 | undefined;\n\n  static RPC_ID = \"boss/VolumeChunkSource\";\n\n  static stringify(parameters: VolumeChunkSourceParameters) {\n    return `boss:volume:${parameters.baseUrl}/${parameters.collection}/${parameters.experiment}/${parameters.channel}/${parameters.resolution}/${parameters.encoding}`;\n  }\n}\n\nexport class MeshSourceParameters {\n  baseUrl: string;\n\n  static RPC_ID = \"boss/MeshChunkSource\";\n\n  static stringify(parameters: MeshSourceParameters) {\n    return `boss:mesh:${parameters.baseUrl}`;\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { BrainmapsInstance } from \"#src/datasource/brainmaps/api.js\";\nimport type { vec3 } from \"#src/util/geom.js\";\n\nexport enum VolumeChunkEncoding {\n  RAW = 0,\n  JPEG = 1,\n  COMPRESSED_SEGMENTATION = 2,\n}\n\nexport class ChangeSpec {\n  changeStackId: string;\n  /**\n   * Apply changes prior to this timestamp (in milliseconds since epoch).  If 0, no changes should\n   * be applied.  If negative, all changes should be applied.\n   */\n  timeStamp?: number;\n  skipEquivalences?: boolean;\n}\n\nexport class VolumeSourceParameters {\n  instance: BrainmapsInstance;\n  volumeId: string;\n  scaleIndex: number;\n  encoding: VolumeChunkEncoding;\n  jpegQuality: number | undefined;\n  changeSpec: ChangeSpec | undefined;\n\n  static RPC_ID = \"brainmaps/VolumeChunkSource\";\n}\n\nexport interface SingleMeshInfo {\n  name: string;\n  type: string;\n}\n\nexport interface MultiscaleMeshLOD {\n  info: SingleMeshInfo;\n  scale: number;\n\n  /**\n   * Shape of the chunk for this level of detail, as a multiple of the base chunk shape.\n   */\n  relativeBlockShape: vec3;\n\n  /**\n   * Size of chunk grid, in chunks.\n   */\n  gridShape: Uint32Array;\n}\n\nexport interface MultiscaleMeshInfo {\n  /**\n   * Prefix\n   */\n  key: string;\n\n  /**\n   * Chunk shape in spatial units (nm) for lod 0.\n   */\n  chunkShape: vec3;\n\n  lods: MultiscaleMeshLOD[];\n}\n\nexport class MultiscaleMeshSourceParameters {\n  instance: BrainmapsInstance;\n  volumeId: string;\n  info: MultiscaleMeshInfo;\n  changeSpec: ChangeSpec | undefined;\n\n  static RPC_ID = \"brainmaps/MultiscaleMeshSource\";\n}\n\nexport class MeshSourceParameters {\n  instance: BrainmapsInstance;\n  volumeId: string;\n  meshName: string;\n  changeSpec: ChangeSpec | undefined;\n\n  static RPC_ID = \"brainmaps/MeshSource\";\n}\n\nexport class SkeletonSourceParameters {\n  instance: BrainmapsInstance;\n  volumeId: string;\n  meshName: string;\n  changeSpec: ChangeSpec | undefined;\n\n  static RPC_ID = \"brainmaps/SkeletonSource\";\n}\n\nexport class AnnotationSourceParameters {\n  instance: BrainmapsInstance;\n  volumeId: string;\n  changestack: string;\n  upperVoxelBound: Float32Array;\n\n  static RPC_ID = \"brainmaps/Annotation\";\n}\n\nexport class AnnotationSpatialIndexSourceParameters {\n  instance: BrainmapsInstance;\n  volumeId: string;\n  changestack: string;\n\n  static RPC_ID = \"brainmaps/AnnotationSpatialIndex\";\n}\n","/**\n * @license\n * Copyright 2016 Google Inc., 2023 Gergely Csucs\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum ImageTileEncoding {\n  JPG = 0,\n  JPEG = 1,\n  PNG = 2,\n}\n\nexport class ImageTileSourceParameters {\n  url: string;\n  encoding: ImageTileEncoding;\n  format: string;\n  tilesize: number;\n  overlap: number;\n\n  static RPC_ID = \"deepzoom/ImageTileSource\";\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum VolumeChunkEncoding {\n  JPEG = 0,\n  RAW = 1,\n  COMPRESSED_SEGMENTATION = 2,\n  COMPRESSED_SEGMENTATIONARRAY = 3,\n}\n\nexport class DVIDSourceParameters {\n  baseUrl: string;\n  nodeKey: string;\n  dataInstanceKey: string;\n  authServer?: string;\n  user?: string;\n}\n\nexport class VolumeChunkSourceParameters extends DVIDSourceParameters {\n  dataScale: string;\n  encoding: VolumeChunkEncoding;\n  static RPC_ID = \"dvid/VolumeChunkSource\";\n}\n\nexport class SkeletonSourceParameters extends DVIDSourceParameters {\n  static RPC_ID = \"dvid/SkeletonSource\";\n}\n\nexport class MeshSourceParameters extends DVIDSourceParameters {\n  static RPC_ID = \"dvid/MeshSource\";\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum VolumeChunkEncoding {\n  RAW = 0,\n  GZIP = 1,\n  BLOSC = 2,\n  ZSTD = 3,\n}\n\nexport class VolumeChunkSourceParameters {\n  url: string;\n  encoding: VolumeChunkEncoding;\n\n  static RPC_ID = \"n5/VolumeChunkSource\";\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { DataType } from \"#src/sliceview/volume/base.js\";\n\nexport const GET_NIFTI_VOLUME_INFO_RPC_ID = \"nifti/getNiftiVolumeInfo\";\n\nexport interface NiftiVolumeInfo {\n  rank: number;\n  sourceNames: string[];\n  viewNames: string[];\n  viewScales: Float64Array;\n  sourceScales: Float64Array;\n  units: string[];\n  dataType: DataType;\n  transform: Float64Array;\n  description: string;\n  volumeSize: Uint32Array;\n}\n\nexport class VolumeSourceParameters {\n  url: string;\n\n  static RPC_ID = \"nifti/VolumeChunkSource\";\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  AnnotationPropertySpec,\n  AnnotationType,\n} from \"#src/annotation/index.js\";\nimport type { VertexAttributeInfo } from \"#src/skeleton/base.js\";\nimport type { mat4 } from \"#src/util/geom.js\";\n\nexport enum VolumeChunkEncoding {\n  RAW = 0,\n  JPEG = 1,\n  COMPRESSED_SEGMENTATION = 2,\n  COMPRESSO = 3,\n  PNG = 4,\n}\n\nexport class VolumeChunkSourceParameters {\n  url: string;\n  encoding: VolumeChunkEncoding;\n  sharding: ShardingParameters | undefined;\n\n  static RPC_ID = \"precomputed/VolumeChunkSource\";\n}\n\nexport class MeshSourceParameters {\n  url: string;\n  lod: number;\n\n  static RPC_ID = \"precomputed/MeshSource\";\n}\n\nexport enum DataEncoding {\n  RAW = 0,\n  GZIP = 1,\n}\n\nexport enum ShardingHashFunction {\n  IDENTITY = 0,\n  MURMURHASH3_X86_128 = 1,\n}\n\nexport interface ShardingParameters {\n  hash: ShardingHashFunction;\n  preshiftBits: number;\n  minishardBits: number;\n  shardBits: number;\n  minishardIndexEncoding: DataEncoding;\n  dataEncoding: DataEncoding;\n}\n\nexport class MultiscaleMeshMetadata {\n  transform: mat4;\n  lodScaleMultiplier: number;\n  vertexQuantizationBits: number;\n  sharding: ShardingParameters | undefined;\n}\n\nexport class MultiscaleMeshSourceParameters {\n  url: string;\n  metadata: MultiscaleMeshMetadata;\n\n  static RPC_ID = \"precomputed/MultiscaleMeshSource\";\n}\n\nexport interface SkeletonMetadata {\n  transform: mat4;\n  vertexAttributes: Map<string, VertexAttributeInfo>;\n  sharding: ShardingParameters | undefined;\n}\n\nexport class SkeletonSourceParameters {\n  url: string;\n  metadata: SkeletonMetadata;\n\n  static RPC_ID = \"precomputed/SkeletonSource\";\n}\n\nexport class AnnotationSpatialIndexSourceParameters {\n  url: string;\n  sharding: ShardingParameters | undefined;\n  static RPC_ID = \"precomputed/AnnotationSpatialIndexSource\";\n}\n\nexport class AnnotationSourceParameters {\n  rank: number;\n  relationships: {\n    url: string;\n    name: string;\n    sharding: ShardingParameters | undefined;\n  }[];\n  properties: AnnotationPropertySpec[];\n  byId: { url: string; sharding: ShardingParameters | undefined };\n  type: AnnotationType;\n  static RPC_ID = \"precomputed/AnnotationSource\";\n}\n\nexport class IndexedSegmentPropertySourceParameters {\n  url: string;\n  sharding: ShardingParameters | undefined;\n  static RPC_ID = \"precomputed/IndexedSegmentPropertySource\";\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class RenderBaseSourceParameters {\n  baseUrl: string;\n  owner: string;\n  project: string;\n  stack: string;\n  channel: string | undefined;\n}\n\nexport class RenderSourceParameters extends RenderBaseSourceParameters {\n  minIntensity: number | undefined;\n  maxIntensity: number | undefined;\n  maxTileSpecsToRender: number | undefined;\n  filter: boolean | undefined;\n}\n\nexport class TileChunkSourceParameters extends RenderSourceParameters {\n  dims: string;\n  level: number;\n  encoding: string;\n\n  static RPC_ID = \"render/TileChunkSource\";\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ArrayMetadata } from \"#src/datasource/zarr/metadata/index.js\";\n\nexport class VolumeChunkSourceParameters {\n  url: string;\n  metadata: ArrayMetadata;\n  static RPC_ID = \"zarr/VolumeChunkSource\";\n}\n","/**\n * @license\n * Copyright 2023 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { DataType } from \"#src/util/data_type.js\";\n\nexport enum CodecKind {\n  arrayToArray = 0,\n  arrayToBytes = 1,\n  bytesToBytes = 2,\n}\n\nexport interface CodecSpec<Kind extends CodecKind = CodecKind> {\n  kind: Kind;\n  name: string;\n  configuration: unknown;\n}\n\nexport interface CodecChainSpec {\n  [CodecKind.arrayToArray]: CodecSpec<CodecKind.arrayToArray>[];\n  [CodecKind.arrayToBytes]: CodecSpec<CodecKind.arrayToBytes>;\n  [CodecKind.bytesToBytes]: CodecSpec<CodecKind.bytesToBytes>[];\n  arrayInfo: CodecArrayInfo[];\n  layoutInfo: CodecArrayLayoutInfo[];\n  shardingInfo?: ShardingInfo;\n  encodedSize: (number | undefined)[];\n}\n\nexport interface ShardingInfo {\n  subChunkShape: number[];\n  subChunkGridShape: number[];\n  subChunkCodecs: CodecChainSpec;\n}\n\nexport interface CodecArrayInfo {\n  dataType: DataType;\n  // Specifies the chunk shape, indexed by logical dimension.\n  chunkShape: number[];\n}\n\nexport interface CodecArrayLayoutInfo {\n  // Maps the physical dimension index of the array (assuming C order storage) to the logical\n  // dimension of the (transformed) array.\n  //\n  // `physicalToLogicalDimension[0]` is the logical dimension index of the outer-most (largest\n  // stride) dimension.\n  //\n  // `physicalToLogicalDimension[physicalToLogicalDimension.length-1]` is the logical dimension\n  // index of the inner-most (unit stride) dimension.\n  physicalToLogicalDimension: number[];\n\n  // Specifies the read chunk shape, indexed by logical dimension.\n  readChunkShape: number[];\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst k1 = 0xcc9e2d51;\nconst k2 = 0x1b873593;\n\n// MurmurHash excluding the final mixing steps.\nexport function hashCombine(state: number, value: number) {\n  value >>>= 0;\n  state >>>= 0;\n\n  value = Math.imul(value, k1) >>> 0;\n  value = ((value << 15) | (value >>> 17)) >>> 0;\n  value = Math.imul(value, k2) >>> 0;\n  state = (state ^ value) >>> 0;\n  state = ((state << 13) | (state >>> 19)) >>> 0;\n  state = (state * 5 + 0xe6546b64) >>> 0;\n  return state;\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const MESH_LAYER_RPC_ID = \"mesh/MeshLayer\";\nexport const MULTISCALE_MESH_LAYER_RPC_ID = \"mesh/MultiscaleMeshLayer\";\nexport const FRAGMENT_SOURCE_RPC_ID = \"mesh/FragmentSource\";\n\nexport const MULTISCALE_FRAGMENT_SOURCE_RPC_ID =\n  \"mesh/MultiscaleFragmentSource\";\n\nexport type EncodedVertexPositions = Float32Array | Uint32Array | Uint16Array;\nexport type MeshVertexIndices = Uint16Array | Uint32Array;\nexport type OctahedronVertexNormals = Uint8Array;\n\nexport interface EncodedMeshData {\n  vertexPositions: EncodedVertexPositions;\n  vertexNormals: OctahedronVertexNormals;\n  indices: MeshVertexIndices;\n  strips: boolean;\n}\n\nexport interface MultiscaleFragmentFormat {\n  /**\n   * If `true`, vertex positions are specified relative to the fragment bounds, meaning (0, 0, 0) is\n   * the start corner of the fragment and (1, 1, 1) is the end corner.\n   *\n   * If `false`, vertex positions are in \"model\" coordinates.\n   */\n  fragmentRelativeVertices: boolean;\n\n  vertexPositionFormat: VertexPositionFormat;\n}\n\nexport enum VertexPositionFormat {\n  float32 = 0,\n  uint10 = 1,\n  uint16 = 2,\n}\n","/**\n * @license\n * Copyright 2018 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PERSPECTIVE_VIEW_RPC_ID = \"perspective_view/PerspectiveView\";\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const RENDERED_VIEW_ADD_LAYER_RPC_ID = \"rendered_view.addLayer\";\nexport const RENDERED_VIEW_REMOVE_LAYER_RPC_ID = \"rendered_view.removeLayer\";\nexport const PROJECTION_PARAMETERS_RPC_ID = \"SharedProjectionParameters\";\nexport const PROJECTION_PARAMETERS_CHANGED_RPC_METHOD_ID =\n  \"SharedProjectionParameters.changed\";\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { DataType } from \"#src/util/data_type.js\";\n\nexport const SINGLE_MESH_LAYER_RPC_ID = \"single_mesh/SingleMeshLayer\";\nexport const GET_SINGLE_MESH_INFO_RPC_ID = \"single_mesh/getSingleMeshInfo\";\n\nexport const SINGLE_MESH_CHUNK_KEY = \"\";\n\nexport interface VertexAttributeInfo {\n  name: string;\n  dataType: DataType;\n  numComponents: number;\n  source?: string;\n  min?: number;\n  max?: number;\n}\n\nexport interface SingleMeshInfo {\n  numVertices: number;\n  numTriangles: number;\n  // Perhaps bounding box?\n  // Perhaps transform data?\n  vertexAttributes: VertexAttributeInfo[];\n}\n\nexport interface SingleMeshData {\n  vertexPositions: Float32Array;\n  indices: Uint32Array;\n  vertexNormals?: Float32Array;\n  vertexAttributes: Float32Array[];\n}\n\nexport class SingleMeshSourceParameters {\n  meshSourceUrl: string;\n}\n\nexport class SingleMeshSourceParametersWithInfo extends SingleMeshSourceParameters {\n  info: SingleMeshInfo;\n\n  static RPC_ID = \"single_mesh/SingleMeshSource\";\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { DataType } from \"#src/util/data_type.js\";\n\nexport const SKELETON_LAYER_RPC_ID = \"skeleton/SkeletonLayer\";\n\nexport interface VertexAttributeInfo {\n  dataType: DataType;\n  numComponents: number;\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  mat4,\n  transformVectorByMat4,\n  transformVectorByMat4Transpose,\n  vec3,\n} from \"#src/util/geom.js\";\nimport * as matrix from \"#src/util/matrix.js\";\n\nexport class ChunkLayout {\n  /**\n   * Size of each chunk in \"chunk\" coordinates.\n   */\n  size: vec3;\n\n  /**\n   * Transform from local \"chunk\" coordinates to global voxel coordinates.\n   */\n  transform: mat4;\n\n  /**\n   * Inverse of transform.  Transform from global voxel coordinates to \"chunk\" coordinates.\n   */\n  invTransform: mat4;\n\n  /**\n   * Determinant of `transform`.\n   */\n  detTransform: number;\n\n  finiteRank: number;\n\n  constructor(size: vec3, transform: mat4, finiteRank: number) {\n    this.size = vec3.clone(size);\n    this.transform = mat4.clone(transform);\n    this.finiteRank = finiteRank;\n    const invTransform = mat4.create();\n    const det = matrix.inverse(invTransform, 4, transform, 4, 4);\n    if (det === 0) {\n      throw new Error(\"Transform is singular\");\n    }\n    this.invTransform = invTransform;\n    this.detTransform = det;\n  }\n  toObject() {\n    return {\n      size: this.size,\n      transform: this.transform,\n      finiteRank: this.finiteRank,\n    };\n  }\n\n  static fromObject(msg: any) {\n    return new ChunkLayout(msg.size, msg.transform, msg.finiteRank);\n  }\n\n  /**\n   * Transform global spatial coordinates to local spatial coordinates.\n   */\n  globalToLocalSpatial(out: vec3, globalSpatial: vec3): vec3 {\n    return vec3.transformMat4(out, globalSpatial, this.invTransform);\n  }\n\n  localSpatialVectorToGlobal(out: vec3, localVector: vec3): vec3 {\n    return transformVectorByMat4(out, localVector, this.transform);\n  }\n\n  /**\n   * Returns the unnormalized normal vector.\n   */\n  globalToLocalNormal(globalNormal: vec3, localNormal: vec3) {\n    return transformVectorByMat4Transpose(\n      globalNormal,\n      localNormal,\n      this.transform,\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface DebouncedFunction {\n  /**\n   * Ensures the wrapped function will be run at the next animation frame.\n   */\n  (): void;\n\n  /**\n   * Cancels any outstanding call.\n   */\n  cancel(): void;\n\n  /**\n   * Runs any outstanding call immediately.\n   */\n  flush(): void;\n}\n\n/**\n * Returns a function that, when called, ensures `callback` is invoked at the next animation frame.\n */\nexport function animationFrameDebounce(\n  callback: () => void,\n): DebouncedFunction {\n  let handle = -1;\n  const cancel = () => {\n    if (handle !== -1) {\n      cancelAnimationFrame(handle);\n      handle = -1;\n    }\n  };\n  const flush = () => {\n    if (handle !== -1) {\n      handle = -1;\n      callback();\n    }\n  };\n  return Object.assign(\n    () => {\n      if (handle === -1) {\n        handle = requestAnimationFrame(() => {\n          handle = -1;\n          callback();\n        });\n      }\n    },\n    { flush, cancel },\n  );\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VisibleSegmentEquivalencePolicy } from \"#src/segmentation_graph/segment_id.js\";\nimport type { WatchableValueInterface } from \"#src/trackable_value.js\";\nimport { WatchableValue } from \"#src/trackable_value.js\";\nimport { Uint64 } from \"#src/util/uint64.js\";\n\nconst rankSymbol = Symbol(\"disjoint_sets:rank\");\nconst parentSymbol = Symbol(\"disjoint_sets:parent\");\nconst nextSymbol = Symbol(\"disjoint_sets:next\");\nconst prevSymbol = Symbol(\"disjoint_sets:prev\");\n\nfunction findRepresentative(v: any): any {\n  // First pass: find the root, which will be stored in ancestor.\n  let old = v;\n  let ancestor = v[parentSymbol];\n  while (ancestor !== v) {\n    v = ancestor;\n    ancestor = v[parentSymbol];\n  }\n  // Second pass: set all of the parent pointers along the path from the\n  // original element `old' to refer directly to the root `ancestor'.\n  v = old[parentSymbol];\n  while (ancestor !== v) {\n    old[parentSymbol] = ancestor;\n    old = v;\n    v = old[parentSymbol];\n  }\n  return ancestor;\n}\n\nfunction linkUnequalSetRepresentatives(i: any, j: any): any {\n  const iRank = i[rankSymbol];\n  const jRank = j[rankSymbol];\n  if (iRank > jRank) {\n    j[parentSymbol] = i;\n    return i;\n  }\n\n  i[parentSymbol] = j;\n  if (iRank === jRank) {\n    j[rankSymbol] = jRank + 1;\n  }\n  return j;\n}\n\nfunction spliceCircularLists(i: any, j: any) {\n  const iPrev = i[prevSymbol];\n  const jPrev = j[prevSymbol];\n\n  // Connect end of i to beginning of j.\n  j[prevSymbol] = iPrev;\n  iPrev[nextSymbol] = j;\n\n  // Connect end of j to beginning of i.\n  i[prevSymbol] = jPrev;\n  jPrev[nextSymbol] = i;\n}\n\nfunction* setElementIterator(i: any) {\n  let j = i;\n  do {\n    yield j;\n    j = j[nextSymbol];\n  } while (j !== i);\n}\n\nfunction initializeElement(v: any) {\n  v[parentSymbol] = v;\n  v[rankSymbol] = 0;\n  v[nextSymbol] = v[prevSymbol] = v;\n}\n\nconst minSymbol = Symbol(\"disjoint_sets:min\");\n\nfunction isRootElement(v: any) {\n  return v[parentSymbol] === v;\n}\n\n/**\n * Represents a collection of disjoint sets of Uint64 values.\n *\n * Supports merging sets, retrieving the minimum Uint64 value contained in a set (the representative\n * value), and iterating over the elements contained in a set.\n */\nexport class DisjointUint64Sets {\n  private map = new Map<string, Uint64>();\n  visibleSegmentEquivalencePolicy: WatchableValueInterface<VisibleSegmentEquivalencePolicy> =\n    new WatchableValue<VisibleSegmentEquivalencePolicy>(\n      VisibleSegmentEquivalencePolicy.MIN_REPRESENTATIVE,\n    );\n  generation = 0;\n\n  has(x: Uint64): boolean {\n    const key = x.toString();\n    const element = this.map.get(key);\n    return element !== undefined;\n  }\n\n  get(x: Uint64): Uint64 {\n    const key = x.toString();\n    const element = this.map.get(key);\n    if (element === undefined) {\n      return x;\n    }\n    return findRepresentative(element)[minSymbol];\n  }\n\n  isMinElement(x: Uint64) {\n    const y = this.get(x);\n    return y === x || Uint64.equal(y, x);\n  }\n\n  private makeSet(x: Uint64): Uint64 {\n    const key = x.toString();\n    const { map } = this;\n    let element = map.get(key);\n    if (element === undefined) {\n      element = x.clone();\n      initializeElement(element);\n      (<any>element)[minSymbol] = element;\n      map.set(key, element);\n      return element;\n    }\n    return findRepresentative(element);\n  }\n\n  /**\n   * Union the sets containing `a` and `b`.\n   * @returns `false` if `a` and `b` are already in the same set, otherwise `true`.\n   */\n  link(a: Uint64, b: Uint64): boolean {\n    a = this.makeSet(a);\n    b = this.makeSet(b);\n    if (a === b) {\n      return false;\n    }\n    this.generation++;\n    const newNode = linkUnequalSetRepresentatives(a, b);\n    spliceCircularLists(a, b);\n    const aMin = (<any>a)[minSymbol];\n    const bMin = (<any>b)[minSymbol];\n    const isMax =\n      (this.visibleSegmentEquivalencePolicy.value &\n        VisibleSegmentEquivalencePolicy.MAX_REPRESENTATIVE) !==\n      0;\n    newNode[minSymbol] = Uint64.less(aMin, bMin) === isMax ? bMin : aMin;\n    return true;\n  }\n\n  linkAll(ids: Uint64[]) {\n    for (let i = 1, length = ids.length; i < length; ++i) {\n      this.link(ids[0], ids[i]);\n    }\n  }\n\n  /**\n   * Unlinks all members of the specified set.\n   */\n  deleteSet(x: Uint64) {\n    const { map } = this;\n    let changed = false;\n    for (const y of this.setElements(x)) {\n      map.delete(y.toString());\n      changed = true;\n    }\n    if (changed) {\n      ++this.generation;\n    }\n    return changed;\n  }\n\n  *setElements(a: Uint64): IterableIterator<Uint64> {\n    const key = a.toString();\n    const element = this.map.get(key);\n    if (element === undefined) {\n      yield a;\n    } else {\n      yield* setElementIterator(element);\n    }\n  }\n\n  clear() {\n    const { map } = this;\n    if (map.size === 0) {\n      return false;\n    }\n    ++this.generation;\n    map.clear();\n    return true;\n  }\n\n  get size() {\n    return this.map.size;\n  }\n\n  *mappings(temp = <[Uint64, Uint64]>new Array<Uint64>(2)) {\n    for (const element of this.map.values()) {\n      temp[0] = element;\n      temp[1] = findRepresentative(element)[minSymbol];\n      yield temp;\n    }\n  }\n\n  *roots() {\n    for (const element of this.map.values()) {\n      if (isRootElement(element)) {\n        yield element;\n      }\n    }\n  }\n\n  [Symbol.iterator]() {\n    return this.mappings();\n  }\n\n  /**\n   * Returns an array of arrays of strings, where the arrays contained in the outer array correspond\n   * to the disjoint sets, and the strings are the base-10 string representations of the members of\n   * each set.  The members are sorted in numerical order, and the sets are sorted in numerical\n   * order of their smallest elements.\n   */\n  toJSON(): string[][] {\n    const sets = new Array<Uint64[]>();\n    for (const element of this.map.values()) {\n      if (isRootElement(element)) {\n        const members = new Array<Uint64>();\n        for (const member of setElementIterator(element)) {\n          members.push(member);\n        }\n        members.sort(Uint64.compare);\n        sets.push(members);\n      }\n    }\n    sets.sort((a, b) => Uint64.compare(a[0], b[0]));\n    return sets.map((set) => set.map((element) => element.toString()));\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst tempArray = new Float32Array(1);\n\n/**\n * Converts `x` into its nearest single precision float representation and\n * returns a minimal string representation, with as many digits as necessary\n * to uniquely distinguish single precision `x` from its adjacent single\n * precision values.\n *\n * E.g.: 0.299999999000000017179701217174d → 0.30000001192092896f → '0.3')\n */\nexport function float32ToString(x: number) {\n  tempArray[0] = x;\n  x = tempArray[0];\n  for (let digits = 1; digits < 21; ++digits) {\n    const result = x.toPrecision(digits);\n    tempArray[0] = parseFloat(result);\n    if (tempArray[0] === x) {\n      return result;\n    }\n  }\n  return x.toString();\n}\n","// DO NOT EDIT.  Generated from templates/neuroglancer/util/linked_list.template.ts.\n/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ninterface Node<T> {\n  next0: T | null;\n  prev0: T | null;\n}\n\nexport default class {\n  static insertAfter<T extends Node<T>>(head: T, x: T) {\n    const next = <T>head.next0;\n    x.next0 = next;\n    x.prev0 = head;\n    head.next0 = x;\n    next.prev0 = x;\n  }\n  static insertBefore<T extends Node<T>>(head: T, x: T) {\n    const prev = <T>head.prev0;\n    x.prev0 = prev;\n    x.next0 = head;\n    head.prev0 = x;\n    prev.next0 = x;\n  }\n  static front<T extends Node<T>>(head: T) {\n    const next = head.next0;\n    if (next === head) {\n      return null;\n    }\n    return next;\n  }\n  static back<T extends Node<T>>(head: T) {\n    const next = head.prev0;\n    if (next === head) {\n      return null;\n    }\n    return next;\n  }\n  static pop<T extends Node<T>>(x: T) {\n    const next = <T>x.next0;\n    const prev = <T>x.prev0;\n    next.prev0 = prev;\n    prev.next0 = next;\n    x.next0 = null;\n    x.prev0 = null;\n    return x;\n  }\n  static *iterator<T extends Node<T>>(head: T) {\n    for (let x = <T>head.next0; x !== head; x = <T>x.next0) {\n      yield x;\n    }\n  }\n  static *reverseIterator<T extends Node<T>>(head: T) {\n    for (let x = <T>head.prev0; x !== head; x = <T>x.prev0) {\n      yield x;\n    }\n  }\n  static initializeHead<T extends Node<T>>(head: T) {\n    head.next0 = head.prev0 = head;\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { RefCounted } from \"#src/util/disposable.js\";\nimport { RefCountedValue } from \"#src/util/disposable.js\";\nimport { stableStringify } from \"#src/util/json.js\";\n\nexport class Memoize<Key, Value extends RefCounted> {\n  private map = new Map<Key, Value>();\n\n  /**\n   * If getter throws an exception, no value is added.\n   */\n  get<T extends Value>(key: Key, getter: () => T): T {\n    const { map } = this;\n    let obj = <T>map.get(key);\n    if (obj === undefined) {\n      obj = getter();\n      obj.registerDisposer(() => {\n        map.delete(key);\n      });\n      map.set(key, obj);\n    } else {\n      obj.addRef();\n    }\n    return obj;\n  }\n}\n\nexport class StringMemoize extends Memoize<string, RefCounted> {\n  get<T extends RefCounted>(x: any, getter: () => T) {\n    if (typeof x !== \"string\") {\n      x = stableStringify(x);\n    }\n    return super.get(x, getter);\n  }\n\n  getUncounted<T>(x: any, getter: () => T) {\n    return this.get(x, () => new RefCountedValue(getter())).value;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function defaultStringCompare(a: string, b: string) {\n  return a < b ? -1 : a > b ? +1 : 0;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { verifyEnumString } from \"#src/util/json.js\";\nimport { NullarySignal } from \"#src/util/signal.js\";\nimport type { Trackable } from \"#src/util/trackable.js\";\n\nexport class TrackableEnum<T extends number> implements Trackable {\n  changed = new NullarySignal();\n\n  constructor(\n    public enumType: { [x: string]: any },\n    private value_: T,\n    private defaultValue: T = value_,\n  ) {}\n\n  set value(value: T) {\n    if (this.value_ !== value) {\n      this.value_ = value;\n      this.changed.dispatch();\n    }\n  }\n\n  get value() {\n    return this.value_;\n  }\n\n  reset() {\n    this.value = this.defaultValue;\n  }\n\n  restoreState(obj: any) {\n    this.value = verifyEnumString(obj, this.enumType);\n  }\n\n  toJSON(): string | undefined {\n    if (this.value_ === this.defaultValue) return undefined;\n    return this.enumType[this.value_].toLowerCase();\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst randomTempBuffer = new Uint32Array(2);\n\nconst trueBase = 0x100000000;\n\n// For dealing with the string representation in base b, we will represent the 64-bit number as\n//\n//   highPrime * intermediateBase[b] + lowPrime,\n//\n// where:\n//\n//   intermediateBaseForBase[b] = Math.pow(b, lowDigitsforBase[b]),\n//\n// and\n//\n//   lowDigitsForBase[b] = Math.floor(Math.log(Math.pow(2,53 - 32)) / Math.log(b)).\n\ninterface StringConversionData {\n  lowDigits: number;\n\n  lowBase: number;\n\n  pattern: RegExp;\n}\n\nconst stringConversionData: StringConversionData[] = [];\nfor (let base = 2; base <= 36; ++base) {\n  const lowDigits = Math.floor(32 / Math.log2(base));\n  const lowBase = base ** lowDigits;\n  let patternString = `^[0-${String.fromCharCode(\n    \"0\".charCodeAt(0) + Math.min(9, base - 1),\n  )}`;\n  if (base > 10) {\n    patternString += `a-${String.fromCharCode(\"a\".charCodeAt(0) + base - 11)}`;\n    patternString += `A-${String.fromCharCode(\"A\".charCodeAt(0) + base - 11)}`;\n  }\n  const maxDigits = Math.ceil(64 / Math.log2(base));\n  patternString += `]{1,${maxDigits}}$`;\n  const pattern = new RegExp(patternString);\n  stringConversionData[base] = { lowDigits, lowBase, pattern };\n}\n\n/**\n * Returns the high 32 bits of the result of the 32-bit integer multiply `a` and `b`.\n *\n * The low 32-bits can be obtained using the built-in `Math.imul` function.\n */\nfunction uint32MultiplyHigh(a: number, b: number) {\n  a >>>= 0;\n  b >>>= 0;\n\n  const a00 = a & 0xffff;\n  const a16 = a >>> 16;\n  const b00 = b & 0xffff;\n  const b16 = b >>> 16;\n\n  const c00 = a00 * b00;\n  let c16 = (c00 >>> 16) + a16 * b00;\n  let c32 = c16 >>> 16;\n  c16 = (c16 & 0xffff) + a00 * b16;\n  c32 += c16 >>> 16;\n  let c48 = c32 >>> 16;\n  c32 = (c32 & 0xffff) + a16 * b16;\n  c48 += c32 >>> 16;\n\n  return (((c48 & 0xffff) << 16) | (c32 & 0xffff)) >>> 0;\n}\n\nexport class Uint64 {\n  constructor(\n    public low = 0,\n    public high = 0,\n  ) {}\n\n  clone() {\n    return new Uint64(this.low, this.high);\n  }\n\n  assign(x: Uint64) {\n    this.low = x.low;\n    this.high = x.high;\n  }\n\n  toString(base = 10): string {\n    let vLow = this.low;\n    let vHigh = this.high;\n    if (vHigh === 0) {\n      return vLow.toString(base);\n    }\n    vHigh *= trueBase;\n    const { lowBase, lowDigits } = stringConversionData[base];\n    const vHighExtra = vHigh % lowBase;\n    vHigh = Number(BigInt(vHigh) / BigInt(lowBase));\n    vLow += vHighExtra;\n    vHigh += Math.floor(vLow / lowBase);\n    vLow = vLow % lowBase;\n    const vLowStr = vLow.toString(base);\n    return (\n      vHigh.toString(base) + \"0\".repeat(lowDigits - vLowStr.length) + vLowStr\n    );\n  }\n\n  /**\n   * Returns true if a is strictly less than b.\n   */\n  static less(a: Uint64, b: Uint64): boolean {\n    return a.high < b.high || (a.high === b.high && a.low < b.low);\n  }\n\n  /**\n   * Returns a negative number if a is strictly less than b, 0 if a is equal to b, or a positive\n   * number if a is strictly greater than b.\n   */\n  static compare(a: Uint64, b: Uint64): number {\n    return a.high - b.high || a.low - b.low;\n  }\n\n  static ZERO = new Uint64(0, 0);\n  static ONE = new Uint64(1, 0);\n\n  static equal(a: Uint64, b: Uint64) {\n    return a.low === b.low && a.high === b.high;\n  }\n\n  static min(a: Uint64, b: Uint64): Uint64 {\n    return Uint64.less(a, b) ? a : b;\n  }\n\n  static max(a: Uint64, b: Uint64): Uint64 {\n    return Uint64.less(a, b) ? b : a;\n  }\n\n  static random() {\n    crypto.getRandomValues(randomTempBuffer);\n    return new Uint64(randomTempBuffer[0], randomTempBuffer[1]);\n  }\n\n  tryParseString(s: string, base = 10) {\n    const { lowDigits, lowBase, pattern } = stringConversionData[base];\n    if (!pattern.test(s)) {\n      return false;\n    }\n    if (s.length <= lowDigits) {\n      this.low = parseInt(s, base);\n      this.high = 0;\n      return true;\n    }\n    const splitPoint = s.length - lowDigits;\n    const lowPrime = parseInt(s.substr(splitPoint), base);\n    const highPrime = parseInt(s.substr(0, splitPoint), base);\n\n    let high: number;\n    let low: number;\n\n    if (lowBase === trueBase) {\n      high = highPrime;\n      low = lowPrime;\n    } else {\n      const highRemainder = Math.imul(highPrime, lowBase) >>> 0;\n      high =\n        uint32MultiplyHigh(highPrime, lowBase) +\n        (Math.imul(Math.floor(highPrime / trueBase), lowBase) >>> 0);\n      low = lowPrime + highRemainder;\n      if (low >= trueBase) {\n        ++high;\n        low -= trueBase;\n      }\n    }\n    if (low >>> 0 !== low || high >>> 0 !== high) {\n      return false;\n    }\n    this.low = low;\n    this.high = high;\n    return true;\n  }\n\n  parseString(s: string, base = 10) {\n    if (!this.tryParseString(s, base)) {\n      throw new Error(\n        `Failed to parse string as uint64 value: ${JSON.stringify(s)}.`,\n      );\n    }\n    return this;\n  }\n\n  static parseString(s: string, base = 10) {\n    const x = new Uint64();\n    return x.parseString(s, base);\n  }\n\n  valid() {\n    const { low, high } = this;\n    return low >>> 0 === low && high >>> 0 === high;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n\n  static lshift(out: Uint64, input: Uint64, bits: number): Uint64 {\n    const { low, high } = input;\n    if (bits === 0) {\n      out.low = low;\n      out.high = high;\n    } else if (bits < 32) {\n      out.low = low << bits;\n      out.high = (high << bits) | (low >>> (32 - bits));\n    } else {\n      out.low = 0;\n      out.high = low << (bits - 32);\n    }\n    return out;\n  }\n\n  static rshift(out: Uint64, input: Uint64, bits: number) {\n    const { low, high } = input;\n    if (bits === 0) {\n      out.low = low;\n      out.high = high;\n    } else if (bits < 32) {\n      out.low = (low >>> bits) | (high << (32 - bits));\n      out.high = high >>> bits;\n    } else {\n      out.low = high >>> (bits - 32);\n      out.high = 0;\n    }\n    return out;\n  }\n\n  static or(out: Uint64, a: Uint64, b: Uint64): Uint64 {\n    out.low = a.low | b.low;\n    out.high = a.high | b.high;\n    return out;\n  }\n\n  static xor(out: Uint64, a: Uint64, b: Uint64): Uint64 {\n    out.low = a.low ^ b.low;\n    out.high = a.high ^ b.high;\n    return out;\n  }\n\n  static and(out: Uint64, a: Uint64, b: Uint64): Uint64 {\n    out.low = a.low & b.low;\n    out.high = a.high & b.high;\n    return out;\n  }\n\n  static add(out: Uint64, a: Uint64, b: Uint64): Uint64 {\n    const lowSum = a.low + b.low;\n    let highSum = a.high + b.high;\n    const low = lowSum >>> 0;\n    if (low !== lowSum) highSum += 1;\n    out.low = low;\n    out.high = highSum >>> 0;\n    return out;\n  }\n\n  static addUint32(out: Uint64, a: Uint64, b: number): Uint64 {\n    const lowSum = a.low + b;\n    let highSum = a.high;\n    const low = lowSum >>> 0;\n    if (low !== lowSum) highSum += 1;\n    out.low = low;\n    out.high = highSum >>> 0;\n    return out;\n  }\n\n  static decrement(out: Uint64, input: Uint64): Uint64 {\n    let { low, high } = input;\n    if (low === 0) {\n      high -= 1;\n    }\n    out.low = (low - 1) >>> 0;\n    out.high = high >>> 0;\n    return out;\n  }\n\n  static increment(out: Uint64, input: Uint64): Uint64 {\n    let { low, high } = input;\n    if (low === 0xffffffff) high += 1;\n    out.low = (low + 1) >>> 0;\n    out.high = high >>> 0;\n    return out;\n  }\n\n  static subtract(out: Uint64, a: Uint64, b: Uint64): Uint64 {\n    const lowSum = a.low - b.low;\n    let highSum = a.high - b.high;\n    const low = lowSum >>> 0;\n    if (low !== lowSum) highSum -= 1;\n    out.low = low;\n    out.high = highSum >>> 0;\n    return out;\n  }\n\n  static absDifference(out: Uint64, a: Uint64, b: Uint64): Uint64 {\n    return Uint64.less(a, b)\n      ? Uint64.subtract(out, b, a)\n      : Uint64.subtract(out, a, b);\n  }\n\n  static multiplyUint32(out: Uint64, a: Uint64, b: number): Uint64 {\n    const { low, high } = a;\n    out.low = Math.imul(low, b) >>> 0;\n    out.high = (Math.imul(high, b) + uint32MultiplyHigh(low, b)) >>> 0;\n    return out;\n  }\n\n  static lowMask(out: Uint64, bits: number) {\n    if (bits === 0) {\n      out.high = out.low = 0;\n    } else if (bits <= 32) {\n      out.high = 0;\n      out.low = 0xffffffff >>> (32 - bits);\n    } else {\n      out.high = 0xffffffff >>> (bits - 32);\n      out.low = 0xffffffff;\n    }\n    return out;\n  }\n\n  toNumber() {\n    return this.low + this.high * 0x100000000;\n  }\n\n  setFromNumber(value: number) {\n    value = Math.round(value);\n    if (value < 0) {\n      this.low = this.high = 0;\n    } else if (value >= 0x10000000000000000) {\n      this.low = this.high = 0xffffffff;\n    } else {\n      this.low = value % 0x100000000;\n      this.high = Math.floor(value / 0x100000000);\n    }\n  }\n\n  static fromNumber(value: number) {\n    const x = new Uint64();\n    x.setFromNumber(value);\n    return x;\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { RefCounted } from \"#src/util/disposable.js\";\nimport { Memoize } from \"#src/util/memoize.js\";\n\nexport interface GL extends WebGL2RenderingContext {\n  memoize: Memoize<any, RefCounted>;\n  maxTextureSize: number;\n  maxTextureImageUnits: number;\n  max3dTextureSize: number;\n  tempTextureUnit: number;\n}\n\nexport const DEBUG_SHADERS = false;\n\nexport function initializeWebGL(canvas: HTMLCanvasElement) {\n  const options: any = {\n    antialias: false,\n    stencil: true,\n  };\n  if (DEBUG_SHADERS) {\n    console.log(\"DEBUGGING via preserveDrawingBuffer\");\n    options.preserveDrawingBuffer = true;\n  }\n  const gl = <GL>canvas.getContext(\"webgl2\", options);\n  if (gl == null) {\n    throw new Error(\"WebGL not supported.\");\n  }\n  gl.memoize = new Memoize<any, RefCounted>();\n  gl.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n  gl.max3dTextureSize = gl.getParameter(gl.MAX_3D_TEXTURE_SIZE);\n  gl.maxTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  gl.tempTextureUnit = gl.maxTextureImageUnits - 1;\n\n  // FIXME: verify that we received a stencil buffer\n  // var contextAttributes = gl.getContextAttributes();\n  // var haveStencilBuffer = contextAttributes.stencil;\n\n  for (const extension of [\"EXT_color_buffer_float\"]) {\n    if (!gl.getExtension(extension)) {\n      throw new Error(`${extension} extension not available`);\n    }\n  }\n\n  // Extensions to attempt to add but not fail if they are not available.\n  for (const extension of [\n    // Some versions of Firefox 67.0 seem to require this extension being added in addition\n    // to EXT_color_buffer_float, despite the note here indicating it is unnecessary:\n    // https://developer.mozilla.org/en-US/docs/Web/API/EXT_float_blend\n    //\n    // See https://github.com/google/neuroglancer/issues/140\n    \"EXT_float_blend\",\n  ]) {\n    gl.getExtension(extension);\n  }\n  return gl;\n}\n"],"names":["maxCredentialsAttempts","fetchWithCredentials","credentialsProvider","input","init","transformResponse","applyCredentials","errorHandler","cancellationToken","credentials","credentialsAttempt","resolve","error","fetchWithOAuth2Credentials","headers","CREDENTIALS_PROVIDER_RPC_ID","CREDENTIALS_PROVIDER_GET_RPC_ID","BossSourceParameters","VolumeChunkSourceParameters","parameters","MeshSourceParameters","VolumeChunkEncoding","ChangeSpec","VolumeSourceParameters","MultiscaleMeshSourceParameters","SkeletonSourceParameters","AnnotationSourceParameters","AnnotationSpatialIndexSourceParameters","ImageTileEncoding","ImageTileSourceParameters","DVIDSourceParameters","GET_NIFTI_VOLUME_INFO_RPC_ID","DataEncoding","ShardingHashFunction","MultiscaleMeshMetadata","IndexedSegmentPropertySourceParameters","RenderBaseSourceParameters","RenderSourceParameters","TileChunkSourceParameters","CodecKind","k1","k2","hashCombine","state","value","MESH_LAYER_RPC_ID","MULTISCALE_MESH_LAYER_RPC_ID","FRAGMENT_SOURCE_RPC_ID","MULTISCALE_FRAGMENT_SOURCE_RPC_ID","VertexPositionFormat","PERSPECTIVE_VIEW_RPC_ID","RENDERED_VIEW_ADD_LAYER_RPC_ID","RENDERED_VIEW_REMOVE_LAYER_RPC_ID","PROJECTION_PARAMETERS_RPC_ID","PROJECTION_PARAMETERS_CHANGED_RPC_METHOD_ID","SINGLE_MESH_LAYER_RPC_ID","GET_SINGLE_MESH_INFO_RPC_ID","SINGLE_MESH_CHUNK_KEY","SingleMeshSourceParameters","SingleMeshSourceParametersWithInfo","SKELETON_LAYER_RPC_ID","ChunkLayout","size","transform","finiteRank","invTransform","det","msg","out","globalSpatial","localVector","globalNormal","localNormal","animationFrameDebounce","callback","handle","rankSymbol","parentSymbol","nextSymbol","prevSymbol","findRepresentative","v","old","ancestor","linkUnequalSetRepresentatives","i","j","iRank","jRank","spliceCircularLists","iPrev","jPrev","setElementIterator","initializeElement","minSymbol","isRootElement","DisjointUint64Sets","x","key","element","y","map","a","b","newNode","aMin","bMin","isMax","ids","length","changed","temp","sets","members","member","set","tempArray","float32ToString","digits","result","head","next","prev","Memoize","getter","obj","StringMemoize","defaultStringCompare","TrackableEnum","enumType","value_","defaultValue","randomTempBuffer","trueBase","stringConversionData","base","lowDigits","lowBase","patternString","maxDigits","pattern","uint32MultiplyHigh","a00","a16","b00","b16","c16","c32","c48","low","high","vLow","vHigh","vHighExtra","vLowStr","s","splitPoint","lowPrime","highPrime","highRemainder","bits","lowSum","highSum","Uint64","DEBUG_SHADERS","initializeWebGL","canvas","options","gl","extension"],"sourceRoot":""}