{"version":3,"file":"neuroglancer_chunk_worker.6de531489d574d806f47.js","mappings":"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","sources":["webpack://neuroglancer/./src/segmentation_graph/segment_id.ts","webpack://neuroglancer/./src/trackable_value.ts","webpack://neuroglancer/./src/util/cancellation.ts","webpack://neuroglancer/./src/util/disposable.ts","webpack://neuroglancer/./src/util/geom.ts","webpack://neuroglancer/./src/util/http_request.ts","webpack://neuroglancer/./src/util/json.ts","webpack://neuroglancer/./src/util/matrix.ts","webpack://neuroglancer/./src/util/signal.ts","webpack://neuroglancer/./src/worker_rpc.ts","webpack://neuroglancer/./src/shared_watchable_value.ts","webpack://neuroglancer/./src/chunk_manager/base.ts","webpack://neuroglancer/./src/util/linked_list.1.ts","webpack://neuroglancer/./src/util/pairing_heap.0.ts","webpack://neuroglancer/./src/util/pairing_heap.1.ts","webpack://neuroglancer/./src/chunk_manager/backend.ts","webpack://neuroglancer/./src/render_layer_backend.ts","webpack://neuroglancer/./src/util/si_units.ts","webpack://neuroglancer/./src/util/vector.ts","webpack://neuroglancer/./src/coordinate_transform.ts","webpack://neuroglancer/./src/util/array.ts","webpack://neuroglancer/./src/util/trackable.ts","webpack://neuroglancer/./src/navigation_state.ts","webpack://neuroglancer/./src/util/framerate.ts","webpack://neuroglancer/./src/display_context.ts","webpack://neuroglancer/./src/projection_parameters.ts","webpack://neuroglancer/./src/render_coordinate_transform.ts","webpack://neuroglancer/./src/util/data_type.ts","webpack://neuroglancer/./src/sliceview/base.ts","webpack://neuroglancer/./src/util/erf.ts","webpack://neuroglancer/./src/util/velocity_estimation.ts","webpack://neuroglancer/./src/visibility_priority/backend.ts","webpack://neuroglancer/./src/sliceview/backend.ts","webpack://neuroglancer/./src/perspective_view/backend.ts","webpack://neuroglancer/./src/volume_rendering/base.ts","webpack://neuroglancer/./src/volume_rendering/backend.ts","webpack://neuroglancer/./src/annotation/base.ts","webpack://neuroglancer/./src/util/hex.ts","webpack://neuroglancer/./src/util/color.ts","webpack://neuroglancer/./src/util/endian.ts","webpack://neuroglancer/./src/util/float.ts","webpack://neuroglancer/./src/util/lerp.ts","webpack://neuroglancer/./src/util/random.ts","webpack://neuroglancer/./src/annotation/index.ts","webpack://neuroglancer/./src/shared_disjoint_sets.ts","webpack://neuroglancer/./src/gpu_hash/hash_table.ts","webpack://neuroglancer/./src/uint64_map.ts","webpack://neuroglancer/./src/uint64_set.ts","webpack://neuroglancer/./src/segmentation_display_state/base.ts","webpack://neuroglancer/./src/segmentation_display_state/backend.ts","webpack://neuroglancer/./src/annotation/backend.ts","webpack://neuroglancer/./src/credentials_provider/index.ts","webpack://neuroglancer/./src/credentials_provider/shared_counterpart.ts","webpack://neuroglancer/./src/datasource/boss/api.ts","webpack://neuroglancer/./src/mesh/multiscale.ts","webpack://neuroglancer/./src/mesh/triangle_strips.ts","webpack://neuroglancer/./src/util/zorder.ts","webpack://neuroglancer/./src/mesh/backend.ts","webpack://neuroglancer/./src/async_computation/index.ts","webpack://neuroglancer/./src/async_computation/decode_gzip_request.ts","webpack://neuroglancer/./src/async_computation/request.ts","webpack://neuroglancer/./src/async_computation/encode_compressed_segmentation_request.ts","webpack://neuroglancer/./src/sliceview/backend_chunk_decoders/postprocess.ts","webpack://neuroglancer/./src/util/numpy_dtype.ts","webpack://neuroglancer/./src/util/npy.ts","webpack://neuroglancer/./src/sliceview/backend_chunk_decoders/bossNpz.ts","webpack://neuroglancer/./src/async_computation/decode_jpeg_request.ts","webpack://neuroglancer/./src/sliceview/backend_chunk_decoders/jpeg.ts","webpack://neuroglancer/./src/sliceview/volume/backend.ts","webpack://neuroglancer/./src/datasource/boss/backend.ts","webpack://neuroglancer/./src/datasource/brainmaps/api.ts","webpack://neuroglancer/./src/skeleton/backend.ts","webpack://neuroglancer/./src/sliceview/backend_chunk_decoders/compressed_segmentation.ts","webpack://neuroglancer/./src/sliceview/backend_chunk_decoders/raw.ts","webpack://neuroglancer/./src/datasource/brainmaps/backend.ts","webpack://neuroglancer/./src/async_computation/decode_png_request.ts","webpack://neuroglancer/./src/util/s3_bucket_listing.ts","webpack://neuroglancer/./src/util/s3.ts","webpack://neuroglancer/./src/util/special_protocol_request.ts","webpack://neuroglancer/./src/datasource/deepzoom/backend.ts","webpack://neuroglancer/./src/datasource/dvid/api.ts","webpack://neuroglancer/./src/skeleton/decode_swc_skeleton.ts","webpack://neuroglancer/./src/datasource/dvid/backend.ts","webpack://neuroglancer/./src/datasource/graphene/base.ts","webpack://neuroglancer/./src/util/object_id.ts","webpack://neuroglancer/./src/chunk_manager/generic_file_source.ts","webpack://neuroglancer/./src/mesh/draco/index.ts","webpack://neuroglancer/./src/skeleton/decode_precomputed_skeleton.ts","webpack://neuroglancer/./src/async_computation/decode_compresso_request.ts","webpack://neuroglancer/./src/sliceview/backend_chunk_decoders/compresso.ts","webpack://neuroglancer/./src/sliceview/backend_chunk_decoders/png.ts","webpack://neuroglancer/./src/util/byte_range_http_requests.ts","webpack://neuroglancer/./src/util/hash.ts","webpack://neuroglancer/./src/datasource/precomputed/backend.ts","webpack://neuroglancer/./src/datasource/graphene/backend.ts","webpack://neuroglancer/./src/async_computation/decode_blosc_request.ts","webpack://neuroglancer/./src/async_computation/decode_zstd_request.ts","webpack://neuroglancer/./src/datasource/n5/backend.ts","webpack://neuroglancer/./src/sliceview/volume/base.ts","webpack://neuroglancer/./src/datasource/nifti/backend.ts","webpack://neuroglancer/./src/async_computation/obj_mesh_request.ts","webpack://neuroglancer/./src/single_mesh/backend.ts","webpack://neuroglancer/./src/datasource/obj/backend.ts","webpack://neuroglancer/./src/datasource/render/backend.ts","webpack://neuroglancer/./src/async_computation/vtk_mesh_request.ts","webpack://neuroglancer/./src/datasource/vtk/backend.ts","webpack://neuroglancer/./src/datasource/zarr/codec/decode.ts","webpack://neuroglancer/./src/datasource/zarr/codec/blosc/decode.ts","webpack://neuroglancer/./src/datasource/zarr/codec/zstd/decode.ts","webpack://neuroglancer/./src/datasource/zarr/codec/bytes/decode.ts","webpack://neuroglancer/./src/datasource/zarr/codec/crc32c/decode.ts","webpack://neuroglancer/./src/datasource/zarr/codec/gzip/decode.ts","webpack://neuroglancer/./src/datasource/zarr/metadata/parse_util.ts","webpack://neuroglancer/./src/datasource/zarr/codec/resolve.ts","webpack://neuroglancer/./src/datasource/zarr/metadata/index.ts","webpack://neuroglancer/./src/datasource/zarr/metadata/parse.ts","webpack://neuroglancer/./src/datasource/zarr/codec/sharding_indexed/resolve.ts","webpack://neuroglancer/./src/kvstore/index.ts","webpack://neuroglancer/./src/datasource/zarr/codec/sharding_indexed/decode.ts","webpack://neuroglancer/./src/datasource/zarr/codec/transpose/decode.ts","webpack://neuroglancer/./src/kvstore/special/index.ts","webpack://neuroglancer/./src/datasource/zarr/backend.ts","webpack://neuroglancer/./src/worker_rpc_context.ts","webpack://neuroglancer/webpack/bootstrap","webpack://neuroglancer/webpack/runtime/chunk loaded","webpack://neuroglancer/webpack/runtime/define property getters","webpack://neuroglancer/webpack/runtime/ensure chunk","webpack://neuroglancer/webpack/runtime/get javascript chunk filename","webpack://neuroglancer/webpack/runtime/get mini-css chunk filename","webpack://neuroglancer/webpack/runtime/hasOwnProperty shorthand","webpack://neuroglancer/webpack/runtime/make namespace object","webpack://neuroglancer/webpack/runtime/publicPath","webpack://neuroglancer/webpack/runtime/import chunk loading","webpack://neuroglancer/webpack/runtime/startup chunk dependencies","webpack://neuroglancer/webpack/startup"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Uint64 } from \"#src/util/uint64.js\";\n\nexport enum VisibleSegmentEquivalencePolicy {\n  MIN_REPRESENTATIVE = 0, // defafult, representative elmement is the minimum element in equivalence set\n  MAX_REPRESENTATIVE = 1, // representative elmement is the maximum element in equivalence set\n  REPRESENTATIVE_EXCLUDED = 1 << 1, // filter out the representative element when iterating over visible segments\n  NONREPRESENTATIVE_EXCLUDED = 1 << 2, // filter out non representative elements when iterating over visible segments\n}\n\n// Returns `true` if `segmentId` is a base segment id, rather than a segment id added to the graph.\nexport function isBaseSegmentId(segmentId: Uint64) {\n  return segmentId.high >>> 31 ? false : true;\n}\n\nexport const UNKNOWN_NEW_SEGMENT_ID = new Uint64(0xffffffff, 0xffffffff);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debounce } from \"lodash-es\";\nimport type { Borrowed, Disposable, Owned } from \"#src/util/disposable.js\";\nimport { invokeDisposers, RefCounted } from \"#src/util/disposable.js\";\nimport type { NullaryReadonlySignal } from \"#src/util/signal.js\";\nimport { neverSignal, NullarySignal, Signal } from \"#src/util/signal.js\";\nimport type { Trackable } from \"#src/util/trackable.js\";\n\nexport interface WatchableValueInterface<T> {\n  value: T;\n  changed: NullaryReadonlySignal;\n}\n\nexport interface WatchableValueChangeInterface<T> {\n  readonly value: T;\n  readonly changed: Signal<(oldValue: T, newValue: T) => void>;\n}\n\nexport class WatchableValue<T> implements WatchableValueInterface<T> {\n  get value() {\n    return this.value_;\n  }\n  set value(newValue: T) {\n    if (newValue !== this.value_) {\n      this.value_ = newValue;\n      this.changed.dispatch();\n    }\n  }\n  changed = new NullarySignal();\n  constructor(protected value_: T) {}\n}\n\nexport class TrackableValue<T> extends WatchableValue<T> implements Trackable {\n  constructor(\n    value: T,\n    public validator: (value: any) => T,\n    public defaultValue = value,\n  ) {\n    super(value);\n  }\n  toJSON(): any {\n    const { value_ } = this;\n    if (value_ === this.defaultValue) {\n      return undefined;\n    }\n    return this.value_;\n  }\n  reset() {\n    this.value = this.defaultValue;\n  }\n  restoreState(x: any) {\n    if (x !== undefined) {\n      const { validator } = this;\n      try {\n        this.value = validator(x);\n        return;\n      } catch {\n        // Ignore invalid values in JSON representation.\n      }\n    }\n    this.value = this.defaultValue;\n  }\n}\n\nclass DerivedWatchableValue<U>\n  extends RefCounted\n  implements WatchableValueInterface<U>\n{\n  changed = new NullarySignal();\n  get value() {\n    return this.f(...this.ws.map((w) => w.value));\n  }\n  private f: (...v: any[]) => U;\n  private ws: WatchableValueInterface<any>[];\n\n  constructor(f: (...v: any[]) => U, ws: WatchableValueInterface<any>[]) {\n    super();\n    this.f = f;\n    this.ws = ws;\n    for (const w of ws) {\n      this.registerDisposer(w.changed.add(this.changed.dispatch));\n    }\n  }\n}\n\nexport function makeDerivedWatchableValue<U, T extends any[]>(\n  f: (...v: T) => U,\n  ...ws: { [K in keyof T]: WatchableValueInterface<T[K]> }\n) {\n  return new DerivedWatchableValue(f, ws);\n}\n\nclass CachedLazyDerivedWatchableValue<U>\n  extends RefCounted\n  implements WatchableValueInterface<U>\n{\n  changed = new NullarySignal();\n  private value_: U | undefined;\n  private valueGeneration = -1;\n  get value() {\n    const generation = this.changed.count;\n    if (generation !== this.valueGeneration) {\n      this.value_ = this.f(...this.ws.map((w) => w.value));\n      this.valueGeneration = generation;\n    }\n    return this.value_ as U;\n  }\n  private f: (...v: any[]) => U;\n  private ws: WatchableValueInterface<any>[];\n\n  constructor(f: (...v: any[]) => U, ws: WatchableValueInterface<any>[]) {\n    super();\n    this.f = f;\n    this.ws = ws;\n    for (const w of ws) {\n      this.registerDisposer(w.changed.add(this.changed.dispatch));\n    }\n  }\n}\n\nexport function makeCachedLazyDerivedWatchableValue<U, T extends any[]>(\n  f: (...v: T) => U,\n  ...ws: { [K in keyof T]: WatchableValueInterface<T[K]> }\n) {\n  return new CachedLazyDerivedWatchableValue(f, ws);\n}\n\nexport class CachedWatchableValue<T>\n  extends RefCounted\n  implements WatchableValueInterface<T>\n{\n  changed = new Signal();\n  value: T;\n  constructor(\n    base: WatchableValueInterface<T>,\n    isEqual: (a: T, b: T) => boolean = (a, b) => a === b,\n  ) {\n    super();\n    this.value = base.value;\n    this.registerDisposer(\n      base.changed.add(() => {\n        const newValue = base.value;\n        if (!isEqual(this.value, newValue)) {\n          this.value = newValue;\n          this.changed.dispatch();\n        }\n      }),\n    );\n  }\n}\n\nexport function makeCachedDerivedWatchableValue<U, T extends any[]>(\n  f: (...v: T) => U,\n  ws: { [K in keyof T]: WatchableValueInterface<T[K]> },\n  isEqual?: (a: U, b: U) => boolean,\n) {\n  const derived = new DerivedWatchableValue(f, ws);\n  const cached = new CachedWatchableValue(derived, isEqual);\n  cached.registerDisposer(derived);\n  return cached;\n}\n\nexport class AggregateWatchableValue<T>\n  extends RefCounted\n  implements WatchableValueInterface<T>\n{\n  changed = new NullarySignal();\n  value: T;\n  constructor(\n    getWatchables: (self: RefCounted) => {\n      [k in keyof T]: WatchableValueInterface<T[k]>;\n    },\n  ) {\n    super();\n    const watchables = getWatchables(this);\n    const keys = Object.keys(watchables) as (keyof T)[];\n    const updateValue = () => {\n      const obj = (Array.isArray(watchables) ? [] : {}) as T;\n      for (const k of keys) {\n        obj[k] = watchables[k].value;\n      }\n      this.value = obj;\n      this.changed.dispatch();\n    };\n    updateValue();\n    for (const k of keys) {\n      const watchable = watchables[k];\n      // Ensure a unique function is used each time in case the same watchable is assigned to\n      // multiple properties.\n      this.registerDisposer(watchable.changed.add(() => updateValue()));\n    }\n  }\n}\n\nexport class ComputedWatchableValue<U>\n  extends RefCounted\n  implements WatchableValueInterface<U>\n{\n  get value() {\n    return this.f();\n  }\n  changed = new NullarySignal();\n  constructor(\n    public f: () => U,\n    ...signals: NullarySignal[]\n  ) {\n    super();\n    for (const signal of signals) {\n      this.registerDisposer(signal.add(this.changed.dispatch));\n    }\n  }\n}\n\nexport class WatchableRefCounted<T extends RefCounted>\n  extends RefCounted\n  implements WatchableValueInterface<T | undefined>\n{\n  changed = new NullarySignal();\n\n  private value_: Owned<T> | undefined;\n  private valueHandler: (() => void) | undefined;\n\n  get value(): Borrowed<T> | undefined {\n    return this.value_;\n  }\n\n  set value(value: Owned<T> | undefined) {\n    const { value_ } = this;\n    this.value_ = value;\n    if (value_ !== undefined) {\n      value_.dispose();\n      value_.unregisterDisposer(this.valueHandler!);\n      this.valueHandler = undefined;\n    }\n    if (value !== undefined) {\n      const valueHandler = (this.valueHandler = () => {\n        if (this.value_ === value) {\n          this.value_ = undefined;\n          this.changed.dispatch();\n        }\n      });\n      value.registerDisposer(valueHandler);\n    }\n\n    if (value !== value_) {\n      this.changed.dispatch();\n    }\n  }\n\n  reset() {\n    this.value = undefined;\n  }\n\n  disposed() {\n    if (this.value_ !== undefined) {\n      this.value_.unregisterDisposer(this.valueHandler!);\n      this.value_.dispose();\n    }\n    this.value_ = undefined;\n    super.disposed();\n  }\n}\n\nexport interface TrackableValueInterface<T>\n  extends WatchableValueInterface<T>,\n    Trackable {}\n\nexport class TrackableRefCounted<T extends RefCounted>\n  extends WatchableRefCounted<T>\n  implements TrackableValueInterface<T | undefined>\n{\n  constructor(\n    public validator: (value: any) => T | undefined,\n    public jsonConverter: (value: T) => any,\n  ) {\n    super();\n  }\n  toJSON() {\n    const { value } = this;\n    return value && this.jsonConverter(value);\n  }\n\n  restoreState(x: any) {\n    this.value = this.validator(x);\n  }\n}\n\nexport class WatchableSet<T> {\n  changed = new Signal<(x: T | null, add: boolean) => void>();\n  values: Set<T>;\n  constructor(values?: Iterable<T>) {\n    if (values === undefined) {\n      this.values = new Set();\n    } else {\n      this.values = new Set(values);\n    }\n  }\n  add(x: T) {\n    const { values } = this;\n    if (!values.has(x)) {\n      values.add(x);\n      this.changed.dispatch(x, true);\n    }\n    return this;\n  }\n  delete(x: T) {\n    const { values } = this;\n    if (values.delete(x)) {\n      this.changed.dispatch(x, false);\n      return true;\n    }\n    return false;\n  }\n  has(x: T) {\n    return this.values.has(x);\n  }\n  get size() {\n    return this.values.size;\n  }\n  [Symbol.iterator]() {\n    return this.values[Symbol.iterator]();\n  }\n  clear() {\n    const { values } = this;\n    if (values.size > 0) {\n      values.clear();\n      this.changed.dispatch(null, false);\n    }\n  }\n}\n\nexport interface NestedStateManager<T = undefined> extends Disposable {\n  flush: () => void;\n  value: T;\n}\n\nexport function registerNested<U, T extends any[]>(\n  f: (context: RefCounted, ...values: T) => U,\n  ...watchables: { [K in keyof T]: WatchableValueInterface<T[K]> }\n): NestedStateManager<U> {\n  const values = watchables.map((w) => w.value) as T;\n  const count = watchables.length;\n  let context = new RefCounted();\n  let result = f(context, ...values);\n\n  const handleChange = debounce(() => {\n    let changed = false;\n    for (let i = 0; i < count; ++i) {\n      const watchable = watchables[i];\n      const value = watchable.value;\n      if (values[i] !== value) {\n        values[i] = value;\n        changed = true;\n      }\n    }\n    if (!changed) return;\n    context.dispose();\n    context = new RefCounted();\n    result = f(context, ...values);\n  }, 0);\n\n  const signalDisposers = watchables.map((w) => w.changed.add(handleChange));\n\n  return {\n    flush() {\n      handleChange.flush();\n    },\n    dispose() {\n      handleChange.cancel();\n      invokeDisposers(signalDisposers);\n      context.dispose();\n    },\n    get value() {\n      handleChange.flush();\n      return result;\n    },\n  };\n}\n\nexport function registerNestedSync<U, T extends any[]>(\n  f: (context: RefCounted, ...values: T) => U,\n  ...watchables: { [K in keyof T]: WatchableValueInterface<T[K]> }\n): { readonly value: U; dispose(): void } {\n  const values = watchables.map((w) => w.value) as T;\n  const count = watchables.length;\n  let context = new RefCounted();\n  let result = f(context, ...values);\n\n  const handleChange = () => {\n    let changed = false;\n    for (let i = 0; i < count; ++i) {\n      const watchable = watchables[i];\n      const value = watchable.value;\n      if (values[i] !== value) {\n        values[i] = value;\n        changed = true;\n      }\n    }\n    if (!changed) return;\n    context.dispose();\n    context = new RefCounted();\n    result = f(context, ...values);\n  };\n\n  const signalDisposers = watchables.map((w) => w.changed.add(handleChange));\n\n  return {\n    dispose() {\n      invokeDisposers(signalDisposers);\n      context.dispose();\n    },\n    get value() {\n      return result;\n    },\n  };\n}\n\nexport function constantWatchableValue<T>(\n  value: T,\n): WatchableValueInterface<T> {\n  return { changed: neverSignal, value };\n}\n\nexport function observeWatchable<T>(\n  callback: (value: T) => void,\n  watchable: WatchableValueInterface<T>,\n) {\n  callback(watchable.value);\n  return watchable.changed.add(() => callback(watchable.value));\n}\n\nexport function linkWatchableValue<T>(\n  source: WatchableValueInterface<T>,\n  target: WatchableValueInterface<T>,\n) {\n  target.value = source.value;\n  return source.changed.add(() => {\n    target.value = source.value;\n  });\n}\n\nexport class IndirectWatchableValue<U, T>\n  implements Disposable, WatchableValueInterface<T>\n{\n  protected inner: WatchableValueInterface<T>;\n  changed = new NullarySignal();\n  disposer: (() => void) | undefined;\n  private update = () => {\n    const { disposer, outer } = this;\n    if (disposer !== undefined) {\n      disposer();\n    }\n    const inner = (this.inner = this.getInner(outer.value));\n    this.disposer = inner.changed.add(this.changed.dispatch);\n    this.changed.dispatch();\n  };\n  constructor(\n    private outer: WatchableValueInterface<U>,\n    private getInner: (outer: U) => WatchableValueInterface<T>,\n  ) {\n    outer.changed.add(this.update);\n    this.update();\n  }\n\n  dispose() {\n    this.outer.changed.remove(this.update);\n    this.disposer!();\n  }\n\n  get value() {\n    return this.inner.value;\n  }\n  set value(value: T) {\n    this.inner.value = value;\n  }\n}\n\nexport class IndirectTrackableValue<U, T>\n  extends IndirectWatchableValue<U, T>\n  implements Trackable\n{\n  declare inner: TrackableValueInterface<T>;\n  reset() {\n    this.inner.reset();\n  }\n  restoreState(obj: unknown) {\n    this.inner.restoreState(obj);\n  }\n  toJSON() {\n    return this.inner.toJSON();\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file\n * Cancellation token system with similarity to the cancellation_token in Microsoft's PPL.\n */\n\n/**\n * Interface used by cancelable operations to monitor whether cancellation has occurred.\n *\n * Note that this interface does not provide any way to trigger cancellation; for that,\n * CancellationTokenSource is used.\n */\nexport interface CancellationToken {\n  /**\n   * Indicates whether cancellation has occurred.\n   */\n  readonly isCanceled: boolean;\n\n  /**\n   * Add a cancellation handler function.  The handler will be invoked synchronously if\n   * this.isCanceled === true.  Otherwise, it will be invoked synchronously upon cancellation,\n   * unless it is removed prior to cancellation.\n   *\n   * The handler function must not throw any exceptions when called.\n   *\n   * @precondition The handler function must not already be registered.\n   *\n   * @param handler The handler function to add.\n   *\n   * @return A function that unregisters the handler.\n   */\n  add(handler: () => void): () => void;\n\n  /**\n   * Unregister a cancellation handler function.  If this.isCanceled, or the specified handler\n   * function has not been registered, then this function has no effect.\n   */\n  remove(handler: () => void): void;\n}\n\nexport class CancellationError extends Error {\n  name = \"CancellationError\";\n  message = \"CANCELED\";\n  toString() {\n    return \"CANCELED\";\n  }\n}\n\n/**\n * Singleton instance of CancellationError thrown to indicate cancellation.\n */\nexport const CANCELED = new CancellationError();\n\n/**\n * Throws CANCELED if token.isCanceled === true.\n */\nexport function throwIfCanceled(token: CancellationToken) {\n  if (token.isCanceled === true) {\n    throw CANCELED;\n  }\n}\n\nconst noopFunction = () => {};\n\n/**\n * CancellationToken that cannot be canceled.  This can be passed to operations that require a\n * CancellationToken but will not need to be canceled.\n */\nexport const uncancelableToken: CancellationToken = {\n  isCanceled: false,\n  add: () => noopFunction,\n  remove: noopFunction,\n};\n\n/**\n * Class that can be used to trigger cancellation.\n */\nexport class CancellationTokenSource implements CancellationToken {\n  /**\n   * Trigger cancellation.\n   *\n   * If this.isCanceled === false, then each registered cancellation handler is invoked\n   * synchronously.\n   */\n  cancel() {\n    const { handlers } = this;\n    if (handlers !== null) {\n      this.handlers = null;\n      if (handlers !== undefined) {\n        for (const handler of handlers) {\n          handler();\n        }\n      }\n    }\n  }\n\n  get isCanceled() {\n    return this.handlers === null;\n  }\n\n  private handlers: Set<() => void> | undefined | null;\n\n  add(handler: () => void) {\n    let { handlers } = this;\n    if (handlers === null) {\n      handler();\n      return noopFunction;\n    }\n    if (handlers === undefined) {\n      handlers = this.handlers = new Set<() => void>();\n    }\n    handlers.add(handler);\n    return () => {\n      this.remove(handler);\n    };\n  }\n\n  remove(handler: () => void) {\n    const { handlers } = this;\n    if (handlers != null) {\n      handlers.delete(handler);\n    }\n  }\n}\n\n/**\n * Creates a CancellationToken corresponding to an asynchronous process with multiple consumers.  It\n * is cancelled only when the cancellation tokens corresponding to all of the consumers have been\n * cancelled.\n */\nexport class MultipleConsumerCancellationTokenSource extends CancellationTokenSource {\n  private consumers = new Set<CancellationToken>();\n\n  addConsumer(cancellationToken: CancellationToken = uncancelableToken) {\n    const { consumers } = this;\n    if (consumers.has(cancellationToken) || cancellationToken.isCanceled) {\n      return;\n    }\n    consumers.add(cancellationToken);\n    cancellationToken.add(() => {\n      consumers.delete(cancellationToken);\n      if (consumers.size === 0) {\n        this.cancel();\n      }\n    });\n  }\n}\n\n/**\n * Creates a promise and a dependent cancellation token.\n *\n * The dependent cancellation token will be canceled if the specified `cancellationToken` is\n * canceled while the promise is pending.\n *\n * @param cancellationToken The token that provides notification of cancellation.\n * @param executor The executor passed the resolve and reject functions for the promise, as well as\n * the dependent cancellation token.  If cancellation occurs after either resolve or reject is\n * called, then the dependent token is not cancelled.\n *\n * @returns A new Promise.\n */\nexport function makeCancelablePromise<T>(\n  cancellationToken: CancellationToken,\n  executor: (\n    resolve: (value: T | Promise<T>) => void,\n    reject: (error: any) => void,\n    token: CancellationToken,\n  ) => void,\n) {\n  return new Promise<T>((resolve, reject) => {\n    if (cancellationToken === uncancelableToken) {\n      executor(resolve, reject, uncancelableToken);\n      return;\n    }\n    const scopedToken = new CancellationTokenSource();\n    const unregister = cancellationToken.add(() => {\n      scopedToken.cancel();\n    });\n    executor(\n      (value) => {\n        unregister();\n        resolve(value);\n      },\n      (error) => {\n        unregister();\n        reject(error);\n      },\n      scopedToken,\n    );\n  });\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Disposable {\n  dispose: () => void;\n}\n\nexport type Disposer = Disposable | (() => void);\n\nconst DEBUG_REF_COUNTS = false;\n\nexport function invokeDisposer(disposer: Disposer) {\n  if (typeof disposer === \"object\") {\n    disposer.dispose();\n  } else {\n    disposer();\n  }\n}\n\nexport function invokeDisposers(disposers: Disposer[]) {\n  for (let i = disposers.length; i > 0; --i) {\n    invokeDisposer(disposers[i - 1]);\n  }\n}\n\nexport function registerEventListener(\n  target: EventTarget,\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) {\n  target.addEventListener(type, listener, options);\n  return () => target.removeEventListener(type, listener, options);\n}\n\nexport class RefCounted implements Disposable {\n  public refCount = 1;\n  wasDisposed: boolean | undefined;\n  private disposers: Disposer[];\n  addRef() {\n    ++this.refCount;\n    return this;\n  }\n  disposedStacks: any;\n  dispose() {\n    if (DEBUG_REF_COUNTS) {\n      (this.disposedStacks = this.disposedStacks || []).push(new Error().stack);\n    }\n    if (--this.refCount !== 0) {\n      return;\n    }\n    this.refCountReachedZero();\n  }\n\n  protected refCountReachedZero() {\n    this.disposed();\n    const { disposers } = this;\n    if (disposers !== undefined) {\n      invokeDisposers(disposers);\n      this.disposers = <any>undefined;\n    }\n    this.wasDisposed = true;\n  }\n  disposed() {}\n  registerDisposer<T extends Disposer>(f: T): T {\n    const { disposers } = this;\n    if (disposers == null) {\n      this.disposers = [f];\n    } else {\n      disposers.push(f);\n    }\n    return f;\n  }\n  unregisterDisposer<T extends Disposer>(f: T): T {\n    const { disposers } = this;\n    if (disposers != null) {\n      const index = disposers.indexOf(f);\n      if (index !== -1) {\n        disposers.splice(index, 1);\n      }\n    }\n    return f;\n  }\n  registerEventListener(\n    target: EventTarget,\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ) {\n    this.registerDisposer(\n      registerEventListener(target, type, listener, options),\n    );\n  }\n  registerCancellable<T extends { cancel: () => void }>(cancellable: T) {\n    this.registerDisposer(() => {\n      cancellable.cancel();\n    });\n    return cancellable;\n  }\n}\n\nexport class RefCountedValue<T> extends RefCounted {\n  constructor(public value: T) {\n    super();\n  }\n}\n\n/**\n * A variable of this type is associated with an increment of the reference count.  If a function\n * parameter is declared with this type, then callers must donate a reference count.\n */\nexport type Owned<T extends Disposable> = T;\n\n/**\n * A variable of this type is not associated with an increment of the reference count.\n */\nexport type Borrowed<T extends Disposable> = T;\n\nexport function disposableOnce(value: Disposer | undefined) {\n  return () => {\n    if (value !== undefined) {\n      const x = value;\n      value = undefined;\n      invokeDisposer(x);\n    }\n  };\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { mat3 } from \"gl-matrix\";\nimport { mat4, quat, vec3, vec4 } from \"gl-matrix\";\nimport type { TypedArray } from \"#src/util/array.js\";\nimport { findMatchingIndices } from \"#src/util/array.js\";\n\nexport { mat2, mat3, mat4, quat, vec2, vec3, vec4 } from \"gl-matrix\";\n\nexport const identityMat4 = mat4.create();\n\nexport const AXES_NAMES = [\"x\", \"y\", \"z\"];\n\nexport const kAxes = [\n  vec3.fromValues(1, 0, 0),\n  vec3.fromValues(0, 1, 0),\n  vec3.fromValues(0, 0, 1),\n];\nexport const kZeroVec = vec3.fromValues(0, 0, 0);\nexport const kZeroVec4 = vec4.fromValues(0, 0, 0, 0);\nexport const kOneVec = vec3.fromValues(1, 1, 1);\nexport const kInfinityVec = vec3.fromValues(Infinity, Infinity, Infinity);\nexport const kIdentityQuat = quat.create();\n\nexport function prod3(x: ArrayLike<number>) {\n  return x[0] * x[1] * x[2];\n}\n\nexport function prod4(x: ArrayLike<number>) {\n  return x[0] * x[1] * x[2] * x[3];\n}\n\n/**\n * Implements a one-to-one conversion from Vec3 to string, suitable for use a Map key.\n *\n * Specifically, returns the string representation of the 3 values separated by commas.\n */\nexport function vec3Key(x: ArrayLike<number>) {\n  return `${x[0]},${x[1]},${x[2]}`;\n}\n\n/**\n * Transforms `a` by a 180-degree rotation about X, stores result in `out`.\n */\nexport function quatRotateX180(out: quat, a: quat) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  const w = a[3];\n  out[0] = w;\n  out[1] = z;\n  out[2] = -y;\n  out[3] = -x;\n}\n\n/**\n * Transforms `a` by a 180-degree rotation about Y, stores result in `out`.\n */\nexport function quatRotateY180(out: quat, a: quat) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  const w = a[3];\n  out[0] = -z;\n  out[1] = w;\n  out[2] = x;\n  out[3] = -y;\n}\n\n/**\n * Transforms `a` by a 180-degree rotation about Z, stores result in `out`.\n */\nexport function quatRotateZ180(out: quat, a: quat) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  const w = a[3];\n  out[0] = y;\n  out[1] = -x;\n  out[2] = w;\n  out[3] = -z;\n}\n\n/**\n * Transforms a vector `a` by a homogenous transformation matrix `m`.  The translation component of\n * `m` is ignored.\n */\nexport function transformVectorByMat4(out: vec3, a: vec3, m: mat4) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  out[0] = m[0] * x + m[4] * y + m[8] * z;\n  out[1] = m[1] * x + m[5] * y + m[9] * z;\n  out[2] = m[2] * x + m[6] * y + m[10] * z;\n  return out;\n}\n\n/**\n * Transforms a vector `a` by the transpose of a homogenous transformation matrix `m`.  The\n * translation component of `m` is ignored.\n */\nexport function transformVectorByMat4Transpose(out: vec3, a: vec3, m: mat4) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  out[0] = m[0] * x + m[1] * y + m[2] * z;\n  out[1] = m[4] * x + m[5] * y + m[6] * z;\n  out[2] = m[8] * x + m[9] * y + m[10] * z;\n  return out;\n}\n\nexport function translationRotationScaleZReflectionToMat4(\n  out: mat4,\n  translation: vec3,\n  rotation: quat,\n  scale: vec3,\n  zReflection: number,\n) {\n  const temp: Float32Array = out;\n  out[0] = scale[0];\n  out[1] = scale[1];\n  out[2] = scale[2] * zReflection;\n  return mat4.fromRotationTranslationScale(\n    out,\n    rotation,\n    translation,\n    <vec3>temp,\n  );\n}\n\n/**\n * Returns the value of `t` that minimizes `(p - (a + t * (b - a)))`.\n */\nexport function findClosestParameterizedLinePosition(\n  a: Float32Array,\n  b: Float32Array,\n  p: Float32Array,\n) {\n  // http://mathworld.wolfram.com/Point-LineDistance3-Dimensional.html\n  // Compute t: -dot(a-p, b-a) / |b - a|^2\n  const rank = p.length;\n  let denominator = 0;\n  for (let i = 0; i < rank; ++i) {\n    denominator += (a[i] - b[i]) ** 2;\n  }\n  let numerator = 0;\n  for (let i = 0; i < rank; ++i) {\n    const aValue = a[i];\n    numerator -= (aValue - p[i]) * (b[i] - aValue);\n  }\n  return numerator / Math.max(denominator, 1e-6);\n}\n\n/**\n * Sets `out` to the position on the line segment `[a, b]` closest to `p`.\n */\nexport function projectPointToLineSegment(\n  out: Float32Array,\n  a: Float32Array,\n  b: Float32Array,\n  p: Float32Array,\n) {\n  const rank = out.length;\n  let t = findClosestParameterizedLinePosition(a, b, p);\n  t = Math.max(0.0, Math.min(1.0, t));\n  for (let i = 0; i < rank; ++i) {\n    const aValue = a[i];\n    out[i] = aValue + t * (b[i] - aValue);\n  }\n  return out;\n}\n\nexport function mat3FromMat4(out: mat3, m: mat4) {\n  const m00 = m[0];\n  const m01 = m[1];\n  const m02 = m[2];\n  const m10 = m[4];\n  const m11 = m[5];\n  const m12 = m[6];\n  const m20 = m[8];\n  const m21 = m[9];\n  const m22 = m[10];\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Extracts the left, right, bottom, top, near, far clipping planes from `projectionMat`.\n * @param out Row-major array of shape `(6, 4)` specifying for each of the left, right, bottom, top,\n *     near, far clipping planes the `a`, `b`, `c`, `d` coefficients such that\n *     `0 < a * x + b * y + c * z + d` if the point `x, y, z` is inside the half-space of the\n * clipping plane.\n * @param m Projection matrix\n */\nexport function getFrustrumPlanes(out: Float32Array, m: mat4): Float32Array {\n  // http://web.archive.org/web/20120531231005/http://crazyjoke.free.fr/doc/3D/plane%20extraction.pdf\n  const m00 = m[0];\n  const m10 = m[1];\n  const m20 = m[2];\n  const m30 = m[3];\n  const m01 = m[4];\n  const m11 = m[5];\n  const m21 = m[6];\n  const m31 = m[7];\n  const m02 = m[8];\n  const m12 = m[9];\n  const m22 = m[10];\n  const m32 = m[11];\n  const m03 = m[12];\n  const m13 = m[13];\n  const m23 = m[14];\n  const m33 = m[15];\n\n  out[0] = m30 + m00; // left: a\n  out[1] = m31 + m01; // left: b\n  out[2] = m32 + m02; // left: c\n  out[3] = m33 + m03; // left: d\n\n  out[4] = m30 - m00; // right: a\n  out[5] = m31 - m01; // right: b\n  out[6] = m32 - m02; // right: c\n  out[7] = m33 - m03; // right: d\n\n  out[8] = m30 + m10; // bottom: a\n  out[9] = m31 + m11; // bottom: b\n  out[10] = m32 + m12; // bottom: c\n  out[11] = m33 + m13; // bottom: d\n\n  out[12] = m30 - m10; // top: a\n  out[13] = m31 - m11; // top: b\n  out[14] = m32 - m12; // top: c\n  out[15] = m33 - m13; // top: d\n\n  const nearA = m30 + m20; // near: a\n  const nearB = m31 + m21; // near: b\n  const nearC = m32 + m22; // near: c\n  const nearD = m33 + m23; // near: d\n\n  const farA = m30 - m20; // far: a\n  const farB = m31 - m21; // far: b\n  const farC = m32 - m22; // far: c\n  const farD = m33 - m23; // far: d\n\n  // Normalize near plane\n  const nearNorm = Math.sqrt(nearA ** 2 + nearB ** 2 + nearC ** 2);\n  out[16] = nearA / nearNorm;\n  out[17] = nearB / nearNorm;\n  out[18] = nearC / nearNorm;\n  out[19] = nearD / nearNorm;\n\n  // Also normalize far plane\n  const farNorm = Math.sqrt(farA ** 2 + farB ** 2 + farC ** 2);\n  out[20] = farA / farNorm;\n  out[21] = farB / farNorm;\n  out[22] = farC / farNorm;\n  out[23] = farD / farNorm;\n\n  return out;\n}\n\n/**\n * Checks whether the specified axis-aligned bounding box (AABB) intersects the view frustrum.\n *\n * @param clippingPlanes Array of length 24 specifying the clipping planes of the view frustrum, as\n *     computed by `getFrustrumPlanes`\n */\nexport function isAABBVisible(\n  xLower: number,\n  yLower: number,\n  zLower: number,\n  xUpper: number,\n  yUpper: number,\n  zUpper: number,\n  clippingPlanes: Float32Array,\n) {\n  for (let i = 0; i < 6; ++i) {\n    const a = clippingPlanes[i * 4];\n    const b = clippingPlanes[i * 4 + 1];\n    const c = clippingPlanes[i * 4 + 2];\n    const d = clippingPlanes[i * 4 + 3];\n    const sum =\n      Math.max(a * xLower, a * xUpper) +\n      Math.max(b * yLower, b * yUpper) +\n      Math.max(c * zLower, c * zUpper) +\n      d;\n    if (sum < 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isAABBIntersectingPlane(\n  xLower: number,\n  yLower: number,\n  zLower: number,\n  xUpper: number,\n  yUpper: number,\n  zUpper: number,\n  clippingPlanes: Float32Array,\n) {\n  for (let i = 0; i < 4; ++i) {\n    const a = clippingPlanes[i * 4];\n    const b = clippingPlanes[i * 4 + 1];\n    const c = clippingPlanes[i * 4 + 2];\n    const d = clippingPlanes[i * 4 + 3];\n    const sum =\n      Math.max(a * xLower, a * xUpper) +\n      Math.max(b * yLower, b * yUpper) +\n      Math.max(c * zLower, c * zUpper) +\n      d;\n    if (sum < 0) {\n      return false;\n    }\n  }\n  {\n    const i = 5;\n    const a = clippingPlanes[i * 4];\n    const b = clippingPlanes[i * 4 + 1];\n    const c = clippingPlanes[i * 4 + 2];\n    const d = clippingPlanes[i * 4 + 3];\n    const maxSum =\n      Math.max(a * xLower, a * xUpper) +\n      Math.max(b * yLower, b * yUpper) +\n      Math.max(c * zLower, c * zUpper);\n    const minSum =\n      Math.min(a * xLower, a * xUpper) +\n      Math.min(b * yLower, b * yUpper) +\n      Math.min(c * zLower, c * zUpper);\n    const epsilon = Math.abs(d) * 1e-6;\n    if (minSum > -d + epsilon || maxSum < -d - epsilon) return false;\n  }\n  return true;\n}\n\n/**\n * Returns the list (in sorted order) of input dimensions that depend on any of the specified output\n * dimensions.\n */\nexport function getDependentTransformInputDimensions(\n  transform: Float32Array | Float64Array,\n  rank: number,\n  outputDimensions: readonly number[],\n  transpose = false,\n): number[] {\n  const numOutputDimensions = outputDimensions.length;\n  const isDependentInputDimension: boolean[] = [];\n  const inputStride = transpose ? 1 : rank + 1;\n  const outputStride = transpose ? rank + 1 : 1;\n  for (let i = 0; i < numOutputDimensions; ++i) {\n    const outputDim = outputDimensions[i];\n    for (let inputDim = 0; inputDim < rank; ++inputDim) {\n      if (transform[inputDim * inputStride + outputDim * outputStride] !== 0) {\n        isDependentInputDimension[inputDim] = true;\n      }\n    }\n  }\n  return findMatchingIndices(isDependentInputDimension, true);\n}\n\nexport function scaleMat3Input(out: mat3, input: mat3, scales: TypedArray) {\n  for (let j = 0; j < 3; ++j) {\n    const s = scales[j];\n    for (let i = 0; i < 3; ++i) {\n      out[i + j * 3] = s * input[i + j * 3];\n    }\n  }\n  return out;\n}\n\nexport function scaleMat3Output(out: mat3, input: mat3, scales: TypedArray) {\n  for (let i = 0; i < 3; ++i) {\n    const s = scales[i];\n    for (let j = 0; j < 3; ++j) {\n      out[i + j * 3] = s * input[i + j * 3];\n    }\n  }\n  return out;\n}\n\nexport function getViewFrustrumVolume(projectionMat: mat4) {\n  if (projectionMat[15] === 1) {\n    // orthographic projection\n    const depth = 2 / Math.abs(projectionMat[10]);\n    const width = 2 / Math.abs(projectionMat[0]);\n    const height = 2 / Math.abs(projectionMat[5]);\n    return width * height * depth;\n  }\n  // perspective projection\n  // a = (far + near) / (near - far);\n  // b = 2 * far * near / (near - far);\n  const a = projectionMat[10];\n  const b = projectionMat[14];\n  const near = (2 * b) / (2 * a - 2);\n  const far = ((a - 1) * near) / (a + 1);\n\n  const baseArea = 4 / (projectionMat[0] * projectionMat[5]);\n  return (baseArea / 3) * (Math.abs(far) ** 3 - Math.abs(near) ** 3);\n}\n\nexport function getViewFrustrumDepthRange(projectionMat: mat4) {\n  if (projectionMat[15] === 1) {\n    // orthographic projection\n    const depth = 2 / Math.abs(projectionMat[10]);\n    return depth;\n  }\n  // perspective projection\n  // a = (far + near) / (near - far);\n  // b = 2 * far * near / (near - far);\n  const a = projectionMat[10];\n  const b = projectionMat[14];\n  const near = (2 * b) / (2 * a - 2);\n  const far = ((a - 1) * near) / (a + 1);\n  const depth = Math.abs(far - near);\n  return depth;\n}\n\n// Ensures the z output is 0.  Useful for disabling depth clipping.\nexport function disableZProjection(mat: mat4) {\n  mat[2] = 0;\n  mat[6] = 0;\n  mat[10] = 0;\n  mat[14] = 0;\n  return mat;\n}\n\nconst tempVec3 = vec3.create();\n\n// Determines the bounding box in world coordinates of the view frustrum for a given view-projection\n// matrix.\n//\n// https://gamedev.stackexchange.com/questions/29999/how-do-i-create-a-bounding-frustum-from-a-view-projection-matrix\nexport function getViewFrustrumWorldBounds(\n  invViewProjectionMat: mat4,\n  bounds: Float32Array,\n) {\n  bounds[0] = bounds[1] = bounds[2] = Number.POSITIVE_INFINITY;\n  bounds[3] = bounds[4] = bounds[5] = Number.NEGATIVE_INFINITY;\n  for (let i = 0; i < 8; ++i) {\n    tempVec3[0] = 2 * (i & 1) - 1;\n    tempVec3[1] = 2 * ((i >>> 1) & 1) - 1;\n    tempVec3[2] = 2 * ((i >>> 2) & 1) - 1;\n    vec3.transformMat4(tempVec3, tempVec3, invViewProjectionMat);\n    for (let j = 0; j < 3; ++j) {\n      const x = tempVec3[j];\n      bounds[j] = Math.min(bounds[j], x);\n      bounds[j + 3] = Math.max(bounds[j + 3], x);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport { CANCELED, uncancelableToken } from \"#src/util/cancellation.js\";\nimport { Uint64 } from \"#src/util/uint64.js\";\n\nexport class HttpError extends Error {\n  url: string;\n  status: number;\n  statusText: string;\n  response?: Response;\n\n  constructor(\n    url: string,\n    status: number,\n    statusText: string,\n    response?: Response,\n  ) {\n    let message = `Fetching ${JSON.stringify(\n      url,\n    )} resulted in HTTP error ${status}`;\n    if (statusText) {\n      message += `: ${statusText}`;\n    }\n    message += \".\";\n    super(message);\n    this.name = \"HttpError\";\n    this.message = message;\n    this.url = url;\n    this.status = status;\n    this.statusText = statusText;\n    if (response) {\n      this.response = response;\n    }\n  }\n\n  static fromResponse(response: Response) {\n    return new HttpError(\n      response.url,\n      response.status,\n      response.statusText,\n      response,\n    );\n  }\n\n  static fromRequestError(input: RequestInfo, error: unknown) {\n    if (error instanceof TypeError) {\n      let url: string;\n      if (typeof input === \"string\") {\n        url = input;\n      } else {\n        url = input.url;\n      }\n      return new HttpError(url, 0, \"Network or CORS error\");\n    }\n    return error;\n  }\n}\n\nconst maxAttempts = 32;\nconst minDelayMilliseconds = 500;\nconst maxDelayMilliseconds = 10000;\n\nexport function pickDelay(attemptNumber: number): number {\n  // If `attemptNumber == 0`, delay is a random number of milliseconds between\n  // `[minDelayMilliseconds, minDelayMilliseconds*2]`.  The lower and upper bounds of the interval\n  // double with each successive attempt, up to the limit of\n  // `[maxDelayMilliseconds/2,maxDelayMilliseconds]`.\n  return (\n    Math.min(\n      2 ** attemptNumber * minDelayMilliseconds,\n      maxDelayMilliseconds / 2,\n    ) *\n    (1 + Math.random())\n  );\n}\n\n/**\n * Issues a `fetch` request.\n *\n * If the request fails due to an HTTP status outside `[200, 300)`, throws an `HttpError`.  If the\n * request fails due to a network or CORS restriction, throws an `HttpError` with a `status` of `0`.\n *\n * If the request fails due to a transient error (429, 503, 504), retry.\n */\nexport async function fetchOk(\n  input: RequestInfo,\n  init?: RequestInit,\n): Promise<Response> {\n  for (let requestAttempt = 0; ; ) {\n    if (init?.signal?.aborted) {\n      throw CANCELED;\n    }\n    let response: Response;\n    try {\n      response = await fetch(input, init);\n    } catch (error) {\n      throw HttpError.fromRequestError(input, error);\n    }\n    if (!response.ok) {\n      const { status } = response;\n      if (status === 429 || status === 503 || status === 504) {\n        // 429: Too Many Requests.  Retry.\n        // 503: Service unavailable.  Retry.\n        // 504: Gateway timeout.  Can occur if the server takes too long to reply.  Retry.\n        if (++requestAttempt !== maxAttempts) {\n          await new Promise((resolve) =>\n            setTimeout(resolve, pickDelay(requestAttempt - 1)),\n          );\n          continue;\n        }\n      }\n      throw HttpError.fromResponse(response);\n    }\n    return response;\n  }\n}\n\nexport function responseArrayBuffer(response: Response): Promise<ArrayBuffer> {\n  return response.arrayBuffer();\n}\n\nexport function responseJson(response: Response): Promise<any> {\n  return response.json();\n}\n\nexport type ResponseTransform<T> = (response: Response) => Promise<T>;\n\n/**\n * Issues a `fetch` request in the same way as `fetchOk`, and returns the result of the promise\n * returned by `transformResponse`.\n *\n * Additionally, the request may be cancelled through `cancellationToken`.\n *\n * The `transformResponse` function should not do anything with the `Response` object after its\n * result becomes ready; otherwise, cancellation may not work as expected.\n */\nexport async function cancellableFetchOk<T>(\n  input: RequestInfo,\n  init: RequestInit,\n  transformResponse: ResponseTransform<T>,\n  cancellationToken: CancellationToken = uncancelableToken,\n): Promise<T> {\n  if (cancellationToken === uncancelableToken) {\n    const response = await fetchOk(input, init);\n    return await transformResponse(response);\n  }\n  const abortController = new AbortController();\n  const unregisterCancellation = cancellationToken.add(() =>\n    abortController.abort(),\n  );\n  try {\n    const response = await fetchOk(input, {\n      ...init,\n      signal: abortController.signal,\n    });\n    return await transformResponse(response);\n  } finally {\n    unregisterCancellation();\n  }\n}\n\nconst tempUint64 = new Uint64();\n\nexport function getByteRangeHeader(\n  startOffset: Uint64 | number,\n  endOffset: Uint64 | number,\n) {\n  let endOffsetStr: string;\n  if (typeof endOffset === \"number\") {\n    endOffsetStr = `${endOffset - 1}`;\n  } else {\n    Uint64.decrement(tempUint64, endOffset);\n    endOffsetStr = tempUint64.toString();\n  }\n  return { Range: `bytes=${startOffset}-${endOffsetStr}` };\n}\n\nexport function parseUrl(url: string): {\n  protocol: string;\n  host: string;\n  path: string;\n} {\n  const urlProtocolPattern = /^([^:/]+):\\/\\/([^/]+)((?:\\/.*)?)$/;\n  const match = url.match(urlProtocolPattern);\n  if (match === null) {\n    throw new Error(`Invalid URL: ${JSON.stringify(url)}`);\n  }\n  return { protocol: match[1], host: match[2], path: match[3] };\n}\n\nexport function isNotFoundError(e: any) {\n  if (!(e instanceof HttpError)) return false;\n  // Treat CORS errors (0) or 403 as not found.  S3 returns 403 if the file does not exist because\n  // permissions are per-file.\n  return e.status === 0 || e.status === 403 || e.status === 404;\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { WritableArrayLike } from \"#src/util/array.js\";\nimport { vec3 } from \"#src/util/geom.js\";\n\nexport function verifyFloat(obj: any): number {\n  const t = typeof obj;\n  if (t === \"number\" || t === \"string\") {\n    const x = parseFloat(\"\" + obj);\n    if (!Number.isNaN(x)) {\n      return x;\n    }\n  }\n  throw new Error(\n    `Expected floating-point number, but received: ${JSON.stringify(obj)}.`,\n  );\n}\n\nexport function verifyFiniteFloat(obj: any): number {\n  const x = verifyFloat(obj);\n  if (Number.isFinite(x)) {\n    return x;\n  }\n  throw new Error(`Expected finite floating-point number, but received: ${x}.`);\n}\n\nexport function verifyFiniteNonNegativeFloat(obj: any): number {\n  const x = verifyFloat(obj);\n  if (Number.isFinite(x) && x >= 0) {\n    return x;\n  }\n  throw new Error(\n    `Expected finite non-negative floating-point number, but received: ${x}.`,\n  );\n}\n\nexport function verifyFinitePositiveFloat(obj: any): number {\n  const x = verifyFiniteFloat(obj);\n  if (x > 0) {\n    return x;\n  }\n  throw new Error(\n    `Expected positive finite floating-point number, but received: ${x}.`,\n  );\n}\n\nexport function makeVerifyNumberInInterval(minValue: number, maxValue: number) {\n  return (obj: any) => {\n    const x = verifyFloat(obj);\n    if (x >= minValue && x <= maxValue) {\n      return x;\n    }\n    throw new Error(\n      `Expected floating-point number in range [${minValue}, ${maxValue}], but received: ${x}.`,\n    );\n  };\n}\n\nexport function parseXYZ<A extends WritableArrayLike<number>>(\n  out: A,\n  obj: any,\n  validator: (x: any) => number = verifyFloat,\n): A {\n  verifyObject(obj);\n  out[0] = out[1] = out[2] = 0;\n  for (const key of Object.keys(obj)) {\n    switch (key) {\n      case \"x\":\n        out[0] = validator(obj[key]);\n        break;\n      case \"y\":\n        out[1] = validator(obj[key]);\n        break;\n      case \"z\":\n        out[2] = validator(obj[key]);\n        break;\n      default:\n        throw new Error(\n          `Expected object to have keys ['x', 'y', 'z'], but received: ${JSON.stringify(\n            obj,\n          )}.`,\n        );\n    }\n  }\n  return out;\n}\n\nexport function parseFiniteVec<U extends WritableArrayLike<number>>(\n  out: U,\n  obj: any[],\n) {\n  const length = out.length;\n  if (!Array.isArray(obj) || obj.length !== length) {\n    throw new Error(\"Incompatible sizes\");\n  }\n\n  for (let i = 0; i < length; ++i) {\n    if (!Number.isFinite(parseFloat(obj[i]))) {\n      throw new Error(\"Non-finite value.\");\n    }\n  }\n  for (let i = 0; i < length; ++i) {\n    out[i] = parseFloat(obj[i]);\n  }\n  return out;\n}\n\nexport function parseIntVec<U extends WritableArrayLike<number>>(\n  out: U,\n  obj: any,\n) {\n  const length = out.length;\n  if (!Array.isArray(obj) || obj.length !== length) {\n    throw new Error(\"Incompatible sizes.\");\n  }\n\n  for (let i = 0; i < length; ++i) {\n    const val = parseInt(obj[i], undefined);\n    if (!Number.isInteger(val)) {\n      throw new Error(\"Non-integer value.\");\n    }\n  }\n\n  for (let i = 0; i < length; ++i) {\n    out[i] = parseInt(obj[i], undefined);\n  }\n  return out;\n}\n\n/**\n * Returns a JSON representation of x, with object keys sorted to ensure a\n * consistent result.\n */\nexport function stableStringify(x: any) {\n  if (typeof x === \"object\") {\n    if (x === null) {\n      return \"null\";\n    }\n    if (Array.isArray(x)) {\n      let s = \"[\";\n      const size = x.length;\n      let i = 0;\n      if (i < size) {\n        s += stableStringify(x[i]);\n        while (++i < size) {\n          s += \",\";\n          s += stableStringify(x[i]);\n        }\n      }\n      s += \"]\";\n      return s;\n    }\n    let s = \"{\";\n    const keys = Object.keys(x).sort();\n    let i = 0;\n    const size = keys.length;\n    if (i < size) {\n      let key = keys[i];\n      s += JSON.stringify(key);\n      s += \":\";\n      s += stableStringify(x[key]);\n      while (++i < size) {\n        s += \",\";\n        key = keys[i];\n        s += JSON.stringify(key);\n        s += \":\";\n        s += stableStringify(x[key]);\n      }\n    }\n    s += \"}\";\n    return s;\n  }\n  return JSON.stringify(x);\n}\n\nfunction swapQuotes(x: string) {\n  return x.replace(/['\"]/g, (s) => {\n    return s === '\"' ? \"'\" : '\"';\n  });\n}\n\nexport function urlSafeStringifyString(x: string) {\n  return swapQuotes(JSON.stringify(swapQuotes(x)));\n}\n\nconst URL_SAFE_COMMA = \"_\";\n\nexport function urlSafeStringify(x: any): string {\n  if (typeof x === \"object\") {\n    if (x === null) {\n      return \"null\";\n    }\n    const toJSON = x.toJSON;\n    if (typeof toJSON === \"function\") {\n      return urlSafeStringify(toJSON.call(x));\n    }\n    if (Array.isArray(x)) {\n      let s = \"[\";\n      const size = x.length;\n      let i = 0;\n      if (i < size) {\n        s += urlSafeStringify(x[i]);\n        while (++i < size) {\n          s += URL_SAFE_COMMA;\n          s += urlSafeStringify(x[i]);\n        }\n      }\n      s += \"]\";\n      return s;\n    }\n    let s = \"{\";\n    const keys = Object.keys(x);\n    let first = true;\n    for (const key of keys) {\n      const value = x[key];\n      if (value === undefined) {\n        continue;\n      }\n      const valueString = urlSafeStringify(value);\n      if (!valueString) {\n        continue;\n      }\n      if (!first) {\n        s += URL_SAFE_COMMA;\n      } else {\n        first = false;\n      }\n      s += urlSafeStringifyString(key);\n      s += \":\";\n      s += valueString;\n    }\n    s += \"}\";\n    return s;\n  }\n  if (typeof x === \"string\") {\n    return urlSafeStringifyString(x);\n  }\n  return JSON.stringify(x);\n}\n\nconst SINGLE_QUOTE_STRING_PATTERN = /('(?:[^'\\\\]|(?:\\\\.))*')/;\nconst DOUBLE_QUOTE_STRING_PATTERN = /(\"(?:[^\"\\\\]|(?:\\\\.))*\")/;\nconst SINGLE_OR_DOUBLE_QUOTE_STRING_PATTERN = new RegExp(\n  `${SINGLE_QUOTE_STRING_PATTERN.source}|${DOUBLE_QUOTE_STRING_PATTERN.source}`,\n);\nconst DOUBLE_OR_SINGLE_QUOTE_STRING_PATTERN = new RegExp(\n  `${DOUBLE_QUOTE_STRING_PATTERN.source}|${SINGLE_QUOTE_STRING_PATTERN.source}`,\n);\n\nconst DOUBLE_QUOTE_PATTERN = /^((?:[^\"'\\\\]|(?:\\\\[^']))*)(\"|\\\\')/;\nconst SINGLE_QUOTE_PATTERN = /^((?:[^\"'\\\\]|(?:\\\\.))*)'/;\n\nfunction convertStringLiteral(\n  x: string,\n  quoteInitial: string,\n  quoteReplace: string,\n  quoteSearch: RegExp,\n) {\n  if (\n    x.length >= 2 &&\n    x.charAt(0) === quoteInitial &&\n    x.charAt(x.length - 1) === quoteInitial\n  ) {\n    let inner = x.substr(1, x.length - 2);\n    let s = quoteReplace;\n    while (inner.length > 0) {\n      const m = inner.match(quoteSearch);\n      if (m === null) {\n        s += inner;\n        break;\n      }\n      s += m[1];\n      if (m[2] === quoteReplace) {\n        // We received a single unescaped quoteReplace character.\n        s += \"\\\\\";\n        s += quoteReplace;\n      } else {\n        // We received \"\\\\\" + quoteInitial.  We need to remove the escaping.\n        s += quoteInitial;\n      }\n      inner = inner.substr(m.index! + m[0].length);\n    }\n    s += quoteReplace;\n    return s;\n  }\n  return x;\n}\n\n/**\n * Converts a string literal delimited by either single or double quotes into a string literal\n * delimited by double quotes.\n */\nexport function normalizeStringLiteral(x: string) {\n  return convertStringLiteral(x, \"'\", '\"', DOUBLE_QUOTE_PATTERN);\n}\n\n// quoteChar: des\nfunction convertJsonHelper(\n  x: string,\n  desiredCommaChar: string,\n  desiredQuoteChar: string,\n) {\n  const commaSearch = /[&_,]/g;\n  let quoteInitial: string;\n  let quoteSearch: RegExp;\n  let stringLiteralPattern: RegExp;\n  if (desiredQuoteChar === '\"') {\n    quoteInitial = \"'\";\n    quoteSearch = DOUBLE_QUOTE_PATTERN;\n    stringLiteralPattern = SINGLE_OR_DOUBLE_QUOTE_STRING_PATTERN;\n  } else {\n    quoteInitial = '\"';\n    quoteSearch = SINGLE_QUOTE_PATTERN;\n    stringLiteralPattern = DOUBLE_OR_SINGLE_QUOTE_STRING_PATTERN;\n  }\n  let s = \"\";\n  while (x.length > 0) {\n    const m = x.match(stringLiteralPattern);\n    let before: string;\n    let replacement: string;\n    if (m === null) {\n      before = x;\n      x = \"\";\n      replacement = \"\";\n    } else {\n      before = x.substr(0, m.index);\n      x = x.substr(m.index! + m[0].length);\n      const originalString = m[1];\n      if (originalString !== undefined) {\n        replacement = convertStringLiteral(\n          originalString,\n          quoteInitial,\n          desiredQuoteChar,\n          quoteSearch,\n        );\n      } else {\n        replacement = m[2];\n      }\n    }\n    s += before.replace(commaSearch, desiredCommaChar);\n    s += replacement;\n  }\n  return s;\n}\n\nexport function urlSafeToJSON(x: string) {\n  return convertJsonHelper(x, \",\", '\"');\n}\n\nexport function jsonToUrlSafe(x: string) {\n  return convertJsonHelper(x, \"_\", \"'\");\n}\n\nexport function urlSafeParse(x: string) {\n  return JSON.parse(urlSafeToJSON(x));\n}\n\n// Converts a string containing a Python literal into a string containing an equivalent JSON\n// literal.\nexport function pythonLiteralToJSON(x: string) {\n  let s = \"\";\n  while (x.length > 0) {\n    const m = x.match(SINGLE_OR_DOUBLE_QUOTE_STRING_PATTERN);\n    let before: string;\n    let replacement: string;\n    if (m === null) {\n      before = x;\n      x = \"\";\n      replacement = \"\";\n    } else {\n      before = x.substr(0, m.index);\n      x = x.substr(m.index! + m[0].length);\n      const singleQuoteString = m[1];\n      if (singleQuoteString !== undefined) {\n        replacement = normalizeStringLiteral(singleQuoteString);\n      } else {\n        replacement = m[2];\n      }\n    }\n    s += before\n      .replace(/\\(/g, \"[\")\n      .replace(/\\)/g, \"]\")\n      .replace(\"True\", \"true\")\n      .replace(\"False\", \"false\")\n      .replace(/,\\s*([}\\]])/g, \"$1\");\n    s += replacement;\n  }\n  return s;\n}\n\n// Converts a string containing a Python literal into an equivalent JavaScript value.\nexport function pythonLiteralParse(x: string) {\n  return JSON.parse(pythonLiteralToJSON(x));\n}\n\nexport function expectArray(x: unknown, length?: number): any[] {\n  if (!Array.isArray(x)) {\n    throw new Error(`Expected array, but received: ${JSON.stringify(x)}.`);\n  }\n  if (length !== undefined && x.length !== length) {\n    throw new Error(\n      `Expected array of length ${length}, but received: ${JSON.stringify(x)}.`,\n    );\n  }\n  return x;\n}\n\n// Checks that `x' is an array, maps each element by parseElement.\nexport function parseArray<T>(\n  x: any,\n  parseElement: (x: any, index: number) => T,\n): T[] {\n  if (!Array.isArray(x)) {\n    throw new Error(`Expected array, but received: ${JSON.stringify(x)}.`);\n  }\n  return (<any[]>x).map(parseElement);\n}\n\nexport function parseFixedLengthArray<T, U extends WritableArrayLike<T>>(\n  out: U,\n  obj: any,\n  parseElement: (x: any, index: number) => T,\n): U {\n  const length = out.length;\n  if (!Array.isArray(obj) || obj.length !== length) {\n    throw new Error(\n      `Expected length ${length} array, but received: ${JSON.stringify(obj)}.`,\n    );\n  }\n  for (let i = 0; i < length; ++i) {\n    out[i] = parseElement(obj[i], i);\n  }\n  return out;\n}\n\nexport function verifyObject(obj: any) {\n  if (typeof obj !== \"object\" || obj == null || Array.isArray(obj)) {\n    throw new Error(\n      `Expected JSON object, but received: ${JSON.stringify(obj)}.`,\n    );\n  }\n  return obj;\n}\n\nexport function verifyInt(obj: any) {\n  const result = parseInt(obj, 10);\n  if (!Number.isInteger(result)) {\n    throw new Error(`Expected integer, but received: ${JSON.stringify(obj)}.`);\n  }\n  return result;\n}\n\nexport function verifyPositiveInt(obj: any) {\n  const result = verifyInt(obj);\n  if (result <= 0) {\n    throw new Error(`Expected positive integer, but received: ${result}.`);\n  }\n  return result;\n}\n\nexport function verifyNonnegativeInt(obj: any) {\n  const result = verifyInt(obj);\n  if (result < 0) {\n    throw new Error(`Expected non-negative integer, but received: ${result}.`);\n  }\n  return result;\n}\n\nexport function verifyMapKey<U>(obj: any, map: Map<string, U>) {\n  const result = map.get(obj);\n  if (result === undefined) {\n    throw new Error(\n      `Expected one of ${JSON.stringify(Array.from(map.keys()))}, ` +\n        `but received: ${JSON.stringify(obj)}.`,\n    );\n  }\n  return result;\n}\n\nexport function verifyString(obj: any) {\n  if (typeof obj !== \"string\") {\n    throw new Error(`Expected string, but received: ${JSON.stringify(obj)}.`);\n  }\n  return obj;\n}\n\nexport function verifyOptionalString(obj: any): string | undefined {\n  if (obj === undefined) {\n    return undefined;\n  }\n  return verifyString(obj);\n}\n\nexport function verifyOptionalInt(obj: any): number | undefined {\n  if (obj === undefined) {\n    return undefined;\n  }\n  return verifyInt(obj);\n}\n\nexport function verifyOptionalBoolean(obj: any): boolean | undefined {\n  if (obj === undefined) {\n    return undefined;\n  }\n  if (typeof obj === \"boolean\") {\n    return obj;\n  }\n  if (obj === \"true\") {\n    return true;\n  }\n  if (obj === \"false\") {\n    return false;\n  }\n  throw new Error(\n    `Expected string or boolean but received: ${JSON.stringify(obj)}`,\n  );\n}\n\nexport function valueOr<T>(value: T | undefined, defaultValue: T) {\n  return value === undefined ? defaultValue : value;\n}\n\nexport function verifyObjectProperty<T>(\n  obj: any,\n  propertyName: string,\n  validator: (value: any) => T,\n): T {\n  const value = Object.prototype.hasOwnProperty.call(obj, propertyName)\n    ? obj[propertyName]\n    : undefined;\n  try {\n    return validator(value);\n  } catch (parseError) {\n    throw new Error(\n      `Error parsing ${JSON.stringify(propertyName)} property: ${\n        parseError.message\n      }`,\n    );\n  }\n}\n\nexport function verifyOptionalObjectProperty<T>(\n  obj: any,\n  propertyName: string,\n  validator: (value: any) => T,\n): T | undefined;\n\nexport function verifyOptionalObjectProperty<T>(\n  obj: any,\n  propertyName: string,\n  validator: (value: any) => T,\n  defaultValue: T,\n): T;\n\nexport function verifyOptionalObjectProperty<T>(\n  obj: any,\n  propertyName: string,\n  validator: (value: any) => T,\n  defaultValue?: any,\n) {\n  return verifyObjectProperty(obj, propertyName, (x) =>\n    x === undefined ? defaultValue : validator(x),\n  );\n}\n\nexport function verifyObjectAsMap<T>(\n  obj: any,\n  validator: (value: any) => T,\n): Map<string, T> {\n  verifyObject(obj);\n  const map = new Map<string, T>();\n  for (const key of Object.keys(obj)) {\n    try {\n      map.set(key, validator(obj[key]));\n    } catch (parseError) {\n      throw new Error(\n        `Error parsing value associated with key ${JSON.stringify(key)}: ${\n          parseError.message\n        }`,\n      );\n    }\n  }\n  return map;\n}\n\nexport function verifyFloat01(obj: any): number {\n  if (typeof obj !== \"number\" || !Number.isFinite(obj) || obj < 0 || obj > 1) {\n    throw new Error(\n      `Expected floating point number in [0,1], but received: ${JSON.stringify(\n        obj,\n      )}.`,\n    );\n  }\n  return obj;\n}\n\n/**\n * The query string parameters may either be specified in the usual\n * 'name=value&otherName=otherValue' form or as (optionally urlSafe) JSON: '{\"name\":\"value\"}`.\n */\nexport function parseQueryStringParameters(queryString: string) {\n  if (queryString === \"\") {\n    return {};\n  }\n  if (queryString.startsWith(\"{\")) {\n    return urlSafeParse(queryString);\n  }\n  const result: any = {};\n  const parts = queryString.split(/[&;]/);\n  for (const part of parts) {\n    const m = part.match(/^([^=&;]+)=([^&;]*)$/);\n    if (m === null) {\n      throw new Error(`Invalid query string part: ${JSON.stringify(part)}.`);\n    }\n    result[m[1]] = decodeURIComponent(m[2]);\n  }\n  return result;\n}\n\nexport function unparseQueryStringParameters(parameters: any) {\n  if (parameters === undefined) return \"\";\n  const keys = Object.keys(parameters);\n  if (keys.length === 0) return \"\";\n  if (keys.some((key) => typeof parameters[key] !== \"string\")) {\n    return JSON.stringify(parameters);\n  }\n  return keys\n    .map(\n      (key) =>\n        `${encodeURIComponent(key)}=${encodeURIComponent(parameters[key])}`,\n    )\n    .join(\"&\");\n}\n\n/**\n * Verifies that `obj' is a string that, when converted to uppercase, matches a string property of\n * `enumType`.\n *\n * @returns The corresponding numerical value.\n */\nexport function verifyEnumString<T extends number>(\n  obj: any,\n  enumType: { [x: string]: T | string },\n  pattern: RegExp = /^[a-zA-Z]/,\n): T {\n  if (typeof obj === \"string\" && obj.match(pattern) !== null) {\n    const objUpperCase = obj.toUpperCase();\n    if (Object.prototype.hasOwnProperty.call(enumType, objUpperCase)) {\n      return enumType[objUpperCase] as T;\n    }\n  }\n  throw new Error(`Invalid enum value: ${JSON.stringify(obj)}.`);\n}\n\nexport function verify3dVec(obj: any) {\n  return parseFixedLengthArray(vec3.create(), obj, verifyFiniteFloat);\n}\n\nexport function verify3dScale(obj: any) {\n  return parseFixedLengthArray(vec3.create(), obj, verifyFinitePositiveFloat);\n}\n\nexport function verify3dDimensions(obj: any) {\n  return parseFixedLengthArray(vec3.create(), obj, verifyPositiveInt);\n}\n\nexport function verifyStringArray(a: any) {\n  if (!Array.isArray(a)) {\n    throw new Error(`Expected array, received: ${JSON.stringify(a)}.`);\n  }\n  for (const x of a) {\n    if (typeof x !== \"string\") {\n      throw new Error(`Expected string, received: ${JSON.stringify(x)}.`);\n    }\n  }\n  return <string[]>a;\n}\n\nexport function verifyIntegerArray(a: unknown) {\n  if (!Array.isArray(a)) {\n    throw new Error(`Expected array, received: ${JSON.stringify(a)}.`);\n  }\n  for (const x of a) {\n    if (!Number.isInteger(x)) {\n      throw new Error(`Expected integer, received: ${JSON.stringify(x)}.`);\n    }\n  }\n  return <number[]>a;\n}\n\nexport function verifyFloatArray(a: unknown) {\n  if (!Array.isArray(a)) {\n    throw new Error(`Expected array, received: ${JSON.stringify(a)}.`);\n  }\n  for (const x of a) {\n    verifyFloat(x);\n  }\n  return <number[]>a;\n}\n\nexport function verifyBoolean(x: any) {\n  if (typeof x !== \"boolean\") {\n    throw new Error(`Expected boolean, received: ${JSON.stringify(x)}`);\n  }\n  return x;\n}\n\n// If `x` is an empty object/array/string, returns undefined.  Otherwise returns `x`.\nexport function emptyToUndefined(x: any) {\n  for (const _ in x) {\n    return x;\n  }\n  return undefined;\n}\n\nexport function verifyConstant<T>(actual: unknown, expected: T) {\n  if (actual !== expected) {\n    throw new Error(\n      `Expected ${JSON.stringify(expected)}, but received: ${JSON.stringify(\n        actual,\n      )}`,\n    );\n  }\n  return expected;\n}\n\nexport function verifyOptionalFixedLengthArrayOfStringOrNull(\n  obj: unknown,\n  rank: number,\n) {\n  if (obj === undefined) {\n    const array = new Array<string | null>(rank);\n    array.fill(null);\n    return array;\n  }\n  return parseFixedLengthArray(new Array<string | null>(rank), obj, (value) => {\n    if (value !== null && typeof value !== \"string\") {\n      throw new Error(\n        `Expected string or null, but received: ${JSON.stringify(name)}`,\n      );\n    }\n    return value;\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { TypedArray } from \"#src/util/array.js\";\n\n/**\n * Sets the `m * k` matrix `c` to the product of `m * n` matrix `a` and `n * k` matrix `b`.\n *\n * `a`, `b` and `c` are column-major with column strides of `lda`, `ldb`, and `ldc`, respectively.\n * `c` must not overlap `a` or `b`.\n */\nexport function multiply<T extends TypedArray>(\n  c: T,\n  ldc: number,\n  a: T,\n  lda: number,\n  b: T,\n  ldb: number,\n  m: number,\n  n: number,\n  k: number,\n): T {\n  for (let mIndex = 0; mIndex < m; ++mIndex) {\n    for (let kIndex = 0; kIndex < k; ++kIndex) {\n      let sum = 0;\n      for (let nIndex = 0; nIndex < n; ++nIndex) {\n        sum += a[mIndex + lda * nIndex] * b[nIndex + ldb * kIndex];\n      }\n      c[mIndex + ldc * kIndex] = sum;\n    }\n  }\n  return c;\n}\n\nexport function identity<T extends TypedArray>(\n  a: T,\n  lda: number,\n  n: number,\n): T {\n  for (let i = 0; i < n; ++i) {\n    const start = lda * i;\n    a.fill(0, start, start + n);\n    a[start + i] = 1;\n  }\n  return a;\n}\n\nexport function createIdentity<T extends TypedArray>(\n  c: { new (n: number): T },\n  rows: number,\n  cols: number = rows,\n): T {\n  return identity(new c(rows * cols), rows, Math.min(rows, cols));\n}\n\nexport function createHomogeneousScaleMatrix<T extends TypedArray>(\n  c: { new (length: number): T },\n  scales: ArrayLike<number>,\n  square = true,\n): T {\n  const rank = scales.length;\n  const stride = square ? rank + 1 : rank;\n  const m = new c(stride * (rank + 1));\n  if (square) {\n    m[m.length - 1] = 1;\n  }\n  for (let i = 0; i < rank; ++i) {\n    m[(stride + 1) * i] = scales[i];\n  }\n  return m;\n}\n\nexport function createHomogeneousTranslationMatrix<T extends TypedArray>(\n  c: { new (length: number): T },\n  translation: ArrayLike<number>,\n  square = true,\n): T {\n  const rank = translation.length;\n  const stride = square ? rank + 1 : rank;\n  const m = createIdentity(c, stride, rank + 1);\n  for (let i = 0; i < rank; ++i) {\n    m[stride * rank + i] = translation[i];\n  }\n  return m;\n}\n\nexport function isIdentity<T extends TypedArray>(a: T, lda: number, n: number) {\n  for (let i = 0; i < n; ++i) {\n    for (let j = 0; j < n; ++j) {\n      if (a[i * lda + j] !== (i === j ? 1 : 0)) return false;\n    }\n  }\n  return true;\n}\n\nexport function copy<T extends TypedArray>(\n  b: T,\n  ldb: number,\n  a: T,\n  lda: number,\n  m: number,\n  n: number,\n): T {\n  for (let col = 0; col < n; ++col) {\n    const aOff = col * lda;\n    const bOff = col * ldb;\n    for (let row = 0; row < m; ++row) {\n      b[bOff + row] = a[aOff + row];\n    }\n  }\n  return b;\n}\n\nexport function extendHomogeneousTransform<T extends TypedArray>(\n  b: T,\n  bRank: number,\n  a: T,\n  aRank: number,\n) {\n  copy(b, bRank + 1, a, aRank + 1, aRank, aRank);\n  for (let i = 0; i < aRank; ++i) {\n    b[(bRank + 1) * bRank + i] = a[(aRank + 1) * aRank + i];\n  }\n  b[b.length - 1] = 1;\n  for (let i = aRank; i < bRank; ++i) {\n    b[(bRank + 1) * i + i] = 1;\n  }\n  return b;\n}\n\nlet pivots: Uint32Array | undefined;\n\n/**\n * Computes the inverse of a square matrix in place, and returns the determinant.\n */\nexport function inverseInplace<T extends TypedArray>(\n  a: T,\n  lda: number,\n  n: number,\n): number {\n  let determinant = 1;\n  // Use Gauss-Jordan elimination with partial pivoting to compute inverse.\n  if (pivots === undefined || pivots.length < n) {\n    pivots = new Uint32Array(n);\n  }\n  for (let i = 0; i < n; ++i) {\n    pivots[i] = i;\n  }\n  for (let k = 0; k < n; ++k) {\n    const kColOff = lda * k;\n    // Find best pivot (row >= `k` with maximum-magnitude element in column `k`).\n    let pivotRow = k;\n    {\n      let bestPivot = Math.abs(a[kColOff + k]);\n      for (let row = k + 1; row < n; ++row) {\n        const mag = Math.abs(a[kColOff + row]);\n        if (mag > bestPivot) {\n          bestPivot = mag;\n          pivotRow = row;\n        }\n      }\n    }\n    // Swap rows `k` and `pivotRow`.\n    if (k !== pivotRow) {\n      determinant *= -1;\n      for (let col = 0; col < n; ++col) {\n        const off = lda * col;\n        const temp = a[off + k];\n        a[off + k] = a[off + pivotRow];\n        a[off + pivotRow] = temp;\n      }\n\n      // Swap `pivots[k]` with `pivots[pivotRow]`.\n      {\n        const tempPivot = pivots[k];\n        pivots[k] = pivots[pivotRow];\n        pivots[pivotRow] = tempPivot;\n      }\n    }\n    // Eliminate.\n    const pivotValue = a[kColOff + k];\n    const pivotInv = 1.0 / pivotValue;\n\n    // Divide row `k` by the pivot element.\n    determinant *= pivotValue;\n    for (let j = 0; j < n; ++j) {\n      a[lda * j + k] *= pivotInv;\n    }\n    // Convert `a(k, k)` to contain the inverse element.\n    a[kColOff + k] = pivotInv;\n\n    // Subtract a suitable multiple of row `k` from all other rows to ensure column `k` becomes `0`.\n    for (let row = 0; row < n; ++row) {\n      if (row === k) continue;\n      const factor = -a[lda * k + row];\n      for (let j = 0; j < n; ++j) {\n        const jColOff = lda * j;\n        a[jColOff + row] += factor * a[jColOff + k];\n      }\n      // Convert element in column `k` to contain the inverse element.\n      a[lda * k + row] = factor * pivotInv;\n    }\n  }\n  // Permute columns back to correct order.\n  for (let col = 0; col < n; ++col) {\n    let targetCol = pivots[col];\n    while (targetCol !== col) {\n      const colOff = lda * col;\n      const targetColOff = lda * targetCol;\n      for (let i = 0; i < n; ++i) {\n        const off1 = colOff + i;\n        const off2 = targetColOff + i;\n        const temp = a[off1];\n        a[off1] = a[off2];\n        a[off2] = temp;\n      }\n      const temp = (pivots[col] = pivots[targetCol]);\n      pivots[targetCol] = targetCol;\n      targetCol = temp;\n    }\n  }\n  return determinant;\n}\n\n/**\n * Computes the inverse and returns the determinant.\n */\nexport function inverse<T extends TypedArray>(\n  b: T,\n  ldb: number,\n  a: T,\n  lda: number,\n  n: number,\n): number {\n  copy(b, ldb, a, lda, n, n);\n  return inverseInplace(b, ldb, n);\n}\n\nexport function equal<T extends TypedArray>(\n  a: T,\n  lda: number,\n  b: T,\n  ldb: number,\n  m: number,\n  n: number,\n) {\n  for (let j = 0; j < n; ++j) {\n    const offA = lda * j;\n    const offB = ldb * j;\n    for (let i = 0; i < m; ++i) {\n      if (a[offA + i] !== b[offB + i]) return false;\n    }\n  }\n  return true;\n}\n\nexport function transpose<T extends TypedArray>(\n  b: T,\n  ldb: number,\n  a: T,\n  lda: number,\n  m: number,\n  n: number,\n) {\n  for (let i = 0; i < m; ++i) {\n    for (let j = 0; j < n; ++j) {\n      b[j + i * ldb] = a[i + j * lda];\n    }\n  }\n  return b;\n}\n\nexport function transformPoint<\n  Out extends TypedArray,\n  Matrix extends TypedArray,\n  Vector extends TypedArray,\n>(out: Out, mat: Matrix, matrixStride: number, vec: Vector, rank: number): Out {\n  for (let i = 0; i < rank; ++i) {\n    let sum = mat[matrixStride * rank + i];\n    for (let j = 0; j < rank; ++j) {\n      sum += mat[matrixStride * j + i] * vec[j];\n    }\n    out[i] = sum;\n  }\n  return out;\n}\n\nexport function transformVector<\n  Out extends TypedArray,\n  Matrix extends TypedArray,\n  Vector extends TypedArray,\n>(out: Out, mat: Matrix, matrixStride: number, vec: Vector, rank: number): Out {\n  for (let i = 0; i < rank; ++i) {\n    let sum = 0;\n    for (let j = 0; j < rank; ++j) {\n      sum += mat[matrixStride * j + i] * vec[j];\n    }\n    out[i] = sum;\n  }\n  return out;\n}\n\nexport function permuteRows<\n  Output extends TypedArray,\n  Input extends TypedArray,\n>(\n  output: Output,\n  outputStride: number,\n  input: Input,\n  inputStride: number,\n  outputToInputRow: ReadonlyArray<number>,\n  cols: number,\n) {\n  const rows = outputToInputRow.length;\n  for (let outRow = 0; outRow < rows; ++outRow) {\n    const inRow = outputToInputRow[outRow];\n    for (let col = 0; col < cols; ++col) {\n      output[col * outputStride + outRow] = input[col * inputStride + inRow];\n    }\n  }\n  return output;\n}\n\nexport function permuteCols<\n  Output extends TypedArray,\n  Input extends TypedArray,\n>(\n  output: Output,\n  outputStride: number,\n  input: Input,\n  inputStride: number,\n  outputToInputCol: ReadonlyArray<number>,\n  rows: number,\n) {\n  const cols = outputToInputCol.length;\n  for (let outCol = 0; outCol < cols; ++outCol) {\n    const inCol = outputToInputCol[outCol];\n    for (let row = 0; row < rows; ++row) {\n      output[outCol * outputStride + row] = input[inCol * inputStride + row];\n    }\n  }\n  return output;\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Simple signal dispatch mechanism.\n */\n\n/**\n * This class provides a simple signal dispatch mechanism.  Handlers can be added, and then the\n * `dispatch` method calls all of them.\n *\n * If specified, Callable should be an interface containing only a callable signature returning\n * void.  Due to limitations in TypeScript, any interface containing a callable signature will be\n * accepted by the compiler, but the resultant signature of `dispatch` will not be correct.\n */\nexport class Signal<Callable extends Function = () => void> {\n  private handlers = new Set<Callable>();\n\n  /**\n   * Count of number of times this signal has been dispatched.  This is incremented each time\n   * `dispatch` is called prior to invoking the handlers.\n   */\n  count = 0;\n\n  constructor() {\n    const obj = this;\n    this.dispatch = <Callable>(<Function>function (this: any) {\n      ++obj.count;\n      obj.handlers.forEach((handler) => {\n        // eslint-disable-next-line prefer-rest-params\n        handler.apply(this, arguments);\n      });\n    });\n  }\n\n  /**\n   * Add a handler function.  If `dispatch` is currently be called, then the new handler will be\n   * called before `dispatch` returns.\n   *\n   * @param handler The handler function to add.\n   *\n   * @return A function that unregisters the handler.\n   */\n  add(handler: Callable): () => boolean {\n    this.handlers.add(handler);\n    return () => {\n      return this.remove(handler);\n    };\n  }\n\n  /**\n   * Remove a handler function.  If `dispatch` is currently be called and the new handler has not\n   * yet been called, then it will not be called.\n   *\n   * @param handler Handler to remove.\n   * @return `true` if the handler was present, `false` otherwise.\n   */\n  remove(handler: Callable): boolean {\n    return this.handlers.delete(handler);\n  }\n\n  /**\n   * Invokes each handler function with the same parameters (including `this`) with which it is\n   * called.  Handlers are invoked in the order in which they were added.\n   */\n  dispatch: Callable;\n\n  /**\n   * Disposes of resources.  No methods, including `dispatch`, may be invoked afterwards.\n   */\n  dispose() {\n    this.handlers = <any>undefined;\n  }\n}\n\nexport function observeSignal(\n  callback: () => void,\n  ...signals: {\n    add(callback: () => void): void;\n    remove(callback: () => void): void;\n  }[]\n) {\n  callback();\n  for (let i = 0, count = signals.length; i < count; ++i) {\n    signals[i].add(callback);\n  }\n  return () => {\n    for (let i = 0, count = signals.length; i < count; ++i) {\n      signals[i].remove(callback);\n    }\n  };\n}\n\n/**\n * Simple specialization of Signal for the common case of a nullary handler signature.\n */\nexport class NullarySignal extends Signal<() => void> {}\n\n/**\n * Interface for a signal excluding the dispatch method.\n *\n * Unlike Signal, this interface is covariant in the type of Callable.\n */\nexport interface ReadonlySignal<Callable extends Function> {\n  readonly count: number;\n  add(handler: Callable): () => void;\n  remove(handler: Callable): boolean;\n}\n\nexport type NullaryReadonlySignal = ReadonlySignal<() => void>;\n\nexport const neverSignal: NullaryReadonlySignal = {\n  count: 0,\n  add(_handler: any) {\n    return () => {};\n  },\n  remove(_handler: any) {\n    return false;\n  },\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport {\n  CANCELED,\n  CancellationTokenSource,\n  makeCancelablePromise,\n  uncancelableToken,\n} from \"#src/util/cancellation.js\";\nimport { RefCounted } from \"#src/util/disposable.js\";\n\nexport type RPCHandler = (this: RPC, x: any) => void;\n\nexport type RpcId = number;\n\nconst IS_WORKER = !(typeof Window !== \"undefined\" && self instanceof Window);\n\nconst DEBUG = false;\n\nconst DEBUG_MESSAGES = false;\n\nconst PROMISE_RESPONSE_ID = \"rpc.promise.response\";\nconst PROMISE_CANCEL_ID = \"rpc.promise.cancel\";\nconst READY_ID = \"rpc.ready\";\n\nconst handlers = new Map<string, RPCHandler>();\n\nexport function registerRPC(key: string, handler: RPCHandler) {\n  handlers.set(key, handler);\n}\n\nexport type RPCPromise<T> = Promise<{ value: T; transfers?: any[] }>;\n\nexport class RPCError extends Error {\n  constructor(\n    public name: string,\n    public message: string,\n  ) {\n    super(message);\n  }\n}\n\nexport function registerPromiseRPC<T>(\n  key: string,\n  handler: (\n    this: RPC,\n    x: any,\n    cancellationToken: CancellationToken,\n  ) => RPCPromise<T>,\n) {\n  registerRPC(key, function (this: RPC, x: any) {\n    const id = <number>x.id;\n    const cancellationToken = new CancellationTokenSource();\n    const promise = handler.call(this, x, cancellationToken) as RPCPromise<T>;\n    this.set(id, { promise, cancellationToken });\n    promise.then(\n      ({ value, transfers }) => {\n        this.delete(id);\n        this.invoke(PROMISE_RESPONSE_ID, { id: id, value: value }, transfers);\n      },\n      (error) => {\n        this.delete(id);\n        this.invoke(PROMISE_RESPONSE_ID, {\n          id: id,\n          error: error.message,\n          errorName: error.name,\n        });\n      },\n    );\n  });\n}\n\nregisterRPC(PROMISE_CANCEL_ID, function (this: RPC, x: any) {\n  const id = <number>x.id;\n  const request = this.get(id);\n  if (request !== undefined) {\n    const { cancellationToken } = request;\n    cancellationToken.cancel();\n  }\n});\n\nregisterRPC(PROMISE_RESPONSE_ID, function (this: RPC, x: any) {\n  const id = <number>x.id;\n  const { resolve, reject } = this.get(id);\n  this.delete(id);\n  if (Object.prototype.hasOwnProperty.call(x, \"value\")) {\n    resolve(x.value);\n  } else {\n    const errorName = x.errorName;\n    if (errorName === CANCELED.name) {\n      reject(CANCELED);\n    } else {\n      reject(new RPCError(x.errorName, x.error));\n    }\n  }\n});\n\nregisterRPC(READY_ID, function (this: RPC, x: any) {\n  x;\n  this.onPeerReady();\n});\n\ninterface RPCTarget {\n  postMessage(message?: any, ports?: any): void;\n  onmessage: ((ev: MessageEvent) => any) | null;\n}\n\nconst INITIAL_RPC_ID = IS_WORKER ? -1 : 0;\n\nexport class RPC {\n  private objects = new Map<RpcId, any>();\n  private nextId: RpcId = INITIAL_RPC_ID;\n  private queue: { data: any; transfers?: any[] }[] | undefined;\n  constructor(\n    public target: RPCTarget,\n    waitUntilReady: boolean,\n  ) {\n    if (waitUntilReady) {\n      this.queue = [];\n    }\n    target.onmessage = (e) => {\n      const data = e.data;\n      if (DEBUG_MESSAGES) {\n        console.log(\"Received message\", data);\n      }\n      handlers.get(data.functionName)!.call(this, data);\n    };\n  }\n\n  sendReady() {\n    this.invoke(READY_ID, {});\n  }\n\n  onPeerReady() {\n    const { queue } = this;\n    if (queue === undefined) return;\n    this.queue = undefined;\n    for (const { data, transfers } of queue) {\n      this.target.postMessage(data, transfers);\n    }\n  }\n\n  get numObjects() {\n    return this.objects.size;\n  }\n\n  set(id: RpcId, value: any) {\n    this.objects.set(id, value);\n  }\n\n  delete(id: RpcId) {\n    this.objects.delete(id);\n  }\n  get(id: RpcId) {\n    return this.objects.get(id);\n  }\n  getRef<T extends SharedObject>(x: { id: RpcId; gen: number }): T {\n    const rpcId = x.id;\n    const obj = <T>this.get(rpcId);\n    obj.referencedGeneration = x.gen;\n    obj.addRef();\n    return obj;\n  }\n\n  getOptionalRef<T extends SharedObject>(x: {\n    id: RpcId;\n    gen: number;\n  }): T | undefined {\n    if (x === undefined) return undefined;\n    const rpcId = x.id;\n    const obj = this.get(rpcId) as T;\n    obj.referencedGeneration = x.gen;\n    obj.addRef();\n    return obj;\n  }\n\n  invoke(name: string, x: any, transfers?: any[]) {\n    x.functionName = name;\n    if (DEBUG_MESSAGES) {\n      console.trace(\"Sending message\", x);\n    }\n    const { queue } = this;\n    if (queue !== undefined) {\n      queue.push({ data: x, transfers });\n      return;\n    }\n    this.target.postMessage(x, transfers);\n  }\n\n  promiseInvoke<T>(\n    name: string,\n    x: any,\n    cancellationToken = uncancelableToken,\n    transfers?: any[],\n  ): Promise<T> {\n    return makeCancelablePromise<T>(\n      cancellationToken,\n      (resolve, reject, token) => {\n        const id = (x.id = this.newId());\n        this.set(id, { resolve, reject });\n        this.invoke(name, x, transfers);\n        token.add(() => {\n          this.invoke(PROMISE_CANCEL_ID, { id: id });\n        });\n      },\n    );\n  }\n  newId() {\n    return IS_WORKER ? this.nextId-- : this.nextId++;\n  }\n}\n\nexport class SharedObject extends RefCounted {\n  rpc: RPC | null = null;\n  rpcId: RpcId | null = null;\n  isOwner: boolean | undefined;\n  unreferencedGeneration: number;\n  referencedGeneration: number;\n\n  initializeSharedObject(rpc: RPC, rpcId = rpc.newId()) {\n    this.rpc = rpc;\n    this.rpcId = rpcId;\n    this.isOwner = false;\n    rpc.set(rpcId, this);\n  }\n\n  initializeCounterpart(rpc: RPC, options: any = {}) {\n    this.initializeSharedObject(rpc);\n    this.unreferencedGeneration = 0;\n    this.referencedGeneration = 0;\n    this.isOwner = true;\n    options.id = this.rpcId;\n    options.type = this.RPC_TYPE_ID;\n    rpc.invoke(\"SharedObject.new\", options);\n  }\n\n  dispose() {\n    super.dispose();\n  }\n\n  /**\n   * Precondition: this.isOwner === true.\n   */\n  addCounterpartRef() {\n    return { id: this.rpcId, gen: ++this.referencedGeneration };\n  }\n\n  protected refCountReachedZero() {\n    if (this.isOwner === true) {\n      if (this.referencedGeneration === this.unreferencedGeneration) {\n        this.ownerDispose();\n      }\n    } else if (this.isOwner === false) {\n      this.rpc!.invoke(\"SharedObject.refCountReachedZero\", {\n        id: this.rpcId,\n        gen: this.referencedGeneration,\n      });\n    } else {\n      super.refCountReachedZero();\n    }\n  }\n\n  /**\n   * Precondition: this.isOwner === true.\n   */\n  protected ownerDispose() {\n    if (DEBUG) {\n      console.log(`[${IS_WORKER}] #rpc object = ${this.rpc!.numObjects}`);\n    }\n    const { rpc, rpcId } = this;\n    super.refCountReachedZero();\n    rpc!.delete(rpcId!);\n    rpc!.invoke(\"SharedObject.dispose\", { id: rpcId });\n  }\n\n  /**\n   * Precondition: this.isOwner === true.\n   *\n   * This should be called when the counterpart's refCount is decremented and reaches zero.\n   */\n  counterpartRefCountReachedZero(generation: number) {\n    this.unreferencedGeneration = generation;\n    if (this.refCount === 0 && generation === this.referencedGeneration) {\n      this.ownerDispose();\n    }\n  }\n\n  /**\n   * Should be set to a constant specifying the SharedObject type identifier on the prototype of\n   * final derived owner classes.  It is not used on counterpart (non-owner) classes.\n   */\n  RPC_TYPE_ID: string;\n}\n\nexport function initializeSharedObjectCounterpart(\n  obj: SharedObject,\n  rpc?: RPC,\n  options: any = {},\n) {\n  if (rpc != null) {\n    obj.initializeSharedObject(rpc, options.id);\n  }\n}\n\n/**\n * Base class for defining a SharedObject type that will never be owned.\n */\nexport class SharedObjectCounterpart extends SharedObject {\n  constructor(rpc?: RPC, options: any = {}) {\n    super();\n    initializeSharedObjectCounterpart(this, rpc, options);\n  }\n}\n\nexport interface SharedObjectConstructor {\n  new (rpc: RPC, options: any): SharedObjectCounterpart;\n}\n\nregisterRPC(\"SharedObject.dispose\", function (x) {\n  const obj = <SharedObject>this.get(x.id);\n  if (obj.refCount !== 0) {\n    throw new Error(\n      \"Attempted to dispose object with non-zero reference count.\",\n    );\n  }\n  if (DEBUG) {\n    console.log(`[${IS_WORKER}] #rpc objects: ${this.numObjects}`);\n  }\n  obj.disposed();\n  this.delete(obj.rpcId!);\n  obj.rpcId = null;\n  obj.rpc = null;\n});\n\nregisterRPC(\"SharedObject.refCountReachedZero\", function (x) {\n  const obj = <SharedObject>this.get(x.id);\n  const generation = <number>x.gen;\n  obj.counterpartRefCountReachedZero(generation);\n});\n\nconst sharedObjectConstructors = new Map<string, SharedObjectConstructor>();\n\n/**\n * Register a class as a SharedObject owner type under the specified identifier.\n *\n * This is intended to be used as a decorator.\n */\nexport function registerSharedObjectOwner(identifier: string) {\n  return (constructorFunction: { prototype: { RPC_TYPE_ID: string } }) => {\n    constructorFunction.prototype.RPC_TYPE_ID = identifier;\n  };\n}\n\n/**\n * Register a class as a SharedObject counterpart type under the specified identifier.\n *\n * This is intended to be used as a decorator.\n *\n * Also register the type as a SharedObject owner, which is useful if this type is also used as a\n * SharedObject owner.\n */\nexport function registerSharedObject(identifier?: string) {\n  return (constructorFunction: SharedObjectConstructor) => {\n    if (identifier !== undefined) {\n      constructorFunction.prototype.RPC_TYPE_ID = identifier;\n    } else {\n      identifier = constructorFunction.prototype.RPC_TYPE_ID;\n      if (identifier === undefined) {\n        throw new Error(\"RPC_TYPE_ID should have already been defined\");\n      }\n    }\n    sharedObjectConstructors.set(identifier, constructorFunction);\n  };\n}\n\nregisterRPC(\"SharedObject.new\", function (x) {\n  const rpc = <RPC>this;\n  const typeName = <string>x.type;\n  const constructorFunction = sharedObjectConstructors.get(typeName)!;\n  const obj = new constructorFunction(rpc, x);\n  // Counterpart objects start with a reference count of zero.\n  --obj.refCount;\n});\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Facility for sharing arbitrary values that support structural cloning between threads.\n */\n\nimport type { WatchableValueInterface } from \"#src/trackable_value.js\";\nimport { WatchableValue } from \"#src/trackable_value.js\";\nimport type { RPC } from \"#src/worker_rpc.js\";\nimport {\n  registerRPC,\n  registerSharedObject,\n  SharedObjectCounterpart,\n} from \"#src/worker_rpc.js\";\n\nconst CHANGED_RPC_METHOD_ID = \"SharedWatchableValue.changed\";\n\n@registerSharedObject(\"SharedWatchableValue\")\nexport class SharedWatchableValue<T>\n  extends SharedObjectCounterpart\n  implements WatchableValueInterface<T>\n{\n  base: WatchableValueInterface<T>;\n\n  /**\n   * The value is being updated to reflect a remote change.\n   * @internal\n   */\n  updatingValue_ = false;\n\n  constructor(rpc?: RPC, options: any = {}) {\n    super(rpc, options);\n    if (rpc !== undefined) {\n      this.base = new WatchableValue<T>(options.value);\n      this.setupChangedHandler();\n    }\n  }\n\n  initializeCounterpart(rpc: RPC, options: any = {}) {\n    options.value = this.value;\n    super.initializeCounterpart(rpc, options);\n  }\n\n  private setupChangedHandler() {\n    this.registerDisposer(\n      this.base.changed.add(() => {\n        if (this.updatingValue_) {\n          this.updatingValue_ = false;\n        } else {\n          const { rpc } = this;\n          if (rpc !== null) {\n            rpc.invoke(CHANGED_RPC_METHOD_ID, {\n              id: this.rpcId,\n              value: this.value,\n            });\n          }\n        }\n      }),\n    );\n  }\n\n  static makeFromExisting<T>(rpc: RPC, base: WatchableValueInterface<T>) {\n    const obj = new SharedWatchableValue<T>();\n    obj.base = base;\n    obj.setupChangedHandler();\n    obj.initializeCounterpart(rpc);\n    return obj;\n  }\n\n  static make<T>(rpc: RPC, value: T) {\n    return SharedWatchableValue.makeFromExisting(\n      rpc,\n      new WatchableValue<T>(value),\n    );\n  }\n\n  get value() {\n    return this.base.value;\n  }\n\n  set value(value: T) {\n    this.base.value = value;\n  }\n\n  get changed() {\n    return this.base.changed;\n  }\n}\n\nregisterRPC(CHANGED_RPC_METHOD_ID, function (x) {\n  const obj = <SharedWatchableValue<any>>this.get(x.id);\n  obj.updatingValue_ = true;\n  obj.base.value = x.value;\n  obj.updatingValue_ = false;\n});\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum ChunkState {\n  // Chunk is stored in GPU memory in addition to system memory.\n  GPU_MEMORY = 0,\n  // Chunk is stored only in system memory but not in GPU memory.\n  SYSTEM_MEMORY = 1,\n\n  // Chunk is stored in system memory on worker.\n  SYSTEM_MEMORY_WORKER = 2,\n\n  // Chunk is downloading.\n  DOWNLOADING = 3,\n  // Chunk is not yet downloading.\n  QUEUED = 4,\n\n  // Chunk has just been added.\n  NEW = 5,\n\n  // Download failed.\n  FAILED = 6,\n\n  EXPIRED = 7,\n\n  // If new states are added, keep numChangeStates in sync.\n}\n\nexport const numChunkStates = 8;\n\nexport enum ChunkPriorityTier {\n  FIRST_TIER = 0,\n  // eslint-disable-next-line @typescript-eslint/no-duplicate-enum-values\n  FIRST_ORDERED_TIER = 0,\n  // eslint-disable-next-line @typescript-eslint/no-duplicate-enum-values\n  VISIBLE = 0,\n  PREFETCH = 1,\n  // eslint-disable-next-line @typescript-eslint/no-duplicate-enum-values\n  LAST_ORDERED_TIER = 1,\n  RECENT = 2,\n  // eslint-disable-next-line @typescript-eslint/no-duplicate-enum-values\n  LAST_TIER = 2,\n}\n\nexport const numChunkPriorityTiers = 3;\n\nexport enum ChunkDownloadStatistics {\n  totalTime = 0,\n  totalChunks = 1,\n}\n\nexport enum ChunkMemoryStatistics {\n  numChunks = 0,\n  systemMemoryBytes = 1,\n  gpuMemoryBytes = 2,\n}\n\nexport const numChunkMemoryStatistics = 3;\n\nexport const numChunkDownloadStatistics = 2;\n\nexport const numChunkStatistics =\n  numChunkStates * numChunkPriorityTiers * numChunkMemoryStatistics +\n  numChunkDownloadStatistics;\n\nexport function getChunkStateStatisticIndex(\n  state: ChunkState,\n  priorityTier: ChunkPriorityTier,\n) {\n  return state * numChunkPriorityTiers + priorityTier;\n}\n\nexport function getChunkDownloadStatisticIndex(\n  statistic: ChunkDownloadStatistics,\n) {\n  return (\n    numChunkStates * numChunkPriorityTiers * numChunkMemoryStatistics +\n    statistic\n  );\n}\n\nexport const PREFETCH_PRIORITY_MULTIPLIER = 1e13;\n\nexport const CHUNK_QUEUE_MANAGER_RPC_ID = \"ChunkQueueManager\";\nexport const CHUNK_MANAGER_RPC_ID = \"ChunkManager\";\nexport const CHUNK_SOURCE_INVALIDATE_RPC_ID = \"ChunkSource.invalidate\";\n\nexport const REQUEST_CHUNK_STATISTICS_RPC_ID =\n  \"ChunkQueueManager.requestChunkStatistics\";\n\n// Used for sending per-layer visible/prefetch chunk statistics from backend to frontend.\nexport const CHUNK_LAYER_STATISTICS_RPC_ID =\n  \"ChunkManager.chunkLayerStatistics\";\n\nexport interface ChunkSourceParametersConstructor<T> {\n  new (): T;\n  RPC_ID: string;\n}\n\nexport class LayerChunkProgressInfo {\n  numVisibleChunksNeeded = 0;\n  numVisibleChunksAvailable = 0;\n  numPrefetchChunksNeeded = 0;\n  numPrefetchChunksAvailable = 0;\n}\n","// DO NOT EDIT.  Generated from templates/neuroglancer/util/linked_list.template.ts.\n/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ninterface Node<T> {\n  next1: T | null;\n  prev1: T | null;\n}\n\nexport default class {\n  static insertAfter<T extends Node<T>>(head: T, x: T) {\n    const next = <T>head.next1;\n    x.next1 = next;\n    x.prev1 = head;\n    head.next1 = x;\n    next.prev1 = x;\n  }\n  static insertBefore<T extends Node<T>>(head: T, x: T) {\n    const prev = <T>head.prev1;\n    x.prev1 = prev;\n    x.next1 = head;\n    head.prev1 = x;\n    prev.next1 = x;\n  }\n  static front<T extends Node<T>>(head: T) {\n    const next = head.next1;\n    if (next === head) {\n      return null;\n    }\n    return next;\n  }\n  static back<T extends Node<T>>(head: T) {\n    const next = head.prev1;\n    if (next === head) {\n      return null;\n    }\n    return next;\n  }\n  static pop<T extends Node<T>>(x: T) {\n    const next = <T>x.next1;\n    const prev = <T>x.prev1;\n    next.prev1 = prev;\n    prev.next1 = next;\n    x.next1 = null;\n    x.prev1 = null;\n    return x;\n  }\n  static *iterator<T extends Node<T>>(head: T) {\n    for (let x = <T>head.next1; x !== head; x = <T>x.next1) {\n      yield x;\n    }\n  }\n  static *reverseIterator<T extends Node<T>>(head: T) {\n    for (let x = <T>head.prev1; x !== head; x = <T>x.prev1) {\n      yield x;\n    }\n  }\n  static initializeHead<T extends Node<T>>(head: T) {\n    head.next1 = head.prev1 = head;\n  }\n}\n","// DO NOT EDIT.  Generated from templates/neuroglancer/util/pairing_heap.template.ts.\n/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { PairingHeapOperations } from \"#src/util/pairing_heap.js\";\n\ninterface Node<T> {\n  child0: T | null;\n  next0: T | null;\n  prev0: T | null;\n}\n\n/**\n * Pairing heap.\n *\n * The root node is the minimum element according to comparator.\n *\n * @final\n */\nexport default class Implementation<T extends Node<T>>\n  implements PairingHeapOperations<T>\n{\n  /**\n   * @param compare Returns true iff a < b.\n   */\n  constructor(public compare: (a: T, b: T) => boolean) {}\n\n  meld(a: T | null, b: T | null) {\n    if (b === null) {\n      return a;\n    }\n    if (a === null) {\n      return b;\n    }\n    const { compare } = this;\n    if (compare(b, a)) {\n      const temp = a;\n      a = b;\n      b = temp;\n    }\n    const aChild = a.child0;\n    b.next0 = aChild;\n    b.prev0 = a;\n    if (aChild !== null) {\n      aChild.prev0 = b;\n    }\n    a.child0 = b;\n    return a;\n  }\n  private combineChildren(node: T) {\n    let cur = node.child0;\n    if (cur === null) {\n      return null;\n    }\n    // While in this function, we will use the nextProperty to create a\n    // singly-linked list of pairwise-merged nodes that still need to be\n    // merged together.\n    let head: T | null = null;\n    while (true) {\n      const curNext: T | null = cur.next0;\n      let next: T | null;\n      let m: T;\n      if (curNext === null) {\n        next = null;\n        m = cur;\n      } else {\n        next = curNext.next0;\n        m = this.meld(cur, curNext)!;\n      }\n      m.next0 = head;\n      head = m;\n      if (next === null) {\n        break;\n      }\n      cur = next;\n    }\n\n    let root = head;\n    head = head.next0;\n    while (true) {\n      if (head === null) {\n        break;\n      }\n      const next: T | null = head.next0;\n      root = this.meld(root, head)!;\n      head = next;\n    }\n    root.prev0 = null;\n    root.next0 = null;\n    return root;\n  }\n  removeMin(root: T) {\n    const newRoot = this.combineChildren(root);\n    root.next0 = null;\n    root.prev0 = null;\n    root.child0 = null;\n    return newRoot;\n  }\n\n  remove(root: T, node: T) {\n    if (root === node) {\n      return this.removeMin(root);\n    }\n    const prev = node.prev0!;\n    const next = node.next0!;\n    if (prev.child0 === node) {\n      prev.child0 = next;\n    } else {\n      prev.next0 = next;\n    }\n    if (next !== null) {\n      next.prev0 = prev;\n    }\n    const newRoot = this.meld(root, this.combineChildren(node));\n    node.next0 = null;\n    node.prev0 = null;\n    node.child0 = null;\n    return newRoot;\n  }\n\n  /**\n   * Returns a new iterator over the entries in the heap.\n   */\n  *entries(root: T): IterableIterator<T> {\n    if (root !== null) {\n      let child = root.child0;\n      yield root;\n      while (child !== null) {\n        const next: T | null = child.next0;\n        yield* this.entries(child);\n        child = next;\n      }\n    }\n  }\n\n  /**\n   * Returns a new iterator over the entries in the heap.  The entries\n   * will be removed as they are iterated.\n   */\n  *removedEntries(root: T): IterableIterator<T> {\n    if (root !== null) {\n      let child = root.child0;\n      root.child0 = null;\n      root.next0 = null;\n      root.prev0 = null;\n      yield root;\n      while (child !== null) {\n        const next: T | null = child.next0;\n        child.child0 = null;\n        child.next0 = null;\n        child.prev0 = null;\n        yield* this.entries(child);\n        child = next;\n      }\n    }\n  }\n}\n","// DO NOT EDIT.  Generated from templates/neuroglancer/util/pairing_heap.template.ts.\n/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { PairingHeapOperations } from \"#src/util/pairing_heap.js\";\n\ninterface Node<T> {\n  child1: T | null;\n  next1: T | null;\n  prev1: T | null;\n}\n\n/**\n * Pairing heap.\n *\n * The root node is the minimum element according to comparator.\n *\n * @final\n */\nexport default class Implementation<T extends Node<T>>\n  implements PairingHeapOperations<T>\n{\n  /**\n   * @param compare Returns true iff a < b.\n   */\n  constructor(public compare: (a: T, b: T) => boolean) {}\n\n  meld(a: T | null, b: T | null) {\n    if (b === null) {\n      return a;\n    }\n    if (a === null) {\n      return b;\n    }\n    const { compare } = this;\n    if (compare(b, a)) {\n      const temp = a;\n      a = b;\n      b = temp;\n    }\n    const aChild = a.child1;\n    b.next1 = aChild;\n    b.prev1 = a;\n    if (aChild !== null) {\n      aChild.prev1 = b;\n    }\n    a.child1 = b;\n    return a;\n  }\n  private combineChildren(node: T) {\n    let cur = node.child1;\n    if (cur === null) {\n      return null;\n    }\n    // While in this function, we will use the nextProperty to create a\n    // singly-linked list of pairwise-merged nodes that still need to be\n    // merged together.\n    let head: T | null = null;\n    while (true) {\n      const curNext: T | null = cur.next1;\n      let next: T | null;\n      let m: T;\n      if (curNext === null) {\n        next = null;\n        m = cur;\n      } else {\n        next = curNext.next1;\n        m = this.meld(cur, curNext)!;\n      }\n      m.next1 = head;\n      head = m;\n      if (next === null) {\n        break;\n      }\n      cur = next;\n    }\n\n    let root = head;\n    head = head.next1;\n    while (true) {\n      if (head === null) {\n        break;\n      }\n      const next: T | null = head.next1;\n      root = this.meld(root, head)!;\n      head = next;\n    }\n    root.prev1 = null;\n    root.next1 = null;\n    return root;\n  }\n  removeMin(root: T) {\n    const newRoot = this.combineChildren(root);\n    root.next1 = null;\n    root.prev1 = null;\n    root.child1 = null;\n    return newRoot;\n  }\n\n  remove(root: T, node: T) {\n    if (root === node) {\n      return this.removeMin(root);\n    }\n    const prev = node.prev1!;\n    const next = node.next1!;\n    if (prev.child1 === node) {\n      prev.child1 = next;\n    } else {\n      prev.next1 = next;\n    }\n    if (next !== null) {\n      next.prev1 = prev;\n    }\n    const newRoot = this.meld(root, this.combineChildren(node));\n    node.next1 = null;\n    node.prev1 = null;\n    node.child1 = null;\n    return newRoot;\n  }\n\n  /**\n   * Returns a new iterator over the entries in the heap.\n   */\n  *entries(root: T): IterableIterator<T> {\n    if (root !== null) {\n      let child = root.child1;\n      yield root;\n      while (child !== null) {\n        const next: T | null = child.next1;\n        yield* this.entries(child);\n        child = next;\n      }\n    }\n  }\n\n  /**\n   * Returns a new iterator over the entries in the heap.  The entries\n   * will be removed as they are iterated.\n   */\n  *removedEntries(root: T): IterableIterator<T> {\n    if (root !== null) {\n      let child = root.child1;\n      root.child1 = null;\n      root.next1 = null;\n      root.prev1 = null;\n      yield root;\n      while (child !== null) {\n        const next: T | null = child.next1;\n        child.child1 = null;\n        child.next1 = null;\n        child.prev1 = null;\n        yield* this.entries(child);\n        child = next;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { throttle } from \"lodash-es\";\nimport type {\n  ChunkSourceParametersConstructor,\n  LayerChunkProgressInfo,\n} from \"#src/chunk_manager/base.js\";\nimport {\n  CHUNK_LAYER_STATISTICS_RPC_ID,\n  CHUNK_MANAGER_RPC_ID,\n  CHUNK_QUEUE_MANAGER_RPC_ID,\n  CHUNK_SOURCE_INVALIDATE_RPC_ID,\n  ChunkDownloadStatistics,\n  ChunkMemoryStatistics,\n  ChunkPriorityTier,\n  ChunkState,\n  getChunkDownloadStatisticIndex,\n  getChunkStateStatisticIndex,\n  numChunkMemoryStatistics,\n  numChunkStatistics,\n  REQUEST_CHUNK_STATISTICS_RPC_ID,\n} from \"#src/chunk_manager/base.js\";\nimport type { SharedWatchableValue } from \"#src/shared_watchable_value.js\";\nimport type { TypedArray } from \"#src/util/array.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport { CancellationTokenSource } from \"#src/util/cancellation.js\";\nimport type { Borrowed, Disposable } from \"#src/util/disposable.js\";\nimport { RefCounted } from \"#src/util/disposable.js\";\nimport LinkedList0 from \"#src/util/linked_list.0.js\";\nimport LinkedList1 from \"#src/util/linked_list.1.js\";\nimport type { LinkedListOperations } from \"#src/util/linked_list.js\";\nimport { StringMemoize } from \"#src/util/memoize.js\";\nimport PairingHeap0 from \"#src/util/pairing_heap.0.js\";\nimport PairingHeap1 from \"#src/util/pairing_heap.1.js\";\nimport type {\n  ComparisonFunction,\n  PairingHeapOperations,\n} from \"#src/util/pairing_heap.js\";\nimport { NullarySignal } from \"#src/util/signal.js\";\nimport type { RPC } from \"#src/worker_rpc.js\";\nimport {\n  initializeSharedObjectCounterpart,\n  registerPromiseRPC,\n  registerRPC,\n  registerSharedObject,\n  registerSharedObjectOwner,\n  SharedObject,\n  SharedObjectCounterpart,\n} from \"#src/worker_rpc.js\";\n\nconst DEBUG_CHUNK_UPDATES = false;\n\nexport interface ChunkStateListener {\n  (chunk: Chunk, oldState: ChunkState): void;\n}\n\nlet nextMarkGeneration = 0;\nexport function getNextMarkGeneration() {\n  return ++nextMarkGeneration;\n}\n\nexport class Chunk implements Disposable {\n  // Node properties used for eviction/promotion heaps and LRU linked lists.\n  child0: Chunk | null = null;\n  next0: Chunk | null = null;\n  prev0: Chunk | null = null;\n  child1: Chunk | null = null;\n  next1: Chunk | null = null;\n  prev1: Chunk | null = null;\n\n  source: ChunkSource | null = null;\n\n  key: string | null = null;\n\n  private state_ = ChunkState.NEW;\n\n  error: any = null;\n\n  // Used by layers for marking chunks for various purposes.\n  markGeneration = -1;\n\n  /**\n   * Specifies existing priority within priority tier.  Only meaningful if priorityTier in\n   * CHUNK_ORDERED_PRIORITY_TIERS.  Higher numbers mean higher priority.\n   */\n  priority = 0;\n\n  /**\n   * Specifies updated priority within priority tier, not yet reflected in priority queue state.\n   * Only meaningful if newPriorityTier in CHUNK_ORDERED_PRIORITY_TIERS.\n   */\n  newPriority = 0;\n\n  priorityTier = ChunkPriorityTier.RECENT;\n\n  /**\n   * Specifies updated priority tier, not yet reflected in priority queue state.\n   */\n  newPriorityTier = ChunkPriorityTier.RECENT;\n\n  private systemMemoryBytes_ = 0;\n  private gpuMemoryBytes_ = 0;\n  private downloadSlots_ = 1;\n  isComputational = false;\n\n  /**\n   * Specifies lowest numeric state required by any request, if `prioritTier !==\n   * ChunkPriorityTier.RECENT`, then this must be one of `GPU_MEMORY`, `SYSTEM_MEMORY`, or\n   * `SYSTEM_MEMORY_WORKER`.\n   */\n  requestedState = ChunkState.NEW;\n\n  newRequestedState = ChunkState.NEW;\n\n  /**\n   * Cancellation token used to cancel the pending download.  Set to undefined except when state !==\n   * DOWNLOADING.  This should not be accessed by code outside this module.\n   */\n  downloadCancellationToken: CancellationTokenSource | undefined = undefined;\n\n  initialize(key: string) {\n    this.key = key;\n    this.priority = Number.NEGATIVE_INFINITY;\n    this.priorityTier = ChunkPriorityTier.RECENT;\n    this.newPriority = Number.NEGATIVE_INFINITY;\n    this.newPriorityTier = ChunkPriorityTier.RECENT;\n    this.error = null;\n    this.state = ChunkState.NEW;\n    this.requestedState = ChunkState.NEW;\n    this.newRequestedState = ChunkState.NEW;\n  }\n\n  /**\n   * Sets this.priority{Tier,} to this.newPriority{Tier,}, and resets this.newPriorityTier to\n   * ChunkPriorityTier.RECENT.\n   *\n   * This does not actually update any queues to reflect this change.\n   */\n  updatePriorityProperties() {\n    this.priorityTier = this.newPriorityTier;\n    this.priority = this.newPriority;\n    this.newPriorityTier = ChunkPriorityTier.RECENT;\n    this.newPriority = Number.NEGATIVE_INFINITY;\n    this.requestedState = this.newRequestedState;\n    this.newRequestedState = ChunkState.NEW;\n  }\n\n  dispose() {\n    this.source = null;\n    this.error = null;\n  }\n\n  get chunkManager() {\n    return (<ChunkSource>this.source).chunkManager;\n  }\n\n  get queueManager() {\n    return (<ChunkSource>this.source).chunkManager.queueManager;\n  }\n\n  downloadFailed(error: any) {\n    this.error = error;\n    this.queueManager.updateChunkState(this, ChunkState.FAILED);\n  }\n\n  downloadSucceeded() {\n    if (this.requestedState === ChunkState.SYSTEM_MEMORY) {\n      this.queueManager.moveChunkToFrontend(this);\n      this.queueManager.updateChunkState(this, ChunkState.SYSTEM_MEMORY);\n    } else {\n      this.queueManager.updateChunkState(this, ChunkState.SYSTEM_MEMORY_WORKER);\n    }\n  }\n\n  freeSystemMemory() {}\n\n  serialize(msg: any, _transfers: any[]) {\n    msg.id = this.key;\n    msg.source = (<ChunkSource>this.source).rpcId;\n    msg.new = true;\n  }\n\n  toString() {\n    return this.key;\n  }\n\n  set state(newState: ChunkState) {\n    if (newState === this.state_) {\n      return;\n    }\n    const oldState = this.state_;\n    this.state_ = newState;\n    this.source!.chunkStateChanged(this, oldState);\n  }\n\n  get state() {\n    return this.state_;\n  }\n\n  set systemMemoryBytes(bytes: number) {\n    updateChunkStatistics(this, -1);\n    this.chunkManager.queueManager.adjustCapacitiesForChunk(this, false);\n    this.systemMemoryBytes_ = bytes;\n    this.chunkManager.queueManager.adjustCapacitiesForChunk(this, true);\n    updateChunkStatistics(this, 1);\n    this.chunkManager.queueManager.scheduleUpdate();\n  }\n\n  get systemMemoryBytes() {\n    return this.systemMemoryBytes_;\n  }\n\n  set gpuMemoryBytes(bytes: number) {\n    updateChunkStatistics(this, -1);\n    this.chunkManager.queueManager.adjustCapacitiesForChunk(this, false);\n    this.gpuMemoryBytes_ = bytes;\n    this.chunkManager.queueManager.adjustCapacitiesForChunk(this, true);\n    updateChunkStatistics(this, 1);\n    this.chunkManager.queueManager.scheduleUpdate();\n  }\n\n  get gpuMemoryBytes() {\n    return this.gpuMemoryBytes_;\n  }\n\n  get downloadSlots() {\n    return this.downloadSlots_;\n  }\n\n  set downloadSlots(count: number) {\n    if (count === this.downloadSlots_) return;\n    updateChunkStatistics(this, -1);\n    this.chunkManager.queueManager.adjustCapacitiesForChunk(this, false);\n    this.downloadSlots_ = count;\n    this.chunkManager.queueManager.adjustCapacitiesForChunk(this, true);\n    updateChunkStatistics(this, 1);\n    this.chunkManager.queueManager.scheduleUpdate();\n  }\n\n  registerListener(listener: ChunkStateListener) {\n    if (!this.source) {\n      return false;\n    }\n    return this.source.registerChunkListener(this.key!, listener);\n  }\n\n  unregisterListener(listener: ChunkStateListener) {\n    if (!this.source) {\n      return false;\n    }\n    return this.source.unregisterChunkListener(this.key!, listener);\n  }\n\n  static priorityLess(a: Chunk, b: Chunk) {\n    return a.priority < b.priority;\n  }\n\n  static priorityGreater(a: Chunk, b: Chunk) {\n    return a.priority > b.priority;\n  }\n}\n\nexport interface ChunkConstructor<T extends Chunk> {\n  new (): T;\n}\n\nconst numSourceQueueLevels = 2;\n\n/**\n * Base class inherited by both ChunkSource, for implementing the backend part of chunk sources that\n * also have a frontend-part, as well as other chunk sources, such as the GenericFileSource, that\n * has only a backend part.\n */\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nexport class ChunkSourceBase extends SharedObject {\n  private listeners_ = new Map<string, ChunkStateListener[]>();\n  chunks: Map<string, Chunk> = new Map<string, Chunk>();\n  freeChunks: Chunk[] = new Array<Chunk>();\n  statistics = new Float64Array(numChunkStatistics);\n\n  /**\n   * sourceQueueLevel must be greater than the sourceQueueLevel of any ChunkSource whose download\n   * method depends on chunks from this source.  A normal ChunkSource with no other dependencies\n   * should have a level of 0.\n   */\n  sourceQueueLevel = 0;\n\n  constructor(public chunkManager: Borrowed<ChunkManager>) {\n    super();\n    chunkManager.queueManager.sources.add(this);\n  }\n\n  disposed() {\n    this.chunkManager.queueManager.sources.delete(this);\n    super.disposed();\n  }\n\n  getNewChunk_<T extends Chunk>(chunkType: ChunkConstructor<T>): T {\n    const freeChunks = this.freeChunks;\n    const freeChunksLength = freeChunks.length;\n    if (freeChunksLength > 0) {\n      const chunk = <T>freeChunks[freeChunksLength - 1];\n      freeChunks.length = freeChunksLength - 1;\n      chunk.source = this;\n      return chunk;\n    }\n    const chunk = new chunkType();\n    chunk.source = this;\n    return chunk;\n  }\n\n  /**\n   * Adds the specified chunk to the chunk cache.\n   *\n   * If the chunk cache was previously empty, also call this.addRef() to increment the reference\n   * count.\n   */\n  addChunk(chunk: Chunk) {\n    const { chunks } = this;\n    if (chunks.size === 0) {\n      this.addRef();\n    }\n    chunks.set(chunk.key!, chunk);\n    updateChunkStatistics(chunk, 1);\n  }\n\n  /**\n   * Remove the specified chunk from the chunk cache.\n   *\n   * If the chunk cache becomes empty, also call this.dispose() to decrement the reference count.\n   */\n  removeChunk(chunk: Chunk) {\n    const { chunks, freeChunks } = this;\n    chunks.delete(chunk.key!);\n    chunk.dispose();\n    freeChunks[freeChunks.length] = chunk;\n    if (chunks.size === 0) {\n      this.dispose();\n    }\n  }\n\n  registerChunkListener(key: string, listener: ChunkStateListener) {\n    if (!this.listeners_.has(key)) {\n      this.listeners_.set(key, [listener]);\n    } else {\n      this.listeners_.get(key)!.push(listener);\n    }\n    return true;\n  }\n\n  unregisterChunkListener(key: string, listener: ChunkStateListener) {\n    if (!this.listeners_.has(key)) {\n      return false;\n    }\n    const keyListeners = this.listeners_.get(key)!;\n    const idx = keyListeners.indexOf(listener);\n    if (idx < 0) {\n      return false;\n    }\n    keyListeners.splice(idx, 1);\n    if (keyListeners.length === 0) {\n      this.listeners_.delete(key);\n    }\n    return true;\n  }\n\n  chunkStateChanged(chunk: Chunk, oldState: ChunkState) {\n    const { key } = chunk;\n    if (key === null) return;\n    const listeners = this.listeners_.get(key);\n    if (listeners === undefined) return;\n    for (const listener of listeners.slice()) {\n      listener(chunk, oldState);\n    }\n  }\n}\n\nfunction updateChunkStatistics(chunk: Chunk, sign: number) {\n  const { statistics } = chunk.source!;\n  const { systemMemoryBytes, gpuMemoryBytes } = chunk;\n  const index = getChunkStateStatisticIndex(chunk.state, chunk.priorityTier);\n  statistics[\n    index * numChunkMemoryStatistics + ChunkMemoryStatistics.numChunks\n  ] += sign;\n  statistics[\n    index * numChunkMemoryStatistics + ChunkMemoryStatistics.systemMemoryBytes\n  ] += sign * systemMemoryBytes;\n  statistics[\n    index * numChunkMemoryStatistics + ChunkMemoryStatistics.gpuMemoryBytes\n  ] += sign * gpuMemoryBytes;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nexport interface ChunkSourceBase {\n  /**\n   * Begin downloading the specified the chunk.  The returned promise should resolve when the\n   * downloaded data has been successfully decoded and stored in the chunk, or rejected if the\n   * download or decoding fails.\n   *\n   * Note: This method must be defined by subclasses.\n   *\n   * @param chunk Chunk to download.\n   * @param cancellationToken If this token is canceled, the download/decoding should be aborted if\n   * possible.\n   *\n   * TODO(jbms): Move this back to the class definition above and declare this abstract once mixins\n   * are compatible with abstract classes.\n   */\n  download(chunk: Chunk, cancellationToken: CancellationToken): Promise<void>;\n}\n\nexport class ChunkSource extends ChunkSourceBase {\n  constructor(rpc: RPC, options: any) {\n    // No need to add a reference, since the owner counterpart will hold a reference to the owner\n    // counterpart of chunkManager.\n    const chunkManager = <ChunkManager>rpc.get(options.chunkManager);\n    super(chunkManager);\n    initializeSharedObjectCounterpart(this, rpc, options);\n  }\n}\n\nfunction startChunkDownload(chunk: Chunk) {\n  const downloadCancellationToken = (chunk.downloadCancellationToken =\n    new CancellationTokenSource());\n  const startTime = Date.now();\n  chunk.source!.download(chunk, downloadCancellationToken).then(\n    () => {\n      if (chunk.downloadCancellationToken === downloadCancellationToken) {\n        chunk.downloadCancellationToken = undefined;\n        const endTime = Date.now();\n        const { statistics } = chunk.source!;\n        statistics[\n          getChunkDownloadStatisticIndex(ChunkDownloadStatistics.totalTime)\n        ] += endTime - startTime;\n        ++statistics[\n          getChunkDownloadStatisticIndex(ChunkDownloadStatistics.totalChunks)\n        ];\n        chunk.downloadSucceeded();\n      }\n    },\n    (error: any) => {\n      if (chunk.downloadCancellationToken === downloadCancellationToken) {\n        chunk.downloadCancellationToken = undefined;\n        chunk.downloadFailed(error);\n        console.log(`Error retrieving chunk ${chunk}: ${error}`);\n      }\n    },\n  );\n}\n\nfunction cancelChunkDownload(chunk: Chunk) {\n  const token = chunk.downloadCancellationToken!;\n  chunk.downloadCancellationToken = undefined;\n  token.cancel();\n}\n\nclass ChunkPriorityQueue {\n  /**\n   * Heap roots for VISIBLE and PREFETCH priority tiers.\n   */\n  private heapRoots: (Chunk | null)[] = [null, null];\n\n  /**\n   * Head node for RECENT linked list.\n   */\n  private recentHead = new Chunk();\n  constructor(\n    private heapOperations: PairingHeapOperations<Chunk>,\n    private linkedListOperations: LinkedListOperations<Chunk>,\n  ) {\n    linkedListOperations.initializeHead(this.recentHead);\n  }\n\n  add(chunk: Chunk) {\n    const priorityTier = chunk.priorityTier;\n    if (priorityTier === ChunkPriorityTier.RECENT) {\n      this.linkedListOperations.insertAfter(this.recentHead, chunk);\n    } else {\n      const { heapRoots } = this;\n      heapRoots[priorityTier] = this.heapOperations.meld(\n        heapRoots[priorityTier],\n        chunk,\n      );\n    }\n  }\n\n  *candidates(): Iterator<Chunk> {\n    if (this.heapOperations.compare === Chunk.priorityLess) {\n      // Start with least-recently used RECENT chunk.\n      const { linkedListOperations, recentHead } = this;\n      while (true) {\n        const chunk = linkedListOperations.back(recentHead);\n        if (chunk == null) {\n          break;\n        }\n        yield chunk;\n      }\n      const { heapRoots } = this;\n      for (\n        let tier = ChunkPriorityTier.LAST_ORDERED_TIER;\n        tier >= ChunkPriorityTier.FIRST_ORDERED_TIER;\n        --tier\n      ) {\n        while (true) {\n          const root = heapRoots[tier];\n          if (root == null) {\n            break;\n          }\n          yield root;\n        }\n      }\n    } else {\n      const heapRoots = this.heapRoots;\n      for (\n        let tier = ChunkPriorityTier.FIRST_ORDERED_TIER;\n        tier <= ChunkPriorityTier.LAST_ORDERED_TIER;\n        ++tier\n      ) {\n        while (true) {\n          const root = heapRoots[tier];\n          if (root == null) {\n            break;\n          }\n          yield root;\n        }\n      }\n      const { linkedListOperations, recentHead } = this;\n      while (true) {\n        const chunk = linkedListOperations.front(recentHead);\n        if (chunk == null) {\n          break;\n        }\n        yield chunk;\n      }\n    }\n  }\n\n  /**\n   * Deletes a chunk from this priority queue.\n   * @param chunk The chunk to delete from the priority queue.\n   */\n  delete(chunk: Chunk) {\n    const priorityTier = chunk.priorityTier;\n    if (priorityTier === ChunkPriorityTier.RECENT) {\n      this.linkedListOperations.pop(chunk);\n    } else {\n      const heapRoots = this.heapRoots;\n      heapRoots[priorityTier] = this.heapOperations.remove(\n        <Chunk>heapRoots[priorityTier],\n        chunk,\n      );\n    }\n  }\n}\n\nfunction makeChunkPriorityQueue0(compare: ComparisonFunction<Chunk>) {\n  return new ChunkPriorityQueue(new PairingHeap0(compare), LinkedList0);\n}\n\nfunction makeChunkPriorityQueue1(compare: ComparisonFunction<Chunk>) {\n  return new ChunkPriorityQueue(new PairingHeap1(compare), LinkedList1);\n}\n\nfunction tryToFreeCapacity(\n  size: number,\n  capacity: AvailableCapacity,\n  priorityTier: ChunkPriorityTier,\n  priority: number,\n  evictionCandidates: Iterator<Chunk>,\n  evict: (chunk: Chunk) => void,\n) {\n  while (capacity.availableItems < 1 || capacity.availableSize < size) {\n    const evictionCandidate = evictionCandidates.next().value;\n    if (evictionCandidate === undefined) {\n      // No eviction candidates available, promotions are done.\n      return false;\n    }\n    const evictionTier = evictionCandidate.priorityTier;\n    if (\n      evictionTier < priorityTier ||\n      (evictionTier === priorityTier && evictionCandidate.priority >= priority)\n    ) {\n      // Lowest priority eviction candidate has priority >= highest\n      // priority promotion candidate.  No more promotions are\n      // possible.\n      return false;\n    }\n    evict(evictionCandidate);\n  }\n  return true;\n}\n\nclass AvailableCapacity extends RefCounted {\n  currentSize = 0;\n  currentItems = 0;\n\n  capacityChanged = new NullarySignal();\n\n  constructor(\n    public itemLimit: Borrowed<SharedWatchableValue<number>>,\n    public sizeLimit: Borrowed<SharedWatchableValue<number>>,\n  ) {\n    super();\n    this.registerDisposer(itemLimit.changed.add(this.capacityChanged.dispatch));\n    this.registerDisposer(sizeLimit.changed.add(this.capacityChanged.dispatch));\n  }\n\n  /**\n   * Adjust available capacity by the specified amounts.\n   */\n  adjust(items: number, size: number) {\n    this.currentItems -= items;\n    this.currentSize -= size;\n  }\n\n  get availableSize() {\n    return this.sizeLimit.value - this.currentSize;\n  }\n  get availableItems() {\n    return this.itemLimit.value - this.currentItems;\n  }\n\n  toString() {\n    return (\n      `bytes=${this.currentSize}/${this.sizeLimit.value},` +\n      `items=${this.currentItems}/${this.itemLimit.value}`\n    );\n  }\n}\n\n@registerSharedObject(CHUNK_QUEUE_MANAGER_RPC_ID)\nexport class ChunkQueueManager extends SharedObjectCounterpart {\n  gpuMemoryCapacity: AvailableCapacity;\n  systemMemoryCapacity: AvailableCapacity;\n\n  /**\n   * Download capacity for each sourceQueueLevel.\n   */\n  downloadCapacity: AvailableCapacity[];\n  computeCapacity: AvailableCapacity;\n\n  enablePrefetch: SharedWatchableValue<boolean>;\n\n  /**\n   * Set of chunk sources associated with this queue manager.\n   */\n  sources = new Set<Borrowed<ChunkSource>>();\n\n  /**\n   * Contains all chunks in QUEUED state pending download, for each sourceQueueLevel.\n   */\n  private queuedDownloadPromotionQueue = [\n    makeChunkPriorityQueue1(Chunk.priorityGreater),\n    makeChunkPriorityQueue1(Chunk.priorityGreater),\n  ];\n\n  /**\n   * Contains all chunks in QUEUED state pending compute.\n   */\n  private queuedComputePromotionQueue = makeChunkPriorityQueue1(\n    Chunk.priorityGreater,\n  );\n\n  /**\n   * Contains all chunks in DOWNLOADING state, for each sourceQueueLevel.\n   */\n  private downloadEvictionQueue = [\n    makeChunkPriorityQueue1(Chunk.priorityLess),\n    makeChunkPriorityQueue1(Chunk.priorityLess),\n  ];\n\n  /**\n   * Contains all chunks in COMPUTING state.\n   */\n  private computeEvictionQueue = makeChunkPriorityQueue1(Chunk.priorityLess);\n\n  /**\n   * Contains all chunks that take up memory (DOWNLOADING, SYSTEM_MEMORY,\n   * GPU_MEMORY).\n   */\n  private systemMemoryEvictionQueue = makeChunkPriorityQueue0(\n    Chunk.priorityLess,\n  );\n\n  /**\n   * Contains all chunks in SYSTEM_MEMORY state not in RECENT priority tier.\n   */\n  private gpuMemoryPromotionQueue = makeChunkPriorityQueue1(\n    Chunk.priorityGreater,\n  );\n\n  /**\n   * Contains all chunks in GPU_MEMORY state.\n   */\n  private gpuMemoryEvictionQueue = makeChunkPriorityQueue1(Chunk.priorityLess);\n\n  // Should be `number|null`, but marked `any` to work around @types/node being pulled in.\n  private updatePending: any = null;\n\n  gpuMemoryChanged = new NullarySignal();\n\n  private numQueued = 0;\n  private numFailed = 0;\n  private gpuMemoryGeneration = 0;\n\n  constructor(rpc: RPC, options: any) {\n    super(rpc, options);\n    const getCapacity = (capacity: any) => {\n      const result = this.registerDisposer(\n        new AvailableCapacity(\n          rpc.get(capacity.itemLimit),\n          rpc.get(capacity.sizeLimit),\n        ),\n      );\n      result.capacityChanged.add(() => this.scheduleUpdate());\n      return result;\n    };\n    this.gpuMemoryCapacity = getCapacity(options.gpuMemoryCapacity);\n    this.systemMemoryCapacity = getCapacity(options.systemMemoryCapacity);\n    this.enablePrefetch = rpc.get(options.enablePrefetch);\n    this.downloadCapacity = [\n      getCapacity(options.downloadCapacity),\n      getCapacity(options.downloadCapacity),\n    ];\n    this.computeCapacity = getCapacity(options.computeCapacity);\n  }\n\n  scheduleUpdate() {\n    if (this.updatePending === null) {\n      this.updatePending = setTimeout(this.process.bind(this), 0);\n    }\n  }\n\n  *chunkQueuesForChunk(chunk: Chunk) {\n    switch (chunk.state) {\n      case ChunkState.QUEUED:\n        if (chunk.isComputational) {\n          yield this.queuedComputePromotionQueue;\n        } else {\n          yield this.queuedDownloadPromotionQueue[\n            chunk.source!.sourceQueueLevel\n          ];\n        }\n        break;\n\n      case ChunkState.DOWNLOADING:\n        if (chunk.isComputational) {\n          yield this.computeEvictionQueue;\n        } else {\n          yield this.downloadEvictionQueue[chunk.source!.sourceQueueLevel];\n          yield this.systemMemoryEvictionQueue;\n        }\n        break;\n\n      case ChunkState.SYSTEM_MEMORY_WORKER:\n      case ChunkState.SYSTEM_MEMORY:\n        yield this.systemMemoryEvictionQueue;\n        if (chunk.requestedState === ChunkState.GPU_MEMORY) {\n          yield this.gpuMemoryPromotionQueue;\n        }\n        break;\n\n      case ChunkState.GPU_MEMORY:\n        yield this.systemMemoryEvictionQueue;\n        yield this.gpuMemoryEvictionQueue;\n        break;\n    }\n  }\n\n  adjustCapacitiesForChunk(chunk: Chunk, add: boolean) {\n    const factor = add ? -1 : 1;\n    switch (chunk.state) {\n      case ChunkState.FAILED:\n        this.numFailed -= factor;\n        break;\n\n      case ChunkState.QUEUED:\n        this.numQueued -= factor;\n        break;\n\n      case ChunkState.DOWNLOADING:\n        (chunk.isComputational\n          ? this.computeCapacity\n          : this.downloadCapacity[chunk.source!.sourceQueueLevel]\n        ).adjust(\n          factor * chunk.downloadSlots,\n          factor * chunk.systemMemoryBytes,\n        );\n        this.systemMemoryCapacity.adjust(\n          factor,\n          factor * chunk.systemMemoryBytes,\n        );\n        break;\n\n      case ChunkState.SYSTEM_MEMORY:\n      case ChunkState.SYSTEM_MEMORY_WORKER:\n        this.systemMemoryCapacity.adjust(\n          factor,\n          factor * chunk.systemMemoryBytes,\n        );\n        break;\n\n      case ChunkState.GPU_MEMORY:\n        this.systemMemoryCapacity.adjust(\n          factor,\n          factor * chunk.systemMemoryBytes,\n        );\n        this.gpuMemoryCapacity.adjust(factor, factor * chunk.gpuMemoryBytes);\n        break;\n    }\n  }\n\n  private removeChunkFromQueues_(chunk: Chunk) {\n    updateChunkStatistics(chunk, -1);\n    for (const queue of this.chunkQueuesForChunk(chunk)) {\n      queue.delete(chunk);\n    }\n  }\n\n  // var freedChunks = 0;\n  private addChunkToQueues_(chunk: Chunk) {\n    if (\n      chunk.state === ChunkState.QUEUED &&\n      chunk.priorityTier === ChunkPriorityTier.RECENT\n    ) {\n      // Delete this chunk.\n      const { source } = chunk;\n      source!.removeChunk(chunk);\n      this.adjustCapacitiesForChunk(chunk, false);\n      return false;\n    }\n    updateChunkStatistics(chunk, 1);\n    for (const queue of this.chunkQueuesForChunk(chunk)) {\n      queue.add(chunk);\n    }\n    return true;\n  }\n\n  performChunkPriorityUpdate(chunk: Chunk) {\n    if (\n      chunk.priorityTier === chunk.newPriorityTier &&\n      chunk.priority === chunk.newPriority\n    ) {\n      chunk.newPriorityTier = ChunkPriorityTier.RECENT;\n      chunk.newPriority = Number.NEGATIVE_INFINITY;\n      return;\n    }\n    if (DEBUG_CHUNK_UPDATES) {\n      console.log(\n        `${chunk}: changed priority ${chunk.priorityTier}:` +\n          `${chunk.priority} -> ${chunk.newPriorityTier}:${chunk.newPriority}`,\n      );\n    }\n    this.removeChunkFromQueues_(chunk);\n    chunk.updatePriorityProperties();\n    if (chunk.state === ChunkState.NEW) {\n      chunk.state = ChunkState.QUEUED;\n      this.adjustCapacitiesForChunk(chunk, true);\n    }\n    this.addChunkToQueues_(chunk);\n  }\n\n  updateChunkState(chunk: Chunk, newState: ChunkState) {\n    if (newState === chunk.state) {\n      return;\n    }\n    if (DEBUG_CHUNK_UPDATES) {\n      console.log(\n        `${chunk}: changed state ${ChunkState[chunk.state]} -> ${\n          ChunkState[newState]\n        }`,\n      );\n    }\n    this.adjustCapacitiesForChunk(chunk, false);\n    this.removeChunkFromQueues_(chunk);\n    chunk.state = newState;\n    this.adjustCapacitiesForChunk(chunk, true);\n    this.addChunkToQueues_(chunk);\n    this.scheduleUpdate();\n  }\n\n  private processGPUPromotions_() {\n    const queueManager = this;\n    function evictFromGPUMemory(chunk: Chunk) {\n      queueManager.freeChunkGPUMemory(chunk);\n      chunk.source!.chunkManager.queueManager.updateChunkState(\n        chunk,\n        ChunkState.SYSTEM_MEMORY,\n      );\n    }\n    const promotionCandidates = this.gpuMemoryPromotionQueue.candidates();\n    const evictionCandidates = this.gpuMemoryEvictionQueue.candidates();\n    const capacity = this.gpuMemoryCapacity;\n    while (true) {\n      const promotionCandidate = promotionCandidates.next().value;\n      if (promotionCandidate === undefined) {\n        break;\n      }\n      const priorityTier = promotionCandidate.priorityTier;\n      const priority = promotionCandidate.priority;\n      if (\n        !tryToFreeCapacity(\n          promotionCandidate.gpuMemoryBytes,\n          capacity,\n          priorityTier,\n          priority,\n          evictionCandidates,\n          evictFromGPUMemory,\n        )\n      ) {\n        break;\n      }\n      this.copyChunkToGPU(promotionCandidate);\n      this.updateChunkState(promotionCandidate, ChunkState.GPU_MEMORY);\n    }\n  }\n\n  freeChunkGPUMemory(chunk: Chunk) {\n    ++this.gpuMemoryGeneration;\n    this.rpc!.invoke(\"Chunk.update\", {\n      id: chunk.key,\n      state: ChunkState.SYSTEM_MEMORY,\n      source: chunk.source!.rpcId,\n    });\n  }\n\n  freeChunkSystemMemory(chunk: Chunk) {\n    if (chunk.state === ChunkState.SYSTEM_MEMORY_WORKER) {\n      chunk.freeSystemMemory();\n    } else {\n      this.rpc!.invoke(\"Chunk.update\", {\n        id: chunk.key,\n        state: ChunkState.EXPIRED,\n        source: chunk.source!.rpcId,\n      });\n    }\n  }\n\n  retrieveChunkData(chunk: Chunk) {\n    return this.rpc!.promiseInvoke<TypedArray>(\"Chunk.retrieve\", {\n      key: chunk.key!,\n      source: chunk.source!.rpcId,\n    });\n  }\n\n  copyChunkToGPU(chunk: Chunk) {\n    ++this.gpuMemoryGeneration;\n    const rpc = this.rpc!;\n    if (chunk.state === ChunkState.SYSTEM_MEMORY) {\n      rpc.invoke(\"Chunk.update\", {\n        id: chunk.key,\n        source: chunk.source!.rpcId,\n        state: ChunkState.GPU_MEMORY,\n      });\n    } else {\n      const msg: any = {};\n      const transfers: any[] = [];\n      chunk.serialize(msg, transfers);\n      msg.state = ChunkState.GPU_MEMORY;\n      rpc.invoke(\"Chunk.update\", msg, transfers);\n    }\n  }\n\n  moveChunkToFrontend(chunk: Chunk) {\n    const rpc = this.rpc!;\n    const msg: any = {};\n    const transfers: any[] = [];\n    chunk.serialize(msg, transfers);\n    msg.state = ChunkState.SYSTEM_MEMORY;\n    rpc.invoke(\"Chunk.update\", msg, transfers);\n  }\n\n  private processQueuePromotions_() {\n    const evict = (chunk: Chunk) => {\n      switch (chunk.state) {\n        case ChunkState.DOWNLOADING:\n          cancelChunkDownload(chunk);\n          break;\n        case ChunkState.GPU_MEMORY:\n          this.freeChunkGPUMemory(chunk);\n        // fallthrough\n        case ChunkState.SYSTEM_MEMORY_WORKER:\n        case ChunkState.SYSTEM_MEMORY:\n          this.freeChunkSystemMemory(chunk);\n          break;\n      }\n      // Note: After calling this, chunk may no longer be valid.\n      this.updateChunkState(chunk, ChunkState.QUEUED);\n    };\n\n    const promotionLambda = (\n      promotionCandidates: Iterator<Chunk>,\n      evictionCandidates: Iterator<Chunk>,\n      capacity: AvailableCapacity,\n    ) => {\n      const systemMemoryEvictionCandidates =\n        this.systemMemoryEvictionQueue.candidates();\n      const systemMemoryCapacity = this.systemMemoryCapacity;\n      while (true) {\n        const promotionCandidateResult = promotionCandidates.next();\n        if (promotionCandidateResult.done) {\n          return;\n        }\n        const promotionCandidate = promotionCandidateResult.value;\n        const size = 0; /* unknown size, since it hasn't been downloaded yet. */\n        const priorityTier = promotionCandidate.priorityTier;\n        const priority = promotionCandidate.priority;\n        // console.log(\"Download capacity: \" + downloadCapacity);\n        if (\n          !tryToFreeCapacity(\n            size,\n            capacity,\n            priorityTier,\n            priority,\n            evictionCandidates,\n            evict,\n          )\n        ) {\n          return;\n        }\n        if (\n          !tryToFreeCapacity(\n            size,\n            systemMemoryCapacity,\n            priorityTier,\n            priority,\n            systemMemoryEvictionCandidates,\n            evict,\n          )\n        ) {\n          return;\n        }\n        this.updateChunkState(promotionCandidate, ChunkState.DOWNLOADING);\n        startChunkDownload(promotionCandidate);\n      }\n    };\n\n    for (\n      let sourceQueueLevel = 0;\n      sourceQueueLevel < numSourceQueueLevels;\n      ++sourceQueueLevel\n    ) {\n      promotionLambda(\n        this.queuedDownloadPromotionQueue[sourceQueueLevel].candidates(),\n        this.downloadEvictionQueue[sourceQueueLevel].candidates(),\n        this.downloadCapacity[sourceQueueLevel],\n      );\n    }\n    promotionLambda(\n      this.queuedComputePromotionQueue.candidates(),\n      this.computeEvictionQueue.candidates(),\n      this.computeCapacity,\n    );\n  }\n\n  process() {\n    if (!this.updatePending) {\n      return;\n    }\n    this.updatePending = null;\n    const gpuMemoryGeneration = this.gpuMemoryGeneration;\n    this.processGPUPromotions_();\n    this.processQueuePromotions_();\n    this.logStatistics();\n    if (this.gpuMemoryGeneration !== gpuMemoryGeneration) {\n      this.gpuMemoryChanged.dispatch();\n    }\n  }\n\n  logStatistics() {\n    if (DEBUG_CHUNK_UPDATES) {\n      console.log(\n        `[Chunk status] QUEUED: ${this.numQueued}, FAILED: ` +\n          `${this.numFailed}, DOWNLOAD: ${this.downloadCapacity}, ` +\n          `MEM: ${this.systemMemoryCapacity}, GPU: ${this.gpuMemoryCapacity}`,\n      );\n    }\n  }\n\n  invalidateSourceCache(source: ChunkSource) {\n    for (const chunk of source.chunks.values()) {\n      switch (chunk.state) {\n        case ChunkState.DOWNLOADING:\n          cancelChunkDownload(chunk);\n          break;\n        case ChunkState.SYSTEM_MEMORY_WORKER:\n          chunk.freeSystemMemory();\n          break;\n      }\n      // Note: After calling this, chunk may no longer be valid.\n      this.updateChunkState(chunk, ChunkState.QUEUED);\n    }\n    this.rpc!.invoke(\"Chunk.update\", { source: source.rpcId });\n    this.scheduleUpdate();\n  }\n}\n\nexport class ChunkRenderLayerBackend\n  extends SharedObjectCounterpart\n  implements LayerChunkProgressInfo\n{\n  chunkManagerGeneration = -1;\n\n  numVisibleChunksNeeded = 0;\n  numVisibleChunksAvailable = 0;\n  numPrefetchChunksNeeded = 0;\n  numPrefetchChunksAvailable = 0;\n}\n\nconst LAYER_CHUNK_STATISTICS_INTERVAL = 200;\n\n@registerSharedObject(CHUNK_MANAGER_RPC_ID)\nexport class ChunkManager extends SharedObjectCounterpart {\n  queueManager: ChunkQueueManager;\n\n  /**\n   * Array of chunks within each existing priority tier.\n   */\n  private existingTierChunks: Chunk[][] = [];\n\n  /**\n   * Array of chunks whose new priorities have not yet been reflected in the\n   * queue states.\n   */\n  private newTierChunks: Chunk[] = [];\n\n  // Should be `number|null`, but marked `any` to workaround `@types/node` being pulled in.\n  private updatePending: any = null;\n\n  recomputeChunkPriorities = new NullarySignal();\n\n  /**\n   * Dispatched immediately after recomputeChunkPriorities is dispatched.\n   * This signal should be used for handlers that depend on the result of another handler.\n   */\n  recomputeChunkPrioritiesLate = new NullarySignal();\n\n  memoize = new StringMemoize();\n\n  layers: ChunkRenderLayerBackend[] = [];\n\n  private sendLayerChunkStatistics = this.registerCancellable(\n    throttle(() => {\n      this.rpc!.invoke(CHUNK_LAYER_STATISTICS_RPC_ID, {\n        id: this.rpcId,\n        layers: this.layers.map((layer) => ({\n          id: layer.rpcId,\n          numVisibleChunksAvailable: layer.numVisibleChunksAvailable,\n          numVisibleChunksNeeded: layer.numVisibleChunksNeeded,\n          numPrefetchChunksAvailable: layer.numPrefetchChunksAvailable,\n          numPrefetchChunksNeeded: layer.numPrefetchChunksNeeded,\n        })),\n      });\n    }, LAYER_CHUNK_STATISTICS_INTERVAL),\n  );\n\n  constructor(rpc: RPC, options: any) {\n    super(rpc, options);\n    this.queueManager = (<ChunkQueueManager>(\n      rpc.get(options.chunkQueueManager)\n    )).addRef();\n\n    // Update chunk priorities periodically after GPU memory changes to ensure layer chunk\n    // statistics are updated.\n    this.registerDisposer(\n      this.queueManager.gpuMemoryChanged.add(\n        this.registerCancellable(\n          throttle(\n            () => this.scheduleUpdateChunkPriorities(),\n            LAYER_CHUNK_STATISTICS_INTERVAL,\n            { leading: false, trailing: true },\n          ),\n        ),\n      ),\n    );\n\n    for (\n      let tier = ChunkPriorityTier.FIRST_TIER;\n      tier <= ChunkPriorityTier.LAST_TIER;\n      ++tier\n    ) {\n      if (tier === ChunkPriorityTier.RECENT) {\n        continue;\n      }\n      this.existingTierChunks[tier] = [];\n    }\n  }\n\n  scheduleUpdateChunkPriorities() {\n    if (this.updatePending === null) {\n      this.updatePending = setTimeout(\n        this.recomputeChunkPriorities_.bind(this),\n        0,\n      );\n    }\n  }\n\n  registerLayer(layer: ChunkRenderLayerBackend) {\n    const generation = this.recomputeChunkPriorities.count;\n    if (layer.chunkManagerGeneration !== generation) {\n      layer.chunkManagerGeneration = generation;\n      this.layers.push(layer);\n      layer.numVisibleChunksAvailable = 0;\n      layer.numVisibleChunksNeeded = 0;\n      layer.numPrefetchChunksAvailable = 0;\n      layer.numPrefetchChunksNeeded = 0;\n    }\n  }\n\n  private recomputeChunkPriorities_() {\n    this.updatePending = null;\n    this.layers.length = 0;\n    this.recomputeChunkPriorities.dispatch();\n    this.recomputeChunkPrioritiesLate.dispatch();\n    this.updateQueueState([\n      ChunkPriorityTier.VISIBLE,\n      ChunkPriorityTier.PREFETCH,\n    ]);\n    this.sendLayerChunkStatistics();\n  }\n\n  /**\n   * @param chunk\n   * @param tier New priority tier.  Must not equal ChunkPriorityTier.RECENT.\n   * @param priority Priority within tier.\n   * @param requestedState Indicates requested chunk state.\n   */\n  requestChunk(\n    chunk: Chunk,\n    tier: ChunkPriorityTier,\n    priority: number,\n    requestedState: ChunkState = ChunkState.GPU_MEMORY,\n  ) {\n    if (Number.isNaN(priority)) {\n      return;\n    }\n    if (tier === ChunkPriorityTier.RECENT) {\n      throw new Error(\"Not going to request a chunk with the RECENT tier\");\n    }\n    chunk.newRequestedState = Math.min(chunk.newRequestedState, requestedState);\n    if (chunk.newPriorityTier === ChunkPriorityTier.RECENT) {\n      this.newTierChunks.push(chunk);\n    }\n    const newPriorityTier = chunk.newPriorityTier;\n    if (\n      tier < newPriorityTier ||\n      (tier === newPriorityTier && priority > chunk.newPriority)\n    ) {\n      chunk.newPriorityTier = tier;\n      chunk.newPriority = priority;\n    }\n  }\n\n  /**\n   * Update queue state to reflect updated contents of the specified priority tiers.  Existing\n   * chunks within those tiers not present in this.newTierChunks will be moved to the RECENT tier\n   * (and removed if in the QUEUED state).\n   */\n  updateQueueState(tiers: ChunkPriorityTier[]) {\n    const existingTierChunks = this.existingTierChunks;\n    const queueManager = this.queueManager;\n    for (const tier of tiers) {\n      const chunks = existingTierChunks[tier];\n      if (DEBUG_CHUNK_UPDATES) {\n        console.log(\n          `existingTierChunks[${ChunkPriorityTier[tier]}].length=${chunks.length}`,\n        );\n      }\n      for (const chunk of chunks) {\n        if (chunk.newPriorityTier === ChunkPriorityTier.RECENT) {\n          // Downgrade the priority of this chunk.\n          queueManager.performChunkPriorityUpdate(chunk);\n        }\n      }\n      chunks.length = 0;\n    }\n    const newTierChunks = this.newTierChunks;\n    for (const chunk of newTierChunks) {\n      queueManager.performChunkPriorityUpdate(chunk);\n      existingTierChunks[chunk.priorityTier].push(chunk);\n    }\n    if (DEBUG_CHUNK_UPDATES) {\n      console.log(\n        `updateQueueState: newTierChunks.length = ${newTierChunks.length}`,\n      );\n    }\n    newTierChunks.length = 0;\n    this.queueManager.scheduleUpdate();\n  }\n}\n\n/**\n * Mixin for adding a `parameters` member to a ChunkSource, and for registering the shared object\n * type based on the `RPC_ID` member of the Parameters class.\n */\nexport function WithParameters<\n  Parameters,\n  TBase extends { new (...args: any[]): SharedObject },\n>(\n  Base: TBase,\n  parametersConstructor: ChunkSourceParametersConstructor<Parameters>,\n) {\n  @registerSharedObjectOwner(parametersConstructor.RPC_ID)\n  class C extends Base {\n    parameters: Parameters;\n    constructor(...args: any[]) {\n      super(...args);\n      const options = args[1];\n      this.parameters = options.parameters;\n    }\n  }\n  return C;\n}\n\n/**\n * Interface that represents shared objects that request chunks from a ChunkManager.\n */\nexport interface ChunkRequester extends SharedObject {\n  chunkManager: ChunkManager;\n}\n\n/**\n * Mixin that adds a chunkManager property initialized from the RPC-supplied options.\n *\n * The resultant class implements `ChunkRequester`.\n */\nexport function withChunkManager<\n  T extends { new (...args: any[]): SharedObject },\n>(Base: T) {\n  return class extends Base implements ChunkRequester {\n    chunkManager: ChunkManager;\n    constructor(...args: any[]) {\n      super(...args);\n      const rpc: RPC = args[0];\n      const options = args[1];\n      // We don't increment the reference count, because our owner owns a reference to the\n      // ChunkManager.\n      this.chunkManager = <ChunkManager>rpc.get(options.chunkManager);\n    }\n  };\n}\n\nregisterRPC(CHUNK_SOURCE_INVALIDATE_RPC_ID, function (x) {\n  const source = <ChunkSource>this.get(x.id);\n  source.chunkManager.queueManager.invalidateSourceCache(source);\n});\n\nregisterPromiseRPC(\n  REQUEST_CHUNK_STATISTICS_RPC_ID,\n  function (x: { queue: number }) {\n    const queue = this.get(x.queue) as ChunkQueueManager;\n    const results = new Map<number, Float64Array>();\n    for (const source of queue.sources) {\n      results.set(source.rpcId!, source.statistics);\n    }\n    return Promise.resolve({ value: results });\n  },\n);\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChunkRenderLayerBackend } from \"#src/chunk_manager/backend.js\";\nimport type { ProjectionParameters } from \"#src/projection_parameters.js\";\nimport {\n  PROJECTION_PARAMETERS_CHANGED_RPC_METHOD_ID,\n  PROJECTION_PARAMETERS_RPC_ID,\n  RENDERED_VIEW_ADD_LAYER_RPC_ID,\n  RENDERED_VIEW_REMOVE_LAYER_RPC_ID,\n} from \"#src/render_layer_common.js\";\nimport type {\n  WatchableValueChangeInterface,\n  WatchableValueInterface,\n} from \"#src/trackable_value.js\";\nimport { RefCounted } from \"#src/util/disposable.js\";\nimport { Signal } from \"#src/util/signal.js\";\nimport type { RPC } from \"#src/worker_rpc.js\";\nimport {\n  registerRPC,\n  registerSharedObject,\n  SharedObjectCounterpart,\n} from \"#src/worker_rpc.js\";\n\nexport interface RenderedViewBackend {\n  visibility: WatchableValueInterface<number>;\n  projectionParameters: WatchableValueInterface<ProjectionParameters>;\n}\n\nexport class RenderLayerBackendAttachment<\n  ViewBackend extends RenderedViewBackend = RenderedViewBackend,\n  AttachmentState = unknown,\n> extends RefCounted {\n  state: AttachmentState | undefined = undefined;\n  constructor(public view: ViewBackend) {\n    super();\n  }\n}\n\nexport class RenderLayerBackend<\n  ViewBackend extends RenderedViewBackend = RenderedViewBackend,\n  AttachmentState = unknown,\n> extends ChunkRenderLayerBackend {\n  attachments = new Map<ViewBackend, RenderLayerBackendAttachment>();\n  attach(\n    attachment: RenderLayerBackendAttachment<ViewBackend, AttachmentState>,\n  ) {\n    attachment;\n  }\n}\n\nregisterRPC(RENDERED_VIEW_ADD_LAYER_RPC_ID, function (x) {\n  const view: RenderedViewBackend = this.get(x.view);\n  const layer: RenderLayerBackend = this.get(x.layer);\n  const attachment = new RenderLayerBackendAttachment(view);\n  layer.attachments.set(view, attachment);\n  layer.attach(attachment);\n});\n\nregisterRPC(RENDERED_VIEW_REMOVE_LAYER_RPC_ID, function (x) {\n  const view: RenderedViewBackend = this.get(x.view);\n  const layer: RenderLayerBackend = this.get(x.layer);\n  const attachment = layer.attachments.get(view)!;\n  layer.attachments.delete(view);\n  attachment.dispose();\n});\n\n@registerSharedObject(PROJECTION_PARAMETERS_RPC_ID)\nexport class SharedProjectionParametersBackend<\n    T extends ProjectionParameters = ProjectionParameters,\n  >\n  extends SharedObjectCounterpart\n  implements WatchableValueChangeInterface<T>\n{\n  value: T;\n  oldValue: T;\n  changed = new Signal<(oldValue: T, newValue: T) => void>();\n  constructor(rpc: RPC, options: any) {\n    super(rpc, options);\n    this.value = options.value;\n    this.oldValue = Object.assign({}, this.value);\n  }\n}\n\nregisterRPC(PROJECTION_PARAMETERS_CHANGED_RPC_METHOD_ID, function (x) {\n  const obj: SharedProjectionParametersBackend = this.get(x.id);\n  const { value, oldValue } = obj;\n  Object.assign(oldValue, value);\n  Object.assign(value, x.value);\n  obj.changed.dispatch(oldValue, value);\n});\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { binarySearchLowerBound } from \"#src/util/array.js\";\n\nexport interface SiPrefix {\n  readonly prefix: string;\n  readonly exponent: number;\n  readonly longPrefix?: string;\n}\n\nexport const preferredSiPrefixes: readonly SiPrefix[] = [\n  { prefix: \"Y\", exponent: 24, longPrefix: \"yotta\" },\n  { prefix: \"Z\", exponent: 21, longPrefix: \"zetta\" },\n  { prefix: \"E\", exponent: 18, longPrefix: \"exa\" },\n  { prefix: \"P\", exponent: 15, longPrefix: \"peta\" },\n  { prefix: \"T\", exponent: 12, longPrefix: \"tera\" },\n  { prefix: \"G\", exponent: 9, longPrefix: \"giga\" },\n  { prefix: \"M\", exponent: 6, longPrefix: \"mega\" },\n  { prefix: \"k\", exponent: 3, longPrefix: \"kilo\" },\n  { prefix: \"\", exponent: 0, longPrefix: \"\" },\n  { prefix: \"m\", exponent: -3, longPrefix: \"milli\" },\n  { prefix: \"µ\", exponent: -6, longPrefix: \"micro\" },\n  { prefix: \"n\", exponent: -9, longPrefix: \"nano\" },\n  { prefix: \"p\", exponent: -12, longPrefix: \"pico\" },\n  { prefix: \"f\", exponent: -15, longPrefix: \"femto\" },\n  { prefix: \"a\", exponent: -18, longPrefix: \"atto\" },\n  { prefix: \"z\", exponent: -21, longPrefix: \"zepto\" },\n  { prefix: \"y\", exponent: -24, longPrefix: \"yocto\" },\n];\n\nexport const allSiPrefixes: readonly SiPrefix[] = [\n  ...preferredSiPrefixes,\n  { prefix: \"h\", exponent: 2, longPrefix: \"hecto\" },\n  { prefix: \"da\", exponent: 1, longPrefix: \"deca\" },\n  { prefix: \"d\", exponent: -1, longPrefix: \"deci\" },\n  { prefix: \"c\", exponent: -2, longPrefix: \"centi\" },\n];\n\nconst siPrefixesWithAlternatives: readonly SiPrefix[] = [\n  { prefix: \"u\", exponent: -6 }, // Also allow \"u\" for micro\n  ...allSiPrefixes,\n];\n\nexport const supportedUnits = new Map<\n  string,\n  { unit: string; exponent: number }\n>();\nsupportedUnits.set(\"\", { unit: \"\", exponent: 0 });\nexport const exponentToPrefix = new Map<number, string>();\nfor (const { prefix, exponent } of siPrefixesWithAlternatives) {\n  exponentToPrefix.set(exponent, prefix);\n  for (const unit of [\"m\", \"s\", \"Hz\", \"rad/s\"]) {\n    supportedUnits.set(`${prefix}${unit}`, { unit, exponent });\n  }\n}\n\nexport function pickSiPrefix(x: number): SiPrefix {\n  const exponent = Math.log10(x);\n  const numPrefixes = preferredSiPrefixes.length;\n  const i = binarySearchLowerBound(\n    0,\n    numPrefixes,\n    (i) => preferredSiPrefixes[i].exponent <= exponent,\n  );\n  return preferredSiPrefixes[Math.min(i, numPrefixes - 1)];\n}\n\ninterface FormatScaleWithUnitOptions {\n  precision?: number;\n  elide1?: boolean;\n}\n\nexport function formatScaleWithUnit(\n  scale: number,\n  unit: string,\n  options: FormatScaleWithUnitOptions = {},\n): { scale: string; prefix: string; unit: string } {\n  const { precision = 6, elide1 = true } = options;\n  let adjustedScale = scale;\n  let prefix = \"\";\n  if (unit !== \"\") {\n    const result = pickSiPrefix(scale);\n    prefix = result.prefix;\n    adjustedScale = scaleByExp10(scale, -result.exponent);\n  }\n  if (elide1 && adjustedScale === 1) {\n    return { scale: \"\", unit, prefix };\n  }\n  let scaleString: string;\n  if (precision !== 0) {\n    if (adjustedScale < 1 || adjustedScale >= 1000) {\n      scaleString = adjustedScale.toPrecision(precision);\n    } else {\n      scaleString = adjustedScale.toFixed(precision);\n    }\n    const eIndex = scaleString.indexOf(\"e\");\n    let numString: string;\n    let exponentString: string;\n    if (eIndex !== -1) {\n      numString = scaleString.substring(0, eIndex);\n      exponentString = scaleString.substring(eIndex);\n    } else {\n      numString = scaleString;\n      exponentString = \"\";\n    }\n    const m = numString.match(/.*\\.(?:[0-9]*[1-9])?(0+)$/);\n    if (m !== null) {\n      numString = numString.substring(0, numString.length - m[1].length);\n      if (numString.endsWith(\".\")) {\n        numString = numString.substring(0, numString.length - 1);\n      }\n      scaleString = numString + exponentString;\n    }\n  } else {\n    scaleString = adjustedScale.toString();\n  }\n  return {\n    scale: scaleString,\n    unit,\n    prefix,\n  };\n}\n\nexport function formatScaleWithUnitAsString(\n  scale: number,\n  unit: string,\n  options?: FormatScaleWithUnitOptions,\n): string {\n  const {\n    scale: formattedScale,\n    unit: formattedUnit,\n    prefix,\n  } = formatScaleWithUnit(scale, unit, options);\n  return `${formattedScale}${prefix}${formattedUnit}`;\n}\n\nexport function parseScale(s: string) {\n  if (s === \"\") {\n    return { scale: 1, unit: \"\" };\n  }\n  const match = s.match(\n    /^((?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)?([µa-zA-Z]+)?$/,\n  );\n  if (match === null) return undefined;\n  const scaleString = match[1];\n  let scale = scaleString === undefined ? 1 : Number(scaleString);\n  if (Number.isNaN(scale)) return undefined;\n  let unit = \"\";\n  if (match[2] !== undefined) {\n    const result = supportedUnits.get(match[2]);\n    if (result === undefined) {\n      return undefined;\n    }\n    unit = result.unit;\n    if (result.exponent > 0) {\n      scale *= 10 ** result.exponent;\n    } else {\n      scale /= 10 ** -result.exponent;\n    }\n  }\n  if (scale <= 0 || !Number.isFinite(scale)) return undefined;\n  return { scale, unit };\n}\n\nexport function unitFromJson(x: unknown) {\n  const result = supportedUnits.get(x as string);\n  if (result === undefined) {\n    throw new Error(`Invalid unit: ${JSON.stringify(x)}`);\n  }\n  return result;\n}\n\n/**\n * Returns `scale * 10**exponent`, but uses division for negative exponents to reduce loss of\n * precision.\n */\nexport function scaleByExp10(scale: number, exponent: number) {\n  if (exponent >= 0) return scale * 10 ** exponent;\n  return scale / 10 ** -exponent;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { TypedArray } from \"#src/util/array.js\";\n\nexport function equal<T extends TypedArray, U extends TypedArray>(a: T, b: U) {\n  const n = a.length;\n  for (let i = 0; i < n; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n\nexport function add<\n  Out extends TypedArray,\n  A extends TypedArray,\n  B extends TypedArray,\n>(out: Out, a: A, b: B) {\n  const rank = out.length;\n  for (let i = 0; i < rank; ++i) {\n    out[i] = a[i] + b[i];\n  }\n  return out;\n}\nexport function subtract<\n  Out extends TypedArray,\n  A extends TypedArray,\n  B extends TypedArray,\n>(out: Out, a: A, b: B) {\n  const rank = out.length;\n  for (let i = 0; i < rank; ++i) {\n    out[i] = a[i] - b[i];\n  }\n  return out;\n}\nexport function multiply<\n  Out extends TypedArray,\n  A extends TypedArray,\n  B extends TypedArray,\n>(out: Out, a: A, b: B) {\n  const rank = out.length;\n  for (let i = 0; i < rank; ++i) {\n    out[i] = a[i] * b[i];\n  }\n  return out;\n}\nexport function divide<\n  Out extends TypedArray,\n  A extends TypedArray,\n  B extends TypedArray,\n>(out: Out, a: A, b: B) {\n  const rank = out.length;\n  for (let i = 0; i < rank; ++i) {\n    out[i] = a[i] / b[i];\n  }\n  return out;\n}\nexport function scaleAndAdd<\n  Out extends TypedArray,\n  A extends TypedArray,\n  B extends TypedArray,\n>(out: Out, a: A, b: B, scale: number) {\n  const rank = out.length;\n  for (let i = 0; i < rank; ++i) {\n    out[i] = a[i] + b[i] * scale;\n  }\n  return out;\n}\nexport function scale<Out extends TypedArray, A extends TypedArray>(\n  out: Out,\n  a: A,\n  scale: number,\n) {\n  const rank = out.length;\n  for (let i = 0; i < rank; ++i) {\n    out[i] = a[i] * scale;\n  }\n  return out;\n}\n\nexport function prod(array: ArrayLike<number>) {\n  let result = 1;\n  for (let i = 0, length = array.length; i < length; ++i) {\n    result *= array[i];\n  }\n  return result;\n}\n\nexport function min<\n  Out extends TypedArray,\n  A extends TypedArray,\n  B extends TypedArray,\n>(out: Out, a: A, b: B) {\n  const rank = out.length;\n  for (let i = 0; i < rank; ++i) {\n    out[i] = Math.min(a[i], b[i]);\n  }\n  return out;\n}\n\nexport function max<\n  Out extends TypedArray,\n  A extends TypedArray,\n  B extends TypedArray,\n>(out: Out, a: A, b: B) {\n  const rank = out.length;\n  for (let i = 0; i < rank; ++i) {\n    out[i] = Math.max(a[i], b[i]);\n  }\n  return out;\n}\n\nexport const kEmptyFloat32Vec = new Float32Array(0);\nexport const kEmptyFloat64Vec = new Float64Array(0);\nexport const kFloat64Vec3Of1 = Float64Array.of(1, 1, 1);\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { WatchableValueInterface } from \"#src/trackable_value.js\";\nimport { WatchableValue } from \"#src/trackable_value.js\";\nimport type { TypedArray } from \"#src/util/array.js\";\nimport {\n  arraysEqual,\n  arraysEqualWithPredicate,\n  getInsertPermutation,\n} from \"#src/util/array.js\";\nimport {\n  getDependentTransformInputDimensions,\n  mat4,\n  quat,\n  vec3,\n} from \"#src/util/geom.js\";\nimport {\n  expectArray,\n  parseArray,\n  parseFiniteVec,\n  parseFixedLengthArray,\n  verifyFiniteFloat,\n  verifyFinitePositiveFloat,\n  verifyIntegerArray,\n  verifyObject,\n  verifyObjectProperty,\n  verifyOptionalObjectProperty,\n  verifyString,\n  verifyStringArray,\n} from \"#src/util/json.js\";\nimport * as matrix from \"#src/util/matrix.js\";\nimport {\n  scaleByExp10,\n  supportedUnits,\n  unitFromJson,\n} from \"#src/util/si_units.js\";\nimport { NullarySignal } from \"#src/util/signal.js\";\nimport type { Trackable } from \"#src/util/trackable.js\";\nimport * as vector from \"#src/util/vector.js\";\n\nexport type DimensionId = number;\n\nlet nextDimensionId = 0;\n\nexport function newDimensionId(): DimensionId {\n  return ++nextDimensionId;\n}\n\nexport interface CoordinateArray {\n  // Indicates whether this coordinate array was specified explicitly, in which case it will be\n  // encoded in the JSON representation.\n  explicit: boolean;\n  // Specifies the coordinates.  Must be montonically increasing integers.\n  coordinates: number[];\n  // Specifies the label for each coordinate in `coordinates`.\n  labels: string[];\n}\n\nexport interface CoordinateSpace {\n  /**\n   * If `true`, has been fully initialized (i.e. based on at least one data source).  If `false`,\n   * may be partially initialized.\n   */\n  readonly valid: boolean;\n\n  readonly rank: number;\n\n  /**\n   * Specifies the name of each dimension.\n   */\n  readonly names: readonly string[];\n\n  readonly ids: readonly DimensionId[];\n\n  /**\n   * Timestamp of last user action that changed the name, scale, or unit of each dimension, or\n   * `undefined` if there was no user action.\n   */\n  readonly timestamps: readonly number[];\n\n  /**\n   * Specifies the physical units corresponding to this dimension.  May be empty to indicate\n   * unitless.\n   */\n  readonly units: readonly string[];\n\n  /**\n   * Specifies a scale for this dimension.\n   */\n  readonly scales: Float64Array;\n\n  readonly bounds: CoordinateSpaceBounds;\n  readonly boundingBoxes: readonly TransformedBoundingBox[];\n\n  readonly coordinateArrays: (CoordinateArray | undefined)[];\n}\n\nexport function boundingBoxesEqual(a: BoundingBox, b: BoundingBox) {\n  return (\n    arraysEqual(a.lowerBounds, b.lowerBounds) &&\n    arraysEqual(a.upperBounds, b.upperBounds)\n  );\n}\n\nexport function coordinateArraysEqual(\n  a: CoordinateArray | undefined,\n  b: CoordinateArray | undefined,\n) {\n  if (a === undefined) return b === undefined;\n  if (b === undefined) return false;\n  return (\n    a.explicit === b.explicit &&\n    arraysEqual(a.coordinates, b.coordinates) &&\n    arraysEqual(a.labels, b.labels)\n  );\n}\n\nexport function normalizeCoordinateArray(\n  coordinates: number[],\n  labels: string[],\n) {\n  const map = new Map<number, string>();\n  for (let i = 0, length = coordinates.length; i < length; ++i) {\n    map.set(coordinates[i], labels[i]);\n  }\n  coordinates = Array.from(map.keys());\n  coordinates.sort((a, b) => a - b);\n  labels = Array.from(coordinates, (x) => map.get(x)!);\n  return { coordinates, labels };\n}\n\nexport function mergeCoordinateArrays(\n  coordinateArrays: ReadonlyArray<CoordinateArray>,\n): CoordinateArray {\n  if (coordinateArrays.length === 1) return coordinateArrays[0];\n  const map = new Map<number, string>();\n  let explicit = false;\n  for (const x of coordinateArrays) {\n    if (x.explicit) explicit = true;\n    const { coordinates, labels } = x;\n    for (let i = 0, length = coordinates.length; i < length; ++i) {\n      map.set(coordinates[i], labels[i]);\n    }\n  }\n  const coordinates = Array.from(map.keys());\n  coordinates.sort((a, b) => a - b);\n  const labels = Array.from(coordinates, (x) => map.get(x)!);\n  return { explicit, coordinates, labels };\n}\n\nexport function mergeOptionalCoordinateArrays(\n  coordinateArrays: ReadonlyArray<CoordinateArray | undefined>,\n): CoordinateArray | undefined {\n  coordinateArrays = coordinateArrays.filter((x) => x !== undefined);\n  if (coordinateArrays.length === 0) return undefined;\n  return mergeCoordinateArrays(\n    coordinateArrays as ReadonlyArray<CoordinateArray>,\n  );\n}\n\nexport function transformedBoundingBoxesEqual(\n  a: TransformedBoundingBox,\n  b: TransformedBoundingBox,\n) {\n  return (\n    arraysEqual(a.transform, b.transform) && boundingBoxesEqual(a.box, b.box)\n  );\n}\n\nexport function coordinateSpacesEqual(a: CoordinateSpace, b: CoordinateSpace) {\n  return (\n    a.valid === b.valid &&\n    a.rank === b.rank &&\n    arraysEqual(a.names, b.names) &&\n    arraysEqual(a.ids, b.ids) &&\n    arraysEqual(a.timestamps, b.timestamps) &&\n    arraysEqual(a.units, b.units) &&\n    arraysEqual(a.scales, b.scales) &&\n    arraysEqualWithPredicate(\n      a.boundingBoxes,\n      b.boundingBoxes,\n      transformedBoundingBoxesEqual,\n    ) &&\n    arraysEqualWithPredicate(\n      a.coordinateArrays,\n      b.coordinateArrays,\n      coordinateArraysEqual,\n    )\n  );\n}\n\nexport function unitsFromJson(\n  units: string[],\n  scaleExponents: Float64Array,\n  obj: any,\n) {\n  parseFixedLengthArray(units, obj, (x: any, index: number) => {\n    const result = unitFromJson(x);\n    scaleExponents[index] = result.exponent;\n    return result.unit;\n  });\n}\n\nexport function makeCoordinateSpace(space: {\n  readonly valid?: boolean;\n  readonly names: readonly string[];\n  readonly units: readonly string[];\n  readonly scales: Float64Array;\n  readonly rank?: number;\n  readonly timestamps?: readonly number[];\n  readonly ids?: readonly DimensionId[];\n  readonly boundingBoxes?: readonly TransformedBoundingBox[];\n  readonly bounds?: CoordinateSpaceBounds;\n  readonly coordinateArrays?: (CoordinateArray | undefined)[];\n}): CoordinateSpace {\n  const { names, units, scales } = space;\n  const {\n    valid = true,\n    rank = names.length,\n    timestamps = names.map(() => Number.NEGATIVE_INFINITY),\n    ids = names.map((_, i) => -i),\n    boundingBoxes = [],\n  } = space;\n  const { coordinateArrays = new Array<CoordinateArray | undefined>(rank) } =\n    space;\n  const { bounds = computeCombinedBounds(boundingBoxes, rank) } = space;\n  return {\n    valid,\n    rank,\n    names,\n    timestamps,\n    ids,\n    units,\n    scales,\n    boundingBoxes,\n    bounds,\n    coordinateArrays,\n  };\n}\n\nexport const emptyInvalidCoordinateSpace = makeCoordinateSpace({\n  valid: false,\n  names: [],\n  units: [],\n  scales: vector.kEmptyFloat64Vec,\n  boundingBoxes: [],\n});\n\nexport const emptyValidCoordinateSpace = makeCoordinateSpace({\n  valid: true,\n  names: [],\n  units: [],\n  scales: vector.kEmptyFloat64Vec,\n  boundingBoxes: [],\n});\n\nfunction unitAndScaleFromJson(obj: unknown) {\n  const [scaleObj, unitObj] = expectArray(obj, 2);\n  const scale = verifyFinitePositiveFloat(scaleObj);\n  const unitString = verifyString(unitObj);\n  const result = supportedUnits.get(unitString);\n  if (result === undefined)\n    throw new Error(`Invalid unit: ${JSON.stringify(unitString)}`);\n  return { unit: result.unit, scale: scaleByExp10(scale, result.exponent) };\n}\n\nexport function coordinateSpaceFromJson(\n  obj: any,\n  allowNumericalDimensions = false,\n): CoordinateSpace {\n  if (obj === undefined) return emptyInvalidCoordinateSpace;\n  verifyObject(obj);\n  const names = dimensionNamesFromJson(\n    Object.keys(obj),\n    allowNumericalDimensions,\n  );\n  const rank = names.length;\n  const units = new Array<string>(rank);\n  const scales = new Float64Array(rank);\n  const coordinateArrays = new Array<CoordinateArray | undefined>(rank);\n  for (let i = 0; i < rank; ++i) {\n    verifyObjectProperty(obj, names[i], (mem) => {\n      if (Array.isArray(mem)) {\n        // Normal unit-scale dimension.\n        const { unit, scale } = unitAndScaleFromJson(mem);\n        units[i] = unit;\n        scales[i] = scale;\n      } else {\n        // Coordinate array dimension.\n        verifyObject(mem);\n        const coordinates = verifyObjectProperty(\n          mem,\n          \"coordinates\",\n          verifyIntegerArray,\n        );\n        const labels = verifyObjectProperty(mem, \"labels\", verifyStringArray);\n        const length = coordinates.length;\n        if (length !== labels.length) {\n          throw new Error(\n            `Length of coordinates array (${length}) ` +\n              `does not match length of labels array (${labels.length})`,\n          );\n        }\n        units[i] = \"\";\n        scales[i] = 1;\n        coordinateArrays[i] = {\n          explicit: true,\n          ...normalizeCoordinateArray(coordinates, labels),\n        };\n      }\n    });\n  }\n  return makeCoordinateSpace({\n    valid: false,\n    names,\n    units,\n    scales,\n    coordinateArrays,\n  });\n}\n\nexport function coordinateSpaceToJson(coordinateSpace: CoordinateSpace): any {\n  const { rank } = coordinateSpace;\n  if (rank === 0) return undefined;\n  const { names, units, scales, coordinateArrays } = coordinateSpace;\n  const json: any = {};\n  for (let i = 0; i < rank; ++i) {\n    const name = names[i];\n    const coordinateArray = coordinateArrays[i];\n    if (coordinateArray?.explicit) {\n      json[name] = {\n        coordinates: Array.from(coordinateArray.coordinates),\n        labels: coordinateArray.labels,\n      };\n    } else {\n      json[name] = [scales[i], units[i]];\n    }\n  }\n  return json;\n}\n\nexport class TrackableCoordinateSpace extends WatchableValue<CoordinateSpace> {\n  constructor() {\n    super(emptyInvalidCoordinateSpace);\n  }\n\n  toJSON() {\n    return coordinateSpaceToJson(this.value);\n  }\n  reset() {\n    this.value = emptyInvalidCoordinateSpace;\n  }\n  restoreState(obj: any) {\n    this.value = coordinateSpaceFromJson(obj);\n  }\n}\n\nexport interface BoundingBox {\n  lowerBounds: Float64Array;\n  upperBounds: Float64Array;\n}\n\nexport interface CoordinateSpaceBounds extends BoundingBox {\n  voxelCenterAtIntegerCoordinates: boolean[];\n}\n\nexport function roundCoordinateToVoxelCenter(\n  bounds: CoordinateSpaceBounds,\n  dimIndex: number,\n  coordinate: number,\n) {\n  if (bounds.voxelCenterAtIntegerCoordinates[dimIndex]) {\n    coordinate = Math.round(coordinate);\n  } else {\n    coordinate = Math.floor(coordinate) + 0.5;\n  }\n  return coordinate;\n}\n\nexport function getDisplayLowerUpperBounds(\n  bounds: CoordinateSpaceBounds,\n  dimIndex: number,\n) {\n  let lower = bounds.lowerBounds[dimIndex];\n  let upper = bounds.upperBounds[dimIndex];\n  if (bounds.voxelCenterAtIntegerCoordinates[dimIndex]) {\n    lower += 0.5;\n    upper += 0.5;\n  }\n  return [lower, upper];\n}\n\n// Clamps `coordinate` to `[lower, upper - 1]`.  This is intended to be used with\n// `roundCoordinateToVoxelCenter`.  If not rounding, it may be desirable to instead\n// clamp to `[lower upper]`.\nexport function clampCoordinateToBounds(\n  bounds: CoordinateSpaceBounds,\n  dimIndex: number,\n  coordinate: number,\n) {\n  const upperBound = bounds.upperBounds[dimIndex];\n  if (Number.isFinite(upperBound)) {\n    coordinate = Math.min(coordinate, upperBound - 1);\n  }\n\n  const lowerBound = bounds.lowerBounds[dimIndex];\n  if (Number.isFinite(lowerBound)) {\n    coordinate = Math.max(coordinate, lowerBound);\n  }\n  return coordinate;\n}\n\nexport function clampAndRoundCoordinateToVoxelCenter(\n  bounds: CoordinateSpaceBounds,\n  dimIndex: number,\n  coordinate: number,\n): number {\n  coordinate = clampCoordinateToBounds(bounds, dimIndex, coordinate);\n  return roundCoordinateToVoxelCenter(bounds, dimIndex, coordinate);\n}\n\nexport function getCenterBound(lower: number, upper: number) {\n  let x = (lower + upper) / 2;\n  if (!Number.isFinite(x)) x = Math.min(Math.max(0, lower), upper);\n  return x;\n}\n\nexport function getBoundingBoxCenter(\n  out: Float32Array,\n  bounds: BoundingBox,\n): Float32Array {\n  const { lowerBounds, upperBounds } = bounds;\n  const rank = out.length;\n  for (let i = 0; i < rank; ++i) {\n    out[i] = getCenterBound(lowerBounds[i], upperBounds[i]);\n  }\n  return out;\n}\n\nexport interface TransformedBoundingBox {\n  box: BoundingBox;\n\n  /**\n   * Transform from \"box\" coordinate space to target coordinate space.\n   */\n  transform: Float64Array;\n}\n\nexport function makeIdentityTransformedBoundingBox(box: BoundingBox) {\n  const rank = box.lowerBounds.length;\n  return {\n    box,\n    transform: matrix.createIdentity(Float64Array, rank, rank + 1),\n  };\n}\n\nexport function computeCombinedLowerUpperBound(\n  boundingBox: TransformedBoundingBox,\n  outputDimension: number,\n  outputRank: number,\n): { lower: number; upper: number } | undefined {\n  const {\n    box: { lowerBounds: baseLowerBounds, upperBounds: baseUpperBounds },\n    transform,\n  } = boundingBox;\n  const inputRank = baseLowerBounds.length;\n  const stride = outputRank;\n  const offset = transform[stride * inputRank + outputDimension];\n  let targetLower = offset;\n  let targetUpper = offset;\n  let hasCoefficient = false;\n  for (let inputDim = 0; inputDim < inputRank; ++inputDim) {\n    const c = transform[stride * inputDim + outputDimension];\n    if (c === 0) continue;\n    const lower = c * baseLowerBounds[inputDim];\n    const upper = c * baseUpperBounds[inputDim];\n    targetLower += Math.min(lower, upper);\n    targetUpper += Math.max(lower, upper);\n    hasCoefficient = true;\n  }\n  if (!hasCoefficient) return undefined;\n  return { lower: targetLower, upper: targetUpper };\n}\n\nexport function computeCombinedBounds(\n  boundingBoxes: readonly TransformedBoundingBox[],\n  outputRank: number,\n): CoordinateSpaceBounds {\n  const lowerBounds = new Float64Array(outputRank);\n  const upperBounds = new Float64Array(outputRank);\n  lowerBounds.fill(Number.NEGATIVE_INFINITY);\n  upperBounds.fill(Number.POSITIVE_INFINITY);\n\n  // Number of bounding boxes for which both lower and upper bound has a fractional part of `0.5`.\n  const halfIntegerBounds = new Array<number>(outputRank);\n  halfIntegerBounds.fill(0);\n\n  // Number of bounding boxes for which both lower and upper bound has a fractional part of `0.0`.\n  const integerBounds = new Array<number>(outputRank);\n  integerBounds.fill(0);\n\n  for (const boundingBox of boundingBoxes) {\n    for (let outputDim = 0; outputDim < outputRank; ++outputDim) {\n      const result = computeCombinedLowerUpperBound(\n        boundingBox,\n        outputDim,\n        outputRank,\n      );\n      if (result === undefined) continue;\n      const { lower: targetLower, upper: targetUpper } = result;\n      if (Number.isFinite(targetLower) && Number.isFinite(targetUpper)) {\n        const lowerFloor = Math.floor(targetLower);\n        const upperFloor = Math.floor(targetUpper);\n        if (lowerFloor === targetLower && upperFloor === targetUpper) {\n          ++integerBounds[outputDim];\n        } else if (\n          targetLower - lowerFloor === 0.5 &&\n          targetUpper - upperFloor === 0.5\n        ) {\n          ++halfIntegerBounds[outputDim];\n        }\n      }\n      lowerBounds[outputDim] =\n        lowerBounds[outputDim] === Number.NEGATIVE_INFINITY\n          ? targetLower\n          : Math.min(lowerBounds[outputDim], targetLower);\n      upperBounds[outputDim] =\n        upperBounds[outputDim] === Number.POSITIVE_INFINITY\n          ? targetUpper\n          : Math.max(upperBounds[outputDim], targetUpper);\n    }\n  }\n\n  const voxelCenterAtIntegerCoordinates = integerBounds.map(\n    (integerCount, i) => {\n      const halfIntegerCount = halfIntegerBounds[i];\n      // If all bounding boxes have half-integer bounds, assume voxel center is at integer\n      // coordinates.  Otherwise, assume voxel center is at half-integer coordinates.\n      return halfIntegerCount > 0 && integerCount === 0;\n    },\n  );\n  return { lowerBounds, upperBounds, voxelCenterAtIntegerCoordinates };\n}\n\nexport function extendTransformedBoundingBox(\n  boundingBox: TransformedBoundingBox,\n  newOutputRank: number,\n  newOutputDims: readonly number[],\n): TransformedBoundingBox {\n  const { transform: oldTransform, box } = boundingBox;\n  const oldOutputRank = newOutputDims.length;\n  const inputRank = box.lowerBounds.length;\n  const newTransform = new Float64Array((inputRank + 1) * newOutputRank);\n  for (let oldOutputDim = 0; oldOutputDim < oldOutputRank; ++oldOutputDim) {\n    const newOutputDim = newOutputDims[oldOutputDim];\n    if (newOutputDim === -1) continue;\n    for (let inputDim = 0; inputDim <= inputRank; ++inputDim) {\n      newTransform[inputDim * newOutputRank + newOutputDim] =\n        oldTransform[inputDim * oldOutputRank + oldOutputDim];\n    }\n  }\n  return {\n    transform: newTransform,\n    box,\n  };\n}\n\nexport function makeSingletonDimTransformedBoundingBox(\n  outputRank: number,\n  outputDim: number,\n) {\n  const box = {\n    lowerBounds: Float64Array.of(0),\n    upperBounds: Float64Array.of(1),\n  };\n  const transform = new Float64Array(2 * outputRank);\n  transform[outputDim] = 1;\n  return { transform, box };\n}\n\nexport function extendTransformedBoundingBoxUpToRank(\n  boundingBox: TransformedBoundingBox,\n  oldOutputRank: number,\n  newOutputRank: number,\n): TransformedBoundingBox {\n  if (oldOutputRank === newOutputRank) return boundingBox;\n  const { box } = boundingBox;\n  const inputRank = box.lowerBounds.length;\n  const transform = new Float64Array((inputRank + 1) * newOutputRank);\n  matrix.copy(\n    transform,\n    newOutputRank,\n    boundingBox.transform,\n    oldOutputRank,\n    oldOutputRank,\n    inputRank + 1,\n  );\n  return { box, transform };\n}\n\nexport interface CoordinateSpaceTransform {\n  /**\n   * Equal to `outputSpace.rank`.\n   */\n  readonly rank: number;\n\n  /**\n   * The source rank, which is <= rank.  Input dimensions >= sourceRank are synthetic and serve only\n   * to embed the source data in a larger view space.\n   */\n  readonly sourceRank: number;\n\n  /**\n   * May have rank less than `outputSpace.rank`, in which case additional unnamed dimensions with\n   * range `[0, 1)` are implicitly added.\n   */\n  readonly inputSpace: CoordinateSpace;\n\n  readonly outputSpace: CoordinateSpace;\n\n  /**\n   * `(rank + 1) * (rank + 1)` homogeneous column-major transformation matrix, where columns\n   * correspond to input dimensions and rows correspond to output dimensions.\n   */\n  readonly transform: Float64Array;\n}\n\nexport function coordinateSpaceTransformsEquivalent(\n  defaultTransform: CoordinateSpaceTransform,\n  transform: CoordinateSpaceTransform,\n) {\n  const { rank, sourceRank } = defaultTransform;\n  if (rank !== transform.rank || sourceRank !== transform.sourceRank)\n    return false;\n  const { inputSpace: defaultInputSpace } = defaultTransform;\n  const { inputSpace } = transform;\n  if (\n    !arraysEqual(inputSpace.scales, defaultInputSpace.scales) ||\n    !arraysEqual(inputSpace.units, defaultInputSpace.units) ||\n    !arraysEqual(\n      transform.outputSpace.names,\n      defaultTransform.outputSpace.names,\n    )\n  ) {\n    return false;\n  }\n  return isTransformDerivableFromDefault(\n    defaultTransform.transform,\n    rank,\n    defaultTransform.outputSpace.scales,\n    transform.transform,\n    rank,\n    transform.outputSpace.scales,\n  );\n}\n\nexport function makeIdentityTransform(\n  inputSpace: CoordinateSpace,\n): CoordinateSpaceTransform {\n  return {\n    rank: inputSpace.rank,\n    sourceRank: inputSpace.rank,\n    inputSpace,\n    outputSpace: inputSpace,\n    transform: matrix.createIdentity(Float64Array, inputSpace.rank + 1),\n  };\n}\n\nfunction transformBoundingBox(\n  boundingBox: TransformedBoundingBox,\n  transform: Float64Array,\n  sourceScales: Float64Array,\n  targetScales: Float64Array,\n): TransformedBoundingBox {\n  const { transform: oldBoxTransform, box } = boundingBox;\n  const inputRank = boundingBox.box.lowerBounds.length;\n  const targetRank = targetScales.length;\n  // transform is a column-major homogeneous `(rows=targetRank+1, cols=targetRank+1)` matrix.\n  // oldBoxTransform is a column-major `(rows=targetRank, cols=inputRank+1)` matrix.\n  // newBoxTransform is a column-major `(rows=targetRank, cols=inputRank+1)` matrix.\n  const newBoxTransform = new Float64Array((inputRank + 1) * targetRank);\n  for (let targetDim = 0; targetDim < targetRank; ++targetDim) {\n    const targetScale = targetScales[targetDim];\n    // Compute the rotation/scaling components\n    for (let inputDim = 0; inputDim < inputRank; ++inputDim) {\n      let sum = 0;\n      for (let sourceDim = 0; sourceDim < targetRank; ++sourceDim) {\n        const sourceScale = sourceScales[sourceDim];\n        sum +=\n          transform[(targetRank + 1) * sourceDim + targetDim] *\n          oldBoxTransform[targetRank * inputDim + sourceDim] *\n          (sourceScale / targetScale);\n      }\n      newBoxTransform[targetRank * inputDim + targetDim] = sum;\n    }\n    // Compute the translation component\n    let sum = transform[(targetRank + 1) * targetRank + targetDim];\n    for (let sourceDim = 0; sourceDim < targetRank; ++sourceDim) {\n      const sourceScale = sourceScales[sourceDim];\n      sum +=\n        transform[(targetRank + 1) * sourceDim + targetDim] *\n        oldBoxTransform[targetRank * inputRank + sourceDim] *\n        (sourceScale / targetScale);\n    }\n    newBoxTransform[inputRank * targetRank + targetDim] = sum;\n  }\n  return {\n    transform: newBoxTransform,\n    box,\n  };\n}\n\nfunction getTransformedBoundingBoxes(\n  inputSpace: CoordinateSpace,\n  transform: Float64Array,\n  outputScales: Float64Array,\n) {\n  return inputSpace.boundingBoxes.map((boundingBox) =>\n    transformBoundingBox(\n      boundingBox,\n      transform,\n      inputSpace.scales,\n      outputScales,\n    ),\n  );\n}\n\nexport function getOutputSpaceWithTransformedBoundingBoxes(\n  inputSpace: CoordinateSpace,\n  transform: Float64Array,\n  oldOutputSpace: CoordinateSpace,\n) {\n  const newSpace = makeCoordinateSpace({\n    valid: inputSpace.valid,\n    rank: oldOutputSpace.rank,\n    ids: oldOutputSpace.ids,\n    names: oldOutputSpace.names,\n    timestamps: oldOutputSpace.timestamps,\n    scales: oldOutputSpace.scales,\n    units: oldOutputSpace.units,\n    boundingBoxes: getTransformedBoundingBoxes(\n      inputSpace,\n      transform,\n      oldOutputSpace.scales,\n    ),\n    coordinateArrays: oldOutputSpace.coordinateArrays,\n  });\n  if (coordinateSpacesEqual(newSpace, oldOutputSpace)) return oldOutputSpace;\n  return newSpace;\n}\n\nexport function isValidDimensionName(\n  name: string,\n  allowNumericalNames = false,\n) {\n  if (allowNumericalNames) {\n    const n = Number(name);\n    if (Number.isInteger(n) && n >= 0) return true;\n  }\n  return name.match(/^[a-zA-Z][a-zA-Z_0-9]*['^]?$/) !== null;\n}\n\nexport function validateDimensionNames(\n  names: string[],\n  allowNumericalNames = false,\n) {\n  const seenNames = new Set<string>();\n  for (const name of names) {\n    if (!isValidDimensionName(name, allowNumericalNames)) return false;\n    if (seenNames.has(name)) return false;\n    seenNames.add(name);\n  }\n  return true;\n}\n\nexport function getDimensionNameValidity(names: readonly string[]): boolean[] {\n  const rank = names.length;\n  const isValid = new Array<boolean>(rank);\n  isValid.fill(true);\n  for (let i = 0; i < rank; ++i) {\n    const name = names[i];\n    if (!isValidDimensionName(name)) {\n      isValid[i] = false;\n      continue;\n    }\n    const otherIndex = names.indexOf(name, i + 1);\n    if (otherIndex !== -1) {\n      isValid[i] = false;\n      isValid[otherIndex] = false;\n    }\n  }\n  return isValid;\n}\n\nexport function isLocalDimension(name: string) {\n  return name.endsWith(\"'\");\n}\n\nexport function isLocalOrChannelDimension(name: string) {\n  return name.endsWith(\"'\") || name.endsWith(\"^\");\n}\n\nexport function isChannelDimension(name: string) {\n  return name.endsWith(\"^\");\n}\n\nexport function isGlobalDimension(name: string) {\n  return !isLocalOrChannelDimension(name);\n}\n\nexport function convertTransformOutputScales(\n  existingTransform: Float64Array,\n  existingOutputScales: Float64Array,\n  newOutputScales: Float64Array,\n) {\n  const newTransform = new Float64Array(existingTransform);\n  const rank = existingOutputScales.length;\n  const baseIndex = (rank + 1) * rank;\n  for (let i = 0; i < rank; ++i) {\n    newTransform[baseIndex + i] *= existingOutputScales[i] / newOutputScales[i];\n  }\n  return newTransform;\n}\n\nfunction isTransformDerivableFromDefault(\n  defaultTransform: Float64Array,\n  defaultRank: number,\n  defaultOutputScales: Float64Array,\n  newTransform: Float64Array,\n  newRank: number,\n  newOutputScales: Float64Array,\n) {\n  // Verify that matched linear portion is equal.\n  if (\n    !matrix.equal(\n      defaultTransform,\n      defaultRank + 1,\n      newTransform,\n      newRank + 1,\n      defaultRank,\n      defaultRank,\n    )\n  )\n    return false;\n\n  // Verify that common translation is equivalent.\n  for (let i = 0; i < defaultRank; ++i) {\n    const aValue = defaultTransform[(defaultRank + 1) * defaultRank + i];\n    const bValue = newTransform[(newRank + 1) * newRank + i];\n    if (aValue * (defaultOutputScales[i] / newOutputScales[i]) !== bValue)\n      return false;\n  }\n\n  // Verify that extended translation is 0.\n  for (let i = defaultRank; i < newRank; ++i) {\n    if (newTransform[(newRank + 1) * newRank + i] !== 0) return false;\n  }\n\n  // Verify that extended linear portion is identity.\n  for (let i = defaultRank; i < newRank; ++i) {\n    for (let j = 0; j < defaultRank; ++j) {\n      if (newTransform[(newRank + 1) * j + i] !== 0) return false;\n    }\n    for (let j = 0; j < newRank; ++j) {\n      const coeff = newTransform[(newRank + 1) * i + j];\n      if (i === j) {\n        if (coeff !== 1) return false;\n      } else {\n        if (coeff !== 0) return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport function makeDimensionNameUnique(\n  name: string,\n  existingNames: readonly string[],\n) {\n  if (!existingNames.includes(name)) return name;\n  const [, prefix, suffix] = name.match(/^([^']*)('?)$/)!;\n  for (let i = 0; ; ++i) {\n    const newName = `${prefix}${i}${suffix}`;\n    if (!existingNames.includes(newName)) return newName;\n  }\n}\n\nexport function remapTransformInputSpace(\n  old: CoordinateSpaceTransform,\n  inputSpace: CoordinateSpace,\n): CoordinateSpaceTransform {\n  const { inputSpace: oldInputSpace, transform: oldTransform } = old;\n  const { ids: oldInputDimensionIds, rank: oldRank } = oldInputSpace;\n  const {\n    rank: newRank,\n    names: newInputDimensionNames,\n    units: newInputUnits,\n    scales: newInputScales,\n  } = inputSpace;\n  const removedOldInputIndices = new Array(oldRank);\n  removedOldInputIndices.fill(true);\n  const addedInputDimensionIndices: number[] = [];\n  const newToOldInputDimensionIndices: number[] = inputSpace.ids.map(\n    (id, i) => {\n      const oldIndex = oldInputDimensionIds.indexOf(id);\n      if (oldIndex !== -1) {\n        removedOldInputIndices[oldIndex] = false;\n      } else {\n        addedInputDimensionIndices.push(i);\n      }\n      return oldIndex;\n    },\n  );\n  const { outputSpace: oldOutputSpace } = old;\n  const {\n    names: oldOutputDimensionNames,\n    units: oldOutputUnits,\n    scales: oldOutputScales,\n    ids: oldOutputDimensionIds,\n    timestamps: oldOutputTimestamps,\n    coordinateArrays: oldOutputCoordinateArrays,\n  } = oldOutputSpace;\n  // For now just use a simple mapping.\n  const removedOldOutputIndices = removedOldInputIndices;\n  const outputDimensionNames: string[] = [];\n  const outputUnits: string[] = [];\n  const outputScales = new Float64Array(newRank);\n  const outputDimensionIds: DimensionId[] = [];\n  const outputDimensionTimestamps: number[] = [];\n  const outputCoordinateArrays = new Array<CoordinateArray | undefined>(\n    newRank,\n  );\n  let newOutputDim = 0;\n  const newTransform = new Float64Array((newRank + 1) ** 2);\n  newTransform[newTransform.length - 1] = 1;\n  for (let oldOutputDim = 0; oldOutputDim < oldRank; ++oldOutputDim) {\n    if (removedOldOutputIndices[oldOutputDim]) continue;\n    outputDimensionNames[newOutputDim] = oldOutputDimensionNames[oldOutputDim];\n    outputDimensionIds[newOutputDim] = oldOutputDimensionIds[oldOutputDim];\n    outputUnits[newOutputDim] = oldOutputUnits[oldOutputDim];\n    outputScales[newOutputDim] = oldOutputScales[oldOutputDim];\n    outputDimensionTimestamps[newOutputDim] = oldOutputTimestamps[oldOutputDim];\n    outputCoordinateArrays[newOutputDim] =\n      oldOutputCoordinateArrays[oldOutputDim];\n    for (let newInputDim = 0; newInputDim < newRank; ++newInputDim) {\n      const oldInputDim = newToOldInputDimensionIndices[newInputDim];\n      if (oldInputDim === -1) continue;\n      newTransform[newInputDim * (newRank + 1) + newOutputDim] =\n        oldTransform[oldInputDim * (oldRank + 1) + oldOutputDim];\n    }\n    newTransform[newRank * (newRank + 1) + newOutputDim] =\n      oldTransform[oldRank * (oldRank + 1) + oldOutputDim];\n    ++newOutputDim;\n  }\n  for (const newInputDim of addedInputDimensionIndices) {\n    outputDimensionIds[newOutputDim] = newDimensionId();\n    outputDimensionNames[newOutputDim] = makeDimensionNameUnique(\n      newInputDimensionNames[newInputDim],\n      outputDimensionNames,\n    );\n    outputScales[newOutputDim] = newInputScales[newInputDim];\n    outputUnits[newOutputDim] = newInputUnits[newInputDim];\n    newTransform[newInputDim * (newRank + 1) + newOutputDim] = 1;\n    ++newOutputDim;\n  }\n  const outputSpace = makeCoordinateSpace({\n    valid: inputSpace.valid,\n    rank: newRank,\n    names: outputDimensionNames,\n    ids: outputDimensionIds,\n    timestamps: outputDimensionTimestamps,\n    units: outputUnits,\n    scales: outputScales,\n    boundingBoxes: getTransformedBoundingBoxes(\n      inputSpace,\n      newTransform,\n      outputScales,\n    ),\n    coordinateArrays: outputCoordinateArrays,\n  });\n  return {\n    rank: newRank,\n    sourceRank: old.sourceRank,\n    inputSpace,\n    outputSpace,\n    transform: newTransform,\n  };\n}\n\nfunction normalizeCoordinateSpaceTransform(value: CoordinateSpaceTransform) {\n  const outputSpace = getOutputSpaceWithTransformedBoundingBoxes(\n    value.inputSpace,\n    value.transform,\n    value.outputSpace,\n  );\n  if (outputSpace === value.outputSpace) return value;\n  return {\n    rank: value.rank,\n    sourceRank: value.sourceRank,\n    inputSpace: value.inputSpace,\n    transform: value.transform,\n    outputSpace,\n  };\n}\n\nexport class WatchableCoordinateSpaceTransform\n  implements Trackable, WatchableValueInterface<CoordinateSpaceTransform>\n{\n  private value_: CoordinateSpaceTransform | undefined = undefined;\n  readonly outputSpace: WatchableValueInterface<CoordinateSpace>;\n  readonly inputSpace: WatchableValueInterface<CoordinateSpace>;\n  changed = new NullarySignal();\n  private inputSpaceChanged = new NullarySignal();\n  readonly defaultTransform: CoordinateSpaceTransform;\n\n  constructor(\n    defaultTransform: CoordinateSpaceTransform,\n    public readonly mutableSourceRank: boolean = false,\n  ) {\n    this.defaultTransform = normalizeCoordinateSpaceTransform(defaultTransform);\n    const self = this;\n    this.outputSpace = {\n      changed: self.changed,\n      get value() {\n        return self.value.outputSpace;\n      },\n      set value(newOutputSpace: CoordinateSpace) {\n        const { value } = self;\n        if (coordinateSpacesEqual(value.outputSpace, newOutputSpace)) return;\n        if (value.rank !== newOutputSpace.rank) return;\n        const transform = convertTransformOutputScales(\n          value.transform,\n          value.outputSpace.scales,\n          newOutputSpace.scales,\n        );\n        self.value_ = {\n          sourceRank: value.sourceRank,\n          rank: value.rank,\n          inputSpace: value.inputSpace,\n          outputSpace: getOutputSpaceWithTransformedBoundingBoxes(\n            value.inputSpace,\n            transform,\n            newOutputSpace,\n          ),\n          transform,\n        };\n        self.changed.dispatch();\n      },\n    };\n    this.inputSpace = {\n      changed: self.inputSpaceChanged,\n      get value() {\n        return self.value.inputSpace;\n      },\n      set value(newInputSpace: CoordinateSpace) {\n        const { value } = self;\n        if (coordinateSpacesEqual(value.inputSpace, newInputSpace)) return;\n        self.value_ = remapTransformInputSpace(value, newInputSpace);\n        self.inputSpaceChanged.dispatch();\n        self.changed.dispatch();\n      },\n    };\n  }\n\n  set value(value: CoordinateSpaceTransform) {\n    const existingValue = this.value;\n    if (value === existingValue) return;\n    this.value_ = normalizeCoordinateSpaceTransform(value);\n    if (value.inputSpace !== existingValue.inputSpace) {\n      this.inputSpaceChanged.dispatch();\n    }\n    this.changed.dispatch();\n  }\n\n  get value(): CoordinateSpaceTransform {\n    let { value_: value } = this;\n    if (value === undefined) {\n      value = this.value_ = this.defaultTransform;\n    }\n    return value;\n  }\n\n  reset() {\n    if (this.value_ === this.defaultTransform) return;\n    this.value_ = this.defaultTransform;\n    this.inputSpaceChanged.dispatch();\n    this.changed.dispatch();\n  }\n\n  get defaultInputSpace() {\n    return this.defaultTransform.inputSpace;\n  }\n\n  get spec(): Readonly<CoordinateTransformSpecification> | undefined {\n    const { value } = this;\n    const { rank, transform, inputSpace, outputSpace, sourceRank } = value;\n    const { defaultTransform, mutableSourceRank } = this;\n    const {\n      inputSpace: defaultInputSpace,\n      rank: defaultRank,\n      transform: defaultTransformMatrix,\n      outputSpace: defaultOutputSpace,\n    } = defaultTransform;\n    const { units, scales } = inputSpace;\n    const inputSpaceSame =\n      sourceRank === rank &&\n      arraysEqual(\n        scales,\n        mutableSourceRank ? outputSpace.scales : defaultInputSpace.scales,\n      ) &&\n      arraysEqual(\n        units,\n        mutableSourceRank ? outputSpace.units : defaultInputSpace.units,\n      );\n    const transformSame = isTransformDerivableFromDefault(\n      defaultTransformMatrix,\n      defaultRank,\n      defaultOutputSpace.scales,\n      transform,\n      rank,\n      outputSpace.scales,\n    );\n    const outputNamesSame = arraysEqual(\n      defaultOutputSpace.names,\n      outputSpace.names,\n    );\n    if (transformSame && outputNamesSame && inputSpaceSame) {\n      return undefined;\n    }\n    return {\n      sourceRank,\n      transform: transformSame ? undefined : transform,\n      outputSpace: value.outputSpace,\n      inputSpace: inputSpaceSame ? undefined : inputSpace,\n    };\n  }\n\n  set transform(transform: Float64Array) {\n    const { value } = this;\n    const { inputSpace } = value;\n    this.value_ = {\n      rank: value.rank,\n      sourceRank: value.sourceRank,\n      inputSpace,\n      transform,\n      outputSpace: getOutputSpaceWithTransformedBoundingBoxes(\n        inputSpace,\n        transform,\n        value.outputSpace,\n      ),\n    };\n    this.changed.dispatch();\n  }\n\n  set spec(spec: Readonly<CoordinateTransformSpecification> | undefined) {\n    if (spec === undefined) {\n      this.reset();\n      return;\n    }\n    if (this.mutableSourceRank) {\n      const origInputSpace = spec.inputSpace || spec.outputSpace;\n      const rank = origInputSpace.rank;\n      const inputSpace = makeCoordinateSpace({\n        rank,\n        names: origInputSpace.names.map((_, i) => `${i}`),\n        units: origInputSpace.units,\n        scales: origInputSpace.scales,\n        coordinateArrays: origInputSpace.coordinateArrays,\n      });\n      this.value = {\n        rank,\n        transform:\n          spec.transform || matrix.createIdentity(Float64Array, rank + 1),\n        sourceRank: spec.sourceRank,\n        outputSpace: spec.outputSpace,\n        inputSpace,\n      };\n      return;\n    }\n    const {\n      inputSpace: defaultInputSpace,\n      sourceRank: defaultSourceRank,\n      outputSpace: defaultOutputSpace,\n      transform: defaultTransformMatrix,\n      rank: defaultRank,\n    } = this.defaultTransform;\n    const {\n      inputSpace: specInputSpace,\n      sourceRank: specSourceRank,\n      outputSpace: specOutputSpace,\n      transform: specTransformMatrix,\n    } = spec;\n    const specRank = spec.outputSpace.rank;\n    const defaultInputNames = defaultInputSpace.names;\n    const specInputNames =\n      specInputSpace !== undefined ? specInputSpace.names : defaultInputNames;\n    const newToSpecDimensionIndices = new Array<number>(defaultSourceRank);\n    for (let defaultDim = 0; defaultDim < defaultSourceRank; ++defaultDim) {\n      let specDim = specInputNames.indexOf(defaultInputNames[defaultDim]);\n      if (specDim >= specSourceRank) specDim = -1;\n      newToSpecDimensionIndices[defaultDim] = specDim;\n    }\n    const newRank = specRank - specSourceRank + defaultSourceRank;\n    for (let i = specSourceRank; i < specRank; ++i) {\n      newToSpecDimensionIndices[defaultSourceRank + i - specSourceRank] = i;\n    }\n    const newInputScales = new Float64Array(newRank);\n    const newInputCoordinateArrays = new Array<CoordinateArray | undefined>(\n      newRank,\n    );\n    const newInputUnits: string[] = [];\n    for (let newDim = 0; newDim < defaultSourceRank; ++newDim) {\n      const specDim = newToSpecDimensionIndices[newDim];\n      if (specDim === -1 || specInputSpace === undefined) {\n        newInputScales[newDim] = defaultInputSpace.scales[newDim];\n        newInputUnits[newDim] = defaultInputSpace.units[newDim];\n        newInputCoordinateArrays[newDim] =\n          defaultInputSpace.coordinateArrays[newDim];\n      } else {\n        newInputScales[newDim] = specInputSpace.scales[specDim];\n        newInputUnits[newDim] = specInputSpace.units[specDim];\n        newInputCoordinateArrays[newDim] = mergeOptionalCoordinateArrays([\n          defaultInputSpace.coordinateArrays[newDim],\n          specInputSpace.coordinateArrays[specDim],\n        ]);\n      }\n    }\n    const specInputOrOutputSpace = specInputSpace || specOutputSpace;\n    const newInputNames = defaultInputNames.slice(0, defaultSourceRank);\n    const newOutputNames = defaultOutputSpace.names.slice(0, defaultSourceRank);\n    const newOutputCoordinateArrays = defaultOutputSpace.coordinateArrays.slice(\n      0,\n      defaultSourceRank,\n    );\n    const newOutputScales = new Float64Array(newRank);\n    const newOutputUnits: string[] = [];\n    for (let newDim = 0; newDim < newRank; ++newDim) {\n      const specDim = newToSpecDimensionIndices[newDim];\n      if (specDim === -1) {\n        newOutputScales[newDim] = defaultOutputSpace.scales[newDim];\n        newOutputUnits[newDim] = defaultOutputSpace.units[newDim];\n        newOutputCoordinateArrays[newDim] =\n          defaultOutputSpace.coordinateArrays[newDim];\n      } else {\n        newOutputNames[newDim] = specOutputSpace.names[specDim];\n        newOutputUnits[newDim] = specOutputSpace.units[specDim];\n        newOutputScales[newDim] = specOutputSpace.scales[specDim];\n        newOutputCoordinateArrays[newDim] =\n          specOutputSpace.coordinateArrays[specDim];\n      }\n    }\n    if (!validateDimensionNames(newOutputNames)) {\n      // Spec is incompatible, ignore it.\n      this.reset();\n      return;\n    }\n    // Handle singleton dimensions.\n    for (let newDim = defaultSourceRank; newDim < newRank; ++newDim) {\n      const specDim = newDim - defaultSourceRank + specSourceRank;\n      newInputScales[newDim] = specInputOrOutputSpace.scales[specDim];\n      newInputUnits[newDim] = specInputOrOutputSpace.units[specDim];\n      newInputNames[newDim] = `${newDim}`;\n    }\n\n    const newTransform = new Float64Array((newRank + 1) ** 2);\n    newTransform[newTransform.length - 1] = 1;\n    for (let newRow = 0; newRow < newRank; ++newRow) {\n      const specRow = newToSpecDimensionIndices[newRow];\n      let value: number;\n      if (specRow === -1 || specTransformMatrix === undefined) {\n        if (newRow >= defaultSourceRank) {\n          value = 0;\n        } else {\n          value =\n            defaultTransformMatrix[defaultRank * (defaultRank + 1) + newRow] *\n            (defaultOutputSpace.scales[newRow] / newOutputScales[newRow]);\n        }\n      } else {\n        value = specTransformMatrix[specRank * (specRank + 1) + specRow];\n      }\n      newTransform[newRank * (newRank + 1) + newRow] = value;\n      for (let newCol = 0; newCol < newRank; ++newCol) {\n        const specCol = newToSpecDimensionIndices[newCol];\n        let value: number;\n        if ((specRow === -1) !== (specCol === -1)) {\n          value = 0;\n        } else if (specRow === -1 || specTransformMatrix === undefined) {\n          if (specRow >= defaultSourceRank || specCol >= defaultSourceRank) {\n            value = specRow === specCol ? 1 : 0;\n          } else {\n            value = defaultTransformMatrix[newCol * (defaultRank + 1) + newRow];\n          }\n        } else {\n          value = specTransformMatrix[specCol * (specRank + 1) + specRow];\n        }\n        newTransform[newCol * (newRank + 1) + newRow] = value;\n      }\n    }\n    const boundingBoxes = defaultInputSpace.boundingBoxes.map((boundingBox) =>\n      extendTransformedBoundingBoxUpToRank(boundingBox, defaultRank, newRank),\n    );\n    for (let i = defaultSourceRank; i < newRank; ++i) {\n      boundingBoxes.push(makeSingletonDimTransformedBoundingBox(newRank, i));\n    }\n    // Propagate coordinate arrays from input dimensions to output dimensions.\n    for (let outputDim = 0; outputDim < newRank; ++outputDim) {\n      // Check if this output dimension is identity mapped from a single input dimension.\n      const translation = newTransform[newRank * (newRank + 1) + outputDim];\n      if (translation !== 0) continue;\n      let singleInputDim: number | undefined | null = undefined;\n      for (let inputDim = 0; inputDim < newRank; ++inputDim) {\n        const factor = newTransform[inputDim * (newRank + 1) + outputDim];\n        if (factor === 0) continue;\n        if (factor === 1) {\n          if (singleInputDim === undefined) {\n            // First input dimension that maps to this output dimension.\n            singleInputDim = inputDim;\n          } else {\n            // Multiple input dimensions map to this output dimension.\n            singleInputDim = null;\n            break;\n          }\n        } else {\n          // Non-identity mapping.\n          singleInputDim = null;\n          break;\n        }\n      }\n      if (singleInputDim == null) continue;\n      let coordinateArray = newInputCoordinateArrays[singleInputDim];\n      if (coordinateArray === undefined) continue;\n      if (coordinateArray.explicit) {\n        coordinateArray = { ...coordinateArray, explicit: false };\n      }\n      newOutputCoordinateArrays[outputDim] = mergeOptionalCoordinateArrays([\n        coordinateArray,\n        newOutputCoordinateArrays[outputDim],\n      ]);\n    }\n    this.value = {\n      rank: newRank,\n      transform: newTransform,\n      sourceRank: defaultSourceRank,\n      outputSpace: makeCoordinateSpace({\n        rank: newRank,\n        names: newOutputNames,\n        scales: newOutputScales,\n        units: newOutputUnits,\n        coordinateArrays: newOutputCoordinateArrays,\n      }),\n      inputSpace: makeCoordinateSpace({\n        rank: newRank,\n        names: newInputNames,\n        scales: newInputScales,\n        units: newInputUnits,\n        coordinateArrays: newInputCoordinateArrays,\n        boundingBoxes,\n      }),\n    };\n  }\n\n  toJSON() {\n    return coordinateTransformSpecificationToJson(this.spec);\n  }\n\n  restoreState(obj: unknown) {\n    this.spec = coordinateTransformSpecificationFromJson(obj);\n  }\n}\n\nexport function expectDimensionName(\n  obj: unknown,\n  allowNumericalNames = false,\n): string {\n  const name = verifyString(obj);\n  if (!isValidDimensionName(name, allowNumericalNames)) {\n    throw new Error(`Invalid dimension name: ${JSON.stringify(name)}`);\n  }\n  return name;\n}\n\nexport function dimensionNamesFromJson(obj: any, allowNumericalNames = false) {\n  const dimensions = parseArray(obj, (x) =>\n    expectDimensionName(x, allowNumericalNames),\n  );\n  if (!validateDimensionNames(dimensions, allowNumericalNames)) {\n    throw new Error(`Invalid dimensions: ${JSON.stringify(dimensions)}`);\n  }\n  return dimensions;\n}\n\ninterface BoundCoordinateSpace {\n  space: WatchableValueInterface<CoordinateSpace>;\n  prevValue: CoordinateSpace | undefined;\n  mappedDimensionIds: (DimensionId | undefined)[];\n}\n\nexport class CoordinateSpaceCombiner {\n  private bindings = new Set<BoundCoordinateSpace>();\n\n  private retainCount = 0;\n\n  private prevCombined: CoordinateSpace | undefined = this.combined.value;\n\n  dimensionRefCounts = new Map<string, number>();\n\n  getRenameValidity(newNames: readonly string[]): boolean[] {\n    const existingNames = this.combined.value.names;\n    const validity = getDimensionNameValidity(newNames);\n    const rank = newNames.length;\n    for (let i = 0; i < rank; ++i) {\n      if (!validity[i]) continue;\n      const newName = newNames[i];\n      if (existingNames.includes(newName)) continue;\n      let valid = true;\n      for (const binding of this.bindings) {\n        const otherNames = binding.space.value.names;\n        if (otherNames.includes(newName)) {\n          valid = false;\n          break;\n        }\n      }\n      validity[i] = valid;\n    }\n    return validity;\n  }\n\n  private includeDimensionPredicate_: (name: string) => boolean;\n\n  get includeDimensionPredicate() {\n    return this.includeDimensionPredicate_;\n  }\n  set includeDimensionPredicate(value: (name: string) => boolean) {\n    this.includeDimensionPredicate_ = value;\n    this.update();\n  }\n\n  constructor(\n    public combined: WatchableValueInterface<CoordinateSpace>,\n    includeDimensionPredicate: (name: string) => boolean,\n  ) {\n    this.includeDimensionPredicate_ = includeDimensionPredicate;\n  }\n\n  private update() {\n    const { combined, bindings } = this;\n    const retainExisting = this.retainCount > 0 ? 1 : 0;\n    if (bindings.size === 0 && !retainExisting) {\n      combined.value = emptyInvalidCoordinateSpace;\n      return;\n    }\n    const include = this.includeDimensionPredicate_;\n    const existing = combined.value;\n    let mergedNames = Array.from(existing.names);\n    let mergedUnits = Array.from(existing.units);\n    let mergedScales = Array.from(existing.scales);\n    let mergedIds = Array.from(existing.ids);\n    let mergedTimestamps = Array.from(existing.timestamps);\n    let dimensionRefs: number[] = existing.names.map(() =>\n      retainExisting ? 1 : 0,\n    );\n    const bindingCombinedIndices: (number | undefined)[][] = [];\n    let valid = false;\n    for (const binding of bindings) {\n      const {\n        space: { value: space },\n        prevValue,\n        mappedDimensionIds,\n      } = binding;\n      valid = valid || space.valid;\n      const { names, units, scales, ids, timestamps } = space;\n      const newMappedDimensionIds: (DimensionId | undefined)[] = [];\n      const combinedIndices: (number | undefined)[] = [];\n      bindingCombinedIndices.push(combinedIndices);\n      binding.mappedDimensionIds = newMappedDimensionIds;\n      binding.prevValue = space;\n      const rank = names.length;\n      for (let i = 0; i < rank; ++i) {\n        const name = names[i];\n        if (!include(name)) continue;\n        if (prevValue !== undefined) {\n          const id = ids[i];\n          const prevIndex = prevValue.ids.indexOf(id);\n          if (prevIndex !== -1) {\n            const combinedId = mappedDimensionIds[prevIndex];\n            if (combinedId !== undefined) {\n              const combinedIndex = mergedIds.indexOf(combinedId);\n              if (combinedIndex !== -1) {\n                newMappedDimensionIds[i] = combinedId;\n                ++dimensionRefs[combinedIndex];\n                combinedIndices[i] = combinedIndex;\n                const timestamp = timestamps[i];\n                if (\n                  timestamp !== undefined &&\n                  !(timestamp <= mergedTimestamps[combinedIndex])\n                ) {\n                  mergedNames[combinedIndex] = name;\n                  mergedScales[combinedIndex] = scales[i];\n                  mergedUnits[combinedIndex] = units[i];\n                  mergedTimestamps[combinedIndex] = timestamp;\n                }\n                continue;\n              }\n            }\n          }\n        }\n        let combinedIndex = mergedNames.indexOf(name);\n        if (combinedIndex !== -1) {\n          newMappedDimensionIds[i] = mergedIds[combinedIndex];\n          ++dimensionRefs[combinedIndex];\n          combinedIndices[i] = combinedIndex;\n          continue;\n        }\n        combinedIndex = mergedNames.length;\n        combinedIndices[i] = combinedIndex;\n        dimensionRefs[combinedIndex] = 1 + retainExisting;\n        mergedNames[combinedIndex] = name;\n        mergedUnits[combinedIndex] = units[i];\n        mergedScales[combinedIndex] = scales[i];\n        mergedTimestamps[combinedIndex] = timestamps[i];\n        const combinedId = newDimensionId();\n        mergedIds[combinedIndex] = combinedId;\n        newMappedDimensionIds[i] = combinedId;\n      }\n    }\n    // Propagate names, units, and scales back\n    const { dimensionRefCounts } = this;\n    dimensionRefCounts.clear();\n    let bindingIndex = 0;\n    let newRank = mergedNames.length;\n    for (const binding of bindings) {\n      const {\n        space: { value: space },\n      } = binding;\n      const combinedIndices = bindingCombinedIndices[bindingIndex++];\n      const { rank } = space;\n      const names = Array.from(space.names);\n      const timestamps = Array.from(space.timestamps);\n      const scales = Float64Array.from(space.scales);\n      const units = Array.from(space.units);\n      for (let i = 0; i < rank; ++i) {\n        const combinedIndex = combinedIndices[i];\n        if (combinedIndex === undefined) continue;\n        units[i] = mergedUnits[combinedIndex];\n        scales[i] = mergedScales[combinedIndex];\n        timestamps[i] = mergedTimestamps[combinedIndex];\n        names[i] = mergedNames[combinedIndex];\n      }\n      for (const name of names) {\n        let count = dimensionRefCounts.get(name);\n        if (count === undefined) {\n          count = 1;\n        } else {\n          ++count;\n        }\n        dimensionRefCounts.set(name, count);\n      }\n      if (\n        !arraysEqual(units, space.units) ||\n        !arraysEqual(scales, space.scales) ||\n        !arraysEqual(names, space.names) ||\n        !arraysEqual(timestamps, space.timestamps)\n      ) {\n        const newSpace = makeCoordinateSpace({\n          valid: space.valid,\n          ids: space.ids,\n          scales,\n          units,\n          names,\n          timestamps,\n          boundingBoxes: space.boundingBoxes,\n          coordinateArrays: space.coordinateArrays,\n        });\n        binding.prevValue = newSpace;\n        binding.space.value = newSpace;\n      }\n    }\n\n    {\n      for (let i = 0; i < newRank; ++i) {\n        if (!include(mergedNames[i])) {\n          dimensionRefs[i] = 0;\n        }\n      }\n      const hasRefs = (_: any, i: number) => dimensionRefs[i] !== 0;\n      mergedNames = mergedNames.filter(hasRefs);\n      mergedUnits = mergedUnits.filter(hasRefs);\n      mergedScales = mergedScales.filter(hasRefs);\n      mergedIds = mergedIds.filter(hasRefs);\n      mergedTimestamps = mergedTimestamps.filter(hasRefs);\n      dimensionRefs = dimensionRefs.filter(hasRefs);\n      newRank = mergedNames.length;\n    }\n\n    const mergedBoundingBoxes: TransformedBoundingBox[] = [];\n    const allCoordinateArrays = new Array<CoordinateArray[] | undefined>(\n      newRank,\n    );\n    // Include any explicit coordinate arrays from `existing`.\n    for (let i = 0, existingRank = existing.rank; i < existingRank; ++i) {\n      const coordinateArray = existing.coordinateArrays[i];\n      if (!coordinateArray?.explicit) continue;\n      const newDim = mergedIds.indexOf(existing.ids[i]);\n      if (newDim === -1) continue;\n      allCoordinateArrays[newDim] = [coordinateArray];\n    }\n    for (const binding of bindings) {\n      const {\n        space: { value: space },\n      } = binding;\n      const { rank, boundingBoxes, coordinateArrays } = space;\n      const newDims = space.names.map((x) => mergedNames.indexOf(x));\n      for (const oldBoundingBox of boundingBoxes) {\n        mergedBoundingBoxes.push(\n          extendTransformedBoundingBox(oldBoundingBox, newRank, newDims),\n        );\n      }\n      for (let i = 0; i < rank; ++i) {\n        const coordinateArray = coordinateArrays[i];\n        if (coordinateArray === undefined) continue;\n        const newDim = newDims[i];\n        const mergedList = allCoordinateArrays[newDim];\n        if (mergedList === undefined) {\n          allCoordinateArrays[newDim] = [coordinateArray];\n        } else {\n          mergedList.push(coordinateArray);\n        }\n      }\n    }\n    const mergedCoordinateArrays = new Array<CoordinateArray | undefined>(\n      newRank,\n    );\n    for (let i = 0; i < newRank; ++i) {\n      const mergedList = allCoordinateArrays[i];\n      if (mergedList === undefined) continue;\n      mergedCoordinateArrays[i] = mergeCoordinateArrays(mergedList);\n    }\n    const newCombined = makeCoordinateSpace({\n      valid,\n      ids: mergedIds,\n      names: mergedNames,\n      units: mergedUnits,\n      scales: new Float64Array(mergedScales),\n      boundingBoxes: mergedBoundingBoxes,\n      coordinateArrays: mergedCoordinateArrays,\n    });\n    if (retainExisting) {\n      for (let i = 0; i < newRank; ++i) {\n        --dimensionRefs[i];\n      }\n    }\n    if (!coordinateSpacesEqual(existing, newCombined)) {\n      this.prevCombined = newCombined;\n      combined.value = newCombined;\n    }\n  }\n\n  private handleCombinedChanged = () => {\n    if (this.combined.value === this.prevCombined) return;\n    this.update();\n  };\n\n  retain() {\n    ++this.retainCount;\n    return () => {\n      if (--this.retainCount === 0) {\n        this.update();\n      }\n    };\n  }\n\n  bind(space: WatchableValueInterface<CoordinateSpace>) {\n    const binding = { space, mappedDimensionIds: [], prevValue: undefined };\n    const { bindings } = this;\n    if (bindings.size === 0) {\n      this.combined.changed.add(this.handleCombinedChanged);\n    }\n    bindings.add(binding);\n\n    const changedDisposer = space.changed.add(() => {\n      if (space.value === binding.prevValue) return;\n      this.update();\n    });\n    const disposer = () => {\n      changedDisposer();\n      const { bindings } = this;\n      bindings.delete(binding);\n      if (bindings.size === 0) {\n        this.combined.changed.remove(this.handleCombinedChanged);\n      }\n      this.update();\n    };\n    this.update();\n    return disposer;\n  }\n}\n\nexport function homogeneousTransformSubmatrix<T extends TypedArray>(\n  arrayConstructor: { new (n: number): T },\n  oldTransform: TypedArray,\n  oldRank: number,\n  oldRows: readonly number[],\n  oldCols: readonly number[],\n): T {\n  const newRank = oldCols.length;\n  const newTransform = new arrayConstructor((newRank + 1) ** 2);\n  newTransform[newTransform.length - 1] = 1;\n  for (let newRow = 0; newRow < newRank; ++newRow) {\n    const oldRow = oldRows[newRow];\n    newTransform[(newRank + 1) * newRank + newRow] =\n      oldTransform[(oldRank + 1) * oldRank + oldRow];\n    for (let newCol = 0; newCol < newRank; ++newCol) {\n      const oldCol = oldCols[newCol];\n      newTransform[(newRank + 1) * newCol + newRow] =\n        oldTransform[(oldRank + 1) * oldCol + oldRow];\n    }\n  }\n  return newTransform;\n}\n\nexport interface CoordinateTransformSpecification {\n  sourceRank: number;\n  transform: Float64Array | undefined;\n  inputSpace: CoordinateSpace | undefined;\n  outputSpace: CoordinateSpace;\n}\n\nexport function coordinateTransformSpecificationFromLegacyJson(\n  obj: unknown,\n): CoordinateTransformSpecification | undefined {\n  if (obj === undefined) return undefined;\n  const transform = new Float64Array(16);\n  if (Array.isArray(obj)) {\n    if (obj.length === 16) {\n      for (let i = 0; i < 4; ++i) {\n        for (let j = 0; j < 4; ++j) {\n          transform[i * 4 + j] = verifyFiniteFloat(obj[j * 4 + i]);\n        }\n      }\n    } else {\n      expectArray(obj, 4);\n      for (let i = 0; i < 4; ++i) {\n        const row = expectArray(obj[i], 4);\n        for (let j = 0; j < 4; ++j) {\n          transform[j * 4 + i] = verifyFiniteFloat(row[j]);\n        }\n      }\n    }\n  } else {\n    verifyObject(obj);\n    const rotation = quat.create();\n    const translation = vec3.create();\n    const scale = vec3.fromValues(1, 1, 1);\n    verifyOptionalObjectProperty(obj, \"rotation\", (x) => {\n      parseFiniteVec(rotation, x);\n      quat.normalize(rotation, rotation);\n    });\n    verifyOptionalObjectProperty(obj, \"translation\", (x) => {\n      parseFiniteVec(translation, x);\n    });\n    verifyOptionalObjectProperty(obj, \"scale\", (x) => {\n      parseFiniteVec(scale, x);\n    });\n    const tempMat4 = mat4.create();\n    mat4.fromRotationTranslationScale(tempMat4, rotation, translation, scale);\n    transform.set(tempMat4);\n  }\n  return {\n    sourceRank: 3,\n    transform,\n    outputSpace: makeCoordinateSpace({\n      valid: true,\n      names: [\"x\", \"y\", \"z\"],\n      units: [\"m\", \"m\", \"m\"],\n      scales: Float64Array.of(1e-9, 1e-9, 1e-9),\n    }),\n    inputSpace: undefined,\n  };\n}\n\nexport function coordinateTransformSpecificationFromJson(\n  j: unknown,\n): CoordinateTransformSpecification | undefined {\n  if (j === undefined) return undefined;\n  const obj = verifyObject(j);\n  const outputSpace = verifyObjectProperty(\n    obj,\n    \"outputDimensions\",\n    coordinateSpaceFromJson,\n  );\n  const rank = outputSpace.rank;\n  const sourceRank = verifyObjectProperty(obj, \"sourceRank\", (rankObj) => {\n    if (rankObj === undefined) return rank;\n    if (!Number.isInteger(rankObj) || rankObj < 0 || rankObj > rank) {\n      throw new Error(\n        `Expected integer in range [0, ${rank}] but received: ${JSON.stringify(\n          rankObj,\n        )}`,\n      );\n    }\n    return rankObj as number;\n  });\n  const inputSpace = verifyOptionalObjectProperty(\n    obj,\n    \"inputDimensions\",\n    (inputSpaceObj) => {\n      const space = coordinateSpaceFromJson(inputSpaceObj, true);\n      if (space.rank !== rank) {\n        throw new Error(\n          `Expected rank of ${rank}, but received rank of: ${space.rank}`,\n        );\n      }\n      return space;\n    },\n  );\n  const transform = verifyOptionalObjectProperty(obj, \"matrix\", (x) => {\n    const transform = new Float64Array((rank + 1) ** 2);\n    const a = expectArray(x, rank);\n    transform[transform.length - 1] = 1;\n    for (let i = 0; i < rank; ++i) {\n      try {\n        const row = expectArray(a[i], rank + 1);\n        for (let j = 0; j <= rank; ++j) {\n          transform[(rank + 1) * j + i] = verifyFiniteFloat(row[j]);\n        }\n      } catch (e) {\n        throw new Error(`Error in row ${i}: ${e.message}`);\n      }\n    }\n    return transform;\n  });\n  return { transform, outputSpace, inputSpace, sourceRank };\n}\n\nexport function coordinateTransformSpecificationToJson(\n  spec: CoordinateTransformSpecification | undefined,\n) {\n  if (spec === undefined) return undefined;\n  const { transform, outputSpace, inputSpace, sourceRank } = spec;\n  let m: number[][] | undefined;\n  const rank = outputSpace.rank;\n  if (transform !== undefined) {\n    m = [];\n    for (let i = 0; i < rank; ++i) {\n      const row: number[] = [];\n      m[i] = row;\n      for (let j = 0; j <= rank; ++j) {\n        row[j] = transform[(rank + 1) * j + i];\n      }\n    }\n  }\n  return {\n    sourceRank: sourceRank === rank ? undefined : sourceRank,\n    matrix: m,\n    outputDimensions: coordinateSpaceToJson(outputSpace),\n    inputDimensions:\n      inputSpace === undefined ? undefined : coordinateSpaceToJson(inputSpace),\n  };\n}\n\nexport function permuteTransformedBoundingBox(\n  boundingBox: TransformedBoundingBox,\n  newToOld: readonly number[],\n  oldOutputRank: number,\n): TransformedBoundingBox | undefined {\n  const { box, transform } = boundingBox;\n  const inputRank = boundingBox.box.lowerBounds.length;\n  const outputRank = newToOld.length;\n  const newTransform = new Float64Array((inputRank + 1) * outputRank);\n  matrix.permuteRows(\n    newTransform,\n    outputRank,\n    transform,\n    oldOutputRank,\n    newToOld,\n    inputRank + 1,\n  );\n  if (newTransform.every((x) => x === 0)) return undefined;\n  return {\n    transform: newTransform,\n    box,\n  };\n}\n\nexport function permuteCoordinateSpace(\n  existing: CoordinateSpace,\n  newToOld: readonly number[],\n) {\n  const { ids, names, scales, units, timestamps, coordinateArrays } = existing;\n  return makeCoordinateSpace({\n    rank: newToOld.length,\n    valid: existing.valid,\n    ids: newToOld.map((i) => ids[i]),\n    names: newToOld.map((i) => names[i]),\n    timestamps: newToOld.map((i) => timestamps[i]),\n    scales: Float64Array.from(newToOld, (i) => scales[i]),\n    units: newToOld.map((i) => units[i]),\n    coordinateArrays: newToOld.map((i) => coordinateArrays[i]),\n    boundingBoxes: existing.boundingBoxes\n      .map((b) => permuteTransformedBoundingBox(b, newToOld, existing.rank))\n      .filter((b) => b !== undefined) as TransformedBoundingBox[],\n  });\n}\n\nexport function insertDimensionAt(\n  existing: CoordinateSpace,\n  targetIndex: number,\n  sourceIndex: number,\n) {\n  if (targetIndex === sourceIndex) return existing;\n  return permuteCoordinateSpace(\n    existing,\n    getInsertPermutation(existing.rank, sourceIndex, targetIndex),\n  );\n}\n\nexport function getInferredOutputScale(\n  transform: CoordinateSpaceTransform,\n  outputDim: number,\n): { scale: number; unit: string } | undefined {\n  const { transform: transformMatrix, rank } = transform;\n  const inputDims = getDependentTransformInputDimensions(\n    transformMatrix,\n    rank,\n    [outputDim],\n  );\n  if (inputDims.length !== 1) return undefined;\n  const [inputDim] = inputDims;\n  const coeff = Math.abs(transformMatrix[(rank + 1) * inputDim + outputDim]);\n  const { inputSpace } = transform;\n  return {\n    scale: inputSpace.scales[inputDim] * coeff,\n    unit: inputSpace.units[inputDim],\n  };\n}\n\nexport function getDefaultInputScale(\n  transform: WatchableCoordinateSpaceTransform,\n  inputDim: number,\n): { scale: number; unit: string } | undefined {\n  const { scales: defaultScales, units: defaultUnits } =\n    transform.defaultInputSpace;\n  return inputDim < defaultScales.length\n    ? { scale: defaultScales[inputDim], unit: defaultUnits[inputDim] }\n    : undefined;\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface WritableArrayLike<T> {\n  length: number;\n  [n: number]: T;\n}\n\n/**\n * Partitions array[start:end] such that all elements for which predicate\n * returns true are before the elements for which predicate returns false.\n *\n * predicate will be called exactly once for each element in array[start:end],\n * in order.\n *\n * @returns {number} The index of the first element for which predicate returns\n * false, or end if there is no such element.\n */\nexport function partitionArray<T>(\n  array: T[],\n  start: number,\n  end: number,\n  predicate: (x: T) => boolean,\n): number {\n  while (start < end) {\n    const x = array[start];\n    if (predicate(x)) {\n      ++start;\n      continue;\n    }\n    --end;\n    array[start] = array[end];\n    array[end] = x;\n  }\n  return end;\n}\n\nexport function filterArrayInplace<T>(\n  array: T[],\n  predicate: (x: T, index: number, array: T[]) => boolean,\n) {\n  const length = array.length;\n  let outIndex = 0;\n  for (let i = 0; i < length; ++i) {\n    if (predicate(array[i], i, array)) {\n      array[outIndex] = array[i];\n      ++outIndex;\n    }\n  }\n  array.length = outIndex;\n}\n\nexport type TypedArrayConstructor =\n  | typeof Int8Array\n  | typeof Uint8Array\n  | typeof Int16Array\n  | typeof Uint16Array\n  | typeof Int32Array\n  | typeof Uint32Array\n  | typeof Float32Array\n  | typeof Float64Array;\n\nexport type TypedArray =\n  | Int8Array\n  | Uint8Array\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Float32Array\n  | Float64Array;\n\n/**\n * Returns an array of size newSize that starts with the contents of array.\n * Either returns array if it has the correct size, or a new array with zero\n * padding at the end.\n */\nexport function maybePadArray<T extends TypedArray>(\n  array: T,\n  newSize: number,\n): T {\n  if (array.length === newSize) {\n    return array;\n  }\n  const newArray = new (<any>array.constructor)(newSize);\n  newArray.set(array);\n  return newArray;\n}\n\nexport function getFortranOrderStrides(\n  size: ArrayLike<number>,\n  baseStride = 1,\n) {\n  const length = size.length;\n  const strides = new Array<number>(length);\n  let stride = (strides[0] = baseStride);\n  for (let i = 1; i < length; ++i) {\n    stride *= size[i - 1];\n    strides[i] = stride;\n  }\n  return strides;\n}\n\n/**\n * Converts an array of shape [majorSize, minorSize] to\n * [minorSize, majorSize].\n */\nexport function transposeArray2d<T extends TypedArray>(\n  array: T,\n  majorSize: number,\n  minorSize: number,\n): T {\n  const transpose = new (<any>array.constructor)(array.length);\n  for (let i = 0; i < majorSize * minorSize; i += minorSize) {\n    for (let j = 0; j < minorSize; j++) {\n      const index: number = i / minorSize;\n      transpose[j * majorSize + index] = array[i + j];\n    }\n  }\n  return transpose;\n}\n\nexport function tile2dArray<T extends TypedArray>(\n  array: T,\n  majorDimension: number,\n  minorTiles: number,\n  majorTiles: number,\n) {\n  const minorDimension = array.length / majorDimension;\n  const length = array.length * minorTiles * majorTiles;\n  const result: T = new (<any>array.constructor)(length);\n  const minorTileStride = array.length * majorTiles;\n  const majorTileStride = majorDimension;\n  const minorStride = majorDimension * majorTiles;\n  for (let minor = 0; minor < minorDimension; ++minor) {\n    for (let major = 0; major < majorDimension; ++major) {\n      const inputValue = array[minor * majorDimension + major];\n      const baseOffset = minor * minorStride + major;\n      for (let minorTile = 0; minorTile < minorTiles; ++minorTile) {\n        for (let majorTile = 0; majorTile < majorTiles; ++majorTile) {\n          result[\n            minorTile * minorTileStride +\n              majorTile * majorTileStride +\n              baseOffset\n          ] = inputValue;\n        }\n      }\n    }\n  }\n  return result;\n}\n\nexport function binarySearch<T>(\n  haystack: ArrayLike<T>,\n  needle: T,\n  compare: (a: T, b: T) => number,\n  low = 0,\n  high = haystack.length,\n) {\n  while (low < high) {\n    const mid = (low + high - 1) >> 1;\n    const compareResult = compare(needle, haystack[mid]);\n    if (compareResult > 0) {\n      low = mid + 1;\n    } else if (compareResult < 0) {\n      high = mid;\n    } else {\n      return mid;\n    }\n  }\n  return ~low;\n}\n\n/**\n * Returns the index of the element in `haystack` that is closest to `needle`, according to\n * `compare`.  If there are multiple elements that are equally close, the index of the first such\n * element encountered is returned.  If `haystack` is empty, returns -1.\n */\nexport function findClosestMatchInSortedArray<T>(\n  haystack: ArrayLike<T>,\n  needle: T,\n  compare: (a: T, b: T) => number,\n  low = 0,\n  high = haystack.length,\n): number {\n  let bestIndex = -1;\n  let bestDistance = Infinity;\n  while (low < high) {\n    const mid = (low + high - 1) >> 1;\n    const compareResult = compare(needle, haystack[mid]);\n    if (compareResult > 0) {\n      low = mid + 1;\n    } else if (compareResult < 0) {\n      high = mid;\n    } else {\n      return mid;\n    }\n    const distance = Math.abs(compareResult);\n    if (distance < bestDistance) {\n      bestDistance = distance;\n      bestIndex = mid;\n    }\n  }\n  return bestIndex;\n}\n\n/**\n * Returns the first index in `[begin, end)` for which `predicate` is `true`, or returns `end` if no\n * such index exists.\n *\n * For any index `i` in `(begin, end)`, it must be the case that `predicate(i) >= predicate(i - 1)`.\n */\nexport function binarySearchLowerBound(\n  begin: number,\n  end: number,\n  predicate: (index: number) => boolean,\n): number {\n  let count = end - begin;\n  while (count > 0) {\n    const step = Math.floor(count / 2);\n    const i = begin + step;\n    if (predicate(i)) {\n      count = step;\n    } else {\n      begin = i + 1;\n      count -= step + 1;\n    }\n  }\n  return begin;\n}\n\n/**\n * Returns an array of indices into `input` that equal (under `===`) `value`.\n */\nexport function findMatchingIndices<T>(input: T[], value: T) {\n  const out: number[] = [];\n  for (let i = 0, length = input.length; i < length; ++i) {\n    if (input[i] === value) {\n      out.push(i);\n    }\n  }\n  return out;\n}\n\n/**\n * Returns an array of the indices in `[0, ..., max)` not in `indices`.\n */\nexport function getIndicesComplement(indices: number[], max: number) {\n  const mask: boolean[] = [];\n  mask.length = max;\n  for (const i of indices) {\n    mask[i] = true;\n  }\n  return findMatchingIndices(mask, undefined);\n}\n\nexport function arraysEqual<T>(a: ArrayLike<T>, b: ArrayLike<T>) {\n  const length = a.length;\n  if (b.length !== length) return false;\n  for (let i = 0; i < length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n\nexport function arraysEqualWithPredicate<T>(\n  a: ArrayLike<T>,\n  b: ArrayLike<T>,\n  elementsEqual: (a: T, b: T) => boolean = (a, b) => a === b,\n) {\n  const length = a.length;\n  if (b.length !== length) return false;\n  for (let i = 0; i < length; ++i) {\n    if (!elementsEqual(a[i], b[i])) return false;\n  }\n  return true;\n}\n\nexport function getInsertPermutation(\n  n: number,\n  sourceIndex: number,\n  targetIndex: number,\n) {\n  const newToOld: number[] = [];\n  if (targetIndex === sourceIndex) {\n    for (let i = 0; i < n; ++i) {\n      newToOld[i] = i;\n    }\n    return newToOld;\n  }\n  newToOld[targetIndex] = sourceIndex;\n  for (let oldDim = 0, newDim = 0; oldDim < n; ) {\n    if (oldDim === sourceIndex) {\n      ++oldDim;\n      continue;\n    }\n    if (newDim === targetIndex) {\n      ++newDim;\n    }\n    newToOld[newDim++] = oldDim++;\n  }\n  return newToOld;\n}\n\nexport function scatterUpdate<\n  T,\n  Dest extends { [index: number]: T },\n  Source extends { readonly [index: number]: T },\n>(dest: Dest, source: Source, indices: ArrayLike<number>): Dest {\n  for (\n    let sourceIndex = 0, length = indices.length;\n    sourceIndex < length;\n    ++sourceIndex\n  ) {\n    const destIndex = indices[sourceIndex];\n    if (destIndex === -1) continue;\n    dest[destIndex] = source[sourceIndex];\n  }\n  return dest;\n}\n\nexport function gatherUpdate<\n  T,\n  Dest extends { [index: number]: T },\n  Source extends { readonly [index: number]: T },\n>(dest: Dest, source: Source, indices: ArrayLike<number>): Dest {\n  for (\n    let destIndex = 0, length = indices.length;\n    destIndex < length;\n    ++destIndex\n  ) {\n    const sourceIndex = indices[destIndex];\n    if (sourceIndex === -1) continue;\n    dest[destIndex] = source[sourceIndex];\n  }\n  return dest;\n}\n\nexport function transposeNestedArrays<T>(x: T[][]) {\n  const result: T[][] = [];\n  for (\n    let outerIndex = 0, outerLength = x.length;\n    outerIndex < outerLength;\n    ++outerIndex\n  ) {\n    const inner = x[outerIndex];\n    for (\n      let innerIndex = 0, innerLength = inner.length;\n      innerIndex < innerLength;\n      ++innerIndex\n    ) {\n      let resultInner = result[innerIndex];\n      if (resultInner === undefined) {\n        resultInner = result[innerIndex] = [];\n      }\n      resultInner.push(inner[innerIndex]);\n    }\n  }\n  return result;\n}\n\nexport interface ArraySpliceOp {\n  retainCount: number;\n  deleteCount: number;\n  insertCount: number;\n}\n\nexport function spliceArray<T>(\n  array: T[],\n  splices: readonly Readonly<ArraySpliceOp>[],\n) {\n  const parts: T[][] = [];\n  let origOffset = 0;\n  for (let i = 0, numSplices = splices.length; i < numSplices; ++i) {\n    const { retainCount, deleteCount, insertCount } = splices[i];\n    if (retainCount !== 0) {\n      parts.push(array.slice(origOffset, origOffset + retainCount));\n      origOffset += retainCount;\n    }\n    origOffset += deleteCount;\n    if (insertCount !== 0) {\n      parts.push(new Array<T>(insertCount));\n    }\n  }\n  const origLength = array.length;\n  if (origOffset !== origLength) {\n    parts.push(array.slice(origOffset));\n  }\n  return new Array(0).concat(...parts);\n}\n\nexport function getMergeSplices<T>(\n  oldArray: readonly T[],\n  newArray: readonly T[],\n  compare: (a: T, b: T) => number,\n): ArraySpliceOp[] {\n  const splices: ArraySpliceOp[] = [];\n  let oldIndex = 0;\n  let newIndex = 0;\n  const oldCount = oldArray.length;\n  const newCount = newArray.length;\n  while (oldIndex < oldCount && newIndex < newCount) {\n    let c: number;\n    const oldValue = oldArray[oldIndex];\n    const newValue = newArray[newIndex];\n    c = compare(oldValue, newValue);\n    if (c === 0) {\n      let retainCount = 1;\n      ++oldIndex;\n      ++newIndex;\n      while (\n        oldIndex < oldCount &&\n        newIndex < newCount &&\n        (c = compare(oldArray[oldIndex], newArray[newIndex])) === 0\n      ) {\n        ++retainCount;\n        ++oldIndex;\n        ++newIndex;\n      }\n      splices.push({ retainCount, deleteCount: 0, insertCount: 0 });\n      continue;\n    }\n    if (c < 0) {\n      let deleteCount = 1;\n      while (\n        ++oldIndex < oldCount &&\n        (c = compare(oldArray[oldIndex], newValue)) < 0\n      ) {\n        ++deleteCount;\n      }\n      splices.push({ retainCount: 0, deleteCount, insertCount: 0 });\n      continue;\n    }\n    if (c > 0) {\n      let insertCount = 1;\n      while (\n        ++newIndex < newCount &&\n        (c = compare(oldValue, newArray[newIndex])) > 0\n      ) {\n        ++insertCount;\n      }\n      splices.push({ retainCount: 0, deleteCount: 0, insertCount });\n    }\n  }\n  if (oldIndex < oldCount || newIndex < newCount) {\n    splices.push({\n      retainCount: 0,\n      deleteCount: oldCount - oldIndex,\n      insertCount: newCount - newIndex,\n    });\n  }\n  return splices;\n}\n\nexport function getFixedOrderMergeSplices<T>(\n  oldArray: readonly T[],\n  newArray: readonly T[],\n  equal: (a: T, b: T) => boolean,\n): ArraySpliceOp[] {\n  const splices: ArraySpliceOp[] = [];\n  let oldIndex = 0;\n  let newIndex = 0;\n  const oldCount = oldArray.length;\n  const newCount = newArray.length;\n  while (oldIndex < oldCount) {\n    let retainCount = 0;\n    while (\n      oldIndex < oldCount &&\n      newIndex < newCount &&\n      equal(oldArray[oldIndex], newArray[newIndex])\n    ) {\n      ++retainCount;\n      ++oldIndex;\n      ++newIndex;\n    }\n    if (retainCount !== 0) {\n      splices.push({ retainCount, deleteCount: 0, insertCount: 0 });\n    }\n    let deleteCount = 0;\n    while (\n      oldIndex < oldCount &&\n      (newIndex === newCount || !equal(oldArray[oldIndex], newArray[newIndex]))\n    ) {\n      ++deleteCount;\n      ++oldIndex;\n    }\n    if (deleteCount !== 0) {\n      splices.push({ retainCount: 0, deleteCount, insertCount: 0 });\n    }\n  }\n  if (newIndex !== newCount) {\n    splices.push({\n      retainCount: 0,\n      deleteCount: 0,\n      insertCount: newCount - newIndex,\n    });\n  }\n  return splices;\n}\n\nexport function mergeSequences(\n  aCount: number,\n  bCount: number,\n  compare: (a: number, b: number) => number,\n  aCallback: (a: number) => void,\n  bCallback: (b: number) => void,\n  abCallback: (a: number, b: number) => void,\n) {\n  let a = 0;\n  let b = 0;\n  if (aCount !== 0 && bCount !== 0) {\n    while (true) {\n      const x = compare(a, b);\n      if (x < 0) {\n        aCallback(a);\n        if (++a === aCount) break;\n      } else if (x > 0) {\n        bCallback(b);\n        if (++b === bCount) break;\n      } else {\n        abCallback(a, b);\n        ++a;\n        ++b;\n        if (a === aCount || b === bCount) break;\n      }\n    }\n  }\n  while (a < aCount) {\n    aCallback(a);\n    ++a;\n  }\n  while (b < bCount) {\n    bCallback(b);\n    ++b;\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Defines a generic interface for a simple state tracking mechanism.\n */\n\nimport { RefCounted } from \"#src/util/disposable.js\";\nimport { verifyObject, verifyOptionalObjectProperty } from \"#src/util/json.js\";\nimport type { NullaryReadonlySignal } from \"#src/util/signal.js\";\nimport { NullarySignal } from \"#src/util/signal.js\";\n\nexport interface JsonRestorable {\n  restoreState: (x: any) => void;\n}\n\nexport function optionallyRestoreFromJsonMember(\n  obj: any,\n  member: string,\n  restorable: JsonRestorable,\n) {\n  verifyOptionalObjectProperty(obj, member, (x) => restorable.restoreState(x));\n}\n\nexport interface Trackable extends JsonRestorable {\n  restoreState: (x: any) => void;\n  reset: () => void;\n  changed: NullaryReadonlySignal;\n  toJSON: () => any;\n}\n\nexport class CompoundTrackable extends RefCounted implements Trackable {\n  children = new Map<string, Trackable>();\n  changed = new NullarySignal();\n\n  add(key: string, value: Trackable): () => void {\n    const { children } = this;\n    if (children.has(key)) {\n      throw new Error(`Key ${JSON.stringify(key)} already registered.`);\n    }\n    this.children.set(key, value);\n    value.changed.add(this.changed.dispatch);\n    this.changed.dispatch();\n    return () => {\n      this.remove(key);\n    };\n  }\n\n  remove(key: string): void {\n    const { children } = this;\n    if (children.has(key)) {\n      throw new Error(`Key ${JSON.stringify(key)} not registered.`);\n    }\n    const value = children.get(key)!;\n    this.children.delete(key);\n    value.changed.remove(this.changed.dispatch);\n    this.changed.dispatch();\n  }\n\n  disposed() {\n    const { changed } = this;\n    for (const value of this.children.values()) {\n      value.changed.remove(changed.dispatch);\n    }\n    this.children = <any>undefined;\n    super.disposed();\n  }\n\n  toJSON() {\n    const result = this.baseJSON();\n    for (const [key, value] of this.children) {\n      result[key] = value.toJSON();\n    }\n    return result;\n  }\n\n  baseJSON() {\n    return <{ [key: string]: any }>{};\n  }\n\n  reset() {\n    for (const value of this.children.values()) {\n      value.reset();\n    }\n  }\n\n  restoreState(x: any) {\n    verifyObject(x);\n    for (const [key, value] of this.children) {\n      try {\n        if (Object.prototype.hasOwnProperty.call(x, key)) {\n          const subValue = x[key];\n          if (subValue === undefined) {\n            continue;\n          }\n          value.restoreState(subValue);\n        }\n      } catch (restoreError) {\n        throw new Error(\n          `Error restoring property ${JSON.stringify(key)}: ${\n            restoreError.message\n          }`,\n        );\n      }\n    }\n  }\n}\n\nexport class PersistentCompoundTrackable extends CompoundTrackable {\n  lastState: { [key: string]: any } = {};\n\n  restoreState(x: any) {\n    verifyObject(x);\n    this.lastState = x;\n    super.restoreState(x);\n  }\n\n  reset() {\n    this.lastState = {};\n    super.reset();\n  }\n\n  baseJSON() {\n    const result = Object.assign(super.baseJSON(), this.lastState);\n    for (const key of this.children.keys()) {\n      delete result[key];\n    }\n    return result;\n  }\n\n  toJSON() {\n    const result = super.toJSON();\n    this.lastState = result;\n    return result;\n  }\n  add(key: string, value: Trackable) {\n    const result = super.add(key, value);\n    const existingValue = this.lastState[key];\n    if (existingValue !== undefined) {\n      value.reset();\n      value.restoreState(existingValue);\n    }\n    return result;\n  }\n}\n\n/**\n * Cache used by getCachedJson.\n */\nconst jsonCache = new WeakMap<Trackable, { value: any; generation: number }>();\n\n/**\n * Returns a JSON representation of a Trackable object.\n *\n * Recursively caches the result, such that it is only necessary to traverse the changed portions of\n * the object.\n *\n * The returned value must not be modified.\n */\nexport function getCachedJson(root: Trackable): {\n  value: any;\n  generation: number;\n} {\n  let cacheState = jsonCache.get(root);\n  const generation = root.changed.count;\n  if (cacheState !== undefined) {\n    if (cacheState.generation === generation) {\n      return cacheState;\n    }\n  }\n  let value: any;\n  if (root instanceof CompoundTrackable) {\n    value = root.baseJSON();\n    for (const [k, v] of root.children) {\n      value[k] = getCachedJson(v).value;\n    }\n  } else {\n    value = root.toJSON();\n  }\n  if (cacheState === undefined) {\n    cacheState = { generation, value };\n    jsonCache.set(root, cacheState);\n  } else {\n    cacheState.generation = generation;\n    cacheState.value = value;\n  }\n  return cacheState;\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  CoordinateSpace,\n  DimensionId,\n} from \"#src/coordinate_transform.js\";\nimport {\n  clampAndRoundCoordinateToVoxelCenter,\n  dimensionNamesFromJson,\n  emptyInvalidCoordinateSpace,\n  getBoundingBoxCenter,\n  getCenterBound,\n} from \"#src/coordinate_transform.js\";\nimport type { WatchableValueInterface } from \"#src/trackable_value.js\";\nimport { arraysEqual } from \"#src/util/array.js\";\nimport type { Borrowed, Owned } from \"#src/util/disposable.js\";\nimport { RefCounted } from \"#src/util/disposable.js\";\nimport { mat3, mat4, quat, vec3 } from \"#src/util/geom.js\";\nimport {\n  parseArray,\n  parseFiniteVec,\n  verifyBoolean,\n  verifyEnumString,\n  verifyFiniteFloat,\n  verifyFinitePositiveFloat,\n  verifyObject,\n  verifyObjectProperty,\n  verifyOptionalObjectProperty,\n} from \"#src/util/json.js\";\nimport { NullarySignal } from \"#src/util/signal.js\";\nimport type { Trackable } from \"#src/util/trackable.js\";\nimport { optionallyRestoreFromJsonMember } from \"#src/util/trackable.js\";\nimport { TrackableEnum } from \"#src/util/trackable_enum.js\";\nimport * as vector from \"#src/util/vector.js\";\n\nexport enum NavigationLinkType {\n  LINKED = 0,\n  RELATIVE = 1,\n  UNLINKED = 2,\n}\n\nexport enum NavigationSimpleLinkType {\n  LINKED = 0,\n  UNLINKED = 2,\n}\n\nexport class TrackableNavigationLink extends TrackableEnum<NavigationLinkType> {\n  constructor(value = NavigationLinkType.LINKED) {\n    super(NavigationLinkType, value);\n  }\n}\n\nexport class TrackableNavigationSimpleLink extends TrackableEnum<NavigationSimpleLinkType> {\n  constructor(value = NavigationSimpleLinkType.LINKED) {\n    super(NavigationSimpleLinkType, value);\n  }\n}\n\nconst tempVec3 = vec3.create();\nconst tempQuat = quat.create();\n\nfunction makeLinked<\n  T extends RefCounted & { changed: NullarySignal },\n  Difference,\n>(\n  self: T,\n  peer: T,\n  link: TrackableNavigationLink,\n  operations: {\n    assign: (target: T, source: T) => void;\n    isValid: (a: T) => boolean;\n    difference: (a: T, b: T) => Difference;\n    add: (target: T, source: T, amount: Difference) => void;\n    subtract: (target: T, source: T, amount: Difference) => void;\n  },\n): T {\n  let updatingSelf = false;\n  const updatingPeer = false;\n  let selfMinusPeer: Difference | undefined;\n  self.registerDisposer(peer);\n  const handlePeerUpdate = () => {\n    if (updatingPeer) {\n      return;\n    }\n    updatingSelf = true;\n    switch (link.value) {\n      case NavigationLinkType.UNLINKED:\n        if (operations.isValid(self)) {\n          break;\n        }\n      // fallthrough\n      case NavigationLinkType.LINKED:\n        operations.assign(self, peer);\n        break;\n      case NavigationLinkType.RELATIVE:\n        operations.add(self, peer, selfMinusPeer!);\n        break;\n    }\n    updatingSelf = false;\n  };\n  const handleSelfUpdate = () => {\n    if (updatingSelf) {\n      return;\n    }\n    switch (link.value) {\n      case NavigationLinkType.UNLINKED:\n        break;\n      case NavigationLinkType.LINKED:\n        operations.assign(peer, self);\n        break;\n      case NavigationLinkType.RELATIVE:\n        operations.subtract(peer, self, selfMinusPeer!);\n        break;\n    }\n  };\n  let previousLinkValue = NavigationLinkType.UNLINKED;\n  const handleLinkUpdate = () => {\n    const linkValue = link.value;\n    if (linkValue !== previousLinkValue) {\n      switch (linkValue) {\n        case NavigationLinkType.UNLINKED:\n          selfMinusPeer = undefined;\n          break;\n        case NavigationLinkType.LINKED:\n          selfMinusPeer = undefined;\n          operations.assign(self, peer);\n          break;\n        case NavigationLinkType.RELATIVE:\n          selfMinusPeer = operations.difference(self, peer);\n          break;\n      }\n    }\n    previousLinkValue = linkValue;\n    self.changed.dispatch();\n  };\n  self.registerDisposer(self.changed.add(handleSelfUpdate));\n  self.registerDisposer(peer.changed.add(handlePeerUpdate));\n  self.registerDisposer(link.changed.add(handleLinkUpdate));\n  handleLinkUpdate();\n  return self;\n}\n\nfunction makeSimpleLinked<T extends RefCounted & { changed: NullarySignal }>(\n  self: T,\n  peer: T,\n  link: TrackableNavigationSimpleLink,\n  operations: {\n    assign: (target: T, source: T) => void;\n    isValid: (a: T) => boolean;\n  },\n) {\n  return makeLinked(self, peer, link as any, operations as any);\n}\n\nexport class Position extends RefCounted {\n  private coordinates_: Float32Array = vector.kEmptyFloat32Vec;\n  private curCoordinateSpace: CoordinateSpace | undefined;\n  changed = new NullarySignal();\n  constructor(\n    public coordinateSpace: WatchableValueInterface<CoordinateSpace>,\n  ) {\n    super();\n    this.registerDisposer(\n      coordinateSpace.changed.add(() => {\n        this.handleCoordinateSpaceChanged();\n      }),\n    );\n  }\n\n  get valid() {\n    return this.coordinateSpace.value.valid;\n  }\n\n  /**\n   * Returns the position in voxels.\n   */\n  get value() {\n    this.handleCoordinateSpaceChanged();\n    return this.coordinates_;\n  }\n\n  reset() {\n    this.curCoordinateSpace = undefined;\n    this.coordinates_ = vector.kEmptyFloat32Vec;\n    this.changed.dispatch();\n  }\n\n  set value(coordinates: Float32Array) {\n    const { curCoordinateSpace } = this;\n    if (\n      curCoordinateSpace === undefined ||\n      !curCoordinateSpace.valid ||\n      curCoordinateSpace.rank !== coordinates.length\n    ) {\n      return;\n    }\n    const { coordinates_ } = this;\n    coordinates_.set(coordinates);\n    this.changed.dispatch();\n  }\n\n  private handleCoordinateSpaceChanged() {\n    const coordinateSpace = this.coordinateSpace.value;\n    const prevCoordinateSpace = this.curCoordinateSpace;\n    if (coordinateSpace === prevCoordinateSpace) return;\n    this.curCoordinateSpace = coordinateSpace;\n    const { rank } = coordinateSpace;\n    if (!coordinateSpace.valid) return;\n    if (prevCoordinateSpace === undefined || !prevCoordinateSpace.valid) {\n      let { coordinates_ } = this;\n      if (coordinates_ !== undefined && coordinates_.length === rank) {\n        // Use the existing voxel coordinates if rank is the same.  Otherwise, ignore.\n      } else {\n        coordinates_ = this.coordinates_ = new Float32Array(rank);\n        getBoundingBoxCenter(coordinates_, coordinateSpace.bounds);\n        const { voxelCenterAtIntegerCoordinates } = coordinateSpace.bounds;\n        for (let i = 0; i < rank; ++i) {\n          if (voxelCenterAtIntegerCoordinates[i]) {\n            coordinates_[i] = Math.round(coordinates_[i]);\n          } else {\n            coordinates_[i] = Math.floor(coordinates_[i]) + 0.5;\n          }\n        }\n      }\n      this.changed.dispatch();\n      return;\n    }\n    // Match dimensions by ID.\n    const newCoordinates = new Float32Array(rank);\n    const prevCoordinates = this.coordinates_;\n    const { ids, scales: newScales } = coordinateSpace;\n    const { ids: prevDimensionIds, scales: oldScales } = prevCoordinateSpace;\n    for (let newDim = 0; newDim < rank; ++newDim) {\n      const newDimId = ids[newDim];\n      const oldDim = prevDimensionIds.indexOf(newDimId);\n      if (oldDim === -1) {\n        newCoordinates[newDim] = getCenterBound(\n          coordinateSpace.bounds.lowerBounds[newDim],\n          coordinateSpace.bounds.upperBounds[newDim],\n        );\n      } else {\n        newCoordinates[newDim] =\n          prevCoordinates[oldDim] * (oldScales[oldDim] / newScales[newDim]);\n      }\n    }\n    this.coordinates_ = newCoordinates;\n    this.changed.dispatch();\n  }\n\n  toJSON() {\n    if (!this.valid && this.coordinates_.length === 0) return undefined;\n    this.handleCoordinateSpaceChanged();\n    const { value } = this;\n    if (value.length === 0) return undefined;\n    return Array.from(value);\n  }\n\n  restoreState(obj: any) {\n    if (obj === undefined) {\n      this.reset();\n      return;\n    }\n    this.curCoordinateSpace = undefined;\n    this.coordinates_ = Float32Array.from(parseArray(obj, verifyFiniteFloat));\n    this.handleCoordinateSpaceChanged();\n    this.changed.dispatch();\n  }\n\n  snapToVoxel() {\n    this.handleCoordinateSpaceChanged();\n    const {\n      bounds: { voxelCenterAtIntegerCoordinates },\n    } = this.coordinateSpace.value;\n    const { coordinates_ } = this;\n    const rank = coordinates_.length;\n    for (let i = 0; i < rank; ++i) {\n      if (voxelCenterAtIntegerCoordinates[i]) {\n        coordinates_[i] = Math.round(coordinates_[i]);\n      } else {\n        coordinates_[i] = Math.floor(coordinates_[i]) + 0.5;\n      }\n    }\n    this.changed.dispatch();\n  }\n\n  assign(other: Borrowed<Position>) {\n    other.handleCoordinateSpaceChanged();\n    const { curCoordinateSpace, coordinates_ } = other;\n    this.curCoordinateSpace = curCoordinateSpace;\n    this.coordinates_ = Float32Array.from(coordinates_);\n    this.changed.dispatch();\n  }\n\n  /**\n   * Get the offset of `a` relative to `b`.\n   */\n  static getOffset(a: Position, b: Position): Float32Array | undefined {\n    const aCoordinates = a.coordinates_;\n    const bCoordinates = b.coordinates_;\n    const rank = aCoordinates.length;\n    if (rank === bCoordinates.length) {\n      return vector.subtract(\n        new Float32Array(aCoordinates.length),\n        aCoordinates,\n        bCoordinates,\n      );\n    }\n    return undefined;\n  }\n  static addOffset(\n    target: Position,\n    source: Position,\n    offset: Float32Array | undefined,\n    scale = 1,\n  ): void {\n    target.handleCoordinateSpaceChanged();\n    const { value: sourceCoordinates } = source;\n    if (offset !== undefined && sourceCoordinates.length === offset.length) {\n      vector.scaleAndAdd(target.value, sourceCoordinates, offset, scale);\n      target.changed.dispatch();\n    }\n  }\n\n  get legacyJsonView() {\n    const self = this;\n    return {\n      changed: self.changed,\n      toJSON() {\n        return self.toJSON();\n      },\n      reset() {\n        self.reset();\n      },\n      restoreState(obj: unknown) {\n        if (obj === undefined || Array.isArray(obj)) {\n          self.restoreState(obj);\n          return;\n        }\n        verifyObject(obj);\n        optionallyRestoreFromJsonMember(obj, \"voxelCoordinates\", self);\n      },\n    };\n  }\n}\n\nexport enum VelocityBoundaryBehavior {\n  STOP = 0,\n  LOOP = 1,\n  REVERSE = 2,\n}\n\nexport const DEFAULT_PLAYBACK_VELOCITY = 10;\n\nexport class DimensionPlaybackVelocity {\n  // Velocity in global coordinates per second.\n  velocity: number = DEFAULT_PLAYBACK_VELOCITY;\n  atBoundary: VelocityBoundaryBehavior = VelocityBoundaryBehavior.REVERSE;\n  paused = true;\n}\n\nexport function dimensionVelocitiesEqual(\n  a: DimensionPlaybackVelocity,\n  b: DimensionPlaybackVelocity,\n): boolean {\n  return (\n    a.velocity === b.velocity &&\n    a.atBoundary === b.atBoundary &&\n    a.paused === b.paused\n  );\n}\n\nfunction dimensionVelocityFromJson(obj: unknown) {\n  verifyObject(obj);\n  return {\n    velocity: verifyOptionalObjectProperty(\n      obj,\n      \"velocity\",\n      verifyFiniteFloat,\n      DEFAULT_PLAYBACK_VELOCITY,\n    ),\n    atBoundary: verifyOptionalObjectProperty(\n      obj,\n      \"atBoundary\",\n      (value) => verifyEnumString(value, VelocityBoundaryBehavior),\n      VelocityBoundaryBehavior.STOP,\n    ),\n    paused: verifyOptionalObjectProperty(obj, \"paused\", verifyBoolean, true),\n  };\n}\n\nfunction dimensionVelocityToJson(info: DimensionPlaybackVelocity) {\n  const { velocity, atBoundary, paused } = info;\n  return {\n    velocity: velocity,\n    atBoundary:\n      atBoundary === VelocityBoundaryBehavior.STOP\n        ? undefined\n        : VelocityBoundaryBehavior[atBoundary].toLowerCase(),\n    paused: paused ? undefined : false,\n  };\n}\n\nexport class CoordinateSpacePlaybackVelocity extends RefCounted {\n  private velocities_: (Readonly<DimensionPlaybackVelocity> | undefined)[];\n  private curCoordinateSpace: CoordinateSpace | undefined;\n  changed = new NullarySignal();\n  constructor(\n    public coordinateSpace: WatchableValueInterface<CoordinateSpace>,\n  ) {\n    super();\n    this.registerDisposer(\n      coordinateSpace.changed.add(() => {\n        this.handleCoordinateSpaceChanged();\n      }),\n    );\n    this.curCoordinateSpace = coordinateSpace.value;\n    this.velocities_ = new Array(this.curCoordinateSpace?.rank ?? 0);\n  }\n\n  get valid() {\n    return this.coordinateSpace.value.valid;\n  }\n\n  get value(): (Readonly<DimensionPlaybackVelocity> | undefined)[] {\n    this.handleCoordinateSpaceChanged();\n    return this.velocities_;\n  }\n\n  set value(velocities: (Readonly<DimensionPlaybackVelocity> | undefined)[]) {\n    const { curCoordinateSpace } = this;\n    if (\n      curCoordinateSpace === undefined ||\n      curCoordinateSpace.rank !== velocities.length\n    ) {\n      return;\n    }\n    this.velocities_ = velocities;\n    this.changed.dispatch();\n  }\n\n  get(id: DimensionId): DimensionPlaybackVelocity | undefined {\n    const ids = this.coordinateSpace.value?.ids;\n    if (ids === undefined) return;\n    const index = ids.indexOf(id);\n    if (index === -1) return;\n    const velocities = this.value;\n    return velocities[index];\n  }\n\n  dimensionVelocity(\n    owner: RefCounted,\n    id: DimensionId,\n  ): WatchableValueInterface<DimensionPlaybackVelocity | undefined> {\n    const changed = new NullarySignal();\n    let index = -1;\n    const updateIndex = () => {\n      const ids = this.coordinateSpace.value?.ids;\n      if (ids === undefined) {\n        index = -1;\n      } else if (index === -1 || ids[index] !== id) {\n        index = ids.indexOf(id);\n      }\n    };\n    const getVelocity = () => {\n      updateIndex();\n      if (index === -1) return undefined;\n      return this.value[index];\n    };\n    const setVelocity = (\n      newVelocity: Readonly<DimensionPlaybackVelocity> | undefined,\n    ) => {\n      updateIndex();\n      if (index === -1) return;\n      const velocities = this.value;\n      const oldVelocity = velocities[index];\n      if (oldVelocity === newVelocity) return;\n      velocities[index] = newVelocity;\n      this.changed.dispatch();\n    };\n    const prevVelocity = getVelocity();\n    owner.registerDisposer(\n      this.changed.add(() => {\n        const curVelocity = getVelocity();\n        if (curVelocity !== prevVelocity) {\n          changed.dispatch();\n        }\n      }),\n    );\n    return {\n      get value() {\n        return getVelocity();\n      },\n      set value(newVelocity: Readonly<DimensionPlaybackVelocity> | undefined) {\n        setVelocity(newVelocity);\n      },\n      changed,\n    };\n  }\n\n  modifyDimension(\n    id: DimensionId,\n    callback: (\n      oldInfo: DimensionPlaybackVelocity | undefined,\n    ) => DimensionPlaybackVelocity | undefined,\n  ) {\n    const ids = this.coordinateSpace.value?.ids;\n    if (ids === undefined) return;\n    const index = ids.indexOf(id);\n    if (index === -1) return;\n    const velocities = this.value;\n    const oldInfo = velocities[index];\n    const newInfo = callback(oldInfo);\n    if (oldInfo === newInfo) return;\n    velocities[index] = newInfo;\n    this.changed.dispatch();\n  }\n\n  togglePlayback(id: DimensionId, newValue: boolean | undefined = undefined) {\n    this.modifyDimension(id, (oldInfo = new DimensionPlaybackVelocity()) => {\n      return { ...oldInfo, paused: newValue ?? !oldInfo.paused };\n    });\n  }\n\n  playbackEnabled(id: DimensionId): WatchableValueInterface<boolean> {\n    const self = this;\n    return {\n      changed: this.changed,\n      get value() {\n        return self.get(id) !== undefined;\n      },\n      set value(enabled: boolean) {\n        self.modifyDimension(id, (oldInfo) =>\n          enabled ? (oldInfo ?? new DimensionPlaybackVelocity()) : undefined,\n        );\n      },\n    };\n  }\n\n  multiplyVelocity(id: DimensionId, factor: number) {\n    this.modifyDimension(id, (oldInfo = new DimensionPlaybackVelocity()) => {\n      let newVelocity = Math.round(oldInfo.velocity * factor);\n      if (newVelocity === 0) {\n        newVelocity = Math.sign(oldInfo.velocity) || 1;\n      }\n      return { ...oldInfo, velocity: newVelocity };\n    });\n  }\n\n  private handleCoordinateSpaceChanged() {\n    const coordinateSpace = this.coordinateSpace.value;\n    const prevCoordinateSpace = this.curCoordinateSpace;\n    if (coordinateSpace === prevCoordinateSpace) return;\n    this.curCoordinateSpace = coordinateSpace;\n    const { rank } = coordinateSpace;\n    if (!coordinateSpace.valid) return;\n    if (prevCoordinateSpace === undefined) {\n      let { velocities_ } = this;\n      if (velocities_.length === rank) {\n        // Use the existing velocities if rank is the same.  Otherwise, ignore.\n      } else {\n        velocities_ = new Array<\n          Readonly<DimensionPlaybackVelocity> | undefined\n        >(rank);\n      }\n      this.changed.dispatch();\n      return;\n    }\n    // Match dimensions by ID.\n    const newVelocities = new Array<\n      Readonly<DimensionPlaybackVelocity> | undefined\n    >(rank);\n    const prevVelocities = this.velocities_;\n    const { ids } = coordinateSpace;\n    const { ids: prevDimensionIds } = prevCoordinateSpace;\n    for (let newDim = 0; newDim < rank; ++newDim) {\n      const newDimId = ids[newDim];\n      const oldDim = prevDimensionIds.indexOf(newDimId);\n      if (oldDim !== -1) {\n        newVelocities[newDim] = prevVelocities[oldDim];\n      }\n    }\n    this.velocities_ = newVelocities;\n    this.changed.dispatch();\n  }\n\n  toJSON() {\n    this.handleCoordinateSpaceChanged();\n    const { velocities_: velocities, curCoordinateSpace } = this;\n    if (\n      !curCoordinateSpace?.valid ||\n      !velocities.some((velocity) => velocity !== undefined)\n    ) {\n      return undefined;\n    }\n    const obj: Record<string, any> = {};\n    const { names, rank } = curCoordinateSpace;\n    for (let i = 0; i < rank; ++i) {\n      const info = velocities[i];\n      if (info === undefined) continue;\n      obj[names[i]] = dimensionVelocityToJson(info);\n    }\n    return obj;\n  }\n\n  reset() {\n    this.handleCoordinateSpaceChanged();\n    this.velocities_ = new Array(this.curCoordinateSpace?.rank ?? 0);\n  }\n\n  restoreState(obj: any) {\n    if (obj === undefined) {\n      this.reset();\n      return;\n    }\n    verifyObject(obj);\n    const curCoordinateSpace = (this.curCoordinateSpace =\n      this.coordinateSpace.value);\n    this.velocities_ = new Array(curCoordinateSpace?.rank ?? 0);\n    if (curCoordinateSpace === undefined) {\n      throw new Error(\"Must specify dimensions in order to specify velocities\");\n    }\n    const velocities = (this.velocities_ = new Array(\n      curCoordinateSpace?.rank ?? 0,\n    ));\n    const { names } = curCoordinateSpace;\n    for (const key of Object.keys(obj)) {\n      const i = names.indexOf(key);\n      if (i === -1) {\n        throw new Error(`Invalid dimension name: ${JSON.stringify(key)}`);\n      }\n      velocities[i] = verifyObjectProperty(obj, key, dimensionVelocityFromJson);\n    }\n    this.changed.dispatch();\n  }\n\n  assign(other: Borrowed<CoordinateSpacePlaybackVelocity>) {\n    const otherVelocities = other.value;\n    const velocities = this.value;\n    const rank = velocities.length;\n    let changed = false;\n    for (let i = 0; i < rank; ++i) {\n      const newVelocity = otherVelocities[i];\n      const curVelocity = velocities[i];\n      if (newVelocity !== curVelocity) {\n        if (\n          curVelocity === undefined ||\n          newVelocity === undefined ||\n          !dimensionVelocitiesEqual(curVelocity, newVelocity)\n        ) {\n          changed = true;\n        }\n        velocities[i] = newVelocity;\n      }\n    }\n    if (changed) {\n      this.changed.dispatch();\n    }\n  }\n}\n\nexport class LinkedCoordinateSpacePlaybackVelocity extends RefCounted {\n  changed = new NullarySignal();\n  velocity = this.registerDisposer(\n    new CoordinateSpacePlaybackVelocity(this.peer.coordinateSpace),\n  );\n\n  constructor(\n    public peer: Owned<CoordinateSpacePlaybackVelocity>,\n    public positionLink: TrackableLinkInterface,\n  ) {\n    super();\n    this.registerDisposer(peer);\n    this.velocity.changed.add(() => {\n      if (this.positionLink.value === NavigationLinkType.UNLINKED) {\n        this.changed.dispatch();\n      } else {\n        this.peer.assign(this.velocity);\n      }\n    });\n    const updateSelf = () => {\n      if (this.positionLink.value !== NavigationLinkType.UNLINKED) {\n        this.velocity.assign(this.peer);\n      }\n    };\n    this.registerDisposer(peer.changed.add(updateSelf));\n    updateSelf();\n  }\n\n  toJSON() {\n    if (this.positionLink.value !== NavigationLinkType.UNLINKED) {\n      return undefined;\n    }\n    return this.velocity.toJSON();\n  }\n\n  reset() {\n    if (this.positionLink.value === NavigationLinkType.UNLINKED) {\n      this.velocity.reset();\n    }\n  }\n\n  restoreState(obj: unknown) {\n    if (this.positionLink.value === NavigationLinkType.UNLINKED) {\n      this.velocity.restoreState(obj);\n    }\n  }\n\n  copyToPeer() {\n    if (this.positionLink.value === NavigationLinkType.UNLINKED) {\n      this.peer.assign(this.velocity);\n    }\n  }\n}\n\ninterface DimensionPlaybackState {\n  dimensionIndex: number;\n  prevCoordinate: number;\n  prevTime: number;\n  generation: number;\n}\n\nexport class PlaybackManager extends RefCounted {\n  private dimensionStates = new Map<DimensionId, DimensionPlaybackState>();\n  private lastUpdateGeneration = 0;\n  private unregisterUpdateStartedCallback: (() => void) | undefined;\n\n  constructor(\n    public display: { updateStarted: NullarySignal; scheduleRedraw(): void },\n    public position: Position,\n    public velocity: CoordinateSpacePlaybackVelocity,\n  ) {\n    super();\n    this.handleVelocityChanged();\n    this.registerDisposer(\n      velocity.changed.add(() => this.handleVelocityChanged()),\n    );\n  }\n\n  disposed() {\n    this.unregisterUpdateStartedCallback?.();\n    super.disposed();\n  }\n\n  private handleVelocityChanged() {\n    const { dimensionStates } = this;\n    const ids = this.position.coordinateSpace.value?.ids ?? [];\n    const rank = ids.length;\n    const velocities = this.velocity.value;\n    const generation = ++this.lastUpdateGeneration;\n    const positionVector = this.position.value;\n    const curTime = Date.now();\n    for (let i = 0; i < rank; ++i) {\n      const velocity = velocities[i];\n      if (velocity === undefined) continue;\n      if (velocity.velocity === 0 || velocity.paused) continue;\n      const id = ids[i];\n      const state = dimensionStates.get(id);\n      if (state === undefined) {\n        dimensionStates.set(id, {\n          prevTime: curTime,\n          dimensionIndex: i,\n          prevCoordinate: positionVector[i],\n          generation,\n        });\n      } else {\n        state.generation = generation;\n        state.dimensionIndex = i;\n      }\n    }\n    for (const [id, state] of dimensionStates) {\n      if (state.generation !== generation) {\n        dimensionStates.delete(id);\n      }\n    }\n    if (dimensionStates.size === 0) {\n      const { unregisterUpdateStartedCallback } = this;\n      if (unregisterUpdateStartedCallback !== undefined) {\n        unregisterUpdateStartedCallback();\n        this.unregisterUpdateStartedCallback = undefined;\n      }\n    } else {\n      if (this.unregisterUpdateStartedCallback === undefined) {\n        this.unregisterUpdateStartedCallback = this.display.updateStarted.add(\n          () => this.updateStarted(),\n        );\n        this.display.scheduleRedraw();\n      }\n    }\n  }\n\n  private updateStarted() {\n    const coordinateSpace = this.position.coordinateSpace.value;\n    if (coordinateSpace === undefined) {\n      return;\n    }\n    const ids = coordinateSpace.ids;\n    const positionVector = this.position.value;\n    let positionChanged = false;\n    let velocityChanged = false;\n    const curTime = Date.now();\n    const velocities = this.velocity.value;\n    const {\n      bounds: { lowerBounds, upperBounds },\n    } = coordinateSpace;\n    for (const [id, dimensionState] of this.dimensionStates) {\n      const { dimensionIndex } = dimensionState;\n      if (ids[dimensionIndex] !== id) continue;\n      const velocity = velocities[dimensionIndex];\n      if (\n        Math.floor(positionVector[dimensionIndex]) !==\n        Math.floor(dimensionState.prevCoordinate)\n      ) {\n        // Pause this dimension.\n        if (velocity?.paused === false) {\n          velocities[dimensionIndex] = { ...velocity, paused: true };\n          velocityChanged = true;\n        }\n        continue;\n      }\n      const timeDelta = curTime - dimensionState.prevTime;\n      const velocityValue = velocity?.velocity ?? 0;\n      const delta = (timeDelta * velocityValue) / 1000;\n      if (delta === 0) continue;\n      let newCoordinate = positionVector[dimensionIndex] + delta;\n      const lowerBound = lowerBounds[dimensionIndex];\n      const upperBound = Math.ceil(upperBounds[dimensionIndex] - 1);\n      const limit = delta > 0 ? upperBound : lowerBound;\n      const oppositeLimit = delta > 0 ? lowerBound : upperBound;\n      const deltaSign = Math.sign(delta);\n      if (\n        Number.isFinite(limit) &&\n        newCoordinate * deltaSign >= limit * deltaSign\n      ) {\n        switch (velocity!.atBoundary) {\n          case VelocityBoundaryBehavior.LOOP:\n            if (Number.isFinite(oppositeLimit)) {\n              newCoordinate = oppositeLimit;\n              break;\n            }\n          // fallthrough\n          case VelocityBoundaryBehavior.STOP:\n            velocities[dimensionIndex] = { ...velocity!, paused: true };\n            velocityChanged = true;\n            newCoordinate = limit;\n            break;\n          case VelocityBoundaryBehavior.REVERSE:\n            velocities[dimensionIndex] = {\n              ...velocity!,\n              velocity: -velocityValue,\n            };\n            velocityChanged = true;\n            newCoordinate = limit;\n            break;\n        }\n      }\n      positionVector[dimensionIndex] = newCoordinate;\n      dimensionState.prevCoordinate = positionVector[dimensionIndex];\n      dimensionState.prevTime = curTime;\n      positionChanged = true;\n    }\n    if (positionChanged) {\n      this.position.changed.dispatch();\n    }\n    if (velocityChanged) {\n      this.velocity.changed.dispatch();\n    }\n    this.display.scheduleRedraw();\n  }\n}\n\ntype TrackableLinkInterface =\n  | TrackableNavigationLink\n  | TrackableNavigationSimpleLink;\n\nfunction restoreLinkedFromJson(\n  link: TrackableLinkInterface,\n  value: { restoreState(obj: unknown): void },\n  json: any,\n) {\n  if (json === undefined || Object.keys(json).length === 0) {\n    link.value = NavigationLinkType.LINKED;\n    return;\n  }\n  verifyObject(json);\n  link.value = NavigationLinkType.UNLINKED;\n  verifyObjectProperty(json, \"value\", (x) => {\n    if (x !== undefined) {\n      value.restoreState(x);\n    }\n  });\n  verifyObjectProperty(json, \"link\", (x) => link.restoreState(x));\n}\n\ninterface LinkableState<T> extends RefCounted, Trackable {\n  assign(other: T): void;\n}\n\nabstract class LinkedBase<\n  T extends LinkableState<T>,\n  Link extends TrackableLinkInterface = TrackableNavigationLink,\n> implements Trackable\n{\n  value: T;\n  get changed() {\n    return this.value.changed;\n  }\n  constructor(\n    public peer: Owned<T>,\n    public link: Link = new TrackableNavigationLink() as any,\n  ) {}\n\n  toJSON() {\n    const { link } = this;\n    if (link.value === NavigationLinkType.LINKED) {\n      return undefined;\n    }\n    return { link: link.toJSON(), value: this.getValueJson() };\n  }\n\n  protected getValueJson(): any {\n    return this.value.toJSON();\n  }\n\n  reset() {\n    this.link.value = NavigationLinkType.LINKED;\n  }\n\n  restoreState(obj: any) {\n    restoreLinkedFromJson(this.link, this.value, obj);\n  }\n\n  copyToPeer() {\n    if (this.link.value !== NavigationLinkType.LINKED) {\n      this.link.value = NavigationLinkType.UNLINKED;\n      this.peer.assign(this.value);\n      this.link.value = NavigationLinkType.LINKED;\n    }\n  }\n}\n\nabstract class SimpleLinkedBase<\n    T extends RefCounted & Trackable & { assign(other: T): void },\n  >\n  extends LinkedBase<T, TrackableNavigationSimpleLink>\n  implements Trackable {}\n\nexport class LinkedPosition extends LinkedBase<Position> {\n  value = makeLinked(\n    new Position(this.peer.coordinateSpace),\n    this.peer,\n    this.link,\n    {\n      assign: (a: Position, b: Position) => a.assign(b),\n      isValid: (a: Position) => {\n        return a.valid;\n      },\n      difference: Position.getOffset,\n      add: Position.addOffset,\n      subtract: (\n        target: Position,\n        source: Position,\n        amount: Float32Array | undefined,\n      ) => {\n        Position.addOffset(target, source, amount, -1);\n      },\n    },\n  );\n}\n\nfunction quaternionIsIdentity(q: quat) {\n  return q[0] === 0 && q[1] === 0 && q[2] === 0 && q[3] === 1;\n}\n\nexport class OrientationState extends RefCounted {\n  orientation: quat;\n  changed = new NullarySignal();\n\n  constructor(orientation?: quat) {\n    super();\n    if (orientation == null) {\n      orientation = quat.create();\n    }\n    this.orientation = orientation;\n  }\n  toJSON() {\n    const { orientation } = this;\n    quat.normalize(this.orientation, this.orientation);\n    if (quaternionIsIdentity(orientation)) {\n      return undefined;\n    }\n    return Array.prototype.slice.call(this.orientation);\n  }\n  restoreState(obj: any) {\n    try {\n      parseFiniteVec(this.orientation, obj);\n      quat.normalize(this.orientation, this.orientation);\n    } catch (ignoredError) {\n      quat.identity(this.orientation);\n    }\n    this.changed.dispatch();\n  }\n\n  reset() {\n    quat.identity(this.orientation);\n    this.changed.dispatch();\n  }\n\n  snap() {\n    const mat = mat3.create();\n    mat3.fromQuat(mat, this.orientation);\n    const usedAxes = [false, false, false];\n    for (let i = 0; i < 3; ++i) {\n      let maxComponent = 0;\n      let argmaxComponent = 0;\n      for (let j = 0; j < 3; ++j) {\n        const value = mat[i * 3 + j];\n        mat[i * 3 + j] = 0;\n        if (usedAxes[j]) {\n          continue;\n        }\n        if (Math.abs(value) > Math.abs(maxComponent)) {\n          maxComponent = value;\n          argmaxComponent = j;\n        }\n      }\n      mat[i * 3 + argmaxComponent] = Math.sign(maxComponent);\n      usedAxes[argmaxComponent] = true;\n    }\n    quat.fromMat3(this.orientation, mat);\n    this.changed.dispatch();\n  }\n\n  /**\n   * Returns a new OrientationState with orientation fixed to peerToSelf * peer.orientation.  Any\n   * changes to the returned OrientationState will cause a corresponding change in peer, and vice\n   * versa.\n   */\n  static makeRelative(peer: OrientationState, peerToSelf: quat) {\n    const self = new OrientationState(\n      quat.multiply(quat.create(), peer.orientation, peerToSelf),\n    );\n    let updatingPeer = false;\n    self.registerDisposer(\n      peer.changed.add(() => {\n        if (!updatingPeer) {\n          updatingSelf = true;\n          quat.multiply(self.orientation, peer.orientation, peerToSelf);\n          self.changed.dispatch();\n          updatingSelf = false;\n        }\n      }),\n    );\n    let updatingSelf = false;\n    const selfToPeer = quat.invert(quat.create(), peerToSelf);\n    self.registerDisposer(\n      self.changed.add(() => {\n        if (!updatingSelf) {\n          updatingPeer = true;\n          quat.multiply(peer.orientation, self.orientation, selfToPeer);\n          peer.changed.dispatch();\n          updatingPeer = false;\n        }\n      }),\n    );\n    return self;\n  }\n\n  assign(other: Borrowed<OrientationState>) {\n    quat.copy(this.orientation, other.orientation);\n    this.changed.dispatch();\n  }\n}\n\nexport class LinkedOrientationState extends LinkedBase<OrientationState> {\n  value = makeLinked(new OrientationState(), this.peer, this.link, {\n    assign: (a: OrientationState, b: OrientationState) => a.assign(b),\n    isValid: () => true,\n    difference: (a: OrientationState, b: OrientationState) => {\n      const temp = quat.create();\n      return quat.multiply(\n        temp,\n        quat.invert(temp, b.orientation),\n        a.orientation,\n      );\n    },\n    add: (target: OrientationState, source: OrientationState, amount: quat) => {\n      quat.multiply(target.orientation, source.orientation, amount);\n      target.changed.dispatch();\n    },\n    subtract: (\n      target: OrientationState,\n      source: OrientationState,\n      amount: quat,\n    ) => {\n      quat.multiply(\n        target.orientation,\n        source.orientation,\n        quat.invert(tempQuat, amount),\n      );\n      target.changed.dispatch();\n    },\n  });\n}\n\nexport interface RelativeDisplayScales {\n  /**\n   * Array of length `coordinateSpace.rank` specifying scale factors on top of (will be multiply by)\n   * `coordinateSpace.scales` to use for display purposes.  This allows non-uniform zooming.\n   */\n  factors: Float64Array;\n}\n\nexport class TrackableRelativeDisplayScales\n  extends RefCounted\n  implements Trackable, WatchableValueInterface<RelativeDisplayScales>\n{\n  changed = new NullarySignal();\n  private curCoordinateSpace = emptyInvalidCoordinateSpace;\n  private value_: RelativeDisplayScales = { factors: new Float64Array(0) };\n  constructor(\n    public coordinateSpace: WatchableValueInterface<CoordinateSpace>,\n  ) {\n    super();\n    this.registerDisposer(coordinateSpace.changed.add(() => this.update()));\n    this.update();\n  }\n\n  get value() {\n    return this.update();\n  }\n\n  reset() {\n    this.value_ = { factors: new Float64Array(0) };\n    this.curCoordinateSpace = emptyInvalidCoordinateSpace;\n    this.changed.dispatch();\n  }\n\n  toJSON() {\n    const json: any = {};\n    let nonEmpty = false;\n    const { value } = this;\n    const { factors } = value;\n    const { names, rank } = this.curCoordinateSpace;\n    for (let i = 0; i < rank; ++i) {\n      const factor = factors[i];\n      if (factor === 1) continue;\n      json[names[i]] = factor;\n      nonEmpty = true;\n    }\n    if (nonEmpty) return json;\n    return undefined;\n  }\n\n  restoreState(json: unknown) {\n    const {\n      coordinateSpace: { value: coordinateSpace },\n    } = this;\n    const { names, rank } = coordinateSpace;\n    const factors = new Float64Array(rank);\n    factors.fill(-1);\n    if (json !== undefined) {\n      const obj = verifyObject(json);\n      for (let i = 0; i < rank; ++i) {\n        factors[i] = verifyObjectProperty(obj, names[i], (x) =>\n          x === undefined ? 1 : verifyFinitePositiveFloat(x),\n        );\n      }\n    }\n    this.value_ = { factors };\n    this.curCoordinateSpace = coordinateSpace;\n    this.changed.dispatch();\n  }\n\n  setFactors(factors: Float64Array) {\n    const {\n      coordinateSpace: { value: coordinateSpace },\n    } = this;\n    if (factors.length !== coordinateSpace.rank) return;\n    this.value_ = { factors };\n    this.curCoordinateSpace = coordinateSpace;\n    this.changed.dispatch();\n  }\n\n  private update() {\n    const {\n      coordinateSpace: { value: coordinateSpace },\n    } = this;\n    let value = this.value_;\n    const { curCoordinateSpace } = this;\n    if (curCoordinateSpace === coordinateSpace) return value;\n    const { ids: oldDimensionIds } = curCoordinateSpace;\n    const { ids: newDimensionIds, rank } = coordinateSpace;\n    const oldFactors = value.factors;\n    const newFactors = new Float64Array(rank);\n    newFactors.fill(1);\n    for (let i = 0; i < rank; ++i) {\n      const id = newDimensionIds[i];\n      const oldIndex = oldDimensionIds.indexOf(id);\n      if (oldIndex === -1) continue;\n      newFactors[i] = oldFactors[oldIndex];\n    }\n    if (arraysEqual(newFactors, oldFactors)) return value;\n    value = this.value_ = { factors: newFactors };\n    this.curCoordinateSpace = coordinateSpace;\n    this.changed.dispatch();\n    return value;\n  }\n\n  assign(other: TrackableRelativeDisplayScales) {\n    this.setFactors(other.value.factors);\n  }\n}\n\nfunction mapPerDimensionValues<\n  T,\n  A extends { length: number; [index: number]: T },\n  C extends { new (n: number): A },\n>(\n  arrayConstructor: C,\n  input: A,\n  oldCoordinateSpace: CoordinateSpace,\n  newCoordinateSpace: CoordinateSpace,\n  defaultValue: (index: number) => T,\n): A {\n  if (oldCoordinateSpace === newCoordinateSpace) return input;\n  const { ids: oldDimensionIds } = oldCoordinateSpace;\n  const { rank: newRank, ids: newDimensionIds } = newCoordinateSpace;\n  const output = new arrayConstructor(newRank);\n  for (let newDim = 0; newDim < newRank; ++newDim) {\n    const id = newDimensionIds[newDim];\n    const oldDim = oldDimensionIds.indexOf(id);\n    output[newDim] = oldDim === -1 ? defaultValue(newDim) : input[oldDim];\n  }\n  return output;\n}\n\nexport class LinkedRelativeDisplayScales extends LinkedBase<TrackableRelativeDisplayScales> {\n  value = makeLinked(\n    new TrackableRelativeDisplayScales(this.peer.coordinateSpace),\n    this.peer,\n    this.link,\n    {\n      assign: (target, source) => target.assign(source),\n      difference: (a, b) => {\n        const { factors: fa } = a.value;\n        const coordinateSpace = a.coordinateSpace.value;\n        const fb = b.value.factors;\n        return {\n          coordinateSpace,\n          offsets: vector.subtract(new Float64Array(fa.length), fa, fb),\n        };\n      },\n      add: (\n        target,\n        source,\n        delta: { offsets: Float64Array; coordinateSpace: CoordinateSpace },\n      ) => {\n        const newOffsets = mapPerDimensionValues(\n          Float64Array,\n          delta.offsets,\n          delta.coordinateSpace,\n          target.coordinateSpace.value,\n          () => 0,\n        );\n        target.setFactors(\n          vector.add(\n            new Float64Array(newOffsets.length),\n            newOffsets,\n            source.value.factors,\n          ),\n        );\n      },\n      subtract: (\n        target,\n        source,\n        delta: { offsets: Float64Array; coordinateSpace: CoordinateSpace },\n      ) => {\n        const newOffsets = mapPerDimensionValues(\n          Float64Array,\n          delta.offsets,\n          delta.coordinateSpace,\n          target.coordinateSpace.value,\n          () => 0,\n        );\n        target.setFactors(\n          vector.subtract(\n            new Float64Array(newOffsets.length),\n            source.value.factors,\n            newOffsets,\n          ),\n        );\n      },\n      isValid: () => true,\n    },\n  );\n}\n\nexport interface DisplayDimensionRenderInfo {\n  /**\n   * Number of global dimensions.\n   */\n  globalRank: number;\n\n  /**\n   * Array of length `globalRank` specifying global dimension names.\n   */\n  globalDimensionNames: readonly string[];\n\n  /**\n   * Number of displayed dimensions.  Must be <= 3.\n   */\n  displayRank: number;\n\n  /**\n   * Array of length 3.  The first `displayRank` elements specify the indices of the the global\n   * dimensions that are displayed.  The remaining elements are `-1`.\n   */\n  displayDimensionIndices: Int32Array;\n\n  /**\n   * Array of length 3.  `voxelPhysicalScales[i]` equals\n   * `relativeDisplayScales[d] * coordinateSpace.scales[d]`,\n   * where `d = displayDimensionIndices[i]`, or `1` for `i >= rank`.\n   */\n  voxelPhysicalScales: Float64Array;\n\n  /**\n   * Unit corresponding to each dimension in `displayDimensionIndices`.  `displayDimensionUnits[i]`\n   * is equal to `coordinateSpace.units[displayDimensionIndices[i]]`, or `''` if\n   * `displayDimensionIndices[i] == -1`.\n   */\n  displayDimensionUnits: readonly string[];\n\n  /**\n   * Scale corresponding to each dimension in `displayDimensionIndices`.\n   * `displayDimensionScales[i]` is equal to `coordinateSpace.scales[displayDimensionIndices[i]]`,\n   * or `1` if `displayDimensionIndices[i] == -1`.\n   */\n  displayDimensionScales: Float64Array;\n\n  /**\n   * Physical scale corresponding to the canonical voxel.  Equal to minimum of\n   * `voxelPhysicalScales.slice(0, rank)`, or `1` if `rank == 0`.\n   */\n  canonicalVoxelPhysicalSize: number;\n\n  /**\n   * Array of length 3.  Amount by which the voxel coordinates of each display dimensions must be\n   * multiplied to convert to canonical voxels.  canonicalVoxelFactors[i] = voxelPhysicalScales[d] /\n   * canonicalVoxelPhysicalSize, where d = dimensionIndices[i], or `1` for `i >= rank`.\n   */\n  canonicalVoxelFactors: Float64Array;\n}\n\nfunction getDisplayDimensionRenderInfo(\n  coordinateSpace: CoordinateSpace,\n  displayDimensions: DisplayDimensions,\n  relativeDisplayScales: RelativeDisplayScales,\n): DisplayDimensionRenderInfo {\n  const {\n    rank: globalRank,\n    names: globalDimensionNames,\n    units,\n  } = coordinateSpace;\n  const { displayRank, displayDimensionIndices } = displayDimensions;\n  const canonicalVoxelFactors = new Float64Array(3);\n  const voxelPhysicalScales = new Float64Array(3);\n  let canonicalVoxelPhysicalSize: number;\n  const { factors } = relativeDisplayScales;\n  const displayDimensionUnits = new Array<string>(3);\n  const displayDimensionScales = new Float64Array(3);\n  canonicalVoxelFactors.fill(1);\n  voxelPhysicalScales.fill(1);\n  displayDimensionScales.fill(1);\n  displayDimensionUnits.fill(\"\");\n  if (displayRank === 0) {\n    canonicalVoxelPhysicalSize = 1;\n  } else {\n    canonicalVoxelPhysicalSize = Number.POSITIVE_INFINITY;\n    const { scales } = coordinateSpace;\n    for (let i = 0; i < displayRank; ++i) {\n      const dim = displayDimensionIndices[i];\n      const s = (voxelPhysicalScales[i] = factors[dim] * scales[dim]);\n      canonicalVoxelPhysicalSize = Math.min(canonicalVoxelPhysicalSize, s);\n      displayDimensionUnits[i] = units[dim];\n      displayDimensionScales[i] = scales[dim];\n    }\n    for (let i = 0; i < displayRank; ++i) {\n      canonicalVoxelFactors[i] =\n        voxelPhysicalScales[i] / canonicalVoxelPhysicalSize;\n    }\n  }\n  return {\n    globalRank,\n    globalDimensionNames,\n    displayRank,\n    displayDimensionIndices,\n    displayDimensionUnits,\n    displayDimensionScales,\n    canonicalVoxelFactors,\n    voxelPhysicalScales,\n    canonicalVoxelPhysicalSize,\n  };\n}\n\nexport function displayDimensionRenderInfosEqual(\n  a: DisplayDimensionRenderInfo,\n  b: DisplayDimensionRenderInfo,\n) {\n  return (\n    arraysEqual(a.globalDimensionNames, b.globalDimensionNames) &&\n    arraysEqual(a.displayDimensionIndices, b.displayDimensionIndices) &&\n    arraysEqual(a.canonicalVoxelFactors, b.canonicalVoxelFactors) &&\n    arraysEqual(a.voxelPhysicalScales, b.voxelPhysicalScales) &&\n    a.canonicalVoxelPhysicalSize === b.canonicalVoxelPhysicalSize &&\n    arraysEqual(a.displayDimensionUnits, b.displayDimensionUnits) &&\n    arraysEqual(a.displayDimensionScales, b.displayDimensionScales)\n  );\n}\n\nexport function validateDisplayDimensionRenderInfoProperty(\n  obj: { displayDimensionRenderInfo: DisplayDimensionRenderInfo },\n  expected: DisplayDimensionRenderInfo,\n): boolean {\n  const actual = obj.displayDimensionRenderInfo;\n  if (actual === expected) return true;\n  if (displayDimensionRenderInfosEqual(actual, expected)) {\n    obj.displayDimensionRenderInfo = expected;\n    return true;\n  }\n  return false;\n}\n\nexport class WatchableDisplayDimensionRenderInfo extends RefCounted {\n  changed = new NullarySignal();\n  private curRelativeDisplayScales: RelativeDisplayScales =\n    this.relativeDisplayScales.value;\n  private curDisplayDimensions: DisplayDimensions =\n    this.displayDimensions.value;\n  private curCoordinateSpace: CoordinateSpace =\n    this.relativeDisplayScales.coordinateSpace.value;\n  private value_: DisplayDimensionRenderInfo = getDisplayDimensionRenderInfo(\n    this.curCoordinateSpace,\n    this.curDisplayDimensions,\n    this.curRelativeDisplayScales,\n  );\n  get value() {\n    const {\n      relativeDisplayScales: {\n        value: relativeDisplayScales,\n        coordinateSpace: { value: coordinateSpace },\n      },\n      displayDimensions: { value: displayDimensions },\n      curRelativeDisplayScales,\n      curDisplayDimensions,\n      curCoordinateSpace,\n    } = this;\n    let value = this.value_;\n    if (\n      curRelativeDisplayScales !== relativeDisplayScales ||\n      curDisplayDimensions !== displayDimensions ||\n      curCoordinateSpace !== coordinateSpace\n    ) {\n      this.curRelativeDisplayScales = relativeDisplayScales;\n      this.curDisplayDimensions = displayDimensions;\n      this.curCoordinateSpace = coordinateSpace;\n      const newValue = getDisplayDimensionRenderInfo(\n        coordinateSpace,\n        displayDimensions,\n        relativeDisplayScales,\n      );\n      if (!displayDimensionRenderInfosEqual(value, newValue)) {\n        this.value_ = value = newValue;\n        this.changed.dispatch();\n      }\n    }\n    return value;\n  }\n  constructor(\n    public relativeDisplayScales: Owned<TrackableRelativeDisplayScales>,\n    public displayDimensions: Owned<TrackableDisplayDimensions>,\n  ) {\n    super();\n    this.registerDisposer(relativeDisplayScales);\n    this.registerDisposer(displayDimensions);\n    const maybeUpdateValue = () => {\n      this.value;\n    };\n    this.registerDisposer(relativeDisplayScales.changed.add(maybeUpdateValue));\n    this.registerDisposer(displayDimensions.changed.add(maybeUpdateValue));\n  }\n}\n\nexport interface DisplayDimensions {\n  coordinateSpace: CoordinateSpace;\n  displayRank: number;\n  displayDimensionIndices: Int32Array;\n}\n\nexport class TrackableDisplayDimensions\n  extends RefCounted\n  implements Trackable\n{\n  changed = new NullarySignal();\n  private default_ = true;\n  private value_: DisplayDimensions | undefined = undefined;\n\n  constructor(\n    public coordinateSpace: WatchableValueInterface<CoordinateSpace>,\n  ) {\n    super();\n    this.registerDisposer(\n      this.coordinateSpace.changed.add(this.changed.dispatch),\n    );\n    this.update();\n  }\n\n  get value() {\n    this.update();\n    return this.value_!;\n  }\n\n  private update() {\n    const {\n      coordinateSpace: { value: coordinateSpace },\n    } = this;\n    const value = this.value_;\n    if (value !== undefined && value.coordinateSpace === coordinateSpace) {\n      return;\n    }\n    if (value === undefined || this.default_) {\n      this.setToDefault(coordinateSpace);\n      return;\n    }\n    const newDimensionIndices = new Int32Array(3);\n    const { ids: oldDimensionIds } = value.coordinateSpace;\n    const { ids: newDimensionIds } = coordinateSpace;\n    const oldDimensionIndices = value.displayDimensionIndices;\n    const oldRank = value.displayRank;\n    let newRank = 0;\n    for (let i = 0; i < oldRank; ++i) {\n      const newDim = newDimensionIds.indexOf(\n        oldDimensionIds[oldDimensionIndices[i]],\n      );\n      if (newDim === -1) continue;\n      newDimensionIndices[newRank] = newDim;\n      ++newRank;\n    }\n    newDimensionIndices.fill(-1, newRank);\n    if (newRank === 0) {\n      this.default_ = true;\n      this.setToDefault(coordinateSpace);\n      return;\n    }\n    this.assignValue(coordinateSpace, newRank, newDimensionIndices);\n    this.changed.dispatch();\n  }\n\n  private setToDefault(coordinateSpace: CoordinateSpace) {\n    const displayRank = Math.min(coordinateSpace.rank, 3);\n    const displayDimensionIndices = new Int32Array(3);\n    displayDimensionIndices.fill(-1);\n    for (let i = 0; i < displayRank; ++i) {\n      displayDimensionIndices[i] = i;\n    }\n    this.assignValue(coordinateSpace, displayRank, displayDimensionIndices);\n  }\n\n  private assignValue(\n    coordinateSpace: CoordinateSpace,\n    displayRank: number,\n    displayDimensionIndices: Int32Array,\n  ) {\n    this.value_ = {\n      coordinateSpace,\n      displayRank,\n      displayDimensionIndices,\n    };\n    this.changed.dispatch();\n  }\n\n  reset() {\n    this.default_ = true;\n    this.value_ = undefined;\n    this.changed.dispatch();\n  }\n\n  restoreState(obj: any) {\n    if (obj === undefined) {\n      this.reset();\n      return;\n    }\n    const displayDimensionNames = dimensionNamesFromJson(obj);\n    if (displayDimensionNames.length > 3) {\n      throw new Error(\"Number of spatial dimensions must be <= 3\");\n    }\n    const {\n      coordinateSpace: { value: coordinateSpace },\n    } = this;\n    const displayDimensionIndices = new Int32Array(3);\n    displayDimensionIndices.fill(-1);\n    const { names } = coordinateSpace;\n    let displayRank = 0;\n    for (const name of displayDimensionNames) {\n      const index = names.indexOf(name);\n      if (index === -1) continue;\n      displayDimensionIndices[displayRank++] = index;\n    }\n    if (displayRank === 0) {\n      this.reset();\n      return;\n    }\n    this.default_ = false;\n    this.assignValue(coordinateSpace, displayRank, displayDimensionIndices);\n  }\n\n  get default() {\n    this.update();\n    return this.default_;\n  }\n\n  set default(value: boolean) {\n    if (this.default_ === value) return;\n    if (value) {\n      this.default_ = true;\n      this.setToDefault(this.coordinateSpace.value);\n    } else {\n      this.default_ = false;\n      this.changed.dispatch();\n    }\n  }\n\n  setDimensionIndices(rank: number, dimensionIndices: Int32Array) {\n    this.default_ = false;\n    this.assignValue(this.coordinateSpace.value, rank, dimensionIndices);\n  }\n\n  toJSON() {\n    if (this.default_) return undefined;\n    const { value } = this;\n    const displayDimensionNames: string[] = [];\n    const {\n      displayRank,\n      displayDimensionIndices,\n      coordinateSpace: { names },\n    } = value;\n    if (displayRank === 0) return undefined;\n    for (let i = 0; i < displayRank; ++i) {\n      displayDimensionNames[i] = names[displayDimensionIndices[i]];\n    }\n    return displayDimensionNames;\n  }\n\n  assign(other: TrackableDisplayDimensions) {\n    if (other.default) {\n      this.default = true;\n    } else {\n      const { displayRank, displayDimensionIndices } = other.value;\n      this.setDimensionIndices(displayRank, displayDimensionIndices);\n    }\n  }\n}\n\nexport class LinkedDisplayDimensions extends SimpleLinkedBase<TrackableDisplayDimensions> {\n  value = makeSimpleLinked(\n    new TrackableDisplayDimensions(this.peer.coordinateSpace),\n    this.peer,\n    this.link,\n    {\n      assign: (target, source) => target.assign(source),\n      isValid: () => true,\n    },\n  );\n}\n\nexport class DisplayPose extends RefCounted {\n  changed = new NullarySignal();\n\n  get displayDimensions(): Borrowed<TrackableDisplayDimensions> {\n    return this.displayDimensionRenderInfo.displayDimensions;\n  }\n\n  get relativeDisplayScales(): Borrowed<TrackableRelativeDisplayScales> {\n    return this.displayDimensionRenderInfo.relativeDisplayScales;\n  }\n\n  constructor(\n    public position: Owned<Position>,\n    public displayDimensionRenderInfo: WatchableDisplayDimensionRenderInfo,\n    public orientation: Owned<OrientationState>,\n  ) {\n    super();\n    this.registerDisposer(position);\n    this.registerDisposer(orientation);\n    this.registerDisposer(displayDimensionRenderInfo);\n    this.registerDisposer(position.changed.add(this.changed.dispatch));\n    this.registerDisposer(orientation.changed.add(this.changed.dispatch));\n    this.registerDisposer(\n      displayDimensionRenderInfo.changed.add(this.changed.dispatch),\n    );\n  }\n\n  get valid() {\n    return this.position.valid;\n  }\n\n  /**\n   * Resets everything.\n   */\n  reset() {\n    this.position.reset();\n    this.orientation.reset();\n    this.displayDimensions.reset();\n  }\n\n  updateDisplayPosition(\n    fun: (pos: vec3) => boolean | void,\n    temp: vec3 = tempVec3,\n  ): boolean {\n    const {\n      coordinateSpace: { value: coordinateSpace },\n      value: voxelCoordinates,\n    } = this.position;\n    const { displayDimensionIndices, displayRank } =\n      this.displayDimensions.value;\n    if (coordinateSpace === undefined) return false;\n    temp.fill(0);\n    for (let i = 0; i < displayRank; ++i) {\n      const dim = displayDimensionIndices[i];\n      temp[i] = voxelCoordinates[dim];\n    }\n    if (fun(temp) !== false) {\n      for (let i = 0; i < displayRank; ++i) {\n        const dim = displayDimensionIndices[i];\n        voxelCoordinates[dim] = temp[i];\n      }\n      this.position.changed.dispatch();\n      return true;\n    }\n    return false;\n  }\n\n  // Transform from view coordinates to global spatial coordinates.\n  toMat4(mat: mat4, zoom: number) {\n    mat4.fromQuat(mat, this.orientation.orientation);\n    const { value: voxelCoordinates } = this.position;\n    const { canonicalVoxelFactors, displayDimensionIndices } =\n      this.displayDimensionRenderInfo.value;\n    for (let i = 0; i < 3; ++i) {\n      const dim = displayDimensionIndices[i];\n      const scale = zoom / canonicalVoxelFactors[i];\n      mat[i] *= scale;\n      mat[4 + i] *= scale;\n      mat[8 + i] *= scale;\n      mat[12 + i] = voxelCoordinates[dim] || 0;\n    }\n  }\n\n  toMat3(mat: mat3, zoom: number) {\n    mat3.fromQuat(mat, this.orientation.orientation);\n    const { canonicalVoxelFactors, displayRank } =\n      this.displayDimensionRenderInfo.value;\n    for (let i = 0; i < displayRank; ++i) {\n      const scale = zoom / canonicalVoxelFactors[i];\n      mat[i] *= scale;\n      mat[3 + i] *= scale;\n      mat[6 + i] *= scale;\n    }\n  }\n\n  /**\n   * Snaps the orientation to the nearest axis-aligned orientation, and\n   * snaps the position to the nearest voxel.\n   */\n  snap() {\n    this.orientation.snap();\n    this.position.snapToVoxel();\n    this.changed.dispatch();\n  }\n\n  translateDimensionRelative(dimensionIndex: number, adjustment: number) {\n    if (!this.valid) {\n      return;\n    }\n    const { position } = this;\n    const { value: voxelCoordinates } = position;\n    const { bounds } = position.coordinateSpace.value;\n    voxelCoordinates[dimensionIndex] = clampAndRoundCoordinateToVoxelCenter(\n      bounds,\n      dimensionIndex,\n      voxelCoordinates[dimensionIndex] + adjustment,\n    );\n    position.changed.dispatch();\n  }\n\n  translateVoxelsRelative(translation: vec3) {\n    if (!this.valid) {\n      return;\n    }\n    const temp = vec3.transformQuat(\n      tempVec3,\n      translation,\n      this.orientation.orientation,\n    );\n    const { position } = this;\n    const { value: voxelCoordinates } = position;\n    const { displayDimensionIndices, displayRank } =\n      this.displayDimensions.value;\n    const { bounds } = position.coordinateSpace.value;\n    for (let i = 0; i < displayRank; ++i) {\n      const dim = displayDimensionIndices[i];\n      const adjustment = temp[i];\n      if (adjustment === 0) continue;\n      voxelCoordinates[dim] = clampAndRoundCoordinateToVoxelCenter(\n        bounds,\n        dim,\n        voxelCoordinates[dim] + adjustment,\n      );\n    }\n    this.position.changed.dispatch();\n  }\n\n  rotateRelative(axis: vec3, angle: number) {\n    const temp = quat.create();\n    quat.setAxisAngle(temp, axis, angle);\n    const orientation = this.orientation.orientation;\n    quat.multiply(orientation, orientation, temp);\n    this.orientation.changed.dispatch();\n  }\n\n  rotateAbsolute(axis: vec3, angle: number, fixedPoint: Float32Array) {\n    const {\n      coordinateSpace: { value: coordinateSpace },\n      value: voxelCoordinates,\n    } = this.position;\n    if (coordinateSpace === undefined) return;\n    const {\n      relativeDisplayScales: {\n        value: { factors: relativeDisplayScales },\n      },\n      displayDimensions: {\n        value: { displayDimensionIndices, displayRank },\n      },\n    } = this;\n    const { scales } = coordinateSpace;\n    const temp = quat.create();\n    quat.setAxisAngle(temp, axis, angle);\n    const orientation = this.orientation.orientation;\n\n    // We want the coordinates in the transformed coordinate frame of the fixed point to remain\n    // the same after the rotation.\n\n    // We have the invariants:\n    // oldOrienation * fixedPointLocal + oldPosition == fixedPoint.\n    // newOrientation * fixedPointLocal + newPosition == fixedPoint.\n\n    // Therefore, we compute fixedPointLocal by:\n    // fixedPointLocal == inverse(oldOrientation) * (fixedPoint - oldPosition).\n    const fixedPointLocal = tempVec3;\n    tempVec3.fill(0);\n    for (let i = 0; i < displayRank; ++i) {\n      const dim = displayDimensionIndices[i];\n      const diff = fixedPoint[dim] - voxelCoordinates[dim];\n      fixedPointLocal[i] = diff * scales[dim] * relativeDisplayScales[dim];\n    }\n    const invOrientation = quat.invert(tempQuat, orientation);\n    vec3.transformQuat(fixedPointLocal, fixedPointLocal, invOrientation);\n\n    // We then compute the newPosition by:\n    // newPosition := fixedPoint - newOrientation * fixedPointLocal.\n    quat.multiply(orientation, temp, orientation);\n    vec3.transformQuat(fixedPointLocal, fixedPointLocal, orientation);\n\n    for (let i = 0; i < displayRank; ++i) {\n      const dim = displayDimensionIndices[i];\n      voxelCoordinates[dim] =\n        fixedPoint[dim] -\n        fixedPointLocal[i] / (scales[dim] * relativeDisplayScales[dim]);\n    }\n    this.position.changed.dispatch();\n    this.orientation.changed.dispatch();\n  }\n\n  translateNonDisplayDimension(\n    nonSpatialDimensionIndex: number,\n    adjustment: number,\n  ) {\n    if (!this.valid) return;\n    const { displayDimensionIndices } = this.displayDimensions.value;\n    const { position } = this;\n    const rank = position.coordinateSpace.value.rank;\n    for (let i = 0; i < rank; ++i) {\n      if (displayDimensionIndices.indexOf(i) !== -1) continue;\n      if (nonSpatialDimensionIndex-- === 0) {\n        this.translateDimensionRelative(i, adjustment);\n        return;\n      }\n    }\n  }\n}\n\nexport type TrackableZoomInterface =\n  | TrackableProjectionZoom\n  | TrackableCrossSectionZoom;\n\nexport class LinkedZoomState<\n  T extends TrackableProjectionZoom | TrackableCrossSectionZoom,\n> extends LinkedBase<T> {\n  constructor(\n    peer: Owned<T>,\n    displayDimensionRenderInfo: Owned<WatchableDisplayDimensionRenderInfo>,\n  ) {\n    super(peer);\n    this.value = (() => {\n      const self: T = new (peer.constructor as any)(displayDimensionRenderInfo);\n      const assign = (target: T, source: T) => {\n        target.assign(source);\n      };\n      const difference = (a: T, b: T) => {\n        return (\n          (a.value / b.value) *\n          (a.canonicalVoxelPhysicalSize / b.canonicalVoxelPhysicalSize)\n        );\n      };\n      const add = (target: T, source: T, amount: number) => {\n        target.setPhysicalScale(\n          source.value * amount,\n          source.canonicalVoxelPhysicalSize,\n        );\n      };\n      const subtract = (target: T, source: T, amount: number) => {\n        target.setPhysicalScale(\n          source.value / amount,\n          source.canonicalVoxelPhysicalSize,\n        );\n      };\n      const isValid = (x: T) =>\n        x.coordinateSpaceValue.valid && x.canonicalVoxelPhysicalSize !== 0;\n      makeLinked(\n        self as RefCounted & { changed: NullarySignal },\n        this.peer,\n        this.link,\n        {\n          assign,\n          isValid,\n          difference,\n          add,\n          subtract,\n        },\n      );\n      return self;\n    })();\n  }\n}\n\nexport function linkedStateLegacyJsonView<\n  T extends LinkableState<T> & { readonly legacyJsonView: Trackable },\n>(linked: LinkedBase<T>) {\n  return {\n    changed: linked.changed,\n    toJSON() {\n      return linked.toJSON();\n    },\n    restoreState(obj: unknown) {\n      restoreLinkedFromJson(linked.link, linked.value.legacyJsonView, obj);\n    },\n    reset() {\n      linked.reset();\n    },\n  };\n}\n\nabstract class TrackableZoom\n  extends RefCounted\n  implements Trackable, WatchableValueInterface<number>\n{\n  readonly changed = new NullarySignal();\n  private curCanonicalVoxelPhysicalSize = 0;\n  private value_: number = Number.NaN;\n  protected legacyValue_: number = Number.NaN;\n\n  /**\n   * Zoom factor.  For cross section views, in canonical voxels per viewport pixel.  For projection\n   * views, in canonical voxels per viewport height (for orthographic projection).\n   */\n  get value() {\n    this.handleCoordinateSpaceChanged();\n    return this.value_;\n  }\n\n  set value(value: number) {\n    const { canonicalVoxelPhysicalSize } = this;\n    if (\n      Object.is(value, this.value_) &&\n      canonicalVoxelPhysicalSize === this.curCanonicalVoxelPhysicalSize\n    ) {\n      return;\n    }\n    this.curCanonicalVoxelPhysicalSize = canonicalVoxelPhysicalSize;\n    this.legacyValue_ = Number.NaN;\n    this.value_ = value;\n    this.changed.dispatch();\n  }\n\n  get canonicalVoxelPhysicalSize() {\n    return this.displayDimensionRenderInfo.value.canonicalVoxelPhysicalSize;\n  }\n\n  get coordinateSpaceValue() {\n    return this.displayDimensionRenderInfo.relativeDisplayScales.coordinateSpace\n      .value;\n  }\n\n  /**\n   * Sets the zoom factor in the legacy units.  For cross section views, `1e-9` spatial units per\n   * viewport pixel.  For projection views, `2 * 100 * Math.tan(Math.PI / 8) * 1e-9` spatial units\n   * per viewport height (for orthographic projection).\n   */\n  set legacyValue(value: number) {\n    if (Object.is(value, this.legacyValue_)) return;\n    this.value_ = Number.NaN;\n    this.legacyValue_ = value;\n    this.curCanonicalVoxelPhysicalSize = 0;\n    this.changed.dispatch();\n  }\n\n  get legacyValue() {\n    return this.legacyValue_;\n  }\n\n  constructor(\n    public displayDimensionRenderInfo: Owned<WatchableDisplayDimensionRenderInfo>,\n  ) {\n    super();\n    this.registerDisposer(displayDimensionRenderInfo);\n    this.registerDisposer(\n      displayDimensionRenderInfo.changed.add(() =>\n        this.handleCoordinateSpaceChanged(),\n      ),\n    );\n    this.registerDisposer(\n      displayDimensionRenderInfo.relativeDisplayScales.coordinateSpace.changed.add(\n        () => this.handleCoordinateSpaceChanged(),\n      ),\n    );\n    this.handleCoordinateSpaceChanged();\n  }\n\n  handleCoordinateSpaceChanged() {\n    const { value_ } = this;\n    const {\n      displayDimensionRenderInfo: {\n        value: { canonicalVoxelPhysicalSize },\n        relativeDisplayScales: {\n          coordinateSpace: { value: coordinateSpace },\n        },\n      },\n    } = this;\n    const { curCanonicalVoxelPhysicalSize } = this;\n    if (\n      !Number.isNaN(value_) &&\n      canonicalVoxelPhysicalSize === curCanonicalVoxelPhysicalSize\n    ) {\n      return;\n    }\n    if (!Number.isNaN(value_)) {\n      if (curCanonicalVoxelPhysicalSize !== 0) {\n        this.value_ =\n          value_ * (curCanonicalVoxelPhysicalSize / canonicalVoxelPhysicalSize);\n        this.curCanonicalVoxelPhysicalSize = canonicalVoxelPhysicalSize;\n        this.changed.dispatch();\n      }\n      return;\n    }\n    if (!coordinateSpace.valid || canonicalVoxelPhysicalSize === 0) {\n      return;\n    }\n    this.curCanonicalVoxelPhysicalSize = canonicalVoxelPhysicalSize;\n    this.value_ = this.getDefaultValue();\n    this.changed.dispatch();\n  }\n\n  protected abstract getDefaultValue(): number;\n\n  toJSON() {\n    const { value } = this;\n    return Number.isNaN(value) ? undefined : value;\n  }\n\n  restoreState(obj: any) {\n    this.curCanonicalVoxelPhysicalSize = 0;\n    this.legacyValue_ = Number.NaN;\n    if (obj === undefined) {\n      this.value_ = Number.NaN;\n    } else {\n      this.value_ = verifyFinitePositiveFloat(obj);\n    }\n    this.changed.dispatch();\n  }\n\n  reset() {\n    this.curCanonicalVoxelPhysicalSize = 0;\n    this.value_ = Number.NaN;\n    this.legacyValue_ = Number.NaN;\n    this.changed.dispatch();\n  }\n\n  get legacyJsonView() {\n    const self = this;\n    return {\n      changed: self.changed,\n      toJSON() {\n        return self.toJSON();\n      },\n      reset() {\n        return self.reset();\n      },\n      restoreState(obj: any) {\n        self.legacyValue = verifyFinitePositiveFloat(obj);\n      },\n    };\n  }\n\n  setPhysicalScale(\n    scaleInCanonicalVoxels: number,\n    canonicalVoxelPhysicalSize: number,\n  ) {\n    const curCanonicalVoxelPhysicalSize = (this.curCanonicalVoxelPhysicalSize =\n      this.canonicalVoxelPhysicalSize);\n    this.value =\n      scaleInCanonicalVoxels *\n      (canonicalVoxelPhysicalSize / curCanonicalVoxelPhysicalSize);\n  }\n\n  assign(source: TrackableZoomInterface) {\n    const { legacyValue } = source;\n    if (!Number.isNaN(legacyValue)) {\n      this.legacyValue = legacyValue;\n    } else {\n      this.setPhysicalScale(source.value, source.canonicalVoxelPhysicalSize);\n    }\n  }\n}\n\nexport class TrackableCrossSectionZoom extends TrackableZoom {\n  protected getDefaultValue() {\n    const { legacyValue_ } = this;\n    if (Number.isNaN(legacyValue_)) {\n      // Default is 1 voxel per viewport pixel.\n      return 1;\n    }\n    const { canonicalVoxelPhysicalSize } = this;\n    return (this.legacyValue_ * 1e-9) / canonicalVoxelPhysicalSize;\n  }\n}\n\nexport class TrackableProjectionZoom extends TrackableZoom {\n  protected getDefaultValue() {\n    const { legacyValue_ } = this;\n    if (!Number.isNaN(legacyValue_)) {\n      this.legacyValue_ = Number.NaN;\n      const { canonicalVoxelPhysicalSize } = this;\n      return (\n        (2 * 100 * Math.tan(Math.PI / 8) * 1e-9 * legacyValue_) /\n        canonicalVoxelPhysicalSize\n      );\n    }\n    const {\n      coordinateSpaceValue: {\n        bounds: { lowerBounds, upperBounds },\n      },\n    } = this;\n    const { canonicalVoxelFactors, displayDimensionIndices } =\n      this.displayDimensionRenderInfo.value;\n    let value = canonicalVoxelFactors.reduce((x, factor, i) => {\n      const dim = displayDimensionIndices[i];\n      const extent = (upperBounds[dim] - lowerBounds[dim]) * factor;\n      return Math.max(x, extent);\n    }, 0);\n    if (!Number.isFinite(value)) {\n      // Default to showing 1024 voxels if there is no bounds information.\n      value = 1024;\n    } else {\n      value = 2 ** Math.ceil(Math.log2(value));\n    }\n    return value;\n  }\n}\n\nexport class TrackableDepthRange\n  extends RefCounted\n  implements WatchableValueInterface<number>\n{\n  changed = new NullarySignal();\n\n  constructor(\n    public readonly defaultValue: number,\n    public displayDimensionRenderInfo: WatchableValueInterface<DisplayDimensionRenderInfo>,\n  ) {\n    super();\n    this.value_ = defaultValue;\n    this.canonicalVoxelPhysicalSize =\n      displayDimensionRenderInfo.value.canonicalVoxelPhysicalSize;\n    this.registerDisposer(\n      displayDimensionRenderInfo.changed.add(() => {\n        this.value;\n      }),\n    );\n  }\n\n  private value_: number;\n  canonicalVoxelPhysicalSize: number;\n\n  get value() {\n    let { value_ } = this;\n    if (value_ > 0) {\n      const { canonicalVoxelPhysicalSize } =\n        this.displayDimensionRenderInfo.value;\n      const prevCanonicalVoxelPhysicalSize = this.canonicalVoxelPhysicalSize;\n      if (canonicalVoxelPhysicalSize !== prevCanonicalVoxelPhysicalSize) {\n        this.canonicalVoxelPhysicalSize = canonicalVoxelPhysicalSize;\n        value_ =\n          this.value_ =\n          value_ =\n            prevCanonicalVoxelPhysicalSize / canonicalVoxelPhysicalSize;\n        this.changed.dispatch();\n      }\n    }\n    return value_;\n  }\n\n  set value(value: number) {\n    if (value === this.value) return;\n    this.value_ = value;\n    const { canonicalVoxelPhysicalSize } =\n      this.displayDimensionRenderInfo.value;\n    this.canonicalVoxelPhysicalSize = canonicalVoxelPhysicalSize;\n    this.changed.dispatch();\n  }\n\n  toJSON() {\n    const { value } = this;\n    if (value === this.defaultValue) return undefined;\n    return value;\n  }\n\n  reset() {\n    this.value = this.defaultValue;\n  }\n\n  restoreState(obj: unknown) {\n    if (typeof obj !== \"number\" || !Number.isFinite(obj) || obj === 0) {\n      this.value = this.defaultValue;\n    } else {\n      this.value = obj;\n    }\n  }\n\n  setValueAbsolute(value: number, sourceCanonicalVoxelPhysicalSize: number) {\n    if (value > 0) {\n      const { canonicalVoxelPhysicalSize } =\n        this.displayDimensionRenderInfo.value;\n      value =\n        value * (sourceCanonicalVoxelPhysicalSize / canonicalVoxelPhysicalSize);\n    }\n    this.value = value;\n  }\n\n  assign(other: TrackableDepthRange) {\n    this.setValueAbsolute(other.value, other.canonicalVoxelPhysicalSize);\n  }\n}\n\nexport class LinkedDepthRange extends SimpleLinkedBase<TrackableDepthRange> {\n  constructor(\n    peer: Owned<TrackableDepthRange>,\n    displayDimensionRenderInfo: WatchableValueInterface<DisplayDimensionRenderInfo>,\n  ) {\n    super(peer);\n    this.value = makeSimpleLinked(\n      new TrackableDepthRange(peer.defaultValue, displayDimensionRenderInfo),\n      this.peer,\n      this.link,\n      {\n        assign: (target, source) => target.assign(source),\n        isValid: () => true,\n      },\n    );\n  }\n}\n\nexport class NavigationState<\n  Zoom extends TrackableZoomInterface = TrackableZoomInterface,\n> extends RefCounted {\n  changed = new NullarySignal();\n\n  constructor(\n    public pose: Owned<DisplayPose>,\n    public zoomFactor: Owned<Zoom>,\n    public depthRange: Owned<TrackableDepthRange>,\n  ) {\n    super();\n    this.registerDisposer(pose);\n    this.registerDisposer(zoomFactor);\n    this.registerDisposer(depthRange);\n    this.registerDisposer(this.pose.changed.add(this.changed.dispatch));\n    this.registerDisposer(this.zoomFactor.changed.add(this.changed.dispatch));\n    this.registerDisposer(this.depthRange.changed.add(this.changed.dispatch));\n  }\n  get coordinateSpace() {\n    return this.pose.position.coordinateSpace;\n  }\n\n  /**\n   * Resets everything.\n   */\n  reset() {\n    this.pose.reset();\n    this.zoomFactor.reset();\n  }\n\n  get position() {\n    return this.pose.position;\n  }\n  get displayDimensions() {\n    return this.pose.displayDimensions;\n  }\n  get relativeDisplayScales() {\n    return this.pose.relativeDisplayScales;\n  }\n  get displayDimensionRenderInfo() {\n    return this.pose.displayDimensionRenderInfo;\n  }\n  toMat4(mat: mat4) {\n    this.pose.toMat4(mat, this.zoomFactor.value);\n  }\n  toMat3(mat: mat3) {\n    this.pose.toMat3(mat, this.zoomFactor.value);\n  }\n\n  get relativeDepthRange() {\n    let depthRange = this.depthRange.value;\n    if (depthRange > 0) {\n      depthRange /= this.zoomFactor.value;\n    } else {\n      depthRange *= -1;\n    }\n    return depthRange;\n  }\n\n  get valid() {\n    return this.pose.valid && !Number.isNaN(this.zoomFactor.value);\n  }\n\n  zoomBy(factor: number) {\n    this.zoomFactor.value *= factor;\n  }\n}\n","/**\n * @license\n * Copyright 2024 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum FrameTimingMethod {\n  MEDIAN = 0,\n  MEAN = 1,\n  MAX = 2,\n}\n\nexport class FramerateMonitor {\n  private timeElapsedQueries: (WebGLQuery | null)[] = [];\n  private warnedAboutMissingExtension = false;\n  private storedTimeDeltas: number[] = [];\n\n  constructor(\n    private numStoredTimes: number = 10,\n    private queryPoolSize: number = 10,\n  ) {\n    if (this.queryPoolSize < 1) {\n      throw new Error(\n        `Query pool size must be at least 1, but got ${queryPoolSize}.`,\n      );\n    }\n  }\n\n  getTimingExtension(gl: WebGL2RenderingContext) {\n    const ext = gl.getExtension(\"EXT_disjoint_timer_query_webgl2\");\n    if (ext === null && !this.warnedAboutMissingExtension) {\n      console.log(\n        \"EXT_disjoint_timer_query_webgl2 extension not available. \" +\n          \"Cannot measure frame time.\",\n      );\n      this.warnedAboutMissingExtension = true;\n    }\n    return ext;\n  }\n\n  startFrameTimeQuery(gl: WebGL2RenderingContext, ext: any) {\n    if (ext === null) {\n      return null;\n    }\n    const query = gl.createQuery();\n    if (query !== null) {\n      gl.beginQuery(ext.TIME_ELAPSED_EXT, query);\n    }\n    return query;\n  }\n\n  endFrameTimeQuery(\n    gl: WebGL2RenderingContext,\n    ext: any,\n    query: WebGLQuery | null,\n  ) {\n    if (ext !== null && query !== null) {\n      gl.endQuery(ext.TIME_ELAPSED_EXT);\n    }\n    if (this.timeElapsedQueries.length >= this.queryPoolSize) {\n      const oldestQuery = this.timeElapsedQueries.shift();\n      if (oldestQuery !== null && oldestQuery !== undefined) {\n        gl.deleteQuery(oldestQuery);\n      }\n    }\n    this.timeElapsedQueries.push(query);\n  }\n\n  grabAnyFinishedQueryResults(gl: WebGL2RenderingContext) {\n    const deletedQueryIndices: number[] = [];\n    for (let i = 0; i < this.timeElapsedQueries.length; i++) {\n      const query = this.timeElapsedQueries[i];\n      if (query !== null) {\n        const available = gl.getQueryParameter(\n          query,\n          gl.QUERY_RESULT_AVAILABLE,\n        );\n        if (available) {\n          const result = gl.getQueryParameter(query, gl.QUERY_RESULT) / 1e6;\n          this.storedTimeDeltas.push(result);\n          gl.deleteQuery(query);\n          deletedQueryIndices.push(i);\n        }\n      }\n    }\n    for (let i = deletedQueryIndices.length - 1; i >= 0; i--) {\n      this.timeElapsedQueries.splice(i, 1);\n    }\n    if (this.storedTimeDeltas.length > this.numStoredTimes) {\n      this.storedTimeDeltas = this.storedTimeDeltas.slice(-this.numStoredTimes);\n    }\n  }\n\n  getLastFrameTimesInMs(numberOfFrames: number = 10) {\n    return this.storedTimeDeltas.slice(-numberOfFrames);\n  }\n\n  getQueries() {\n    return this.timeElapsedQueries;\n  }\n}\n\nexport class DownsamplingBasedOnFrameRateCalculator {\n  private lastFrameTime: number | null = null;\n  private frameDeltas: number[] = [];\n  private downsamplingRates: Map<number, number> = new Map();\n  private frameCount = 0;\n\n  /**\n   * @param numberOfStoredFrameDeltas The number of frame deltas to store. Oldest frame deltas are removed. Must be at least 1.\n   * @param maxDownsamplingFactor The maximum factor for downsampling. Must be at least 2.\n   * @param desiredFrameTimingMs The desired frame timing in milliseconds. The downsampling rate is based on a comparison of the actual frame timing to this value.\n   * @param downsamplingPersistenceDurationInFrames The max number of frames over which a high downsampling rate persists.\n   */\n  constructor(\n    public numberOfStoredFrameDeltas: number = 10,\n    private maxDownsamplingFactor: number = 8,\n    private desiredFrameTimingMs = 1000 / 60,\n    private downsamplingPersistenceDurationInFrames = 15,\n  ) {\n    this.validateConstructorArguments();\n    for (let i = 1; i <= this.maxDownsamplingFactor; i *= 2) {\n      this.downsamplingRates.set(i, -Infinity);\n    }\n  }\n\n  private validateConstructorArguments() {\n    this.numberOfStoredFrameDeltas = Math.max(\n      1,\n      Math.round(this.numberOfStoredFrameDeltas),\n    );\n    this.maxDownsamplingFactor = Math.max(\n      2,\n      Math.round(this.maxDownsamplingFactor),\n    );\n  }\n\n  private storeFrameDelta(frameDelta: number) {\n    this.frameDeltas.push(frameDelta);\n    if (this.frameDeltas.length > this.numberOfStoredFrameDeltas) {\n      this.frameDeltas.shift();\n    }\n  }\n\n  private calculateMeanFrameTime(): number {\n    return (\n      this.frameDeltas.reduce((a, b) => a + b, 0) / this.frameDeltas.length\n    );\n  }\n\n  private calculateMedianFrameTime(): number {\n    const sortedFrameDeltas = this.frameDeltas.slice().sort((a, b) => a - b);\n    const midpoint = Math.floor(sortedFrameDeltas.length / 2);\n    return sortedFrameDeltas.length % 2 === 1\n      ? sortedFrameDeltas[midpoint]\n      : (sortedFrameDeltas[midpoint - 1] + sortedFrameDeltas[midpoint]) / 2;\n  }\n\n  private calculateMaxFrameTime(): number {\n    return Math.max(...this.frameDeltas);\n  }\n\n  private updateMaxTrackedDownsamplingRate(downsampleFactor: number) {\n    this.downsamplingRates.set(downsampleFactor, this.frameCount);\n    let maxTrackedDownsamplingRate = 1;\n    for (const [downsamplingRate, frameCount] of this.downsamplingRates) {\n      if (\n        this.frameCount - frameCount <=\n        this.downsamplingPersistenceDurationInFrames\n      ) {\n        maxTrackedDownsamplingRate = downsamplingRate;\n      }\n    }\n    return maxTrackedDownsamplingRate;\n  }\n\n  /* This doesn't reset stored frame deltas. Is usually called on a new continous camera move */\n  resetForNewFrameSet() {\n    this.lastFrameTime = null;\n    this.frameCount = 0;\n    this.downsamplingRates.forEach((_, key) => {\n      this.downsamplingRates.set(key, -Infinity);\n    });\n  }\n\n  addFrame(timestamp: number = Date.now()) {\n    if (this.lastFrameTime !== null) {\n      const frameDelta = timestamp - this.lastFrameTime;\n      if (frameDelta > 0) {\n        this.storeFrameDelta(frameDelta);\n      }\n    }\n    this.lastFrameTime = timestamp;\n    this.frameCount++;\n  }\n\n  calculateFrameTimeInMs(\n    method: FrameTimingMethod = FrameTimingMethod.MAX,\n  ): number {\n    if (this.frameDeltas.length === 0) {\n      return 0;\n    }\n    switch (method) {\n      case FrameTimingMethod.MEDIAN:\n        return this.calculateMedianFrameTime();\n      case FrameTimingMethod.MEAN:\n        return this.calculateMeanFrameTime();\n      case FrameTimingMethod.MAX:\n        return this.calculateMaxFrameTime();\n    }\n  }\n\n  /** Should be called once per frame for proper downsampling persistence */\n  calculateDownsamplingRate(\n    method: FrameTimingMethod = FrameTimingMethod.MEAN,\n  ): number {\n    const calculatedFrameTime = this.calculateFrameTimeInMs(method);\n    if (calculatedFrameTime === 0) {\n      // Don't add this one to tracking, it's just to start the process\n      return Math.min(4, this.maxDownsamplingFactor);\n    }\n    let downsampleFactorBasedOnFramerate = Math.max(\n      calculatedFrameTime / this.desiredFrameTimingMs,\n      1,\n    );\n    // Round to the nearest power of 2.\n    downsampleFactorBasedOnFramerate = Math.min(\n      Math.pow(2, Math.round(Math.log2(downsampleFactorBasedOnFramerate))),\n      this.maxDownsamplingFactor,\n    );\n    return this.updateMaxTrackedDownsamplingRate(\n      downsampleFactorBasedOnFramerate,\n    );\n  }\n\n  getFrameDeltas(): number[] {\n    return this.frameDeltas;\n  }\n\n  getFrameCount(): number {\n    return this.frameCount;\n  }\n\n  getDownsamplingRates(): Map<number, number> {\n    return this.downsamplingRates;\n  }\n\n  setFrameDeltas(frameDeltas: number[], incrementFrameCount = true) {\n    this.frameDeltas = frameDeltas.slice(-this.numberOfStoredFrameDeltas);\n    if (incrementFrameCount) {\n      this.frameCount++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debounce } from \"lodash-es\";\n\nimport type { FrameNumberCounter } from \"#src/chunk_manager/frontend.js\";\nimport { TrackableValue } from \"#src/trackable_value.js\";\nimport { animationFrameDebounce } from \"#src/util/animation_frame_debounce.js\";\nimport type { Borrowed } from \"#src/util/disposable.js\";\nimport { RefCounted } from \"#src/util/disposable.js\";\nimport { FramerateMonitor } from \"#src/util/framerate.js\";\nimport type { mat4 } from \"#src/util/geom.js\";\nimport { parseFixedLengthArray, verifyFloat01 } from \"#src/util/json.js\";\nimport { NullarySignal } from \"#src/util/signal.js\";\nimport type { WatchableVisibilityPriority } from \"#src/visibility_priority/frontend.js\";\nimport type { GL } from \"#src/webgl/context.js\";\nimport { initializeWebGL } from \"#src/webgl/context.js\";\n\nconst DELAY_AFTER_CONTINUOUS_CAMERA_MOTION_MS = 300;\n\nexport class RenderViewport {\n  // Width of visible portion of panel in canvas pixels.\n  width = 0;\n\n  // Height of visible portion of panel in canvas pixels.\n  height = 0;\n\n  // Width in canvas pixels, including portions outside of the canvas (i.e. outside the \"viewport\"\n  // window).\n  logicalWidth = 0;\n\n  // Height in canvas pixels, including portions outside of the canvas (i.e. outside the \"viewport\"\n  // window).\n  logicalHeight = 0;\n\n  // Left edge of visible region within full (logical) panel, as fraction in [0, 1].\n  visibleLeftFraction = 0;\n\n  // Top edge of visible region within full (logical) panel, as fraction in [0, 1].\n  visibleTopFraction = 0;\n\n  // Fraction of logical width that is visible, equal to `widthInCanvasPixels / logicalWidth`.\n  visibleWidthFraction = 0;\n\n  // Fraction of logical height that is visible, equal to `heightInCanvasPixels / logicalHeight`.\n  visibleHeightFraction = 0;\n}\n\nexport function applyRenderViewportToProjectionMatrix(\n  viewport: RenderViewport,\n  projectionMatrix: mat4,\n) {\n  const xScale = 1 / viewport.visibleWidthFraction;\n  const yScale = 1 / viewport.visibleHeightFraction;\n  const xOffset = -1 - (-1 + 2 * viewport.visibleLeftFraction) * xScale;\n  let yOffset = -1 - (-1 + 2 * viewport.visibleTopFraction) * yScale;\n  yOffset = -yOffset;\n  projectionMatrix[0] =\n    projectionMatrix[0] * xScale + projectionMatrix[3] * xOffset;\n  projectionMatrix[4] =\n    projectionMatrix[4] * xScale + projectionMatrix[7] * xOffset;\n  projectionMatrix[8] =\n    projectionMatrix[8] * xScale + projectionMatrix[11] * xOffset;\n  projectionMatrix[12] =\n    projectionMatrix[12] * xScale + projectionMatrix[15] * xOffset;\n\n  projectionMatrix[1] =\n    projectionMatrix[1] * yScale + projectionMatrix[3] * yOffset;\n  projectionMatrix[5] =\n    projectionMatrix[5] * yScale + projectionMatrix[7] * yOffset;\n  projectionMatrix[9] =\n    projectionMatrix[9] * yScale + projectionMatrix[11] * yOffset;\n  projectionMatrix[13] =\n    projectionMatrix[13] * yScale + projectionMatrix[15] * yOffset;\n}\n\nexport function renderViewportsEqual(a: RenderViewport, b: RenderViewport) {\n  return (\n    a.width === b.width &&\n    a.height === b.height &&\n    a.logicalWidth === b.logicalWidth &&\n    a.logicalHeight === b.logicalHeight &&\n    a.visibleLeftFraction === b.visibleLeftFraction &&\n    a.visibleTopFraction === b.visibleTopFraction\n  );\n}\n\nexport abstract class RenderedPanel extends RefCounted {\n  gl: GL;\n\n  // Generation used to check whether the following bounds-related fields are up to date.\n  boundsGeneration = -1;\n\n  // Offset of visible portion of panel in canvas pixels from left side of canvas.\n  canvasRelativeClippedLeft = 0;\n\n  // Offset of visible portion of panel in canvas pixels from top of canvas.\n  canvasRelativeClippedTop = 0;\n\n  canvasRelativeLogicalLeft = 0;\n  canvasRelativeLogicalTop = 0;\n\n  renderViewport = new RenderViewport();\n\n  private monitorState: PanelMonitorState = {};\n\n  constructor(\n    public context: Borrowed<DisplayContext>,\n    public element: HTMLElement,\n    public visibility: WatchableVisibilityPriority,\n  ) {\n    super();\n    this.gl = context.gl;\n    context.addPanel(this);\n  }\n\n  scheduleRedraw() {\n    if (this.visible) {\n      this.context.scheduleRedraw();\n    }\n  }\n\n  abstract isReady(): boolean;\n\n  ensureBoundsUpdated() {\n    const { context } = this;\n    context.ensureBoundsUpdated();\n    const { boundsGeneration } = context;\n    if (boundsGeneration === this.boundsGeneration) return;\n    this.boundsGeneration = boundsGeneration;\n    const { element } = this;\n    const clientRect = element.getBoundingClientRect();\n    context.ensureMonitorPanel(element, this.monitorState, clientRect);\n    const root = context.container;\n    const canvasRect = context.canvasRect!;\n    const { canvas } = context;\n    const { width: canvasPixelWidth, height: canvasPixelHeight } = canvas;\n    const screenToCanvasPixelScaleX = canvasPixelWidth / canvasRect.width;\n    const screenToCanvasPixelScaleY = canvasPixelHeight / canvasRect.height;\n    // Logical bounding rectangle in canvas/WebGL pixels (which may be a different size than screen\n    // pixels when using a fixed canvas size via the Python integration).\n    const canvasLeft = canvasRect.left;\n    const canvasTop = canvasRect.top;\n    const logicalLeft = (this.canvasRelativeLogicalLeft = Math.round(\n      (clientRect.left - canvasLeft) * screenToCanvasPixelScaleX +\n        element.clientLeft,\n    ));\n    const logicalTop = (this.canvasRelativeLogicalTop = Math.round(\n      (clientRect.top - canvasTop) * screenToCanvasPixelScaleY +\n        element.clientTop,\n    ));\n    const logicalWidth = element.clientWidth;\n    const logicalHeight = element.clientHeight;\n    const logicalRight = logicalLeft + logicalWidth;\n    const logicalBottom = logicalTop + logicalHeight;\n    // Clipped bounding rectangle in canvas/WebGL pixels.  The clipped bounding rectangle is the\n    // portion actually visible and overlapping the canvas.\n    let clippedTop = logicalTop;\n    let clippedLeft = logicalLeft;\n    let clippedRight = logicalRight;\n    let clippedBottom = logicalBottom;\n    for (\n      let parent = element.parentElement;\n      parent !== null && parent !== root;\n      parent = parent.parentElement\n    ) {\n      const rect = parent.getBoundingClientRect();\n      if (\n        rect.x === 0 &&\n        rect.y === 0 &&\n        rect.width === 0 &&\n        rect.height === 0\n      ) {\n        // Assume this is a `display: contents;` element.\n        continue;\n      }\n      clippedLeft = Math.max(\n        clippedLeft,\n        (rect.left - canvasLeft) * screenToCanvasPixelScaleX,\n      );\n      clippedTop = Math.max(\n        clippedTop,\n        (rect.top - canvasTop) * screenToCanvasPixelScaleY,\n      );\n      clippedRight = Math.min(\n        clippedRight,\n        (rect.right - canvasLeft) * screenToCanvasPixelScaleX,\n      );\n      clippedBottom = Math.min(\n        clippedBottom,\n        (rect.bottom - canvasTop) * screenToCanvasPixelScaleY,\n      );\n    }\n    clippedTop = this.canvasRelativeClippedTop = Math.round(\n      Math.max(clippedTop, 0),\n    );\n    clippedLeft = this.canvasRelativeClippedLeft = Math.round(\n      Math.max(clippedLeft, 0),\n    );\n    clippedRight = Math.round(Math.min(clippedRight, canvasPixelWidth));\n    clippedBottom = Math.round(Math.min(clippedBottom, canvasPixelHeight));\n    const viewport = this.renderViewport;\n    const clippedWidth = (viewport.width = Math.max(\n      0,\n      clippedRight - clippedLeft,\n    ));\n    const clippedHeight = (viewport.height = Math.max(\n      0,\n      clippedBottom - clippedTop,\n    ));\n    viewport.logicalWidth = logicalWidth;\n    viewport.logicalHeight = logicalHeight;\n    viewport.visibleLeftFraction = (clippedLeft - logicalLeft) / logicalWidth;\n    viewport.visibleTopFraction = (clippedTop - logicalTop) / logicalHeight;\n    viewport.visibleWidthFraction = clippedWidth / logicalWidth;\n    viewport.visibleHeightFraction = clippedHeight / logicalHeight;\n  }\n\n  // Sets the viewport to the clipped viewport.  Any drawing must take\n  // `visible{Left,Top,Width,Height}Fraction` into account.  setGLClippedViewport() {\n  setGLClippedViewport() {\n    const {\n      gl,\n      canvasRelativeClippedTop,\n      canvasRelativeClippedLeft,\n      renderViewport: { width, height },\n    } = this;\n    const bottom = canvasRelativeClippedTop + height;\n    gl.enable(WebGL2RenderingContext.SCISSOR_TEST);\n    const glBottom = this.context.canvas.height - bottom;\n    gl.viewport(canvasRelativeClippedLeft, glBottom, width, height);\n    gl.scissor(canvasRelativeClippedLeft, glBottom, width, height);\n  }\n\n  // Sets the viewport to the logical viewport, using the scissor test to constrain drawing to the\n  // clipped viewport.  Drawing does not need to take `visible{Left,Top,Width,Height}Fraction` into\n  // account.\n  setGLLogicalViewport() {\n    const {\n      gl,\n      renderViewport: { width, height, logicalWidth, logicalHeight },\n    } = this;\n    const canvasHeight = this.context.canvas.height;\n    gl.enable(WebGL2RenderingContext.SCISSOR_TEST);\n    gl.viewport(\n      this.canvasRelativeLogicalLeft,\n      canvasHeight - (this.canvasRelativeLogicalTop + logicalHeight),\n      logicalWidth,\n      logicalHeight,\n    );\n    gl.scissor(\n      this.canvasRelativeClippedLeft,\n      canvasHeight - (this.canvasRelativeClippedTop + height),\n      width,\n      height,\n    );\n  }\n\n  abstract draw(): void;\n\n  disposed() {\n    this.context.unmonitorPanel(this.element, this.monitorState);\n    this.context.removePanel(this);\n    super.disposed();\n  }\n\n  get visible() {\n    return this.visibility.visible;\n  }\n\n  getDepthArray(): Float32Array | undefined {\n    return undefined;\n  }\n\n  get shouldDraw() {\n    if (!this.visible) return false;\n    const { element } = this;\n    if (\n      element.clientWidth === 0 ||\n      element.clientHeight === 0 ||\n      element.offsetWidth === 0 ||\n      element.offsetHeight === 0\n    ) {\n      // Skip drawing if the panel has zero client area.\n      return false;\n    }\n    return true;\n  }\n\n  // Returns a number that determine the order in which panels are drawn. This is used by CdfPanel\n  // to ensure it is drawn after other panels that update the histogram.\n  //\n  // A higher number -> later draw.\n  get drawOrder() {\n    return 0;\n  }\n}\n\nexport abstract class IndirectRenderedPanel extends RenderedPanel {\n  canvas = document.createElement(\"canvas\");\n  canvasRenderingContext = this.canvas.getContext(\"2d\");\n  constructor(\n    context: Borrowed<DisplayContext>,\n    element: HTMLElement,\n    visibility: WatchableVisibilityPriority,\n  ) {\n    super(context, element, visibility);\n    const { canvas } = this;\n    element.appendChild(canvas);\n    element.style.position = \"relative\";\n    canvas.style.position = \"absolute\";\n    canvas.style.left = \"0\";\n    canvas.style.right = \"0\";\n    canvas.style.top = \"0\";\n    canvas.style.bottom = \"0\";\n  }\n\n  abstract drawIndirect(): void;\n\n  draw() {\n    this.drawIndirect();\n    const { renderViewport, canvas } = this;\n    const { logicalWidth, logicalHeight } = renderViewport;\n    canvas.width = logicalWidth;\n    canvas.height = logicalHeight;\n    const { canvasRenderingContext } = this;\n    canvasRenderingContext?.drawImage(\n      this.context.canvas,\n      this.canvasRelativeLogicalLeft,\n      this.canvasRelativeLogicalTop,\n      logicalWidth,\n      logicalHeight,\n      0,\n      0,\n      logicalWidth,\n      logicalHeight,\n    );\n  }\n}\n\n// Specifies a rectangular sub-region of the full viewer area to actually be rendered on the canvas.\n// This is used by the Python integration to produce large screenshots by tiling multiple\n// screenshots.\n//\n// The value is: `[left, top, width, height]` where all values are in [0, 1].\nexport class TrackableWindowedViewport extends TrackableValue<Float64Array> {\n  constructor() {\n    super(Float64Array.of(0, 0, 1, 1), (obj) =>\n      parseFixedLengthArray(new Float64Array(4), obj, verifyFloat01),\n    );\n  }\n  toJSON() {\n    const { value } = this;\n    const [left, top, width, height] = value;\n    if (left === 0 && top === 0 && width === 1 && height === 1)\n      return undefined;\n    return Array.from(value);\n  }\n}\n\n// Size/position monitoring state for a single panel.\ninterface PanelMonitorState {\n  // Intersection observer used to detect movement of a panel.  The root element is always the root\n  // container element.\n  intersectionObserver?: IntersectionObserver;\n\n  // Margin within the root element chosen to exactly match the bounds\n  // of the panel element when the IntersectionObserver was created.\n  // When the bounds of either the root element or the panel element\n  // have possibly changed, the new margin is computed and compared to\n  // this value.  This is stored separately, rather than just relying\n  // on `intersectionObserver?.rootMargin`, to avoid spuriously change\n  // detections due to normalization that the browser may do.\n  intersectionObserverMargin?: string;\n\n  // Indicates that the panel element was added to the resize observer.\n  addedToResizeObserver?: boolean;\n}\n\nexport class DisplayContext extends RefCounted implements FrameNumberCounter {\n  canvas = document.createElement(\"canvas\");\n  gl: GL;\n  updateStarted = new NullarySignal();\n  updateFinished = new NullarySignal();\n  continuousCameraMotionStarted = new NullarySignal();\n  continuousCameraMotionFinished = new NullarySignal();\n  changed = this.updateFinished;\n  panels = new Set<RenderedPanel>();\n  canvasRect: DOMRect | undefined;\n  rootRect: DOMRect | undefined;\n  resizeGeneration = 0;\n  boundsGeneration = -1;\n  private framerateMonitor = new FramerateMonitor();\n\n  private continuousCameraMotionInProgress = false;\n\n  // Panels ordered by `drawOrder`.  If length is 0, needs to be recomputed.\n  private orderedPanels: RenderedPanel[] = [];\n\n  /**\n   * Unique number of the next frame.  Incremented once each time a frame is drawn.\n   */\n  frameNumber = 0;\n\n  resizeCallback = () => {\n    ++this.resizeGeneration;\n    this.scheduleRedraw();\n  };\n\n  ensureMonitorPanel(\n    element: HTMLElement,\n    state: PanelMonitorState,\n    elementClientRect: DOMRect,\n  ) {\n    if (!state.addedToResizeObserver) {\n      this.resizeObserver.observe(element);\n      state.addedToResizeObserver = true;\n    }\n    const rootRect = this.rootRect!;\n    const marginTop = rootRect.top - elementClientRect.top;\n    const marginLeft = rootRect.left - elementClientRect.left;\n    const marginRight = elementClientRect.right - rootRect.right;\n    const marginBottom = elementClientRect.bottom - rootRect.bottom;\n    const margin = `${marginTop}px ${marginRight}px ${marginBottom}px ${marginLeft}px`;\n    if (state.intersectionObserverMargin !== margin) {\n      state.intersectionObserverMargin = margin;\n      state.intersectionObserver?.disconnect();\n      const intersectionObserver = (state.intersectionObserver =\n        new IntersectionObserver(this.resizeCallback, {\n          root: this.container,\n          rootMargin: margin,\n          threshold: [0.93, 0.94, 0.95, 0.96, 0.97, 0.98, 0.99, 1],\n        }));\n      intersectionObserver.observe(element);\n    }\n  }\n\n  unmonitorPanel(element: HTMLElement, state: PanelMonitorState) {\n    if (state.addedToResizeObserver) {\n      this.resizeObserver.unobserve(element);\n    }\n    state.intersectionObserver?.disconnect();\n  }\n\n  private resizeObserver = new ResizeObserver(this.resizeCallback);\n\n  private debouncedEndContinuousCameraMotion = this.registerCancellable(\n    debounce(() => {\n      this.continuousCameraMotionInProgress = false;\n      this.continuousCameraMotionFinished.dispatch();\n    }, DELAY_AFTER_CONTINUOUS_CAMERA_MOTION_MS),\n  );\n\n  flagContinuousCameraMotion() {\n    if (!this.continuousCameraMotionInProgress) {\n      this.continuousCameraMotionStarted.dispatch();\n    }\n    this.continuousCameraMotionInProgress = true;\n    this.debouncedEndContinuousCameraMotion();\n  }\n\n  get isContinuousCameraMotionInProgress() {\n    return this.continuousCameraMotionInProgress;\n  }\n\n  constructor(public container: HTMLElement) {\n    super();\n    const { canvas, resizeObserver } = this;\n    container.style.position = \"relative\";\n    canvas.style.position = \"absolute\";\n    canvas.style.top = \"0px\";\n    canvas.style.left = \"0px\";\n    canvas.style.width = \"100%\";\n    canvas.style.height = \"100%\";\n    canvas.style.zIndex = \"0\";\n    resizeObserver.observe(canvas);\n    container.appendChild(canvas);\n    this.registerEventListener(\n      canvas,\n      \"webglcontextlost\",\n      (event: WebGLContextEvent) => {\n        console.log(`Lost WebGL context: ${event.statusMessage}`);\n        // Wait for context to be regained.\n        event.preventDefault();\n      },\n    );\n    this.registerEventListener(canvas, \"webglcontextrestored\", () => {\n      console.log(\"WebGL context restored\");\n      // Simply reload Neuroglancer.\n      window.location.reload();\n    });\n    this.gl = initializeWebGL(canvas);\n  }\n\n  applyWindowedViewportToElement(element: HTMLElement, value: Float64Array) {\n    // These values specify the position of the canvas relative to the viewer.  However, we will\n    // actually leave the canvas in place (such that it still fills the browser window) and move\n    // the viewer.\n    const [left, top, width, height] = value;\n    const totalWidth = 1 / width;\n    const totalHeight = 1 / height;\n    element.style.position = \"absolute\";\n    element.style.top = `${-totalHeight * top * 100}%`;\n    element.style.left = `${-totalWidth * left * 100}%`;\n    element.style.width = `${totalWidth * 100}%`;\n    element.style.height = `${totalHeight * 100}%`;\n    ++this.resizeGeneration;\n    this.scheduleRedraw();\n  }\n\n  isReady() {\n    for (const panel of this.panels) {\n      if (!panel.visible) {\n        continue;\n      }\n      if (!panel.isReady()) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Returns a child element that overlays the canvas.\n   */\n  makeCanvasOverlayElement() {\n    const element = document.createElement(\"div\");\n    element.style.position = \"absolute\";\n    element.style.top = \"0px\";\n    element.style.left = \"0px\";\n    element.style.width = \"100%\";\n    element.style.height = \"100%\";\n    element.style.zIndex = \"2\";\n    this.container.appendChild(element);\n    return element;\n  }\n\n  disposed() {\n    this.orderedPanels.length = 0;\n    this.resizeObserver.disconnect();\n  }\n\n  addPanel(panel: Borrowed<RenderedPanel>) {\n    this.panels.add(panel);\n    this.orderedPanels.length = 0;\n    ++this.resizeGeneration;\n    this.scheduleRedraw();\n  }\n\n  removePanel(panel: Borrowed<RenderedPanel>) {\n    this.panels.delete(panel);\n    this.orderedPanels.length = 0;\n    ++this.resizeGeneration;\n    this.scheduleRedraw();\n  }\n\n  readonly scheduleRedraw = this.registerCancellable(\n    animationFrameDebounce(() => this.draw()),\n  );\n\n  ensureBoundsUpdated() {\n    const { resizeGeneration } = this;\n    if (this.boundsGeneration === resizeGeneration) return;\n    const { canvas } = this;\n    canvas.width = canvas.offsetWidth;\n    canvas.height = canvas.offsetHeight;\n    this.canvasRect = canvas.getBoundingClientRect();\n    this.rootRect = this.container.getBoundingClientRect();\n    this.boundsGeneration = resizeGeneration;\n  }\n\n  draw() {\n    ++this.frameNumber;\n    this.updateStarted.dispatch();\n    const gl = this.gl;\n    const ext = this.framerateMonitor.getTimingExtension(gl);\n    const query = this.framerateMonitor.startFrameTimeQuery(gl, ext);\n    this.ensureBoundsUpdated();\n    this.gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    const { orderedPanels, panels } = this;\n    if (orderedPanels.length !== panels.size) {\n      orderedPanels.push(...panels);\n      orderedPanels.sort((a, b) => a.drawOrder - b.drawOrder);\n    }\n    for (const panel of orderedPanels) {\n      if (!panel.shouldDraw) continue;\n      panel.ensureBoundsUpdated();\n      const { renderViewport } = panel;\n      if (renderViewport.width === 0 || renderViewport.height === 0) continue;\n      panel.draw();\n    }\n\n    // Ensure the alpha buffer is set to 1.\n    gl.disable(gl.SCISSOR_TEST);\n    this.gl.clearColor(1.0, 1.0, 1.0, 1.0);\n    this.gl.colorMask(false, false, false, true);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    this.gl.colorMask(true, true, true, true);\n    this.updateFinished.dispatch();\n    this.framerateMonitor.endFrameTimeQuery(gl, ext, query);\n    this.framerateMonitor.grabAnyFinishedQueryResults(gl);\n  }\n\n  getDepthArray(): Float32Array {\n    const { width, height } = this.canvas;\n    const depthArray = new Float32Array(width * height);\n    for (const panel of this.panels) {\n      if (!panel.shouldDraw) continue;\n      const panelDepthArray = panel.getDepthArray();\n      if (panelDepthArray === undefined) continue;\n      const {\n        canvasRelativeClippedTop,\n        canvasRelativeClippedLeft,\n        renderViewport: { width, height },\n      } = panel;\n      for (let y = 0; y < height; ++y) {\n        const panelDepthArrayOffset = (height - 1 - y) * width;\n        depthArray.set(\n          panelDepthArray.subarray(\n            panelDepthArrayOffset,\n            panelDepthArrayOffset + width,\n          ),\n          (canvasRelativeClippedTop + y) * width + canvasRelativeClippedLeft,\n        );\n      }\n    }\n    return depthArray;\n  }\n\n  getLastFrameTimesInMs(numberOfFrames: number = 10) {\n    return this.framerateMonitor.getLastFrameTimesInMs(numberOfFrames);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RenderViewport, renderViewportsEqual } from \"#src/display_context.js\";\nimport type { DisplayDimensionRenderInfo } from \"#src/navigation_state.js\";\nimport { arraysEqual } from \"#src/util/array.js\";\nimport { mat4 } from \"#src/util/geom.js\";\nimport { kEmptyFloat32Vec } from \"#src/util/vector.js\";\n\nexport class ProjectionParameters extends RenderViewport {\n  displayDimensionRenderInfo: DisplayDimensionRenderInfo;\n\n  /**\n   * Global position.\n   */\n  globalPosition: Float32Array = kEmptyFloat32Vec;\n\n  /**\n   * Transform from camera coordinates to OpenGL clip coordinates.\n   */\n  projectionMat: mat4 = mat4.create();\n\n  /**\n   * Transform from world coordinates to camera coordinates.\n   */\n  viewMatrix: mat4 = mat4.create();\n\n  /**\n   * Inverse of `viewMat`.\n   */\n  invViewMatrix: mat4 = mat4.create();\n\n  /**\n   * Transform from world coordinates to OpenGL clip coordinates.  Equal to:\n   * `projectionMat * viewMat`.\n   */\n  viewProjectionMat: mat4 = mat4.create();\n\n  /**\n   * Inverse of `viewProjectionMat`.\n   */\n  invViewProjectionMat: mat4 = mat4.create();\n}\n\nexport function projectionParametersEqual(\n  a: ProjectionParameters,\n  b: ProjectionParameters,\n) {\n  return (\n    a.displayDimensionRenderInfo === b.displayDimensionRenderInfo &&\n    renderViewportsEqual(a, b) &&\n    arraysEqual(a.globalPosition, b.globalPosition) &&\n    arraysEqual(a.projectionMat, b.projectionMat) &&\n    arraysEqual(a.viewMatrix, b.viewMatrix)\n  );\n}\n\nexport function updateProjectionParametersFromInverseViewAndProjection(\n  p: ProjectionParameters,\n) {\n  const { viewMatrix, viewProjectionMat } = p;\n  mat4.invert(viewMatrix, p.invViewMatrix);\n  mat4.multiply(viewProjectionMat, p.projectionMat, viewMatrix);\n  mat4.invert(p.invViewProjectionMat, viewProjectionMat);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  CoordinateSpace,\n  CoordinateSpaceTransform,\n} from \"#src/coordinate_transform.js\";\nimport {\n  emptyValidCoordinateSpace,\n  homogeneousTransformSubmatrix,\n} from \"#src/coordinate_transform.js\";\nimport type { DisplayDimensionRenderInfo } from \"#src/navigation_state.js\";\nimport type {\n  CachedWatchableValue,\n  WatchableValueInterface,\n} from \"#src/trackable_value.js\";\nimport {\n  constantWatchableValue,\n  makeCachedDerivedWatchableValue,\n} from \"#src/trackable_value.js\";\nimport { arraysEqual, scatterUpdate } from \"#src/util/array.js\";\nimport type { ValueOrError } from \"#src/util/error.js\";\nimport type { vec3 } from \"#src/util/geom.js\";\nimport { mat4, getDependentTransformInputDimensions } from \"#src/util/geom.js\";\nimport * as matrix from \"#src/util/matrix.js\";\nimport * as vector from \"#src/util/vector.js\";\nimport { prod } from \"#src/util/vector.js\";\n\n/**\n * Specifies coordinate transform information for a RenderLayer.\n */\nexport interface RenderLayerTransform {\n  /**\n   * Rank of chunk/model/layer subspace used by this RenderLayer, including any additional `[0,1)`\n   * padding dimensions.\n   */\n  rank: number;\n\n  /**\n   * Rank of chunk/model/layer space, excluding any padding dimensions.\n   */\n  unpaddedRank: number;\n\n  /**\n   * Specifies for each local user layer dimension the corresponding \"render layer\" dimension.  A\n   * value of `-1` indicates there is no corresponding \"render layer\" dimension.  The combined\n   * values of `localToRenderLayerDimensions` and `globalToRenderLayerDimensions` that are not `-1`\n   * must be distinct and partition `[0, ..., rank)`, where `rank` is the rank of the \"model\"\n   * coordinate space.\n   */\n  localToRenderLayerDimensions: readonly number[];\n\n  /**\n   * Specifies for each global dimension the corresponding \"render layer\" dimension.  A value of\n   * `-1` indicates there is no corresponding \"render layer\" dimension.\n   */\n  globalToRenderLayerDimensions: readonly number[];\n\n  /**\n   * Specifies for each channel dimension the corresponding \"render layer\" dimension.  A value of\n   * `-1` indicates there is no corresponding \"render layer\" dimension.\n   */\n  channelToRenderLayerDimensions: readonly number[];\n\n  channelToModelDimensions: readonly number[];\n\n  channelSpaceShape: Uint32Array;\n\n  /**\n   * Homogeneous transform from \"model\" coordinate space to \"render layer\" coordinate space.\n   */\n  modelToRenderLayerTransform: Float32Array;\n\n  modelDimensionNames: readonly string[];\n  layerDimensionNames: readonly string[];\n}\n\nexport interface ChannelSpace {\n  channelCoordinateSpace: CoordinateSpace;\n  // Shape of multi-dimensional channel space.\n  shape: Uint32Array;\n  // Total number of channels, equal to product of `shape`.\n  numChannels: number;\n  // Row-major array of shape `[count, rank]` specifying the coordinates for each flattened channel.\n  // Channels are ordered in Fortran order.\n  coordinates: Uint32Array;\n}\n\nexport const zeroRankChannelSpace: ChannelSpace = {\n  channelCoordinateSpace: emptyValidCoordinateSpace,\n  shape: new Uint32Array(0),\n  numChannels: 1,\n  coordinates: new Uint32Array(0),\n};\n\nexport function getChannelSpace(\n  channelCoordinateSpace: CoordinateSpace,\n): ChannelSpace {\n  const { rank } = channelCoordinateSpace;\n  const {\n    bounds: { lowerBounds, upperBounds },\n  } = channelCoordinateSpace;\n  if (lowerBounds.some((x) => x !== 0)) {\n    throw new Error(\"Lower bounds of channel coordinate space must all be 0\");\n  }\n  if (upperBounds.some((x) => !Number.isInteger(x) || x <= 0 || x >= 2 ** 32)) {\n    throw new Error(\n      \"Upper bounds of channel coordinate space must all be positive integers\",\n    );\n  }\n  const shape = new Uint32Array(upperBounds);\n  const numChannels = prod(shape);\n  const coordinates = new Uint32Array(numChannels * rank);\n  for (let flatIndex = 0; flatIndex < numChannels; ++flatIndex) {\n    let remainder = flatIndex;\n    for (let dim = 0; dim < rank; ++dim) {\n      const coordinate = remainder % shape[dim];\n      remainder = (remainder - coordinate) / shape[dim];\n      coordinates[flatIndex * rank + dim] = coordinate;\n    }\n  }\n  return { channelCoordinateSpace, shape, numChannels, coordinates };\n}\n\nexport type RenderLayerTransformOrError = ValueOrError<RenderLayerTransform>;\nexport type WatchableRenderLayerTransform =\n  WatchableValueInterface<RenderLayerTransformOrError>;\n\nfunction scaleTransformSubmatrix(\n  transform: Float32Array,\n  rank: number,\n  baseInputSpace: CoordinateSpace,\n  inputToBaseDimensions: readonly number[],\n  baseOutputSpace: CoordinateSpace,\n  baseToOutputDimensions: readonly number[],\n) {\n  const { scales: baseInputScales } = baseInputSpace;\n  const { scales: baseOutputScales, rank: baseOutputRank } = baseOutputSpace;\n  const stride = rank + 1;\n  for (let baseOutputDim = 0; baseOutputDim < baseOutputRank; ++baseOutputDim) {\n    const outputDim = baseToOutputDimensions[baseOutputDim];\n    if (outputDim === -1) continue;\n    const baseOutputScale = baseOutputScales[baseOutputDim];\n    for (let inputDim = 0; inputDim < rank; ++inputDim) {\n      const baseInputDim = inputToBaseDimensions[inputDim];\n      const baseInputScale = baseInputScales[baseInputDim];\n      transform[stride * inputDim + outputDim] *=\n        baseInputScale / baseOutputScale;\n    }\n  }\n}\n\nexport function getRenderLayerTransform(\n  globalCoordinateSpace: CoordinateSpace,\n  localCoordinateSpace: CoordinateSpace,\n  modelToLayerTransform: CoordinateSpaceTransform,\n  subsourceEntry:\n    | {\n        subsourceToModelSubspaceTransform: Float32Array;\n        modelSubspaceDimensionIndices: readonly number[];\n      }\n    | undefined,\n  channelCoordinateSpace: CoordinateSpace = emptyValidCoordinateSpace,\n): RenderLayerTransformOrError {\n  const {\n    inputSpace: modelSpace,\n    rank: fullRank,\n    sourceRank,\n    outputSpace: layerSpace,\n    transform: oldTransform,\n  } = modelToLayerTransform;\n  const { names: modelDimensionNames } = modelSpace;\n  const { names: transformOutputDimensions } = layerSpace;\n  let requiredInputDims: number[];\n  if (subsourceEntry !== undefined) {\n    requiredInputDims = Array.from(\n      subsourceEntry.modelSubspaceDimensionIndices,\n    );\n  } else {\n    requiredInputDims = [];\n    for (let i = 0; i < sourceRank; ++i) {\n      requiredInputDims[i] = i;\n    }\n  }\n  const unpaddedRank = requiredInputDims.length;\n  for (let i = sourceRank; i < fullRank; ++i) {\n    requiredInputDims.push(i);\n  }\n  const requiredOutputDims = getDependentTransformInputDimensions(\n    modelToLayerTransform.transform,\n    fullRank,\n    requiredInputDims,\n    true,\n  );\n  const subspaceRank = requiredInputDims.length;\n  const modelSubspaceDimensionNames = requiredInputDims.map(\n    (i) => modelDimensionNames[i] || `${i}`,\n  );\n  const layerSubspaceDimensionNames = requiredOutputDims.map(\n    (i) => transformOutputDimensions[i],\n  );\n  if (subspaceRank !== requiredOutputDims.length) {\n    return {\n      error:\n        \"Rank mismatch between model subspace dimensions (\" +\n        modelSubspaceDimensionNames.join(\", \") +\n        \") and corresponding layer/global dimensions (\" +\n        layerSubspaceDimensionNames.join(\", \") +\n        \")\",\n    };\n  }\n  let newTransform = homogeneousTransformSubmatrix(\n    Float32Array,\n    oldTransform,\n    fullRank,\n    requiredOutputDims,\n    requiredInputDims,\n  );\n  const renderLayerDimensions = requiredOutputDims.map(\n    (i) => transformOutputDimensions[i],\n  );\n  const localToRenderLayerDimensions = localCoordinateSpace.names.map((x) =>\n    renderLayerDimensions.indexOf(x),\n  );\n  const globalToRenderLayerDimensions = globalCoordinateSpace.names.map((x) =>\n    renderLayerDimensions.indexOf(x),\n  );\n  scaleTransformSubmatrix(\n    newTransform,\n    subspaceRank,\n    modelSpace,\n    requiredInputDims,\n    globalCoordinateSpace,\n    globalToRenderLayerDimensions,\n  );\n  scaleTransformSubmatrix(\n    newTransform,\n    subspaceRank,\n    modelSpace,\n    requiredInputDims,\n    localCoordinateSpace,\n    localToRenderLayerDimensions,\n  );\n  const channelToRenderLayerDimensions = channelCoordinateSpace.names.map((x) =>\n    renderLayerDimensions.indexOf(x),\n  );\n  scaleTransformSubmatrix(\n    newTransform,\n    subspaceRank,\n    modelSpace,\n    requiredInputDims,\n    channelCoordinateSpace,\n    channelToRenderLayerDimensions,\n  );\n  const channelToModelSubspaceDimensions: number[] = [];\n  const channelRank = channelCoordinateSpace.rank;\n  if (subsourceEntry !== undefined) {\n    let { subsourceToModelSubspaceTransform } = subsourceEntry;\n    if (unpaddedRank !== subspaceRank) {\n      subsourceToModelSubspaceTransform = matrix.extendHomogeneousTransform(\n        new Float32Array((subspaceRank + 1) ** 2),\n        subspaceRank,\n        subsourceToModelSubspaceTransform,\n        unpaddedRank,\n      );\n    }\n    newTransform = matrix.multiply(\n      new Float32Array((subspaceRank + 1) ** 2),\n      subspaceRank + 1,\n      newTransform,\n      subspaceRank + 1,\n      subsourceToModelSubspaceTransform,\n      subspaceRank + 1,\n      subspaceRank + 1,\n      subspaceRank + 1,\n      subspaceRank + 1,\n    );\n  }\n  const channelSpaceShape = new Uint32Array(channelRank);\n  const {\n    lowerBounds: channelLowerBounds,\n    upperBounds: channelUpperBounds,\n    voxelCenterAtIntegerCoordinates: channelVoxelCenterAtIntegerCoordinates,\n  } = channelCoordinateSpace.bounds;\n  for (let channelDim = 0; channelDim < channelRank; ++channelDim) {\n    let lower = channelLowerBounds[channelDim];\n    let upper = channelUpperBounds[channelDim];\n    if (channelVoxelCenterAtIntegerCoordinates[channelDim]) {\n      lower += 0.5;\n      upper += 0.5;\n    }\n    if (\n      lower !== 0 ||\n      !Number.isInteger(upper) ||\n      upper <= 0 ||\n      upper >= 2 ** 32\n    ) {\n      return {\n        error:\n          `Channel dimension ${channelCoordinateSpace.names[channelDim]} must have ` +\n          `lower bound of 0 and positive integer upper bound; current bounds are [${lower}, ${upper}]`,\n      };\n    }\n    channelSpaceShape[channelDim] = upper;\n    const layerDim = channelToRenderLayerDimensions[channelDim];\n    let correspondingModelSubspaceDim = -1;\n    if (layerDim !== -1) {\n      for (let chunkDim = 0; chunkDim < subspaceRank; ++chunkDim) {\n        const coeff = newTransform[layerDim + chunkDim * (subspaceRank + 1)];\n        if (coeff === 0) continue;\n        if (coeff !== 1 || correspondingModelSubspaceDim !== -1) {\n          return {\n            error:\n              `Channel dimension ${layerSubspaceDimensionNames[layerDim]} ` +\n              \"must map to a single source dimension\",\n          };\n        }\n        correspondingModelSubspaceDim = chunkDim;\n      }\n    }\n    channelToModelSubspaceDimensions[channelDim] =\n      correspondingModelSubspaceDim;\n  }\n  return {\n    rank: subspaceRank,\n    unpaddedRank,\n    modelDimensionNames: modelSubspaceDimensionNames,\n    layerDimensionNames: layerSubspaceDimensionNames,\n    localToRenderLayerDimensions,\n    globalToRenderLayerDimensions,\n    channelToRenderLayerDimensions,\n    modelToRenderLayerTransform: newTransform,\n    channelToModelDimensions: channelToModelSubspaceDimensions,\n    channelSpaceShape,\n  };\n}\n\nexport function renderLayerTransformsEqual(\n  a: RenderLayerTransformOrError,\n  b: RenderLayerTransformOrError,\n) {\n  if (a === b) return true;\n  if (a.error !== undefined || b.error !== undefined) return false;\n  return (\n    arraysEqual(a.modelDimensionNames, b.modelDimensionNames) &&\n    arraysEqual(a.layerDimensionNames, b.layerDimensionNames) &&\n    arraysEqual(\n      a.globalToRenderLayerDimensions,\n      b.globalToRenderLayerDimensions,\n    ) &&\n    arraysEqual(\n      a.localToRenderLayerDimensions,\n      b.localToRenderLayerDimensions,\n    ) &&\n    arraysEqual(\n      a.channelToRenderLayerDimensions,\n      b.channelToRenderLayerDimensions,\n    ) &&\n    arraysEqual(a.modelToRenderLayerTransform, b.modelToRenderLayerTransform) &&\n    arraysEqual(a.channelSpaceShape, b.channelSpaceShape)\n  );\n}\n\nexport function getWatchableRenderLayerTransform(\n  globalCoordinateSpace: WatchableValueInterface<CoordinateSpace>,\n  localCoordinateSpace: WatchableValueInterface<CoordinateSpace>,\n  modelToLayerTransform: WatchableValueInterface<CoordinateSpaceTransform>,\n  subsourceEntry:\n    | {\n        subsourceToModelSubspaceTransform: Float32Array;\n        modelSubspaceDimensionIndices: readonly number[];\n      }\n    | undefined,\n  channelCoordinateSpace?: WatchableValueInterface<CoordinateSpace | undefined>,\n): CachedWatchableValue<RenderLayerTransformOrError> {\n  return makeCachedDerivedWatchableValue(\n    (\n      globalCoordinateSpace: CoordinateSpace,\n      localCoordinateSpace: CoordinateSpace,\n      modelToLayerTransform: CoordinateSpaceTransform,\n      channelCoordinateSpace: CoordinateSpace | undefined,\n    ) =>\n      getRenderLayerTransform(\n        globalCoordinateSpace,\n        localCoordinateSpace,\n        modelToLayerTransform,\n        subsourceEntry,\n        channelCoordinateSpace,\n      ),\n    [\n      globalCoordinateSpace,\n      localCoordinateSpace,\n      modelToLayerTransform,\n      channelCoordinateSpace === undefined\n        ? constantWatchableValue(undefined)\n        : channelCoordinateSpace,\n    ],\n    renderLayerTransformsEqual,\n  );\n}\n\nexport interface LayerDisplayDimensionMapping {\n  /**\n   * List of indices of layer dimensions that correspond to display dimensions.\n   */\n  layerDisplayDimensionIndices: number[];\n\n  /**\n   * Maps each display dimension index to the corresponding layer dimension index, or `-1`.\n   */\n  displayToLayerDimensionIndices: number[];\n}\n\nexport interface ChunkChannelAccessParameters {\n  channelSpaceShape: Uint32Array;\n\n  /**\n   * Equal to the values in `channelToChunkDimensionIndices` not equal to `-1`.\n   */\n  chunkChannelDimensionIndices: readonly number[];\n\n  /**\n   * Product of `modelTransform.channelSpaceShape`.\n   */\n  numChannels: number;\n\n  /**\n   * Row-major array of shape `[numChannels, chunkChannelDimensionIndices.length]`, specifies the\n   * coordinates within the chunk channel dimensions corresponding to each flat channel index.\n   */\n  chunkChannelCoordinates: Uint32Array;\n}\n\nexport interface ChunkTransformParameters extends ChunkChannelAccessParameters {\n  modelTransform: RenderLayerTransform;\n  chunkToLayerTransform: Float32Array;\n  layerToChunkTransform: Float32Array;\n  chunkToLayerTransformDet: number;\n  /**\n   * Maps channel dimension indices in the layer channel coordinate space to the corresponding chunk\n   * dimension index, or `-1` if there is no correpsonding chunk dimension.\n   */\n  channelToChunkDimensionIndices: readonly number[];\n  combinedGlobalLocalToChunkTransform: Float32Array;\n  combinedGlobalLocalRank: number;\n  layerRank: number;\n}\n\nexport function layerToDisplayCoordinates(\n  displayPosition: vec3,\n  layerPosition: Float32Array,\n  modelTransform: RenderLayerTransform,\n  displayDimensionIndices: Int32Array,\n) {\n  const { globalToRenderLayerDimensions } = modelTransform;\n  for (let displayDim = 0; displayDim < 3; ++displayDim) {\n    let v = 0;\n    const globalDim = displayDimensionIndices[displayDim];\n    if (globalDim !== -1) {\n      const layerDim = globalToRenderLayerDimensions[globalDim];\n      if (layerDim !== -1) {\n        v = layerPosition[layerDim];\n      }\n    }\n    displayPosition[displayDim] = v;\n  }\n}\n\nexport function displayToLayerCoordinates(\n  layerPosition: Float32Array,\n  displayPosition: vec3,\n  modelTransform: RenderLayerTransform,\n  displayDimensionIndices: Int32Array,\n) {\n  const { globalToRenderLayerDimensions } = modelTransform;\n  for (let displayDim = 0; displayDim < 3; ++displayDim) {\n    const globalDim = displayDimensionIndices[displayDim];\n    if (globalDim !== -1) {\n      const layerDim = globalToRenderLayerDimensions[globalDim];\n      if (layerDim !== -1) {\n        layerPosition[layerDim] = displayPosition[displayDim];\n      }\n    }\n  }\n}\n\nexport function chunkToDisplayCoordinates(\n  displayPosition: vec3,\n  chunkPosition: Float32Array,\n  chunkTransform: ChunkTransformParameters,\n  displayDimensionIndices: Int32Array,\n): vec3 {\n  const { globalToRenderLayerDimensions } = chunkTransform.modelTransform;\n  const { layerRank, chunkToLayerTransform } = chunkTransform;\n  const stride = layerRank + 1;\n  for (let displayDim = 0; displayDim < 3; ++displayDim) {\n    let sum = 0;\n    const globalDim = displayDimensionIndices[displayDim];\n    if (globalDim !== -1) {\n      const layerDim = globalToRenderLayerDimensions[globalDim];\n      if (layerDim !== -1) {\n        sum = chunkToLayerTransform[stride * layerRank + layerDim];\n        for (let chunkDim = 0; chunkDim < layerRank; ++chunkDim) {\n          sum +=\n            chunkToLayerTransform[stride * chunkDim + layerDim] *\n            chunkPosition[chunkDim];\n        }\n      }\n    }\n    displayPosition[displayDim] = sum;\n  }\n  return displayPosition;\n}\n\nexport interface ChunkDisplayTransformParameters {\n  modelTransform: RenderLayerTransform;\n  chunkTransform: ChunkTransformParameters;\n  displaySubspaceModelMatrix: mat4;\n  displaySubspaceInvModelMatrix: mat4;\n  chunkDisplayDimensionIndices: number[];\n  numChunkDisplayDims: number;\n}\n\nexport function getChunkTransformParameters(\n  modelTransform: RenderLayerTransform,\n  chunkToModelTransform?: Float32Array,\n): ChunkTransformParameters {\n  const layerRank = modelTransform.rank;\n  const unpaddedRank = modelTransform.unpaddedRank;\n  let chunkToLayerTransform: Float32Array;\n  if (unpaddedRank !== layerRank && chunkToModelTransform !== undefined) {\n    chunkToModelTransform = matrix.extendHomogeneousTransform(\n      new Float32Array((layerRank + 1) ** 2),\n      layerRank,\n      chunkToModelTransform,\n      unpaddedRank,\n    );\n  }\n  if (chunkToModelTransform !== undefined) {\n    chunkToLayerTransform = new Float32Array((layerRank + 1) * (layerRank + 1));\n    matrix.multiply(\n      chunkToLayerTransform,\n      layerRank + 1,\n      modelTransform.modelToRenderLayerTransform,\n      layerRank + 1,\n      chunkToModelTransform,\n      layerRank + 1,\n      layerRank + 1,\n      layerRank + 1,\n      layerRank + 1,\n    );\n  } else {\n    chunkToLayerTransform = modelTransform.modelToRenderLayerTransform;\n  }\n  const layerToChunkTransform = new Float32Array(\n    (layerRank + 1) * (layerRank + 1),\n  );\n  const det = matrix.inverse(\n    layerToChunkTransform,\n    layerRank + 1,\n    chunkToLayerTransform,\n    layerRank + 1,\n    layerRank + 1,\n  );\n  if (det === 0) {\n    throw new Error(\"Transform is singular\");\n  }\n  const {\n    globalToRenderLayerDimensions,\n    localToRenderLayerDimensions,\n    channelToRenderLayerDimensions,\n  } = modelTransform;\n  const globalRank = globalToRenderLayerDimensions.length;\n  const localRank = localToRenderLayerDimensions.length;\n  const combinedGlobalLocalRank = globalRank + localRank;\n\n  // Compute `combinedGlobalLocalToChunkTransform`.\n  const combinedGlobalLocalToChunkTransform = new Float32Array(\n    (combinedGlobalLocalRank + 1) * layerRank,\n  );\n  for (let chunkDim = 0; chunkDim < layerRank; ++chunkDim) {\n    for (let globalDim = 0; globalDim < globalRank; ++globalDim) {\n      const layerDim = globalToRenderLayerDimensions[globalDim];\n      if (layerDim === -1) continue;\n      combinedGlobalLocalToChunkTransform[chunkDim + globalDim * layerRank] =\n        layerToChunkTransform[chunkDim + layerDim * (layerRank + 1)];\n    }\n    for (let localDim = 0; localDim < localRank; ++localDim) {\n      const layerDim = localToRenderLayerDimensions[localDim];\n      if (layerDim === -1) continue;\n      combinedGlobalLocalToChunkTransform[\n        chunkDim + (globalRank + localDim) * layerRank\n      ] = layerToChunkTransform[chunkDim + layerDim * (layerRank + 1)];\n    }\n    combinedGlobalLocalToChunkTransform[\n      chunkDim + combinedGlobalLocalRank * layerRank\n    ] = layerToChunkTransform[chunkDim + layerRank * (layerRank + 1)];\n  }\n\n  const channelRank = channelToRenderLayerDimensions.length;\n  const channelToChunkDimensionIndices = new Array<number>(channelRank);\n  const chunkChannelDimensionIndices: number[] = [];\n  for (let channelDim = 0; channelDim < channelRank; ++channelDim) {\n    const layerDim = channelToRenderLayerDimensions[channelDim];\n    let correspondingChunkDim = -1;\n    if (layerDim !== -1) {\n      for (let chunkDim = 0; chunkDim < layerRank; ++chunkDim) {\n        const coeff =\n          chunkToLayerTransform[layerDim + chunkDim * (layerRank + 1)];\n        if (coeff === 0) continue;\n        if (coeff !== 1 || correspondingChunkDim !== -1) {\n          throw new Error(\n            `Channel dimension ${modelTransform.layerDimensionNames[layerDim]} ` +\n              \"must map with stride 1 to a single data chunk dimensions\",\n          );\n        }\n        correspondingChunkDim = chunkDim;\n      }\n      if (correspondingChunkDim !== -1) {\n        const offset =\n          chunkToLayerTransform[layerDim + layerRank * (layerRank + 1)];\n        if (offset !== 0 && offset !== -0.5) {\n          throw new Error(\n            `Channel dimension ${modelTransform.layerDimensionNames[layerDim]} ` +\n              `must have an offset of 0 in the chunk coordinate space; current offset is ${offset}`,\n          );\n        }\n        chunkChannelDimensionIndices.push(correspondingChunkDim);\n      }\n    }\n    channelToChunkDimensionIndices[channelDim] = correspondingChunkDim;\n  }\n  const { channelSpaceShape } = modelTransform;\n  const numChannels = vector.prod(channelSpaceShape);\n  const chunkChannelRank = chunkChannelDimensionIndices.length;\n  const chunkChannelCoordinates = new Uint32Array(\n    numChannels * chunkChannelRank,\n  );\n  for (let channelIndex = 0; channelIndex < numChannels; ++channelIndex) {\n    let remainder = channelIndex;\n    let chunkChannelDim = 0;\n    for (let channelDim = 0; channelDim < channelRank; ++channelDim) {\n      const coordinate = remainder % channelSpaceShape[channelDim];\n      remainder = (remainder - coordinate) / channelSpaceShape[channelDim];\n      const chunkDim = channelToChunkDimensionIndices[channelDim];\n      if (chunkDim !== -1) {\n        chunkChannelCoordinates[\n          channelIndex * chunkChannelRank + chunkChannelDim\n        ] = coordinate;\n        ++chunkChannelDim;\n      }\n    }\n  }\n  return {\n    layerRank: layerRank,\n    modelTransform,\n    chunkToLayerTransform,\n    layerToChunkTransform,\n    chunkToLayerTransformDet: det,\n    combinedGlobalLocalRank,\n    combinedGlobalLocalToChunkTransform,\n    channelToChunkDimensionIndices,\n    chunkChannelDimensionIndices,\n    numChannels,\n    chunkChannelCoordinates,\n    channelSpaceShape,\n  };\n}\n\nexport function getLayerDisplayDimensionMapping(\n  transform: RenderLayerTransform,\n  displayDimensionIndices: Int32Array,\n): LayerDisplayDimensionMapping {\n  const { globalToRenderLayerDimensions } = transform;\n\n  // List of layer dimension indices corresponding to global display dimensions.\n  const layerDisplayDimensionIndices: number[] = [];\n\n  // Maps global display dimension (in {0, 1, 2}) to the corresponding layer dimension index, or\n  // `-1`.\n  const displayToLayerDimensionIndices: number[] = [];\n\n  for (let displayDim = 0; displayDim < 3; ++displayDim) {\n    const globalDim = displayDimensionIndices[displayDim];\n    if (globalDim === -1) continue;\n    const layerDim = globalToRenderLayerDimensions[globalDim];\n    displayToLayerDimensionIndices.push(layerDim);\n    if (layerDim === -1) continue;\n    layerDisplayDimensionIndices.push(layerDim);\n  }\n  for (let i = displayToLayerDimensionIndices.length; i < 3; ++i) {\n    displayToLayerDimensionIndices[i] = -1;\n  }\n  return { layerDisplayDimensionIndices, displayToLayerDimensionIndices };\n}\n\nexport function getChunkDisplayTransformParameters(\n  chunkTransform: ChunkTransformParameters,\n  layerDisplayDimensionMapping: LayerDisplayDimensionMapping,\n): ChunkDisplayTransformParameters {\n  const { chunkToLayerTransform, modelTransform } = chunkTransform;\n  const rank = modelTransform.rank;\n  const { layerDisplayDimensionIndices, displayToLayerDimensionIndices } =\n    layerDisplayDimensionMapping;\n  const numLayerDisplayDims = layerDisplayDimensionIndices.length;\n  const chunkDisplayDimensionIndices = getDependentTransformInputDimensions(\n    chunkToLayerTransform,\n    rank,\n    layerDisplayDimensionIndices,\n  );\n  if (chunkDisplayDimensionIndices.length !== numLayerDisplayDims) {\n    const { modelDimensionNames, layerDimensionNames } = modelTransform;\n    throw new Error(\n      \"Rank mismatch between displayed layer dimensions \" +\n        `(${Array.from(\n          layerDisplayDimensionIndices,\n          (i) => layerDimensionNames[i],\n        ).join(\",\\u00a0\")}) ` +\n        \"and corresponding chunk dimensions \" +\n        `(${Array.from(\n          chunkDisplayDimensionIndices,\n          (i) => modelDimensionNames[i],\n        ).join(\",\\u00a0\")})`,\n    );\n  }\n  // Compute \"model matrix\" (transform from the displayed subspace of the chunk space) to the global\n  // display coordinate space.\n  const displaySubspaceModelMatrix = mat4.create();\n  for (let displayDim = 0; displayDim < 3; ++displayDim) {\n    const layerDim = displayToLayerDimensionIndices[displayDim];\n    if (layerDim === -1) continue;\n    for (\n      let chunkDisplayDimIndex = 0;\n      chunkDisplayDimIndex < numLayerDisplayDims;\n      ++chunkDisplayDimIndex\n    ) {\n      const chunkDim = chunkDisplayDimensionIndices[chunkDisplayDimIndex];\n      displaySubspaceModelMatrix[chunkDisplayDimIndex * 4 + displayDim] =\n        chunkToLayerTransform[chunkDim * (rank + 1) + layerDim];\n    }\n    displaySubspaceModelMatrix[12 + displayDim] =\n      chunkToLayerTransform[rank * (rank + 1) + layerDim];\n  }\n  const displaySubspaceInvModelMatrix = mat4.create();\n  mat4.invert(displaySubspaceInvModelMatrix, displaySubspaceModelMatrix);\n\n  for (let i = chunkDisplayDimensionIndices.length; i < 3; ++i) {\n    chunkDisplayDimensionIndices[i] = -1;\n  }\n  return {\n    modelTransform: chunkTransform.modelTransform,\n    chunkTransform,\n    displaySubspaceModelMatrix,\n    displaySubspaceInvModelMatrix,\n    chunkDisplayDimensionIndices,\n    numChunkDisplayDims: numLayerDisplayDims,\n  };\n}\n\nexport function getChunkPositionFromCombinedGlobalLocalPositions(\n  chunkPosition: Float32Array,\n  globalPosition: Float32Array,\n  localPosition: Float32Array,\n  layerRank: number,\n  combinedGlobalLocalToChunkTransform: Float32Array,\n) {\n  const globalRank = globalPosition.length;\n  const localRank = localPosition.length;\n  const rank = chunkPosition.length;\n  let valid = true;\n  for (let chunkDim = 0; chunkDim < layerRank; ++chunkDim) {\n    let off = chunkDim;\n    let sum = 0;\n    for (let globalDim = 0; globalDim < globalRank; ++globalDim) {\n      sum +=\n        combinedGlobalLocalToChunkTransform[off + globalDim * layerRank] *\n        globalPosition[globalDim];\n    }\n    off += globalRank * layerRank;\n    for (let localDim = 0; localDim < localRank; ++localDim) {\n      sum +=\n        combinedGlobalLocalToChunkTransform[off + localDim * layerRank] *\n        localPosition[localDim];\n    }\n    sum += combinedGlobalLocalToChunkTransform[off + localRank * layerRank];\n    if (chunkDim < rank) {\n      chunkPosition[chunkDim] = sum;\n    } else {\n      // Handle clipping\n      if (sum < 0 || sum >= 1) {\n        valid = false;\n      }\n    }\n  }\n  return valid;\n}\n\nexport function getLayerPositionFromCombinedGlobalLocalPositions(\n  layerPosition: Float32Array,\n  globalPosition: Float32Array,\n  localPosition: Float32Array,\n  modelTransform: RenderLayerTransform,\n) {\n  scatterUpdate(\n    layerPosition,\n    globalPosition,\n    modelTransform.globalToRenderLayerDimensions,\n  );\n  scatterUpdate(\n    layerPosition,\n    localPosition,\n    modelTransform.localToRenderLayerDimensions,\n  );\n  return layerPosition;\n}\n\nexport function get3dModelToDisplaySpaceMatrix(\n  out: mat4,\n  displayDimensionRenderInfo: DisplayDimensionRenderInfo,\n  transform: RenderLayerTransform,\n) {\n  out.fill(0);\n  out[15] = 1;\n  let fullRank = true;\n  const { displayDimensionIndices } = displayDimensionRenderInfo;\n  const { globalToRenderLayerDimensions, modelToRenderLayerTransform } =\n    transform;\n  const layerRank = transform.rank;\n  for (let displayDim = 0; displayDim < 3; ++displayDim) {\n    const globalDim = displayDimensionIndices[displayDim];\n    if (globalDim === -1) {\n      fullRank = false;\n      continue;\n    }\n    const layerDim = globalToRenderLayerDimensions[globalDim];\n    if (layerDim === -1) {\n      fullRank = false;\n      continue;\n    }\n    out[displayDim + 12] =\n      modelToRenderLayerTransform[layerDim + layerRank * (layerRank + 1)];\n    for (let modelDim = 0; modelDim < 3; ++modelDim) {\n      out[displayDim + 4 * modelDim] =\n        modelToRenderLayerTransform[layerDim + (layerRank + 1) * modelDim];\n    }\n  }\n  if (!fullRank) {\n    const { globalDimensionNames } = displayDimensionRenderInfo;\n    const displayDimDesc = Array.from(\n      displayDimensionIndices.filter((i) => i !== -1),\n      (i) => globalDimensionNames[i],\n    ).join(\",\\u00a0\");\n    throw new Error(\n      `Transform from model dimensions (${transform.modelDimensionNames.join(\n        \",\\u00a0\",\n      )}) ` +\n        `to display dimensions (${displayDimDesc}) does not have full rank`,\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { TypedArrayConstructor } from \"#src/util/array.js\";\n\n/**\n * If this is updated, DATA_TYPE_BYTES must also be updated.\n */\nexport enum DataType {\n  UINT8 = 0,\n  INT8 = 1,\n  UINT16 = 2,\n  INT16 = 3,\n  UINT32 = 4,\n  INT32 = 5,\n  UINT64 = 6,\n  FLOAT32 = 7,\n}\n\nexport const DATA_TYPE_SIGNED: Record<DataType, boolean | undefined> = {\n  [DataType.UINT8]: false,\n  [DataType.INT8]: true,\n  [DataType.UINT16]: false,\n  [DataType.INT16]: true,\n  [DataType.UINT32]: false,\n  [DataType.INT32]: true,\n  [DataType.UINT64]: false,\n  [DataType.FLOAT32]: undefined,\n};\n\nexport const DATA_TYPE_BYTES: Record<DataType, number> = {\n  [DataType.UINT8]: 1,\n  [DataType.INT8]: 1,\n  [DataType.UINT16]: 2,\n  [DataType.INT16]: 2,\n  [DataType.UINT32]: 4,\n  [DataType.INT32]: 4,\n  [DataType.UINT64]: 8,\n  [DataType.FLOAT32]: 4,\n};\n\nexport const DATA_TYPE_ARRAY_CONSTRUCTOR: Record<\n  DataType,\n  TypedArrayConstructor\n> = {\n  [DataType.UINT8]: Uint8Array,\n  [DataType.INT8]: Int8Array,\n  [DataType.UINT16]: Uint16Array,\n  [DataType.INT16]: Int16Array,\n  [DataType.UINT32]: Uint32Array,\n  [DataType.INT32]: Int32Array,\n  [DataType.UINT64]: Uint32Array,\n  [DataType.FLOAT32]: Float32Array,\n};\n\nexport const DATA_TYPE_JAVASCRIPT_ELEMENTS_PER_ARRAY_ELEMENT: Record<\n  DataType,\n  number\n> = {\n  [DataType.UINT8]: 1,\n  [DataType.INT8]: 1,\n  [DataType.UINT16]: 1,\n  [DataType.INT16]: 1,\n  [DataType.UINT32]: 1,\n  [DataType.INT32]: 1,\n  [DataType.UINT64]: 2,\n  [DataType.FLOAT32]: 1,\n};\n\nexport function makeDataTypeArrayView(\n  dataType: DataType,\n  buffer: ArrayBuffer,\n  byteOffset = 0,\n  byteLength: number = buffer.byteLength,\n): ArrayBufferView {\n  const bytesPerElement = DATA_TYPE_BYTES[dataType];\n  const javascriptElementsPerArrayElement =\n    DATA_TYPE_JAVASCRIPT_ELEMENTS_PER_ARRAY_ELEMENT[dataType];\n  return new DATA_TYPE_ARRAY_CONSTRUCTOR[dataType](\n    buffer,\n    byteOffset,\n    (byteLength / bytesPerElement) * javascriptElementsPerArrayElement,\n  );\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  validateDisplayDimensionRenderInfoProperty,\n  type DisplayDimensionRenderInfo,\n} from \"#src/navigation_state.js\";\nimport { ProjectionParameters } from \"#src/projection_parameters.js\";\nimport { getChunkPositionFromCombinedGlobalLocalPositions } from \"#src/render_coordinate_transform.js\";\nimport { ChunkLayout } from \"#src/sliceview/chunk_layout.js\";\nimport type {\n  WatchableValueChangeInterface,\n  WatchableValueInterface,\n} from \"#src/trackable_value.js\";\nimport { DATA_TYPE_BYTES, DataType } from \"#src/util/data_type.js\";\nimport type { Disposable } from \"#src/util/disposable.js\";\nimport {\n  getFrustrumPlanes,\n  getViewFrustrumDepthRange,\n  isAABBIntersectingPlane,\n  isAABBVisible,\n  mat4,\n  vec3,\n} from \"#src/util/geom.js\";\nimport * as matrix from \"#src/util/matrix.js\";\nimport * as vector from \"#src/util/vector.js\";\nimport { SharedObject } from \"#src/worker_rpc.js\";\n\nexport { DATA_TYPE_BYTES, DataType };\n\nconst DEBUG_VISIBLE_SOURCES = false;\nconst DEBUG_CHUNK_VISIBILITY = false;\n\nconst tempMat4 = mat4.create();\n\n/**\n * Average cross-sectional area contained within a chunk of the specified size and rotation.\n *\n * This is estimated by taking the total volume of the chunk and dividing it by the total length of\n * the chunk along the z axis.\n */\nexport function estimateSliceAreaPerChunk(\n  chunkLayout: ChunkLayout,\n  viewMatrix: mat4,\n) {\n  // Compute the length of the projection of the chunk along the z axis in view space.\n  //\n  // Each chunk dimension `i` can independently affect the z projection by the dot product of column\n  // `i` of `chunkLayout.transform` and row 2 of `viewMatrix`.\n  let viewZProjection = 0;\n  let chunkVolume = Math.abs(chunkLayout.detTransform);\n  const { transform, size } = chunkLayout;\n  for (let i = 0; i < 3; ++i) {\n    let sum = 0;\n    for (let j = 0; j < 3; ++j) {\n      sum += viewMatrix[j * 4 + 2] * transform[4 * i + j];\n    }\n    const s = size[i];\n    viewZProjection += Math.abs(sum) * s;\n    chunkVolume *= s;\n  }\n  return chunkVolume / viewZProjection;\n}\n\nexport interface MultiscaleVolumetricDataRenderLayer {\n  localPosition: WatchableValueInterface<Float32Array>;\n  renderScaleTarget: WatchableValueInterface<number>;\n}\n\nexport interface TransformedSource<\n  RLayer extends MultiscaleVolumetricDataRenderLayer = SliceViewRenderLayer,\n  Source extends SliceViewChunkSource = SliceViewChunkSource,\n> {\n  renderLayer: RLayer;\n\n  source: Source;\n\n  /**\n   * Approximate voxel size in each of the display dimensions.\n   */\n  effectiveVoxelSize: vec3;\n\n  chunkLayout: ChunkLayout;\n\n  /**\n   * Arrays of length `rank` specifying the clip bounds (in voxels) for dimensions not in\n   * `chunkDisplayDimensionIndices` and not channel dimensions.  The values for display/channel\n   * dimensions are set to -/+infinity.\n   */\n  nonDisplayLowerClipBound: Float32Array;\n  nonDisplayUpperClipBound: Float32Array;\n\n  /**\n   * Arrays of length `rank` specifying the clip bounds (in voxels) for all dimensions.\n   */\n  lowerClipBound: Float32Array;\n  upperClipBound: Float32Array;\n\n  // Lower clip bound (in voxels) in the \"display\" subspace of the chunk coordinate space.\n  lowerClipDisplayBound: vec3;\n  // Upper clip bound (in voxels) in the \"display\" subspace of the chunk coordinate space.\n  upperClipDisplayBound: vec3;\n\n  // Lower bound (in chunks) within the \"display\" subspace of the chunk coordinate space.\n  lowerChunkDisplayBound: vec3;\n  // Upper bound (in chunks) within the \"display\" subspace of the chunk coordinate space.\n  upperChunkDisplayBound: vec3;\n\n  /**\n   * Dimensions of the chunk corresponding to the 3 display dimensions of the slice view.\n   */\n  chunkDisplayDimensionIndices: number[];\n\n  /**\n   * Rank of \"layer\" space and the \"chunk clip\" space, which is >= rank of chunk space.\n   */\n  layerRank: number;\n\n  /**\n   * Transform from dimensions of layer space to dimensions of chunk space.\n   *\n   * Matrix has dimensions `(globalRank + localRank + 1) * layerRank`.\n   *\n   * Input space is `[global dimensions, local dimensions]`.  Output space is the \"chunk clip\"\n   * coordinate space, in units of voxels.\n   *\n   */\n  combinedGlobalLocalToChunkTransform: Float32Array;\n\n  /**\n   * Transform from non-display dimensions of layer space to non-display dimensions of chunk space.\n   *\n   * Same as `combinedGlobalLocalToChunkTransform`, except that rows corresponding to \"display\"\n   * chunk dimensions are all 0.\n   *\n   * Matrix has dimensions `(globalRank + localRank + 1) * layerRank`.\n   *\n   * Input space is `[global dimensions, local dimensions]`.  Output space is the \"chunk clip\"\n   * coordinate space, in units of voxels.\n   */\n  fixedLayerToChunkTransform: Float32Array;\n\n  /**\n   * When `computeVisibleChunks` invokes the `addChunk` callback, this is set to the position of the\n   * chunk.\n   */\n  curPositionInChunks: Float32Array;\n\n  fixedPositionWithinChunk: Uint32Array;\n}\n\nexport interface SliceViewRenderLayer {\n  /**\n   * Current position of non-global layer dimensions.\n   */\n  localPosition: WatchableValueInterface<Float32Array>;\n  renderScaleTarget: WatchableValueInterface<number>;\n\n  filterVisibleSources(\n    sliceView: SliceViewBase<SliceViewChunkSource, SliceViewRenderLayer>,\n    sources: readonly TransformedSource[],\n  ): Iterable<TransformedSource>;\n}\n\nfunction updateFixedCurPositionInChunks<\n  RLayer extends MultiscaleVolumetricDataRenderLayer,\n>(\n  tsource: TransformedSource<RLayer, SliceViewChunkSource>,\n  globalPosition: Float32Array,\n  localPosition: Float32Array,\n): boolean {\n  const { curPositionInChunks, fixedPositionWithinChunk } = tsource;\n  const { nonDisplayLowerClipBound, nonDisplayUpperClipBound } = tsource;\n  const { rank, chunkDataSize } = tsource.source.spec;\n  if (\n    !getChunkPositionFromCombinedGlobalLocalPositions(\n      curPositionInChunks,\n      globalPosition,\n      localPosition,\n      tsource.layerRank,\n      tsource.fixedLayerToChunkTransform,\n    )\n  ) {\n    return false;\n  }\n  for (let chunkDim = 0; chunkDim < rank; ++chunkDim) {\n    const x = curPositionInChunks[chunkDim];\n    if (\n      x < nonDisplayLowerClipBound[chunkDim] ||\n      x >= nonDisplayUpperClipBound[chunkDim]\n    ) {\n      if (DEBUG_VISIBLE_SOURCES) {\n        console.log(\n          \"excluding source\",\n          tsource,\n          `because of chunkDim=${chunkDim}, sum=${x}`,\n          nonDisplayLowerClipBound,\n          nonDisplayUpperClipBound,\n          tsource.fixedLayerToChunkTransform,\n        );\n      }\n      return false;\n    }\n    const chunkSize = chunkDataSize[chunkDim];\n    const chunk = (curPositionInChunks[chunkDim] = Math.floor(x / chunkSize));\n    fixedPositionWithinChunk[chunkDim] = x - chunk * chunkSize;\n  }\n  return true;\n}\n\nfunction pickBestAlternativeSource<\n  RLayer extends MultiscaleVolumetricDataRenderLayer,\n  Source extends SliceViewChunkSource,\n  Transformed extends TransformedSource<RLayer, Source>,\n>(viewMatrix: mat4, alternatives: Transformed[]) {\n  const numAlternatives = alternatives.length;\n  let bestAlternativeIndex = 0;\n  if (DEBUG_VISIBLE_SOURCES) {\n    console.log(alternatives);\n  }\n  if (numAlternatives > 1) {\n    let bestSliceArea = 0;\n    for (\n      let alternativeIndex = 0;\n      alternativeIndex < numAlternatives;\n      ++alternativeIndex\n    ) {\n      const alternative = alternatives[alternativeIndex];\n      const { chunkLayout } = alternative;\n      const sliceArea = estimateSliceAreaPerChunk(chunkLayout, viewMatrix);\n      if (DEBUG_VISIBLE_SOURCES) {\n        console.log(\n          `chunksize = ${chunkLayout.size}, sliceArea = ${sliceArea}`,\n        );\n      }\n      if (sliceArea > bestSliceArea) {\n        bestSliceArea = sliceArea;\n        bestAlternativeIndex = alternativeIndex;\n      }\n    }\n  }\n  return bestAlternativeIndex;\n}\n\nexport interface VisibleLayerSources<\n  RLayer extends MultiscaleVolumetricDataRenderLayer,\n  Source extends SliceViewChunkSource,\n  Transformed extends TransformedSource<RLayer, Source>,\n> {\n  allSources: Transformed[][];\n  visibleSources: Transformed[];\n  displayDimensionRenderInfo: DisplayDimensionRenderInfo;\n}\n\nconst tempChunkLayout = new ChunkLayout(vec3.create(), mat4.create(), 0);\n\nexport class SliceViewProjectionParameters extends ProjectionParameters {\n  /**\n   * Normal vector of cross section in (non-isotropic) global voxel coordinates.\n   */\n  viewportNormalInGlobalCoordinates = vec3.create();\n\n  /**\n   * Normal vector of cross section in isotropic global canonical voxel coordinates.\n   */\n  viewportNormalInCanonicalCoordinates = vec3.create();\n\n  centerDataPosition = vec3.create();\n\n  /**\n   * Size in physical units of a single pixel.\n   */\n  pixelSize = 0;\n}\n\nfunction visibleSourcesInvalidated(\n  oldValue: SliceViewProjectionParameters,\n  newValue: SliceViewProjectionParameters,\n) {\n  if (\n    oldValue.displayDimensionRenderInfo !== newValue.displayDimensionRenderInfo\n  ) {\n    return true;\n  }\n  if (oldValue.pixelSize !== newValue.pixelSize) return true;\n  const { viewMatrix: oldViewMatrix } = oldValue;\n  const { viewMatrix: newViewMatrix } = newValue;\n  for (let i = 0; i < 12; ++i) {\n    if (oldViewMatrix[i] !== newViewMatrix[i]) return true;\n  }\n  return false;\n}\n\nexport class SliceViewBase<\n  Source extends SliceViewChunkSource = SliceViewChunkSource,\n  RLayer extends SliceViewRenderLayer = SliceViewRenderLayer,\n  Transformed extends TransformedSource<RLayer, Source> = TransformedSource<\n    RLayer,\n    Source\n  >,\n> extends SharedObject {\n  visibleLayers = new Map<\n    RLayer,\n    VisibleLayerSources<RLayer, Source, Transformed>\n  >();\n  visibleSourcesStale = true;\n\n  constructor(\n    public projectionParameters: WatchableValueChangeInterface<SliceViewProjectionParameters>,\n  ) {\n    super();\n    this.registerDisposer(\n      projectionParameters.changed.add((oldValue, newValue) => {\n        if (visibleSourcesInvalidated(oldValue, newValue)) {\n          this.invalidateVisibleSources();\n        }\n        this.invalidateVisibleChunks();\n      }),\n    );\n  }\n\n  invalidateVisibleSources() {\n    this.visibleSourcesStale = true;\n  }\n\n  invalidateVisibleChunks() {}\n\n  /**\n   * Computes the list of sources to use for each visible layer, based on the\n   * current pixelSize.\n   */\n  updateVisibleSources() {\n    if (!this.visibleSourcesStale) {\n      return;\n    }\n    this.visibleSourcesStale = false;\n    const curDisplayDimensionRenderInfo =\n      this.projectionParameters.value.displayDimensionRenderInfo;\n\n    const { visibleLayers } = this;\n    for (const [renderLayer, visibleLayerSources] of visibleLayers) {\n      const { allSources, visibleSources } = visibleLayerSources;\n      visibleSources.length = 0;\n      if (\n        allSources.length === 0 ||\n        !validateDisplayDimensionRenderInfoProperty(\n          visibleLayerSources,\n          curDisplayDimensionRenderInfo,\n        )\n      ) {\n        continue;\n      }\n      const preferredOrientationIndex = pickBestAlternativeSource(\n        this.projectionParameters.value.viewMatrix,\n        allSources.map((x) => x[0]),\n      );\n\n      const sources = allSources[preferredOrientationIndex];\n\n      for (const source of renderLayer.filterVisibleSources(this, sources)) {\n        visibleSources.push(source as Transformed);\n      }\n      // Reverse visibleSources list since we added sources from coarsest to finest resolution, but\n      // we want them ordered from finest to coarsest.\n      visibleSources.reverse();\n      if (DEBUG_VISIBLE_SOURCES) {\n        console.log(\"visible sources chosen\", visibleSources);\n      }\n    }\n  }\n}\n\n/**\n * By default, choose a chunk size with at most 2^18 = 262144 voxels.\n */\nexport const DEFAULT_MAX_VOXELS_PER_CHUNK_LOG2 = 18;\n\n/**\n * Specifies common options for getNearIsotropicBlockSize and getTwoDimensionalBlockSize.\n */\nexport interface BaseChunkLayoutOptions {\n  /**\n   * Number of chunk dimensions.\n   */\n  rank: number;\n\n  /**\n   * This, together with upperVoxelBound, specifies the total volume dimensions, which serves as a\n   * bound on the maximum chunk size.  If not specified, defaults to a zero vector.\n   */\n  lowerVoxelBound?: Float32Array;\n\n  /**\n   * Upper voxel bound.  If not specified, the total volume dimensions are not used to bound the\n   * chunk size.\n   */\n  upperVoxelBound?: Float32Array;\n\n  /**\n   * Base 2 logarithm of the maximum number of voxels per chunk.  Defaults to\n   * DEFAULT_MAX_VOXELS_PER_CHUNK_LOG2.\n   */\n  maxVoxelsPerChunkLog2?: number;\n\n  /**\n   * Linear (not affine) transformation matrix with `rank` columns and `displayRank` rows in\n   * column-major order.  Specifies the transformation from chunk space to an isotropic \"camera view\n   * space\".  Note that only relative scales of input dimensions are relevant, any rotations applied\n   * are irrelevant.\n   */\n  chunkToViewTransform: Float32Array;\n  displayRank: number;\n\n  minBlockSize?: Uint32Array;\n  maxBlockSize?: Uint32Array;\n}\n\nexport type GetNearIsotropicBlockSizeOptions = BaseChunkLayoutOptions;\n\n/**\n * Determines a near-isotropic (in camera view space) block size.  All dimensions will be\n * powers of 2, and will not exceed upperVoxelBound - lowerVoxelBound.  The total number of voxels\n * will not exceed maxVoxelsPerChunkLog2.\n */\nexport function getNearIsotropicBlockSize(\n  options: GetNearIsotropicBlockSizeOptions,\n): Uint32Array {\n  let {\n    rank,\n    upperVoxelBound,\n    maxVoxelsPerChunkLog2 = DEFAULT_MAX_VOXELS_PER_CHUNK_LOG2,\n    chunkToViewTransform,\n    displayRank,\n    minBlockSize,\n    maxBlockSize,\n  } = options;\n\n  const { lowerVoxelBound = new Uint32Array(rank) } = options;\n\n  // Adjust voxelSize by effective scaling factor.\n  const effectiveVoxelSize = new Float32Array(rank);\n  for (let chunkDim = 0; chunkDim < rank; ++chunkDim) {\n    let factor = 0;\n    for (let displayDim = 0; displayDim < displayRank; ++displayDim) {\n      const c = chunkToViewTransform[chunkDim * displayRank + displayDim];\n      factor += c * c;\n    }\n    effectiveVoxelSize[chunkDim] = Math.sqrt(factor);\n  }\n\n  const chunkDataSize = new Uint32Array(rank);\n  if (minBlockSize !== undefined) {\n    chunkDataSize.set(minBlockSize);\n  } else {\n    chunkDataSize.fill(1);\n  }\n  const chunkDataSizeUpperBound = new Array<number>(rank);\n  for (let chunkDim = 0; chunkDim < rank; ++chunkDim) {\n    let bound = Number.POSITIVE_INFINITY;\n    if (effectiveVoxelSize[chunkDim] === 0) {\n      bound = chunkDataSize[chunkDim];\n    } else {\n      if (upperVoxelBound !== undefined) {\n        bound =\n          2 **\n          Math.floor(\n            Math.log2(upperVoxelBound[chunkDim] - lowerVoxelBound[chunkDim]),\n          );\n      }\n      if (maxBlockSize !== undefined) {\n        bound = Math.min(bound, maxBlockSize[chunkDim]);\n      }\n    }\n    chunkDataSizeUpperBound[chunkDim] = bound;\n  }\n\n  // Determine the dimension in which chunkDataSize should be increased.  This is the smallest\n  // dimension (in nanometers) that is < maxChunkDataSize (in voxels).\n  //\n  // Returns -1 if there is no such dimension.\n  function findNextDimension() {\n    let minSize = Infinity;\n    let minDimension = -1;\n    for (let chunkDim = 0; chunkDim < rank; ++chunkDim) {\n      if (chunkDataSize[chunkDim] >= chunkDataSizeUpperBound[chunkDim]) {\n        continue;\n      }\n      const size = chunkDataSize[chunkDim] * effectiveVoxelSize[chunkDim];\n      if (size < minSize) {\n        minSize = size;\n        minDimension = chunkDim;\n      }\n    }\n    return minDimension;\n  }\n\n  maxVoxelsPerChunkLog2 -= Math.log2(vector.prod(chunkDataSize));\n  for (let i = 0; i < maxVoxelsPerChunkLog2; ++i) {\n    const nextDim = findNextDimension();\n    if (nextDim === -1) {\n      break;\n    }\n    chunkDataSize[nextDim] *= 2;\n  }\n  return chunkDataSize;\n}\n\n/**\n * Returns an array of [xy, yz, xz] 2-dimensional block sizes, where [x, y, z] refer to the view\n * dimensions.\n */\nexport function getTwoDimensionalBlockSizes(options: BaseChunkLayoutOptions) {\n  const chunkDataSizes: Uint32Array[] = [];\n  const { displayRank, chunkToViewTransform, rank } = options;\n  if (displayRank > 3) {\n    throw new Error(\"Unsupported view transform\");\n  }\n  if (displayRank < 3) {\n    return [getNearIsotropicBlockSize(options)];\n  }\n  for (let i = 0; i < 3; ++i) {\n    const excludedDim = (i + 2) % 3;\n    const restrictedTransform = new Float32Array(chunkToViewTransform);\n    for (let j = 0; j < rank; ++j) {\n      restrictedTransform[j * displayRank + excludedDim] = 0;\n    }\n    chunkDataSizes[i] = getNearIsotropicBlockSize({\n      ...options,\n      chunkToViewTransform: restrictedTransform,\n    });\n  }\n  return chunkDataSizes;\n}\n\nexport enum ChunkLayoutPreference {\n  /**\n   * Indicates that isotropic chunks are desired.\n   */\n  ISOTROPIC = 0,\n\n  /**\n   * Indicates that 2-D chunks are desired.\n   */\n  FLAT = 1,\n}\n\nexport interface SliceViewSourceOptions {\n  /**\n   * Transform from the multiscale source coordinate space to a \"view\" coordinate space that\n   * reflects the relative scales.  This is a *linear* (not affine) transformation matrix with\n   * `rank` columns and `displayRank` rows in column-major order, where `rank` is the rank of the\n   * multiscale source.\n   */\n  multiscaleToViewTransform: Float32Array;\n  displayRank: number;\n  modelChannelDimensionIndices: readonly number[];\n}\n\nexport function getCombinedTransform(\n  rank: number,\n  bToC: Float32Array,\n  aToB: Float32Array | undefined,\n) {\n  if (aToB === undefined) {\n    return bToC;\n  }\n  return matrix.multiply(\n    new Float32Array((rank + 1) * (rank + 1)),\n    rank + 1,\n    bToC,\n    rank + 1,\n    aToB,\n    rank + 1,\n    rank + 1,\n    rank + 1,\n    rank + 1,\n  );\n}\n\n/**\n * Specifies parameters for getChunkDataSizes.\n */\nexport interface ChunkLayoutOptions {\n  /**\n   * Chunk sizes in voxels.\n   */\n  chunkDataSizes?: Uint32Array[];\n\n  /**\n   * Preferred chunk layout, which determines chunk sizes to use if chunkDataSizes is not\n   * specified.\n   */\n  chunkLayoutPreference?: ChunkLayoutPreference;\n}\n\nexport function getChunkDataSizes(\n  options: ChunkLayoutOptions & BaseChunkLayoutOptions,\n) {\n  if (options.chunkDataSizes !== undefined) {\n    return options.chunkDataSizes;\n  }\n  const { chunkLayoutPreference = ChunkLayoutPreference.ISOTROPIC } = options;\n  switch (chunkLayoutPreference) {\n    case ChunkLayoutPreference.ISOTROPIC:\n      return [getNearIsotropicBlockSize(options)];\n    case ChunkLayoutPreference.FLAT:\n      return getTwoDimensionalBlockSizes(options);\n  }\n}\n\n/**\n * Generic specification for SliceView chunks specifying a layout and voxel size.\n */\nexport interface SliceViewChunkSpecification<\n  ChunkDataSize extends Uint32Array | Float32Array = Uint32Array | Float32Array,\n> {\n  rank: number;\n\n  /**\n   * Size of chunk in voxels.\n   */\n  chunkDataSize: ChunkDataSize;\n\n  /**\n   * All valid chunks are in the range [lowerChunkBound, upperChunkBound).\n   *\n   * These are specified in units of chunks (not voxels).\n   */\n  lowerChunkBound: Float32Array;\n  upperChunkBound: Float32Array;\n\n  lowerVoxelBound: Float32Array;\n  upperVoxelBound: Float32Array;\n}\n\nexport function makeSliceViewChunkSpecification<\n  ChunkDataSize extends Uint32Array | Float32Array,\n>(\n  options: SliceViewChunkSpecificationOptions<ChunkDataSize>,\n): SliceViewChunkSpecification<ChunkDataSize> {\n  const { rank, chunkDataSize, upperVoxelBound } = options;\n  const { lowerVoxelBound = new Float32Array(rank) } = options;\n  const lowerChunkBound = new Float32Array(rank);\n  const upperChunkBound = new Float32Array(rank);\n  for (let i = 0; i < rank; ++i) {\n    lowerChunkBound[i] = Math.floor(lowerVoxelBound[i] / chunkDataSize[i]);\n    upperChunkBound[i] = Math.floor(\n      (upperVoxelBound[i] - 1) / chunkDataSize[i] + 1,\n    );\n  }\n  return {\n    rank,\n    chunkDataSize,\n    lowerChunkBound,\n    upperChunkBound,\n    lowerVoxelBound,\n    upperVoxelBound,\n  };\n}\n\nexport function* filterVisibleSources(\n  sliceView: SliceViewBase,\n  renderLayer: SliceViewRenderLayer,\n  sources: readonly TransformedSource[],\n): Iterable<TransformedSource> {\n  // Increase pixel size by a small margin.\n  const pixelSize = sliceView.projectionParameters.value.pixelSize * 1.1;\n  // At the smallest scale, all alternative sources must have the same voxel size, which is\n  // considered to be the base voxel size.\n  const smallestVoxelSize = sources[0].effectiveVoxelSize;\n\n  const renderScaleTarget = renderLayer.renderScaleTarget.value;\n\n  /**\n   * Determines whether we should continue to look for a finer-resolution source *after* one\n   * with the specified voxelSize.\n   */\n  const canImproveOnVoxelSize = (voxelSize: vec3) => {\n    const targetSize = pixelSize * renderScaleTarget;\n    for (let i = 0; i < 3; ++i) {\n      const size = voxelSize[i];\n      // If size <= pixelSize, no need for improvement.\n      // If size === smallestVoxelSize, also no need for improvement.\n      if (size > targetSize && size > 1.01 * smallestVoxelSize[i]) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const improvesOnPrevVoxelSize = (voxelSize: vec3, prevVoxelSize: vec3) => {\n    const targetSize = pixelSize * renderScaleTarget;\n    for (let i = 0; i < 3; ++i) {\n      const size = voxelSize[i];\n      const prevSize = prevVoxelSize[i];\n      if (\n        Math.abs(targetSize - size) < Math.abs(targetSize - prevSize) &&\n        size < 1.01 * prevSize\n      ) {\n        return true;\n      }\n    }\n    return false;\n  };\n  let scaleIndex = sources.length - 1;\n  let prevVoxelSize: vec3 | undefined;\n  while (true) {\n    const transformedSource = sources[scaleIndex];\n    if (\n      prevVoxelSize !== undefined &&\n      !improvesOnPrevVoxelSize(\n        transformedSource.effectiveVoxelSize,\n        prevVoxelSize,\n      )\n    ) {\n      break;\n    }\n    yield transformedSource;\n\n    if (\n      scaleIndex === 0 ||\n      !canImproveOnVoxelSize(transformedSource.effectiveVoxelSize)\n    ) {\n      break;\n    }\n    prevVoxelSize = transformedSource.effectiveVoxelSize;\n    --scaleIndex;\n  }\n}\n\n/**\n * Common parameters for SliceView Chunks.\n */\nexport interface SliceViewChunkSpecificationBaseOptions {\n  rank: number;\n\n  /**\n   * If not specified, defaults to an all-zero vector.  This determines lowerChunkBound.  If this is\n   * not a multiple of chunkDataSize, then voxels at lower positions may still be requested.\n   */\n  lowerVoxelBound?: Float32Array;\n\n  /**\n   * Exclusive upper bound in \"chunk\" coordinate space, in voxels.  This determines upperChunkBound.\n   */\n  upperVoxelBound: Float32Array;\n}\n\nexport interface SliceViewChunkSpecificationOptions<\n  ChunkDataSize extends Uint32Array | Float32Array = Uint32Array | Float32Array,\n> extends SliceViewChunkSpecificationBaseOptions {\n  chunkDataSize: ChunkDataSize;\n}\n\nexport interface SliceViewChunkSource<\n  Spec extends SliceViewChunkSpecification = SliceViewChunkSpecification,\n> extends Disposable {\n  spec: Spec;\n}\n\nexport const SLICEVIEW_RPC_ID = \"SliceView\";\nexport const SLICEVIEW_RENDERLAYER_RPC_ID = \"sliceview/RenderLayer\";\nexport const SLICEVIEW_ADD_VISIBLE_LAYER_RPC_ID = \"SliceView.addVisibleLayer\";\nexport const SLICEVIEW_REMOVE_VISIBLE_LAYER_RPC_ID =\n  \"SliceView.removeVisibleLayer\";\nexport const SLICEVIEW_REQUEST_CHUNK_RPC_ID = \"ChunkManager.requestChunk\";\n\nconst tempVisibleVolumetricChunkLower = new Float32Array(3);\nconst tempVisibleVolumetricChunkUpper = new Float32Array(3);\nconst tempVisibleVolumetricModelViewProjection = mat4.create();\nconst tempVisibleVolumetricClippingPlanes = new Float32Array(24);\n\nfunction forEachVolumetricChunkWithinFrustrum<\n  RLayer extends MultiscaleVolumetricDataRenderLayer,\n>(\n  clippingPlanes: Float32Array,\n  transformedSource: TransformedSource<RLayer>,\n  callback: (positionInChunks: vec3, clippingPlanes: Float32Array) => void,\n  predicate: (\n    xLower: number,\n    yLower: number,\n    zLower: number,\n    xUpper: number,\n    yUpper: number,\n    zUpper: number,\n    clippingPlanes: Float32Array,\n  ) => boolean,\n) {\n  const lower = tempVisibleVolumetricChunkLower;\n  const upper = tempVisibleVolumetricChunkUpper;\n  const { lowerChunkDisplayBound, upperChunkDisplayBound } = transformedSource;\n  for (let i = 0; i < 3; ++i) {\n    lower[i] = Math.max(lower[i], lowerChunkDisplayBound[i]);\n    upper[i] = Math.min(upper[i], upperChunkDisplayBound[i]);\n  }\n  const { curPositionInChunks, chunkDisplayDimensionIndices } =\n    transformedSource;\n\n  function recurse() {\n    if (\n      !predicate(\n        lower[0],\n        lower[1],\n        lower[2],\n        upper[0],\n        upper[1],\n        upper[2],\n        clippingPlanes,\n      )\n    ) {\n      return;\n    }\n\n    let splitDim = 0;\n    let splitSize = Math.max(0, upper[0] - lower[0]);\n    let volume = splitSize;\n    for (let i = 1; i < 3; ++i) {\n      const size = Math.max(0, upper[i] - lower[i]);\n      volume *= size;\n      if (size > splitSize) {\n        splitSize = size;\n        splitDim = i;\n      }\n    }\n    if (volume === 0) return;\n    if (volume === 1) {\n      curPositionInChunks[chunkDisplayDimensionIndices[0]] = lower[0];\n      curPositionInChunks[chunkDisplayDimensionIndices[1]] = lower[1];\n      curPositionInChunks[chunkDisplayDimensionIndices[2]] = lower[2];\n      callback(lower as vec3, clippingPlanes);\n      return;\n    }\n    const prevLower = lower[splitDim];\n    const prevUpper = upper[splitDim];\n    const splitPoint = Math.floor(0.5 * (prevLower + prevUpper));\n    upper[splitDim] = splitPoint;\n    recurse();\n    upper[splitDim] = prevUpper;\n    lower[splitDim] = splitPoint;\n    recurse();\n    lower[splitDim] = prevLower;\n  }\n  recurse();\n}\n\nexport function forEachVisibleVolumetricChunk<\n  RLayer extends MultiscaleVolumetricDataRenderLayer,\n>(\n  projectionParameters: ProjectionParameters,\n  localPosition: Float32Array,\n  transformedSource: TransformedSource<RLayer>,\n  callback: (positionInChunks: vec3, clippingPlanes: Float32Array) => void,\n) {\n  if (\n    !updateFixedCurPositionInChunks(\n      transformedSource,\n      projectionParameters.globalPosition,\n      localPosition,\n    )\n  ) {\n    return;\n  }\n  const { size: chunkSize } = transformedSource.chunkLayout;\n  const modelViewProjection = mat4.multiply(\n    tempVisibleVolumetricModelViewProjection,\n    projectionParameters.viewProjectionMat,\n    transformedSource.chunkLayout.transform,\n  );\n  for (let i = 0; i < 3; ++i) {\n    const s = chunkSize[i];\n    for (let j = 0; j < 4; ++j) {\n      modelViewProjection[4 * i + j] *= s;\n    }\n  }\n\n  const clippingPlanes = tempVisibleVolumetricClippingPlanes;\n  getFrustrumPlanes(clippingPlanes, modelViewProjection);\n  const lower = tempVisibleVolumetricChunkLower;\n  const upper = tempVisibleVolumetricChunkUpper;\n  lower.fill(Number.NEGATIVE_INFINITY);\n  upper.fill(Number.POSITIVE_INFINITY);\n  forEachVolumetricChunkWithinFrustrum(\n    clippingPlanes,\n    transformedSource,\n    callback,\n    isAABBVisible,\n  );\n}\n\nexport function forEachPlaneIntersectingVolumetricChunk<\n  RLayer extends MultiscaleVolumetricDataRenderLayer,\n>(\n  projectionParameters: ProjectionParameters,\n  localPosition: Float32Array,\n  transformedSource: TransformedSource<RLayer>,\n  chunkLayout: ChunkLayout,\n  callback: (positionInChunks: vec3) => void,\n) {\n  if (\n    !updateFixedCurPositionInChunks(\n      transformedSource,\n      projectionParameters.globalPosition,\n      localPosition,\n    )\n  ) {\n    return;\n  }\n  const { size: chunkSize } = chunkLayout;\n  const modelViewProjection = mat4.multiply(\n    tempVisibleVolumetricModelViewProjection,\n    projectionParameters.viewProjectionMat,\n    chunkLayout.transform,\n  );\n  for (let i = 0; i < 3; ++i) {\n    const s = chunkSize[i];\n    for (let j = 0; j < 4; ++j) {\n      modelViewProjection[4 * i + j] *= s;\n    }\n  }\n\n  const invModelViewProjection = tempMat4;\n  mat4.invert(invModelViewProjection, modelViewProjection);\n  const lower = tempVisibleVolumetricChunkLower;\n  const upper = tempVisibleVolumetricChunkUpper;\n  const epsilon = 1e-3;\n  for (let i = 0; i < 3; ++i) {\n    // Add small offset of `epsilon` voxels to bias towards the higher coordinate if very close to a\n    // voxel boundary.\n    const c = invModelViewProjection[12 + i] + epsilon / chunkSize[i];\n    const xCoeff = Math.abs(invModelViewProjection[i]);\n    const yCoeff = Math.abs(invModelViewProjection[4 + i]);\n    lower[i] = Math.floor(c - xCoeff - yCoeff);\n    upper[i] = Math.floor(c + xCoeff + yCoeff + 1);\n  }\n\n  const clippingPlanes = tempVisibleVolumetricClippingPlanes;\n  for (let i = 0; i < 3; ++i) {\n    const xCoeff = modelViewProjection[4 * i];\n    const yCoeff = modelViewProjection[4 * i + 1];\n    const zCoeff = modelViewProjection[4 * i + 2];\n    clippingPlanes[i] = xCoeff;\n    clippingPlanes[4 + i] = -xCoeff;\n    clippingPlanes[8 + i] = +yCoeff;\n    clippingPlanes[12 + i] = -yCoeff;\n    clippingPlanes[16 + i] = +zCoeff;\n    clippingPlanes[20 + i] = -zCoeff;\n  }\n  {\n    const i = 3;\n    const xCoeff = modelViewProjection[4 * i];\n    const yCoeff = modelViewProjection[4 * i + 1];\n    const zCoeff = modelViewProjection[4 * i + 2];\n    clippingPlanes[i] = 1 + xCoeff;\n    clippingPlanes[4 + i] = 1 - xCoeff;\n    clippingPlanes[8 + i] = 1 + yCoeff;\n    clippingPlanes[12 + i] = 1 - yCoeff;\n    clippingPlanes[16 + i] = zCoeff;\n    clippingPlanes[20 + i] = -zCoeff;\n  }\n  if (DEBUG_CHUNK_VISIBILITY) {\n    console.log(\"clippingPlanes\", clippingPlanes);\n    console.log(\"modelViewProjection\", modelViewProjection.join(\",\"));\n    console.log(`lower=${lower.join(\",\")}, upper=${upper.join(\",\")}`);\n  }\n  forEachVolumetricChunkWithinFrustrum(\n    clippingPlanes,\n    transformedSource,\n    callback,\n    isAABBIntersectingPlane,\n  );\n}\n\n/**\n * For chunk layouts with finiteRank < 3, returns an adjusted chunk layout where chunk 0 in each\n * non-finite dimension is guaranteed to cover the viewport.\n */\nexport function getNormalizedChunkLayout(\n  projectionParameters: ProjectionParameters,\n  chunkLayout: ChunkLayout,\n): ChunkLayout {\n  const { finiteRank } = chunkLayout;\n  if (finiteRank === 3) return chunkLayout;\n  tempChunkLayout.finiteRank = finiteRank;\n  vec3.copy(tempChunkLayout.size, chunkLayout.size);\n  const transform = mat4.copy(tempChunkLayout.transform, chunkLayout.transform);\n  const invTransform = mat4.copy(\n    tempChunkLayout.invTransform,\n    chunkLayout.invTransform,\n  );\n  tempChunkLayout.detTransform = chunkLayout.detTransform;\n  const { invViewMatrix, width, height } = projectionParameters;\n  const depth = getViewFrustrumDepthRange(projectionParameters.projectionMat);\n  for (let chunkRenderDim = finiteRank; chunkRenderDim < 3; ++chunkRenderDim) {\n    // we want to ensure chunk [0] fully covers the viewport\n    const offset = invViewMatrix[12 + chunkRenderDim];\n    let lower = offset;\n    let upper = offset;\n    const xc = Math.abs(invViewMatrix[chunkRenderDim] * width);\n    lower -= xc;\n    upper += xc;\n    const yc = Math.abs(invViewMatrix[chunkRenderDim + 4] * height);\n    lower -= yc;\n    upper += yc;\n    const zc = Math.abs(invViewMatrix[chunkRenderDim + 8] * depth);\n    lower -= zc;\n    upper += zc;\n    const scaleFactor = Math.max(1, upper - lower);\n    transform[12 + chunkRenderDim] = lower;\n    transform[5 * chunkRenderDim] = scaleFactor;\n  }\n  mat4.invert(invTransform, transform);\n  return tempChunkLayout;\n}\n","/**\n * @license\n * Copyright 2020 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Simple implementation of the error function\n *\n * https://en.wikipedia.org/wiki/Error_function\n *\n * Precision is 2.5e-5\n */\nexport function erf(x: number) {\n  // Abramowitz and Stegun. Handbook of Mathematical Functions\n  // Formula 7.1.26\n  // http://people.math.sfu.ca/~cbm/aands/frameindex.htm\n  const a1 = 0.254829592;\n  const a2 = -0.284496736;\n  const a3 = 1.421413741;\n  const a4 = -1.453152027;\n  const a5 = 1.061405429;\n  const p = 0.3275911;\n\n  const t = 1 / (1 + p * Math.abs(x));\n  const y =\n    1 - ((((a5 * t + a4) * t + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);\n  return Math.sign(x) * y;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Velocity estimation for prefetching using exponentially-weighted moving estimate of\n * univariate gaussian distribution of per-dimension velocities.\n *\n * Because changes to the global position are not continuous, we estimate the velocity itself using\n * an exponentially-weighted moving average over a relatively short time scale\n * `velocityHalfLifeMilliseconds`, and then estimate a mean and variance of these velocity estimates\n * using an expeonentially-weighted moving average over a longer time scale.\n */\n\nconst VELOCITY_HALF_LIFE_MS = 50;\nconst MODEL_HALF_LIFE_MS = 1000;\n\nexport class VelocityEstimator {\n  private lastTime = Number.NEGATIVE_INFINITY;\n  rank = 0;\n\n  private numSamples = 0;\n\n  // Previous position sampled.\n  private prevPosition = new Float32Array();\n\n  // Moving average of raw velocity over `velocityHalfLifeMilliseconds`.\n  private velocity = new Float32Array();\n\n  // Moving average of `velocity` estimate using `modelHalfLifeMilliseconds`.\n  mean = new Float32Array();\n  // Moving variance of `velocity` estimate using `modelHalfLifeMilliseconds`.\n  variance = new Float32Array();\n\n  constructor(\n    public velocityHalfLifeMilliseconds: number = VELOCITY_HALF_LIFE_MS,\n    public modelHalfLifeMilliseconds: number = MODEL_HALF_LIFE_MS,\n  ) {}\n\n  reset(rank: number) {\n    this.lastTime = Number.NEGATIVE_INFINITY;\n    this.rank = rank;\n    this.numSamples = 0;\n    this.velocity = new Float32Array(rank);\n    this.prevPosition = new Float32Array(rank);\n    this.mean = new Float32Array(rank);\n    this.variance = new Float32Array(rank);\n  }\n\n  addSample(position: Float32Array, time = Date.now()) {\n    const rank = position.length;\n    if (rank !== this.rank) {\n      this.reset(rank);\n    }\n\n    const numSamples = this.numSamples;\n    ++this.numSamples;\n\n    // Update `velocity` estimate.\n    if (this.numSamples === 0) {\n      this.prevPosition.set(position);\n      this.lastTime = time;\n      return;\n    }\n\n    const deltaT = time - this.lastTime;\n    this.lastTime = time;\n    const velocityAlpha =\n      1 - 2 ** -(deltaT / this.velocityHalfLifeMilliseconds);\n    const modelAlpha = 1 - 2 ** -(deltaT / this.modelHalfLifeMilliseconds);\n    const { velocity, prevPosition, mean, variance } = this;\n    for (let i = 0; i < rank; ++i) {\n      const curVelocitySample =\n        (position[i] - prevPosition[i]) / Math.max(deltaT, 1);\n      prevPosition[i] = position[i];\n      const prevVelocity = velocity[i];\n      const newVelocity = (velocity[i] =\n        prevVelocity + velocityAlpha * (curVelocitySample - prevVelocity));\n      if (numSamples === 1) {\n        mean[i] = newVelocity;\n      } else {\n        const meanPrev = mean[i];\n        const varPrev = variance[i];\n        const delta = newVelocity - meanPrev;\n        mean[i] = meanPrev + modelAlpha * delta;\n        variance[i] = (1 - modelAlpha) * (varPrev + modelAlpha * delta * delta);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ChunkRequester } from \"#src/chunk_manager/backend.js\";\nimport {\n  ChunkPriorityTier,\n  PREFETCH_PRIORITY_MULTIPLIER,\n} from \"#src/chunk_manager/base.js\";\nimport type { SharedWatchableValue } from \"#src/shared_watchable_value.js\";\nimport type { RPC } from \"#src/worker_rpc.js\";\n\n/**\n * Mixin for adding a visibility shared property to a ChunkRequester.  Calls\n * `this.chunkManager.scheduleUpdateChunkPriorities()` when visibility changes.\n */\nexport function withSharedVisibility<\n  T extends { new (...args: any[]): ChunkRequester },\n>(Base: T) {\n  return class extends Base {\n    visibility: SharedWatchableValue<number>;\n\n    constructor(...args: any[]) {\n      super(...args);\n      const rpc: RPC = args[0];\n      const options: any = args[1];\n      this.visibility = rpc.get(options.visibility);\n      this.registerDisposer(\n        this.visibility.changed.add(() =>\n          this.chunkManager.scheduleUpdateChunkPriorities(),\n        ),\n      );\n    }\n  };\n}\n\n/**\n * Computes the ChunkPriorityTier for the given `visibility` value.\n *\n * A value of `Number.POSITIVE_INFINITY` means `VISIBLE`.  Any other value means `PREFETCH`.\n */\nexport function getPriorityTier(visibility: number): ChunkPriorityTier {\n  return visibility === Number.POSITIVE_INFINITY\n    ? ChunkPriorityTier.VISIBLE\n    : ChunkPriorityTier.PREFETCH;\n}\n\n/**\n * Computes the base priority for the given `visibility` value.  If the value is\n * `Number.POSTIVE_INFINITY`, corresponding to actual visibility, the base priority is 0.\n * Otherwise, the value is interpreted as the prefetch priority (higher means higher priority), and\n * the base priority is equal to the product of this value and `PREFETCH_PRIORITY_MULTIPLIER`.\n */\nexport function getBasePriority(visibility: number): number {\n  return visibility === Number.POSITIVE_INFINITY\n    ? 0\n    : visibility * PREFETCH_PRIORITY_MULTIPLIER;\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"#src/render_layer_backend.js\";\n\nimport type {\n  ChunkConstructor,\n  ChunkRenderLayerBackend,\n} from \"#src/chunk_manager/backend.js\";\nimport {\n  Chunk,\n  ChunkSource,\n  getNextMarkGeneration,\n  withChunkManager,\n} from \"#src/chunk_manager/backend.js\";\nimport { ChunkPriorityTier, ChunkState } from \"#src/chunk_manager/base.js\";\nimport type { SharedWatchableValue } from \"#src/shared_watchable_value.js\";\nimport type {\n  MultiscaleVolumetricDataRenderLayer,\n  SliceViewChunkSource as SliceViewChunkSourceInterface,\n  SliceViewChunkSpecification,\n  SliceViewRenderLayer as SliceViewRenderLayerInterface,\n  TransformedSource,\n} from \"#src/sliceview/base.js\";\nimport {\n  filterVisibleSources,\n  forEachPlaneIntersectingVolumetricChunk,\n  getNormalizedChunkLayout,\n  SLICEVIEW_ADD_VISIBLE_LAYER_RPC_ID,\n  SLICEVIEW_REMOVE_VISIBLE_LAYER_RPC_ID,\n  SLICEVIEW_RENDERLAYER_RPC_ID,\n  SLICEVIEW_REQUEST_CHUNK_RPC_ID,\n  SLICEVIEW_RPC_ID,\n  SliceViewBase,\n} from \"#src/sliceview/base.js\";\nimport { ChunkLayout } from \"#src/sliceview/chunk_layout.js\";\nimport type { WatchableValueInterface } from \"#src/trackable_value.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport { CANCELED } from \"#src/util/cancellation.js\";\nimport { erf } from \"#src/util/erf.js\";\nimport { vec3, vec3Key } from \"#src/util/geom.js\";\nimport { VelocityEstimator } from \"#src/util/velocity_estimation.js\";\nimport {\n  getBasePriority,\n  getPriorityTier,\n  withSharedVisibility,\n} from \"#src/visibility_priority/backend.js\";\nimport type { RPC, RPCPromise } from \"#src/worker_rpc.js\";\nimport {\n  registerPromiseRPC,\n  registerRPC,\n  registerSharedObject,\n  SharedObjectCounterpart,\n} from \"#src/worker_rpc.js\";\nimport type { DisplayDimensionRenderInfo } from \"src/navigation_state\";\n\nexport const BASE_PRIORITY = -1e12;\nexport const SCALE_PRIORITY_MULTIPLIER = 1e9;\n\n// Temporary values used by SliceView.updateVisibleChunk\nconst tempChunkPosition = vec3.create();\nconst tempCenter = vec3.create();\nconst tempChunkSize = vec3.create();\n\nclass SliceViewCounterpartBase extends SliceViewBase<\n  SliceViewChunkSourceBackend,\n  SliceViewRenderLayerBackend\n> {\n  constructor(rpc: RPC, options: any) {\n    super(rpc.get(options.projectionParameters));\n    this.initializeSharedObject(rpc, options.id);\n  }\n}\n\nfunction disposeTransformedSources(\n  allSources: TransformedSource<\n    SliceViewRenderLayerBackend,\n    SliceViewChunkSourceBackend\n  >[][],\n) {\n  for (const scales of allSources) {\n    for (const tsource of scales) {\n      tsource.source.dispose();\n    }\n  }\n}\n\nconst SliceViewIntermediateBase = withSharedVisibility(\n  withChunkManager(SliceViewCounterpartBase),\n);\n@registerSharedObject(SLICEVIEW_RPC_ID)\nexport class SliceViewBackend extends SliceViewIntermediateBase {\n  velocityEstimator = new VelocityEstimator();\n  constructor(rpc: RPC, options: any) {\n    super(rpc, options);\n    this.registerDisposer(\n      this.chunkManager.recomputeChunkPriorities.add(() => {\n        this.updateVisibleChunks();\n      }),\n    );\n    this.registerDisposer(\n      this.projectionParameters.changed.add(() => {\n        this.velocityEstimator.addSample(\n          this.projectionParameters.value.globalPosition,\n        );\n      }),\n    );\n  }\n\n  invalidateVisibleChunks() {\n    super.invalidateVisibleChunks();\n    this.chunkManager.scheduleUpdateChunkPriorities();\n  }\n\n  handleLayerChanged = () => {\n    this.chunkManager.scheduleUpdateChunkPriorities();\n  };\n\n  updateVisibleChunks() {\n    const projectionParameters = this.projectionParameters.value;\n    const chunkManager = this.chunkManager;\n    const visibility = this.visibility.value;\n    if (visibility === Number.NEGATIVE_INFINITY) {\n      return;\n    }\n    this.updateVisibleSources();\n    const { centerDataPosition } = projectionParameters;\n    const priorityTier = getPriorityTier(visibility);\n    let basePriority = getBasePriority(visibility);\n    basePriority += BASE_PRIORITY;\n\n    const localCenter = tempCenter;\n\n    const chunkSize = tempChunkSize;\n\n    const curVisibleChunks: SliceViewChunk[] = [];\n    this.velocityEstimator.addSample(\n      this.projectionParameters.value.globalPosition,\n    );\n    for (const [layer, visibleLayerSources] of this.visibleLayers) {\n      chunkManager.registerLayer(layer);\n      const { visibleSources } = visibleLayerSources;\n      for (\n        let i = 0, numVisibleSources = visibleSources.length;\n        i < numVisibleSources;\n        ++i\n      ) {\n        const tsource = visibleSources[i];\n        const prefetchOffsets = chunkManager.queueManager.enablePrefetch.value\n          ? getPrefetchChunkOffsets(this.velocityEstimator, tsource)\n          : [];\n        const { chunkLayout } = tsource;\n        chunkLayout.globalToLocalSpatial(localCenter, centerDataPosition);\n        const { size, finiteRank } = chunkLayout;\n        vec3.copy(chunkSize, size);\n        for (let i = finiteRank; i < 3; ++i) {\n          chunkSize[i] = 0;\n          localCenter[i] = 0;\n        }\n        const priorityIndex = i;\n        const sourceBasePriority =\n          basePriority + SCALE_PRIORITY_MULTIPLIER * priorityIndex;\n        curVisibleChunks.length = 0;\n        const curMarkGeneration = getNextMarkGeneration();\n        forEachPlaneIntersectingVolumetricChunk(\n          projectionParameters,\n          tsource.renderLayer.localPosition.value,\n          tsource,\n          getNormalizedChunkLayout(projectionParameters, tsource.chunkLayout),\n          (positionInChunks) => {\n            vec3.multiply(tempChunkPosition, positionInChunks, chunkSize);\n            const priority = -vec3.distance(localCenter, tempChunkPosition);\n            const { curPositionInChunks } = tsource;\n            const chunk = tsource.source.getChunk(curPositionInChunks);\n            chunkManager.requestChunk(\n              chunk,\n              priorityTier,\n              sourceBasePriority + priority,\n            );\n            ++layer.numVisibleChunksNeeded;\n            if (chunk.state === ChunkState.GPU_MEMORY) {\n              ++layer.numVisibleChunksAvailable;\n            }\n            curVisibleChunks.push(chunk);\n            // Mark visible chunks to avoid duplicate work when prefetching.  Once we hit a\n            // visible chunk, we don't continue prefetching in the same direction.\n            chunk.markGeneration = curMarkGeneration;\n          },\n        );\n        if (prefetchOffsets.length !== 0) {\n          const { curPositionInChunks } = tsource;\n          for (const visibleChunk of curVisibleChunks) {\n            curPositionInChunks.set(visibleChunk.chunkGridPosition);\n            for (let j = 0, length = prefetchOffsets.length; j < length; ) {\n              const chunkDim = prefetchOffsets[j];\n              const minChunk = prefetchOffsets[j + 2];\n              const maxChunk = prefetchOffsets[j + 3];\n              const newPriority = prefetchOffsets[j + 4];\n              const jumpOffset = prefetchOffsets[j + 5];\n              const oldIndex = curPositionInChunks[chunkDim];\n              const newIndex = oldIndex + prefetchOffsets[j + 1];\n              if (newIndex < minChunk || newIndex > maxChunk) {\n                j = jumpOffset;\n                continue;\n              }\n              curPositionInChunks[chunkDim] = newIndex;\n              const chunk = tsource.source.getChunk(curPositionInChunks);\n              curPositionInChunks[chunkDim] = oldIndex;\n              if (chunk.markGeneration === curMarkGeneration) {\n                j = jumpOffset;\n                continue;\n              }\n              chunkManager.requestChunk(\n                chunk,\n                ChunkPriorityTier.PREFETCH,\n                sourceBasePriority + newPriority,\n              );\n              ++layer.numPrefetchChunksNeeded;\n              if (chunk.state === ChunkState.GPU_MEMORY) {\n                ++layer.numPrefetchChunksAvailable;\n              }\n              j += PREFETCH_ENTRY_SIZE;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  removeVisibleLayer(layer: SliceViewRenderLayerBackend) {\n    const { visibleLayers } = this;\n    const layerInfo = visibleLayers.get(layer)!;\n    visibleLayers.delete(layer);\n    disposeTransformedSources(layerInfo.allSources);\n    layer.renderScaleTarget.changed.remove(this.invalidateVisibleSources);\n    layer.localPosition.changed.remove(this.handleLayerChanged);\n    this.invalidateVisibleSources();\n  }\n\n  addVisibleLayer(\n    layer: SliceViewRenderLayerBackend,\n    allSources: TransformedSource<\n      SliceViewRenderLayerBackend,\n      SliceViewChunkSourceBackend\n    >[][],\n    displayDimensionRenderInfo: DisplayDimensionRenderInfo,\n  ) {\n    let layerInfo = this.visibleLayers.get(layer);\n    if (layerInfo === undefined) {\n      layerInfo = {\n        allSources,\n        visibleSources: [],\n        displayDimensionRenderInfo: displayDimensionRenderInfo,\n      };\n      this.visibleLayers.set(layer, layerInfo);\n      layer.renderScaleTarget.changed.add(() =>\n        this.invalidateVisibleSources(),\n      );\n      layer.localPosition.changed.add(this.handleLayerChanged);\n    } else {\n      disposeTransformedSources(layerInfo.allSources);\n      layerInfo.allSources = allSources;\n      layerInfo.visibleSources.length = 0;\n      layerInfo.displayDimensionRenderInfo = displayDimensionRenderInfo;\n    }\n    this.invalidateVisibleSources();\n  }\n\n  disposed() {\n    for (const layer of this.visibleLayers.keys()) {\n      this.removeVisibleLayer(layer);\n    }\n    super.disposed();\n  }\n\n  invalidateVisibleSources() {\n    super.invalidateVisibleSources();\n    this.chunkManager.scheduleUpdateChunkPriorities();\n  }\n}\n\nexport function deserializeTransformedSources<\n  Source extends SliceViewChunkSourceBackend,\n  RLayer extends MultiscaleVolumetricDataRenderLayer,\n>(rpc: RPC, serializedSources: any[][], layer: any) {\n  const sources = serializedSources.map((scales) =>\n    scales.map((serializedSource): TransformedSource<RLayer, Source> => {\n      const source = rpc.getRef<Source>(serializedSource.source);\n      const chunkLayout = serializedSource.chunkLayout;\n      const { rank } = source.spec;\n      const tsource: TransformedSource<RLayer, Source> = {\n        renderLayer: layer,\n        source,\n        chunkLayout: ChunkLayout.fromObject(chunkLayout),\n        layerRank: serializedSource.layerRank,\n        nonDisplayLowerClipBound: serializedSource.nonDisplayLowerClipBound,\n        nonDisplayUpperClipBound: serializedSource.nonDisplayUpperClipBound,\n        lowerClipBound: serializedSource.lowerClipBound,\n        upperClipBound: serializedSource.upperClipBound,\n        lowerClipDisplayBound: serializedSource.lowerClipDisplayBound,\n        upperClipDisplayBound: serializedSource.upperClipDisplayBound,\n        lowerChunkDisplayBound: serializedSource.lowerChunkDisplayBound,\n        upperChunkDisplayBound: serializedSource.upperChunkDisplayBound,\n        effectiveVoxelSize: serializedSource.effectiveVoxelSize,\n        chunkDisplayDimensionIndices:\n          serializedSource.chunkDisplayDimensionIndices,\n        fixedLayerToChunkTransform: serializedSource.fixedLayerToChunkTransform,\n        combinedGlobalLocalToChunkTransform:\n          serializedSource.combinedGlobalLocalToChunkTransform,\n        curPositionInChunks: new Float32Array(rank),\n        fixedPositionWithinChunk: new Uint32Array(rank),\n      };\n      return tsource;\n    }),\n  );\n  return sources;\n}\nregisterRPC(SLICEVIEW_ADD_VISIBLE_LAYER_RPC_ID, function (x) {\n  const obj = <SliceViewBackend>this.get(x.id);\n  const layer = <SliceViewRenderLayerBackend>this.get(x.layerId);\n  const sources = deserializeTransformedSources<\n    SliceViewChunkSourceBackend,\n    SliceViewRenderLayerBackend\n  >(this, x.sources, layer);\n  obj.addVisibleLayer(layer, sources, x.displayDimensionRenderInfo);\n});\nregisterRPC(SLICEVIEW_REMOVE_VISIBLE_LAYER_RPC_ID, function (x) {\n  const obj = <SliceViewBackend>this.get(x.id);\n  const layer = <SliceViewRenderLayerBackend>this.get(x.layerId);\n  obj.removeVisibleLayer(layer);\n});\n\nexport class SliceViewChunk extends Chunk {\n  chunkGridPosition: Float32Array;\n  source: SliceViewChunkSourceBackend | null = null;\n\n  initializeVolumeChunk(key: string, chunkGridPosition: Float32Array) {\n    super.initialize(key);\n    this.chunkGridPosition = Float32Array.from(chunkGridPosition);\n  }\n\n  serialize(msg: any, transfers: any[]) {\n    super.serialize(msg, transfers);\n    msg.chunkGridPosition = this.chunkGridPosition;\n  }\n\n  downloadSucceeded() {\n    super.downloadSucceeded();\n  }\n\n  freeSystemMemory() {}\n\n  toString() {\n    return this.source!.toString() + \":\" + vec3Key(this.chunkGridPosition);\n  }\n}\n\nexport interface SliceViewChunkSourceBackend<\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  Spec extends SliceViewChunkSpecification = SliceViewChunkSpecification,\n  ChunkType extends SliceViewChunk = SliceViewChunk,\n> {\n  // TODO(jbms): Move this declaration to the class definition below and declare abstract once\n  // TypeScript supports mixins with abstact classes.\n  getChunk(chunkGridPosition: vec3): ChunkType;\n\n  chunkConstructor: ChunkConstructor<SliceViewChunk>;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nexport class SliceViewChunkSourceBackend<\n    Spec extends SliceViewChunkSpecification = SliceViewChunkSpecification,\n    ChunkType extends SliceViewChunk = SliceViewChunk,\n  >\n  extends ChunkSource\n  implements SliceViewChunkSourceInterface\n{\n  spec: Spec;\n  chunks: Map<string, ChunkType>;\n  constructor(rpc: RPC, options: any) {\n    super(rpc, options);\n    this.spec = options.spec;\n  }\n\n  getChunk(chunkGridPosition: Float32Array) {\n    const key = chunkGridPosition.join();\n    let chunk = this.chunks.get(key);\n    if (chunk === undefined) {\n      chunk = this.getNewChunk_(this.chunkConstructor) as ChunkType;\n      chunk.initializeVolumeChunk(key, chunkGridPosition);\n      this.addChunk(chunk);\n    }\n    return chunk;\n  }\n}\n\n@registerSharedObject(SLICEVIEW_RENDERLAYER_RPC_ID)\nexport class SliceViewRenderLayerBackend\n  extends SharedObjectCounterpart\n  implements SliceViewRenderLayerInterface, ChunkRenderLayerBackend\n{\n  rpcId: number;\n  renderScaleTarget: SharedWatchableValue<number>;\n  localPosition: WatchableValueInterface<Float32Array>;\n\n  numVisibleChunksNeeded: number;\n  numVisibleChunksAvailable: number;\n  numPrefetchChunksNeeded: number;\n  numPrefetchChunksAvailable: number;\n  chunkManagerGeneration: number;\n\n  constructor(rpc: RPC, options: any) {\n    super(rpc, options);\n    this.renderScaleTarget = rpc.get(options.renderScaleTarget);\n    this.localPosition = rpc.get(options.localPosition);\n    this.numVisibleChunksNeeded = 0;\n    this.numVisibleChunksAvailable = 0;\n    this.numPrefetchChunksAvailable = 0;\n    this.numPrefetchChunksNeeded = 0;\n    this.chunkManagerGeneration = -1;\n  }\n\n  filterVisibleSources(\n    sliceView: SliceViewBase,\n    sources: readonly TransformedSource[],\n  ): Iterable<TransformedSource> {\n    return filterVisibleSources(sliceView, this, sources);\n  }\n}\n\nconst PREFETCH_MS = 2000;\nconst MAX_PREFETCH_VELOCITY = 0.1; // voxels per millisecond\nconst MAX_SINGLE_DIRECTION_PREFETCH_CHUNKS = 32; // Maximum number of chunks to prefetch in a single direction.\n\n// If the probability under the model of needing a chunk within `PREFETCH_MS` is less than this\n// probability, skip prefetching it.\nconst PREFETCH_PROBABILITY_CUTOFF = 0.05;\n\nconst PREFETCH_ENTRY_SIZE = 6;\n\nfunction getPrefetchChunkOffsets(\n  velocityEstimator: VelocityEstimator,\n  tsource: TransformedSource,\n): number[] {\n  const offsets: number[] = [];\n  const globalRank = velocityEstimator.rank;\n  const { combinedGlobalLocalToChunkTransform, layerRank } = tsource;\n\n  const { rank: chunkRank, chunkDataSize } = tsource.source.spec;\n  const { mean: meanVec, variance: varianceVec } = velocityEstimator;\n  for (let chunkDim = 0; chunkDim < chunkRank; ++chunkDim) {\n    const isDisplayDimension =\n      tsource.chunkDisplayDimensionIndices.includes(chunkDim);\n    let mean = 0;\n    let variance = 0;\n    for (let globalDim = 0; globalDim < globalRank; ++globalDim) {\n      const meanValue = meanVec[globalDim];\n      const varianceValue = varianceVec[globalDim];\n      const coeff =\n        combinedGlobalLocalToChunkTransform[globalDim * layerRank + chunkDim];\n      mean += coeff * meanValue;\n      variance += coeff * coeff * varianceValue;\n    }\n    if (mean > MAX_PREFETCH_VELOCITY) {\n      continue;\n    }\n    const chunkSize = chunkDataSize[chunkDim];\n    const initialFraction = isDisplayDimension\n      ? 0\n      : tsource.fixedPositionWithinChunk[chunkDim] / chunkSize;\n    const adjustedMean = (mean / chunkSize) * PREFETCH_MS;\n    let adjustedStddevTimesSqrt2 =\n      (Math.sqrt(2 * variance) / chunkSize) * PREFETCH_MS;\n    if (Math.abs(adjustedMean) < 1e-3 && adjustedStddevTimesSqrt2 < 1e-3) {\n      continue;\n    }\n    adjustedStddevTimesSqrt2 = Math.max(1e-6, adjustedStddevTimesSqrt2);\n    const cdf = (x: number) =>\n      0.5 * (1 + erf((x - adjustedMean) / adjustedStddevTimesSqrt2));\n\n    const curChunk = tsource.curPositionInChunks[chunkDim];\n    const minChunk = Math.floor(tsource.lowerClipBound[chunkDim] / chunkSize);\n    const maxChunk =\n      Math.ceil(tsource.upperClipBound[chunkDim] / chunkSize) - 1;\n    let groupStart = offsets.length;\n    for (let i = 1; i <= MAX_SINGLE_DIRECTION_PREFETCH_CHUNKS; ++i) {\n      if (!isDisplayDimension && curChunk + i > maxChunk) break;\n      const probability = 1 - cdf(i - initialFraction);\n      // Probability that chunk `curChunk + i` will be needed within `PREFETCH_MS`.\n      if (probability < PREFETCH_PROBABILITY_CUTOFF) break;\n      offsets.push(chunkDim, i, minChunk, maxChunk, probability, 0);\n    }\n    let newGroupStart = offsets.length;\n    for (\n      let i = groupStart, end = offsets.length;\n      i < end;\n      i += PREFETCH_ENTRY_SIZE\n    ) {\n      offsets[i + PREFETCH_ENTRY_SIZE - 1] = newGroupStart;\n    }\n    groupStart = newGroupStart;\n\n    for (let i = 1; i <= MAX_SINGLE_DIRECTION_PREFETCH_CHUNKS; ++i) {\n      if (!isDisplayDimension && curChunk - i < minChunk) break;\n      const probability = cdf(-i + 1 - initialFraction);\n      // Probability that chunk `curChunk - i` will be needed within `PREFETCH_MS`.\n      if (probability < PREFETCH_PROBABILITY_CUTOFF) break;\n      offsets.push(chunkDim, -i, minChunk, maxChunk, probability, 0);\n    }\n    newGroupStart = offsets.length;\n    for (\n      let i = groupStart, end = offsets.length;\n      i < end;\n      i += PREFETCH_ENTRY_SIZE\n    ) {\n      offsets[i + PREFETCH_ENTRY_SIZE - 1] = newGroupStart;\n    }\n  }\n  return offsets;\n}\n\nregisterPromiseRPC(\n  SLICEVIEW_REQUEST_CHUNK_RPC_ID,\n  async function (\n    x: { this: RPC; source: number; chunkGridPosition: Float32Array },\n    cancellationToken: CancellationToken,\n  ): RPCPromise<void> {\n    const source = this.get(x.source) as SliceViewChunkSourceBackend;\n    const { chunkManager } = source;\n    const chunk = source.getChunk(x.chunkGridPosition);\n    const key = chunk.key!;\n    if (chunk.state <= ChunkState.SYSTEM_MEMORY) {\n      // Already available on frontend.\n      return { value: undefined };\n    }\n    const disposeRecompute = chunkManager.recomputeChunkPriorities.add(() => {\n      chunkManager.requestChunk(\n        chunk,\n        ChunkPriorityTier.VISIBLE,\n        Number.POSITIVE_INFINITY,\n        ChunkState.SYSTEM_MEMORY,\n      );\n    });\n    chunkManager.scheduleUpdateChunkPriorities();\n    let listener: (chunk: Chunk) => void;\n    const promise = new Promise<void>((resolve, reject) => {\n      listener = (chunk) => {\n        if (chunk.state === ChunkState.FAILED) {\n          reject(chunk.error);\n          return;\n        }\n        if (chunk.state <= ChunkState.SYSTEM_MEMORY) {\n          resolve();\n        }\n      };\n    });\n    source.registerChunkListener(key, listener!);\n    const cancelPromise = new Promise((_resolve, reject) => {\n      cancellationToken.add(() => {\n        reject(CANCELED);\n      });\n    });\n    try {\n      await Promise.race([promise, cancelPromise]);\n      return { value: undefined };\n    } finally {\n      source.unregisterChunkListener(key, listener!);\n      disposeRecompute();\n      chunkManager.scheduleUpdateChunkPriorities();\n    }\n  },\n);\n","/**\n * @license\n * Copyright 2018 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Backend component of PerspectivePanel.  This allows the optional backend component of a\n * PerspectiveViewRenderLayer to set chunk priorities based on the state of the perspective panel.\n */\n\nimport { PERSPECTIVE_VIEW_RPC_ID } from \"#src/perspective_view/base.js\";\nimport type { ProjectionParameters } from \"#src/projection_parameters.js\";\nimport type { RenderedViewBackend } from \"#src/render_layer_backend.js\";\nimport { RenderLayerBackend } from \"#src/render_layer_backend.js\";\nimport type { SharedWatchableValue } from \"#src/shared_watchable_value.js\";\nimport type { RPC } from \"#src/worker_rpc.js\";\nimport {\n  registerSharedObject,\n  SharedObjectCounterpart,\n} from \"#src/worker_rpc.js\";\n\n@registerSharedObject(PERSPECTIVE_VIEW_RPC_ID)\nexport class PerspectiveViewBackend\n  extends SharedObjectCounterpart\n  implements RenderedViewBackend\n{\n  visibility: SharedWatchableValue<number>;\n  projectionParameters: SharedWatchableValue<ProjectionParameters>;\n  constructor(...args: any[]) {\n    super(...args);\n    const rpc: RPC = args[0];\n    const options: any = args[1];\n    this.visibility = rpc.get(options.visibility);\n    this.projectionParameters = rpc.get(options.projectionParameters);\n  }\n}\nexport class PerspectiveViewRenderLayerBackend<\n  AttachmentState = unknown,\n> extends RenderLayerBackend<PerspectiveViewBackend, AttachmentState> {}\n","/**\n * @license\n * Copyright 2020 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ProjectionParameters } from \"#src/projection_parameters.js\";\nimport type {\n  MultiscaleVolumetricDataRenderLayer,\n  TransformedSource,\n} from \"#src/sliceview/base.js\";\nimport { forEachVisibleVolumetricChunk } from \"#src/sliceview/base.js\";\nimport type { VolumeChunkSource } from \"#src/sliceview/volume/base.js\";\nimport type { vec3 } from \"#src/util/geom.js\";\nimport {\n  getViewFrustrumDepthRange,\n  mat3,\n  mat3FromMat4,\n  prod3,\n} from \"#src/util/geom.js\";\n\nexport const VOLUME_RENDERING_RENDER_LAYER_RPC_ID =\n  \"volume_rendering/VolumeRenderingRenderLayer\";\nexport const VOLUME_RENDERING_RENDER_LAYER_UPDATE_SOURCES_RPC_ID =\n  \"volume_rendering/VolumeRenderingRenderLayer/update\";\n\nconst DEBUG_CHUNK_LEVEL = false;\n\nconst tempMat3 = mat3.create();\n// const tempMat4 = mat4.create();\n// const tempVisibleVolumetricClippingPlanes = new Float32Array(24);\n\nexport interface HistogramInformation {\n  spatialScales: Map<number, number>;\n  activeIndex: number;\n}\n\nexport function getVolumeRenderingNearFarBounds(\n  clippingPlanes: Float32Array,\n  displayLowerBound: Float32Array,\n  displayUpperBound: Float32Array,\n) {\n  let volumeMinZ = 0;\n  let volumeMaxZ = 0;\n  for (let i = 0; i < 3; ++i) {\n    const planeCoeff = clippingPlanes[16 + i];\n    const a = planeCoeff * displayLowerBound[i];\n    const b = planeCoeff * displayUpperBound[i];\n    volumeMinZ += Math.min(a, b);\n    volumeMaxZ += Math.max(a, b);\n  }\n  const near = -clippingPlanes[19];\n  const adjustedNear = Math.max(near, volumeMinZ);\n  const far = clippingPlanes[23];\n  const adjustedFar = Math.min(far, volumeMaxZ);\n  return { near, far, adjustedNear, adjustedFar };\n}\n\n// Returns target volume in \"world\" space.\n// function getTargetVolume(\n//     tsource: TransformedSource<MultiscaleVolumetricDataRenderLayer>,\n//     projectionParameters: ProjectionParameters) {\n//   const modelViewProjection = mat4.multiply(\n//       tempMat4, projectionParameters.viewProjectionMat, tsource.chunkLayout.transform);\n//   const clippingPlanes = tempVisibleVolumetricClippingPlanes;\n//   getFrustrumPlanes(clippingPlanes, modelViewProjection);\n//   const {near, far} = getVolumeRenderingNearFarBounds(\n//       clippingPlanes, tsource.lowerClipDisplayBound, tsource.upperClipDisplayBound);\n//   if (near === far) return -1;\n//   const depthRange = (far - near);\n//   const targetSpacing = depthRange / volumeRenderingDepthSamples;\n//   const targetVolume = targetSpacing ** 3;\n//   return targetVolume * tsource.chunkLayout.detTransform;\n// }\n\nexport function forEachVisibleVolumeRenderingChunk<\n  RLayer extends MultiscaleVolumetricDataRenderLayer,\n  Source extends VolumeChunkSource,\n  Transformed extends TransformedSource<RLayer, Source>,\n>(\n  projectionParameters: ProjectionParameters,\n  localPosition: Float32Array,\n  volumeRenderingDepthSamples: number,\n  transformedSources: readonly Transformed[],\n  beginScale: (\n    source: Transformed,\n    index: number,\n    physicalSpacing: number,\n    optimalSamples: number,\n    clippingPlanes: Float32Array,\n    histogramInformation: HistogramInformation,\n  ) => void,\n  callback: (\n    source: Transformed,\n    index: number,\n    positionInChunks: vec3,\n  ) => void,\n) {\n  if (transformedSources.length === 0) return;\n  const { viewMatrix, projectionMat, displayDimensionRenderInfo } =\n    projectionParameters;\n  const { voxelPhysicalScales } = displayDimensionRenderInfo;\n  const canonicalToPhysicalScale = prod3(voxelPhysicalScales);\n\n  const depthRange = getViewFrustrumDepthRange(projectionMat);\n  // Target voxel spacing in view space\n  const targetViewSpacing = depthRange / volumeRenderingDepthSamples;\n  // Target voxel volume in view space.\n  const targetViewVolume = targetViewSpacing ** 3;\n  const viewDet = mat3.determinant(mat3FromMat4(tempMat3, viewMatrix));\n\n  // Target voxel volume in view space.\n  // const targetViewVolume = getTargetVolume(transformedSources[0], projectionParameters)\n  // *physicalSpacing viewDet;\n\n  const histogramInformation: HistogramInformation = {\n    spatialScales: new Map(),\n    activeIndex: -1,\n  };\n\n  // Returns volume of a single voxel of source `scaleIndex` in \"view\" space.\n  const getViewVolume = (scaleIndex: number) => {\n    const tsource = transformedSources[scaleIndex];\n    return Math.abs(tsource.chunkLayout.detTransform * viewDet);\n  };\n  // Index of high resolution source with voxel volume greater than `targetViewVolume`.\n  // This allows to find the highest resolution source that is not greatly under-sampled.\n  let bestScaleIndex = transformedSources.length - 1;\n  // Voxel volume in \"view\" space of source `bestScaleIndex`.\n  let bestViewVolume = getViewVolume(bestScaleIndex);\n  for (let scaleIndex = bestScaleIndex; scaleIndex >= 0; --scaleIndex) {\n    const viewVolume = getViewVolume(scaleIndex);\n    const physicalSpacing = Math.cbrt(\n      (viewVolume * canonicalToPhysicalScale) / viewDet,\n    );\n    const optimalSamples = depthRange / Math.cbrt(viewVolume);\n    histogramInformation.spatialScales.set(physicalSpacing, optimalSamples);\n    if (viewVolume - targetViewVolume >= 0) {\n      bestViewVolume = viewVolume;\n      bestScaleIndex = scaleIndex;\n    }\n    histogramInformation.activeIndex = bestScaleIndex;\n  }\n\n  if (DEBUG_CHUNK_LEVEL) {\n    console.log(transformedSources);\n    for (\n      let scaleIndex = 0;\n      scaleIndex < transformedSources.length;\n      ++scaleIndex\n    ) {\n      const viewVolume = getViewVolume(scaleIndex);\n      const desiredSamples = depthRange / Math.cbrt(viewVolume);\n      console.log(\n        `scaleIndex=${scaleIndex} viewVolume=${viewVolume} bestScaleIndex=${bestScaleIndex} actualViewVolume=${targetViewVolume}, desiredSamples=${desiredSamples}, difference=${\n          viewVolume - targetViewVolume\n        }`,\n      );\n    }\n  }\n\n  const physicalSpacing = Math.cbrt(\n    (bestViewVolume * canonicalToPhysicalScale) / viewDet,\n  );\n  const optimalSamples = depthRange / Math.cbrt(bestViewVolume);\n  let firstChunk = true;\n  const tsource = transformedSources[bestScaleIndex];\n  forEachVisibleVolumetricChunk(\n    projectionParameters,\n    localPosition,\n    tsource,\n    (positionInChunks, clippingPlanes) => {\n      if (firstChunk) {\n        beginScale(\n          tsource,\n          bestScaleIndex,\n          physicalSpacing,\n          optimalSamples,\n          clippingPlanes,\n          histogramInformation,\n        );\n        firstChunk = false;\n      }\n      callback(tsource, bestScaleIndex, positionInChunks);\n    },\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { withChunkManager } from \"#src/chunk_manager/backend.js\";\nimport { ChunkState } from \"#src/chunk_manager/base.js\";\nimport {\n  type DisplayDimensionRenderInfo,\n  validateDisplayDimensionRenderInfoProperty,\n} from \"#src/navigation_state.js\";\nimport type {\n  RenderedViewBackend,\n  RenderLayerBackendAttachment,\n} from \"#src/render_layer_backend.js\";\nimport { RenderLayerBackend } from \"#src/render_layer_backend.js\";\nimport type { SharedWatchableValue } from \"#src/shared_watchable_value.js\";\nimport {\n  BASE_PRIORITY,\n  deserializeTransformedSources,\n  SCALE_PRIORITY_MULTIPLIER,\n} from \"#src/sliceview/backend.js\";\nimport type { TransformedSource } from \"#src/sliceview/base.js\";\nimport type { VolumeChunkSource } from \"#src/sliceview/volume/backend.js\";\nimport { vec3 } from \"#src/util/geom.js\";\nimport {\n  getBasePriority,\n  getPriorityTier,\n} from \"#src/visibility_priority/backend.js\";\nimport {\n  forEachVisibleVolumeRenderingChunk,\n  VOLUME_RENDERING_RENDER_LAYER_RPC_ID,\n  VOLUME_RENDERING_RENDER_LAYER_UPDATE_SOURCES_RPC_ID,\n} from \"#src/volume_rendering/base.js\";\nimport type { RPC } from \"#src/worker_rpc.js\";\nimport { registerRPC, registerSharedObject } from \"#src/worker_rpc.js\";\n\ninterface VolumeRenderingRenderLayerAttachmentState {\n  displayDimensionRenderInfo: DisplayDimensionRenderInfo;\n  transformedSources: TransformedSource<\n    VolumeRenderingRenderLayerBackend,\n    VolumeChunkSource\n  >[][];\n}\n\nconst tempChunkPosition = vec3.create();\nconst tempCenter = vec3.create();\nconst tempChunkSize = vec3.create();\nconst tempCenterDataPosition = vec3.create();\n\n@registerSharedObject(VOLUME_RENDERING_RENDER_LAYER_RPC_ID)\nclass VolumeRenderingRenderLayerBackend extends withChunkManager(\n  RenderLayerBackend,\n) {\n  localPosition: SharedWatchableValue<Float32Array>;\n  // The render scale target for volume rendering is the number of depth samples\n  renderScaleTarget: SharedWatchableValue<number>;\n\n  constructor(rpc: RPC, options: any) {\n    super(rpc, options);\n    this.renderScaleTarget = rpc.get(options.renderScaleTarget);\n    this.localPosition = rpc.get(options.localPosition);\n    const scheduleUpdateChunkPriorities = () =>\n      this.chunkManager.scheduleUpdateChunkPriorities();\n    this.registerDisposer(\n      this.localPosition.changed.add(scheduleUpdateChunkPriorities),\n    );\n    this.registerDisposer(\n      this.renderScaleTarget.changed.add(scheduleUpdateChunkPriorities),\n    );\n    this.registerDisposer(\n      this.chunkManager.recomputeChunkPriorities.add(() =>\n        this.recomputeChunkPriorities(),\n      ),\n    );\n  }\n\n  attach(\n    attachment: RenderLayerBackendAttachment<\n      RenderedViewBackend,\n      VolumeRenderingRenderLayerAttachmentState\n    >,\n  ) {\n    const scheduleUpdateChunkPriorities = () =>\n      this.chunkManager.scheduleUpdateChunkPriorities();\n    const { view } = attachment;\n    attachment.registerDisposer(scheduleUpdateChunkPriorities);\n    attachment.registerDisposer(\n      view.projectionParameters.changed.add(scheduleUpdateChunkPriorities),\n    );\n    attachment.registerDisposer(\n      view.visibility.changed.add(scheduleUpdateChunkPriorities),\n    );\n    attachment.state = {\n      displayDimensionRenderInfo:\n        view.projectionParameters.value.displayDimensionRenderInfo,\n      transformedSources: [],\n    };\n  }\n\n  private recomputeChunkPriorities() {\n    for (const attachment of this.attachments.values()) {\n      const { view } = attachment;\n      const visibility = view.visibility.value;\n      if (visibility === Number.NEGATIVE_INFINITY) {\n        continue;\n      }\n      const state =\n        attachment.state as VolumeRenderingRenderLayerAttachmentState;\n      const { transformedSources } = state;\n\n      if (\n        transformedSources.length === 0 ||\n        !validateDisplayDimensionRenderInfoProperty(\n          state,\n          view.projectionParameters.value.displayDimensionRenderInfo,\n        )\n      ) {\n        continue;\n      }\n\n      const projectionParameters = view.projectionParameters.value;\n      const priorityTier = getPriorityTier(visibility);\n      let basePriority = getBasePriority(visibility);\n      basePriority += BASE_PRIORITY;\n      const localCenter = tempCenter;\n      const chunkSize = tempChunkSize;\n      const centerDataPosition = tempCenterDataPosition;\n      const {\n        globalPosition,\n        displayDimensionRenderInfo: { displayDimensionIndices },\n      } = projectionParameters;\n      for (let displayDim = 0; displayDim < 3; ++displayDim) {\n        const globalDim = displayDimensionIndices[displayDim];\n        centerDataPosition[displayDim] =\n          globalDim === -1 ? 0 : globalPosition[globalDim];\n      }\n      let sourceBasePriority: number;\n      const { chunkManager } = this;\n      chunkManager.registerLayer(this);\n      forEachVisibleVolumeRenderingChunk(\n        projectionParameters,\n        this.localPosition.value,\n        this.renderScaleTarget.value,\n        transformedSources[0],\n        (tsource, scaleIndex) => {\n          const { chunkLayout } = tsource;\n          chunkLayout.globalToLocalSpatial(localCenter, centerDataPosition);\n          const { size, finiteRank } = chunkLayout;\n          vec3.copy(chunkSize, size);\n          for (let i = finiteRank; i < 3; ++i) {\n            chunkSize[i] = 0;\n            localCenter[i] = 0;\n          }\n          const priorityIndex = transformedSources[0].length - 1 - scaleIndex;\n          sourceBasePriority =\n            basePriority + SCALE_PRIORITY_MULTIPLIER * priorityIndex;\n        },\n        (tsource, _, positionInChunks) => {\n          vec3.multiply(tempChunkPosition, positionInChunks, chunkSize);\n          const priority = -vec3.distance(localCenter, tempChunkPosition);\n          const chunk = tsource.source.getChunk(tsource.curPositionInChunks);\n          ++this.numVisibleChunksNeeded;\n          chunkManager.requestChunk(\n            chunk,\n            priorityTier,\n            sourceBasePriority + priority,\n          );\n          if (chunk.state === ChunkState.GPU_MEMORY) {\n            ++this.numVisibleChunksAvailable;\n          }\n        },\n      );\n    }\n  }\n}\nVolumeRenderingRenderLayerBackend;\n\nregisterRPC(VOLUME_RENDERING_RENDER_LAYER_UPDATE_SOURCES_RPC_ID, function (x) {\n  const view = this.get(x.view) as RenderedViewBackend;\n  const layer = this.get(x.layer) as VolumeRenderingRenderLayerBackend;\n  const attachment = layer.attachments.get(\n    view,\n  )! as RenderLayerBackendAttachment<\n    RenderedViewBackend,\n    VolumeRenderingRenderLayerAttachmentState\n  >;\n  attachment.state!.transformedSources = deserializeTransformedSources<\n    VolumeChunkSource,\n    VolumeRenderingRenderLayerBackend\n  >(this, x.sources, layer);\n  attachment.state!.displayDimensionRenderInfo = x.displayDimensionRenderInfo;\n  layer.chunkManager.scheduleUpdateChunkPriorities();\n});\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ProjectionParameters } from \"#src/projection_parameters.js\";\nimport type {\n  MultiscaleVolumetricDataRenderLayer,\n  SliceViewChunkSource,\n  SliceViewChunkSpecification,\n  TransformedSource,\n} from \"#src/sliceview/base.js\";\nimport { forEachVisibleVolumetricChunk } from \"#src/sliceview/base.js\";\nimport {\n  getViewFrustrumVolume,\n  mat3,\n  mat3FromMat4,\n  prod3,\n} from \"#src/util/geom.js\";\n\nexport const ANNOTATION_METADATA_CHUNK_SOURCE_RPC_ID =\n  \"annotation.MetadataChunkSource\";\nexport const ANNOTATION_GEOMETRY_CHUNK_SOURCE_RPC_ID =\n  \"annotation.GeometryChunkSource\";\nexport const ANNOTATION_SUBSET_GEOMETRY_CHUNK_SOURCE_RPC_ID =\n  \"annotation.SubsetGeometryChunkSource\";\nexport const ANNOTATION_REFERENCE_ADD_RPC_ID = \"annotation.reference.add\";\nexport const ANNOTATION_REFERENCE_DELETE_RPC_ID = \"annotation.reference.delete\";\nexport const ANNOTATION_COMMIT_UPDATE_RPC_ID = \"annotation.commit\";\nexport const ANNOTATION_COMMIT_UPDATE_RESULT_RPC_ID = \"annotation.commit\";\n\nexport interface AnnotationGeometryChunkSpecification\n  extends SliceViewChunkSpecification {\n  /**\n   * Must equal the `chunkToMultiscaleTransform` in the `SliceViewSingleResolutionSource`.\n   */\n  chunkToMultiscaleTransform: Float32Array;\n\n  /**\n   * Specifies the maximum density of annotations provided by this chunk source, as `limit` per the\n   * chunk volume.  The higher the value, the sooner chunks from this source will be subsampled.  To\n   * disable subsampling completely, set `limit` to 0.\n   */\n  limit: number;\n}\n\nexport const ANNOTATION_SPATIALLY_INDEXED_RENDER_LAYER_RPC_ID =\n  \"annotation/SpatiallyIndexedRenderLayer\";\nexport const ANNOTATION_PERSPECTIVE_RENDER_LAYER_UPDATE_SOURCES_RPC_ID =\n  \"annotation/PerspectiveRenderLayer:updateSources\";\nexport const ANNOTATION_RENDER_LAYER_RPC_ID = \"annotation/RenderLayer\";\nexport const ANNOTATION_RENDER_LAYER_UPDATE_SEGMENTATION_RPC_ID =\n  \"annotation/RenderLayer.updateSegmentation\";\n\nconst tempMat3 = mat3.create();\n\nexport function forEachVisibleAnnotationChunk<\n  RLayer extends MultiscaleVolumetricDataRenderLayer,\n  Source extends SliceViewChunkSource<AnnotationGeometryChunkSpecification>,\n  Transformed extends TransformedSource<RLayer, Source>,\n>(\n  projectionParameters: ProjectionParameters,\n  localPosition: Float32Array,\n  renderScaleTarget: number,\n  transformedSources: readonly Transformed[],\n  beginScale: (source: Transformed, index: number) => void,\n  callback: (\n    source: Transformed,\n    index: number,\n    drawFraction: number,\n    physicalSpacing: number,\n    pixelSpacing: number,\n  ) => void,\n) {\n  const {\n    displayDimensionRenderInfo,\n    viewMatrix,\n    projectionMat,\n    width,\n    height,\n  } = projectionParameters;\n  const { voxelPhysicalScales } = displayDimensionRenderInfo;\n  const viewDet = Math.abs(\n    mat3.determinant(mat3FromMat4(tempMat3, viewMatrix)),\n  );\n  const canonicalToPhysicalScale = prod3(voxelPhysicalScales);\n  const viewFrustrumVolume =\n    (getViewFrustrumVolume(projectionMat) / viewDet) * canonicalToPhysicalScale;\n\n  if (transformedSources.length === 0) return;\n  const baseSource = transformedSources[0];\n  let sourceVolume =\n    Math.abs(baseSource.chunkLayout.detTransform) * canonicalToPhysicalScale;\n  const { lowerClipDisplayBound, upperClipDisplayBound } = baseSource;\n  for (let i = 0; i < 3; ++i) {\n    sourceVolume *= upperClipDisplayBound[i] - lowerClipDisplayBound[i];\n  }\n\n  const effectiveVolume = Math.min(sourceVolume, viewFrustrumVolume);\n  const viewportArea = width * height;\n  const targetNumAnnotations = viewportArea / renderScaleTarget ** 2;\n  const physicalDensityTarget = targetNumAnnotations / effectiveVolume;\n\n  // Target density in annotations per physical volume.\n  let totalPhysicalDensity = 0;\n  for (\n    let scaleIndex = transformedSources.length - 1;\n    scaleIndex >= 0 && totalPhysicalDensity < physicalDensityTarget;\n    --scaleIndex\n  ) {\n    const transformedSource = transformedSources[scaleIndex];\n    const spec = transformedSource.source\n      .spec as AnnotationGeometryChunkSpecification;\n    const { chunkLayout } = transformedSource;\n    const physicalVolume =\n      prod3(chunkLayout.size) *\n      Math.abs(chunkLayout.detTransform) *\n      canonicalToPhysicalScale;\n    const { limit, rank } = spec;\n    const { nonDisplayLowerClipBound, nonDisplayUpperClipBound } =\n      transformedSource;\n    let sliceFraction = 1;\n    for (let i = 0; i < rank; ++i) {\n      const b = nonDisplayUpperClipBound[i] - nonDisplayLowerClipBound[i];\n      if (Number.isFinite(b)) sliceFraction /= b;\n    }\n    const physicalDensity = (limit * sliceFraction) / physicalVolume;\n\n    let firstChunk = true;\n    const newTotalPhysicalDensity = totalPhysicalDensity + physicalDensity;\n    const totalPhysicalSpacing = (1 / newTotalPhysicalDensity) ** (1 / 3);\n    const totalPixelSpacing = Math.sqrt(\n      viewportArea / (newTotalPhysicalDensity * effectiveVolume),\n    );\n    const desiredCount =\n      ((physicalDensityTarget - totalPhysicalDensity) * physicalVolume) /\n      sliceFraction;\n    const drawFraction = Math.min(1, desiredCount / spec.limit);\n    forEachVisibleVolumetricChunk(\n      projectionParameters,\n      localPosition,\n      transformedSource,\n      () => {\n        if (firstChunk) {\n          beginScale(transformedSource, scaleIndex);\n          firstChunk = false;\n        }\n        callback(\n          transformedSource,\n          scaleIndex,\n          drawFraction,\n          totalPhysicalSpacing,\n          totalPixelSpacing,\n        );\n      },\n    );\n    totalPhysicalDensity = newTotalPhysicalDensity;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function hexEncodeByte(x: number) {\n  return (\"0\" + x.toString(16)).slice(-2);\n}\n\nexport function hexEncode(arr: Uint8Array) {\n  return Array.prototype.map.call(arr, hexEncodeByte).join(\"\");\n}\n\nexport function hexDecode(x: string) {\n  if (!/^(?:[0-9a-fA-F]{2})*$/.test(x)) {\n    throw new Error(\"Invalid hex-encoded string\");\n  }\n  const length = x.length / 2;\n  const result = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    result[i] = parseInt(x.substr(i * 2, 2), 16);\n  }\n  return result;\n}\n","/**\n * @license\n * Copyright 2018 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Facilities for converting between strings and RGB/RGBA colors.\n */\n\nimport { WatchableValue } from \"#src/trackable_value.js\";\nimport { float32ToString } from \"#src/util/float32_to_string.js\";\nimport { vec3, vec4 } from \"#src/util/geom.js\";\nimport { hexEncodeByte } from \"#src/util/hex.js\";\n\n/**\n * Parse the serialization of a color.\n *\n * This is based on the definition here:\n * https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n */\nexport function parseColorSerialization(x: string) {\n  const rgbaPattern =\n    /^rgba\\(([0-9]+), ([0-9]+), ([0-9]+), (0(?:\\.[0-9]+)?)\\)$/;\n  {\n    const m = x.match(rgbaPattern);\n    if (m !== null) {\n      return [\n        parseInt(m[1], 10),\n        parseInt(m[2], 10),\n        parseInt(m[3], 10),\n        parseFloat(m[4]),\n      ];\n    }\n  }\n  const hexPattern = /^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/;\n  {\n    const m = x.match(hexPattern);\n    if (m !== null) {\n      return [parseInt(m[1], 16), parseInt(m[2], 16), parseInt(m[3], 16), 1.0];\n    }\n  }\n  throw new Error(`Invalid serialized color: ${JSON.stringify(x)}.`);\n}\n\nexport function parseRGBAColorSpecification(x: any) {\n  try {\n    if (typeof x !== \"string\") {\n      throw new Error(`Expected string, but received ${JSON.stringify(x)}.`);\n    }\n    const context = document.createElement(\"canvas\").getContext(\"2d\")!;\n    context.fillStyle = x;\n    const result = parseColorSerialization(context.fillStyle);\n    return vec4.fromValues(\n      result[0] / 255,\n      result[1] / 255,\n      result[2] / 255,\n      result[3],\n    );\n  } catch (parseError) {\n    throw new Error(\n      `Failed to parse color specification: ${parseError.message}`,\n    );\n  }\n}\n\nexport function parseRGBColorSpecification(x: any) {\n  const result = parseRGBAColorSpecification(x);\n  return <vec3>result.subarray(0, 3);\n}\n\n/**\n * Returns an integer formed by concatenating the channels of the input color vector.\n * Each channel is clamped to the range [0.0, 1.0] before being converted to 8 bits.\n * An RGB color is packed into 24 bits, and a RGBA into 32 bits.\n */\nexport function packColor(x: vec3 | vec4): number {\n  const size = x[3] === undefined ? 3 : 4;\n  let result = 0;\n  for (let i = 0; i < size; i++) {\n    // The \">>> 0\" ensures an unsigned value.\n    result =\n      ((result << 8) >>> 0) +\n      Math.min(255, Math.max(0, Math.round(x[size - 1 - i] * 255)));\n  }\n  return result;\n}\n\nexport function unpackRGB(value: number) {\n  return vec3.fromValues(\n    ((value >>> 0) & 0xff) / 255,\n    ((value >>> 8) & 0xff) / 255,\n    ((value >>> 16) & 0xff) / 255,\n  );\n}\n\nexport function unpackRGBA(value: number) {\n  return vec4.fromValues(\n    ((value >>> 0) & 0xff) / 255,\n    ((value >>> 8) & 0xff) / 255,\n    ((value >>> 16) & 0xff) / 255,\n    ((value >>> 24) & 0xff) / 255,\n  );\n}\n\nexport function serializeColor(x: vec3 | vec4) {\n  if (x[3] === undefined || x[3] === 1) {\n    let result = \"#\";\n    for (let i = 0; i < 3; ++i) {\n      result += hexEncodeByte(\n        Math.min(255, Math.max(0, Math.round(x[i] * 255))),\n      );\n    }\n    return result;\n  }\n  let result = \"rgba(\";\n  for (let i = 0; i < 3; ++i) {\n    if (i !== 0) {\n      result += \", \";\n    }\n    result += Math.min(255, Math.max(0, Math.round(x[i] * 255)));\n  }\n  result += `, ${float32ToString(x[3])})`;\n  return result;\n}\n\n// Converts an sRGB color component to the gamma-expanded (\"linear\") value.\nexport function srgbGammaExpand(value: number) {\n  return value <= 0.03928 ? value / 12.92 : ((value + 0.055) / 1.055) ** 2.4;\n}\n\n// Computes the relative luminance according to Web Content Accessibility Guidelines (WCAG) 2.0\n//\n// https://www.w3.org/TR/WCAG20/#relativeluminancedef\n//\n// @param color sRGB color\nexport function getRelativeLuminance(color: vec3 | vec4) {\n  const [r, g, b] = color;\n  return (\n    0.2126 * srgbGammaExpand(r) +\n    0.7152 * srgbGammaExpand(g) +\n    0.0722 * srgbGammaExpand(b)\n  );\n}\n\n// Determines whether a white background would provide higher contrast than a black background for\n// the given foreground color.\n//\n// This is determined according to the Web Content Accessibility Guidelines (WCAG) 2.0:\n// https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n//\n// https://stackoverflow.com/a/3943023\nexport function useWhiteBackground(foregroundColor: vec3 | vec4) {\n  return getRelativeLuminance(foregroundColor) <= 0.179;\n}\n\nexport class TrackableRGB extends WatchableValue<vec3> {\n  constructor(public defaultValue: vec3) {\n    super(vec3.clone(defaultValue));\n  }\n  toString() {\n    return serializeColor(this.value);\n  }\n  toJSON() {\n    if (vec3.equals(this.value, this.defaultValue)) {\n      return undefined;\n    }\n    return serializeColor(this.value);\n  }\n  reset() {\n    this.value = vec3.clone(this.defaultValue);\n  }\n  restoreState(x: any) {\n    if (x === undefined) {\n      this.reset();\n      return;\n    }\n    const { value } = this;\n    const newValue = parseRGBColorSpecification(x);\n    if (!vec3.equals(value, newValue)) {\n      this.value = newValue;\n    }\n  }\n}\n\nexport class TrackableOptionalRGB extends WatchableValue<vec3 | undefined> {\n  constructor() {\n    super(undefined);\n  }\n  toJSON() {\n    const { value } = this;\n    if (value === undefined) return undefined;\n    return serializeColor(value);\n  }\n  reset() {\n    this.value = undefined;\n  }\n  restoreState(x: any) {\n    if (x === undefined) {\n      this.reset();\n      return;\n    }\n    const { value } = this;\n    const newValue = parseRGBColorSpecification(x);\n    if (value === undefined || !vec3.equals(value, newValue)) {\n      this.value = newValue;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Facilities for endianness detection and swapping.\n */\n\nexport enum Endianness {\n  LITTLE = 0,\n  BIG = 1,\n}\n\nexport function determineEndianness() {\n  const a = Uint16Array.of(0x1122);\n  const b = new Uint8Array(a.buffer);\n  return b[0] === 0x11 ? Endianness.BIG : Endianness.LITTLE;\n}\n\n/**\n * The native endianness of the runtime.\n */\nexport const ENDIANNESS = determineEndianness();\n\n/**\n * Swaps the endianness of an array assumed to contain 16-bit values.\n */\nexport function swapEndian16(array: ArrayBufferView) {\n  const view = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n  for (let i = 0, length = view.length; i < length; i += 2) {\n    const temp = view[i];\n    view[i] = view[i + 1];\n    view[i + 1] = temp;\n  }\n}\n\n/**\n * Swaps the endianness of an array assumed to contain 32-bit values.\n */\nexport function swapEndian32(array: ArrayBufferView) {\n  const view = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n  for (let i = 0, length = view.length; i < length; i += 4) {\n    let temp = view[i];\n    view[i] = view[i + 3];\n    view[i + 3] = temp;\n    temp = view[i + 1];\n    view[i + 1] = view[i + 2];\n    view[i + 2] = temp;\n  }\n}\n\nexport function swapEndian64(array: ArrayBufferView) {\n  const view = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n  for (let i = 0, length = view.length; i < length; i += 8) {\n    let temp = view[i];\n    view[i] = view[i + 7];\n    view[i + 7] = temp;\n    temp = view[i + 1];\n    view[i + 1] = view[i + 6];\n    view[i + 6] = temp;\n    temp = view[i + 2];\n    view[i + 2] = view[i + 5];\n    view[i + 5] = temp;\n    temp = view[i + 3];\n    view[i + 3] = view[i + 4];\n    view[i + 4] = temp;\n  }\n}\n\n/**\n * Converts the endianness of an array assumed to contain 16-bit values from source to target.\n *\n * This does nothing if source === target.\n */\nexport function convertEndian16(\n  array: ArrayBufferView,\n  source: Endianness,\n  target: Endianness = ENDIANNESS,\n) {\n  if (source !== target) {\n    swapEndian16(array);\n  }\n}\n\n/**\n * Converts the endianness of an array assumed to contain 32-bit values from source to target.\n *\n * This does nothing if source === target.\n */\nexport function convertEndian32(\n  array: ArrayBufferView,\n  source: Endianness,\n  target: Endianness = ENDIANNESS,\n) {\n  if (source !== target) {\n    swapEndian32(array);\n  }\n}\n\n/**\n * Converts the endianness of an array assumed to contain 64-bit values from source to target.\n *\n * This does nothing if source === target.\n */\nexport function convertEndian64(\n  array: ArrayBufferView,\n  source: Endianness,\n  target: Endianness = ENDIANNESS,\n) {\n  if (source !== target) {\n    swapEndian64(array);\n  }\n}\n\nexport function convertEndian(\n  array: ArrayBufferView,\n  source: Endianness,\n  elementBytes: number,\n  target: Endianness = ENDIANNESS,\n) {\n  if (source === target || elementBytes === 1) return;\n  switch (elementBytes) {\n    case 2:\n      swapEndian16(array);\n      break;\n    case 4:\n      swapEndian32(array);\n      break;\n    case 8:\n      swapEndian64(array);\n      break;\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Endianness, ENDIANNESS } from \"#src/util/endian.js\";\n\nconst denormMin = 2 ** -1074;\n\nconst float64Buf = new Float64Array(1);\nconst uint32Buf = new Uint32Array(float64Buf.buffer);\n\n// The following implementation is derived from:\n// https://github.com/scijs/nextafter/\n//\n// and is subject to the following license:\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2013 Mikola Lysenko\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// Like the C standard library `nextafter` function, returns the next representable JavaScript\n// number (float64) after `x` in the direction of `y`.  Returns `y` if `x === y`.\nexport function nextAfterFloat64(x: number, y: number) {\n  if (Number.isNaN(x) || Number.isNaN(y)) return NaN;\n  if (x === y) return y;\n  if (x === 0) {\n    return y < 0 ? -denormMin : denormMin;\n  }\n  float64Buf[0] = x;\n  const lowIndex = ENDIANNESS === Endianness.LITTLE ? 0 : 1;\n  const highIndex = 1 - lowIndex;\n  if (y > x === x > 0) {\n    if (uint32Buf[lowIndex] === 0xffffffff) {\n      uint32Buf[lowIndex] = 0;\n      uint32Buf[highIndex] += 1;\n    } else {\n      uint32Buf[lowIndex] += 1;\n    }\n  } else {\n    if (uint32Buf[lowIndex] === 0) {\n      uint32Buf[lowIndex] = 0xffffffff;\n      uint32Buf[highIndex] -= 1;\n    } else {\n      uint32Buf[lowIndex] -= 1;\n    }\n  }\n  return float64Buf[0];\n}\n","/**\n * @license\n * Copyright 2021 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataType } from \"#src/util/data_type.js\";\nimport { nextAfterFloat64 } from \"#src/util/float.js\";\nimport { parseFixedLengthArray } from \"#src/util/json.js\";\nimport { Uint64 } from \"#src/util/uint64.js\";\n\nexport type DataTypeInterval = [number, number] | [Uint64, Uint64];\n\nexport type UnknownDataTypeInterval = [number | Uint64, number | Uint64];\n\nexport const defaultDataTypeRange: Record<DataType, DataTypeInterval> = {\n  [DataType.UINT8]: [0, 0xff],\n  [DataType.INT8]: [-0x80, 0x7f],\n  [DataType.UINT16]: [0, 0xffff],\n  [DataType.INT16]: [-0x8000, 0x7fff],\n  [DataType.UINT32]: [0, 0xffffffff],\n  [DataType.INT32]: [-0x80000000, 0x7fffffff],\n  [DataType.UINT64]: [Uint64.ZERO, new Uint64(0xffffffff, 0xffffffff)],\n  [DataType.FLOAT32]: [0, 1],\n};\n\n/**\n * Compute inverse linear interpolation on the interval [0, 1].\n * @param range Values at start and end of interval.\n * @param value Value to interpolate at.\n * @returns Coordinate of interpolated point.\n */\nexport function computeInvlerp(\n  range: DataTypeInterval,\n  value: number | Uint64,\n): number {\n  if (typeof value === \"number\") {\n    const minValue = range[0] as number;\n    const maxValue = range[1] as number;\n    return (value - minValue) / (maxValue - minValue);\n  }\n  const minValue = range[0] as Uint64;\n  const maxValue = range[1] as Uint64;\n  let numerator: number;\n  if (Uint64.compare(value, minValue) < 0) {\n    numerator = -Uint64.subtract(tempUint64, minValue, value).toNumber();\n  } else {\n    numerator = Uint64.subtract(tempUint64, value, minValue).toNumber();\n  }\n  let denominator = Uint64.absDifference(\n    tempUint64,\n    maxValue,\n    minValue,\n  ).toNumber();\n  if (Uint64.compare(minValue, maxValue) > 0) denominator *= -1;\n  return numerator / denominator;\n}\n\n/**\n * Compute linear interpolation on the interval [0, 1].\n * @param range Values at start and end of interval.\n * @param dataType\n * @param value Coordinate to interpolate at.\n * @returns Interpolated value.\n */\nexport function computeLerp(\n  range: DataTypeInterval,\n  dataType: DataType,\n  value: number,\n): number | Uint64 {\n  if (typeof range[0] === \"number\") {\n    const minValue = range[0] as number;\n    const maxValue = range[1] as number;\n    let result = minValue * (1 - value) + maxValue * value;\n    if (dataType !== DataType.FLOAT32) {\n      const dataTypeRange = defaultDataTypeRange[dataType];\n      result = Math.round(result);\n      result = Math.max(dataTypeRange[0] as number, result);\n      result = Math.min(dataTypeRange[1] as number, result);\n    }\n    return result;\n  }\n  let minValue = range[0] as Uint64;\n  let maxValue = range[1] as Uint64;\n  if (Uint64.compare(minValue, maxValue) > 0) {\n    [minValue, maxValue] = [maxValue, minValue];\n    value = 1 - value;\n  }\n  const scalar = Uint64.subtract(tempUint64, maxValue, minValue).toNumber();\n  const result = new Uint64();\n  if (value <= 0) {\n    tempUint64.setFromNumber(scalar * -value);\n    Uint64.subtract(result, minValue, Uint64.min(tempUint64, minValue));\n  } else if (value >= 1) {\n    tempUint64.setFromNumber(scalar * (value - 1));\n    Uint64.add(result, maxValue, tempUint64);\n    if (Uint64.less(result, maxValue)) {\n      result.low = result.high = 0xffffffff;\n    }\n  } else {\n    tempUint64.setFromNumber(scalar * value);\n    Uint64.add(result, minValue, tempUint64);\n    if (Uint64.less(result, minValue)) {\n      result.low = result.high = 0xffffffff;\n    }\n  }\n  return result;\n}\n\nexport function clampToInterval(\n  range: DataTypeInterval,\n  value: number | Uint64,\n): number | Uint64 {\n  if (typeof value === \"number\") {\n    return Math.min(Math.max(range[0] as number, value), range[1] as number);\n  }\n  return Uint64.min(Uint64.max(range[0] as Uint64, value), range[1] as Uint64);\n}\n\nexport function getClampedInterval(\n  bounds: DataTypeInterval,\n  range: DataTypeInterval,\n): DataTypeInterval {\n  return [\n    clampToInterval(bounds, range[0]),\n    clampToInterval(bounds, range[1]),\n  ] as DataTypeInterval;\n}\n\n// Validates that the lower bound is <= the upper bound.\nexport function validateDataTypeInterval(\n  interval: DataTypeInterval,\n): DataTypeInterval {\n  if (dataTypeCompare(interval[0], interval[1]) <= 0) return interval;\n  throw new Error(`Invalid interval: [${interval[0]}, ${interval[1]}]`);\n}\n\n// Ensures the lower bound is <= the upper bound.\nexport function normalizeDataTypeInterval(\n  interval: DataTypeInterval,\n): DataTypeInterval {\n  if (dataTypeCompare(interval[0], interval[1]) <= 0) return interval;\n  return [interval[1], interval[0]] as DataTypeInterval;\n}\n\nexport function dataTypeCompare(a: number | Uint64, b: number | Uint64) {\n  if (typeof a === \"number\") {\n    return (a as number) - (b as number);\n  }\n  return Uint64.compare(a as Uint64, b as Uint64);\n}\n\nconst tempUint64 = new Uint64();\nconst temp2Uint64 = new Uint64();\n\nexport function getClosestEndpoint(\n  range: DataTypeInterval,\n  value: number | Uint64,\n): number {\n  if (typeof value === \"number\") {\n    return Math.abs(value - (range[0] as number)) <\n      Math.abs(value - (range[1] as number))\n      ? 0\n      : 1;\n  }\n  return Uint64.less(\n    Uint64.absDifference(tempUint64, range[0] as Uint64, value as Uint64),\n    Uint64.absDifference(temp2Uint64, range[1] as Uint64, value as Uint64),\n  )\n    ? 0\n    : 1;\n}\n\nexport function parseDataTypeValue(\n  dataType: DataType,\n  x: unknown,\n): number | Uint64 {\n  let s: string;\n  if (typeof x !== \"string\") {\n    s = \"\" + x;\n  } else {\n    s = x;\n  }\n  switch (dataType) {\n    case DataType.UINT64:\n      return Uint64.parseString(s);\n    case DataType.FLOAT32: {\n      const value = parseFloat(s);\n      if (!Number.isFinite(value)) {\n        throw new Error(`Invalid float32 value: ${JSON.stringify(s)}`);\n      }\n      return value;\n    }\n    default: {\n      const value = parseInt(s);\n      const dataTypeRange = defaultDataTypeRange[dataType];\n      if (\n        !Number.isInteger(value) ||\n        value < (dataTypeRange[0] as number) ||\n        value > (dataTypeRange[1] as number)\n      ) {\n        throw new Error(\n          `Invalid ${DataType[dataType].toLowerCase()} value: ${JSON.stringify(\n            s,\n          )}`,\n        );\n      }\n      return value;\n    }\n  }\n}\n\nexport function parseUnknownDataTypeValue(x: unknown): number | Uint64 {\n  if (typeof x === \"number\") return x;\n  if (typeof x === \"string\") {\n    const num64 = new Uint64();\n    const num = Number(x);\n    if (num64.tryParseString(x)) {\n      if (num.toString() === num64.toString()) {\n        return num;\n      }\n      return num64;\n    }\n    if (!Number.isFinite(num)) {\n      throw new Error(`Invalid value: ${JSON.stringify(x)}`);\n    }\n    return num;\n  }\n  throw new Error(`Invalid value: ${JSON.stringify(x)}`);\n}\n\nexport function parseDataTypeInterval(\n  obj: unknown,\n  dataType: DataType,\n): DataTypeInterval {\n  return parseFixedLengthArray(new Array(2), obj, (x) =>\n    parseDataTypeValue(dataType, x),\n  ) as DataTypeInterval;\n}\n\nexport function parseUnknownDataTypeInterval(\n  obj: unknown,\n): UnknownDataTypeInterval {\n  return parseFixedLengthArray(new Array(2), obj, (x) =>\n    parseUnknownDataTypeValue(x),\n  ) as UnknownDataTypeInterval;\n}\n\nexport function dataTypeIntervalEqual(\n  dataType: DataType,\n  a: DataTypeInterval,\n  b: DataTypeInterval,\n) {\n  if (dataType === DataType.UINT64) {\n    return (\n      Uint64.equal(a[0] as Uint64, b[0] as Uint64) &&\n      Uint64.equal(a[1] as Uint64, b[1] as Uint64)\n    );\n  }\n  return a[0] === b[0] && a[1] === b[1];\n}\n\nexport function dataTypeIntervalToJson(\n  range: DataTypeInterval,\n  dataType: DataType,\n  defaultRange = defaultDataTypeRange[dataType],\n) {\n  if (dataTypeIntervalEqual(dataType, range, defaultRange)) return undefined;\n  if (dataType === DataType.UINT64) {\n    return [range[0].toString(), range[1].toString()];\n  }\n  return range;\n}\n\nexport function dataTypeValueNextAfter(\n  dataType: DataType,\n  value: number | Uint64,\n  sign: 1 | -1,\n): number | Uint64 {\n  switch (dataType) {\n    case DataType.FLOAT32:\n      return nextAfterFloat64(value as number, sign * Infinity);\n    case DataType.UINT64: {\n      const v = value as Uint64;\n      if (sign === -1) {\n        if (v.low === 0 && v.high === 0) return v;\n        return Uint64.decrement(new Uint64(), v);\n      }\n      if (v.low === 0xffffffff && v.high === 0xffffffff) return v;\n      return Uint64.increment(new Uint64(), v);\n    }\n    default: {\n      const range = defaultDataTypeRange[dataType] as [number, number];\n      return Math.max(range[0], Math.min(range[1], (value as number) + sign));\n    }\n  }\n}\n\n// Returns the offset such that within the floating point range `[-offset, 1+offset]`, there is an\n// equal-sized interval corresponding to each number in `interval`.\n//\n// For dataType=FLOAT32, always returns 0.  For integer data types, returns:\n//\n//   0.5 / (1 + abs(interval[1] - interval[0]))\nexport function getIntervalBoundsEffectiveOffset(\n  dataType: DataType,\n  interval: DataTypeInterval,\n) {\n  switch (dataType) {\n    case DataType.FLOAT32:\n      return 0;\n    case DataType.UINT64:\n      return (\n        0.5 /\n        Uint64.absDifference(\n          tempUint64,\n          interval[0] as Uint64,\n          interval[1] as Uint64,\n        ).toNumber()\n      );\n    default:\n      return 0.5 / Math.abs((interval[0] as number) - (interval[1] as number));\n  }\n}\n\nexport function getIntervalBoundsEffectiveFraction(\n  dataType: DataType,\n  interval: DataTypeInterval,\n) {\n  switch (dataType) {\n    case DataType.FLOAT32:\n      return 1;\n    case DataType.UINT64: {\n      const diff = Uint64.absDifference(\n        tempUint64,\n        interval[0] as Uint64,\n        interval[1] as Uint64,\n      ).toNumber();\n      return diff / (diff + 1);\n    }\n    default: {\n      const diff = Math.abs((interval[0] as number) - (interval[1] as number));\n      return diff / (diff + 1);\n    }\n  }\n}\n\nexport function convertDataTypeInterval(\n  interval: UnknownDataTypeInterval | undefined,\n  dataType: DataType,\n): DataTypeInterval {\n  if (interval === undefined) {\n    return defaultDataTypeRange[dataType];\n  }\n  let [lower, upper] = interval;\n  if (dataType === DataType.UINT64) {\n    if (typeof lower === \"number\") {\n      lower = Uint64.fromNumber(lower);\n    }\n    if (typeof upper === \"number\") {\n      upper = Uint64.fromNumber(upper);\n    }\n    return [lower, upper];\n  }\n  // Ensure that neither lower nor upper is a `Uint64`.\n  if (typeof lower !== \"number\") {\n    lower = lower.toNumber();\n  }\n  if (typeof upper !== \"number\") {\n    upper = upper.toNumber();\n  }\n  if (dataType !== DataType.FLOAT32) {\n    lower = Math.round(lower);\n    upper = Math.round(upper);\n    const range = defaultDataTypeRange[dataType] as [number, number];\n    if (!Number.isFinite(lower)) {\n      lower = range[0];\n    } else {\n      lower = Math.min(Math.max(range[0], lower), range[1]);\n    }\n    if (!Number.isFinite(upper)) {\n      upper = range[1];\n    } else {\n      upper = Math.min(Math.max(range[0], upper), range[1]);\n    }\n  }\n  return [lower, upper];\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { TypedArray } from \"#src/util/array.js\";\n\nexport function getRandomHexString(numBits = 128) {\n  const numValues = Math.ceil(numBits / 32);\n  const data = new Uint32Array(numValues);\n  crypto.getRandomValues(data);\n  let s = \"\";\n  for (let i = 0; i < numValues; ++i) {\n    s += (\"00000000\" + data[i].toString(16)).slice(-8);\n  }\n  return s;\n}\n\n/**\n * Calls crypto.getRandomValues as many times as needed to fill array.\n */\nexport function getRandomValues<T extends TypedArray>(array: T): T {\n  const byteArray = new Uint8Array(\n    array.buffer,\n    array.byteOffset,\n    array.byteLength,\n  );\n  const blockSize = 65536;\n  for (let i = 0, length = byteArray.length; i < length; i += blockSize) {\n    crypto.getRandomValues(\n      byteArray.subarray(i, Math.min(length, i + blockSize)),\n    );\n  }\n  return array;\n}\n\nexport function getRandomUint32() {\n  const data = new Uint32Array(1);\n  crypto.getRandomValues(data);\n  return data[0];\n}\n","/**\n * @license\n * Copyright 2018 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Basic annotation data structures.\n */\n\nimport type {\n  BoundingBox,\n  CoordinateSpaceTransform,\n  WatchableCoordinateSpaceTransform,\n} from \"#src/coordinate_transform.js\";\nimport { WatchableValue } from \"#src/trackable_value.js\";\nimport { arraysEqual } from \"#src/util/array.js\";\nimport {\n  packColor,\n  parseRGBAColorSpecification,\n  parseRGBColorSpecification,\n  serializeColor,\n  unpackRGB,\n  unpackRGBA,\n} from \"#src/util/color.js\";\nimport { DataType } from \"#src/util/data_type.js\";\nimport type { Borrowed } from \"#src/util/disposable.js\";\nimport { RefCounted } from \"#src/util/disposable.js\";\nimport { Endianness, ENDIANNESS } from \"#src/util/endian.js\";\nimport {\n  expectArray,\n  parseArray,\n  parseFixedLengthArray,\n  verifyEnumString,\n  verifyFiniteFloat,\n  verifyFiniteNonNegativeFloat,\n  verifyFloat,\n  verifyInt,\n  verifyObject,\n  verifyObjectProperty,\n  verifyOptionalObjectProperty,\n  verifyOptionalString,\n  verifyString,\n} from \"#src/util/json.js\";\nimport { parseDataTypeValue } from \"#src/util/lerp.js\";\nimport { getRandomHexString } from \"#src/util/random.js\";\nimport { NullarySignal, Signal } from \"#src/util/signal.js\";\nimport { Uint64 } from \"#src/util/uint64.js\";\n\nexport type AnnotationId = string;\n\nexport class AnnotationReference extends RefCounted {\n  changed = new NullarySignal();\n\n  /**\n   * If `undefined`, we are still waiting to look up the result.  If `null`, annotation has been\n   * deleted.\n   */\n  value: Annotation | null | undefined;\n\n  constructor(public id: AnnotationId) {\n    super();\n  }\n}\n\nexport enum AnnotationType {\n  POINT = 0,\n  LINE = 1,\n  AXIS_ALIGNED_BOUNDING_BOX = 2,\n  ELLIPSOID = 3,\n}\n\nexport const annotationTypes = [\n  AnnotationType.POINT,\n  AnnotationType.LINE,\n  AnnotationType.AXIS_ALIGNED_BOUNDING_BOX,\n  AnnotationType.ELLIPSOID,\n];\n\nexport interface AnnotationPropertySpecBase {\n  identifier: string;\n  description: string | undefined;\n}\n\nexport interface AnnotationColorPropertySpec\n  extends AnnotationPropertySpecBase {\n  type: \"rgb\" | \"rgba\";\n  default: number;\n}\n\nexport interface AnnotationNumericPropertySpec\n  extends AnnotationPropertySpecBase {\n  type: \"float32\" | \"uint32\" | \"int32\" | \"uint16\" | \"int16\" | \"uint8\" | \"int8\";\n  default: number;\n  enumValues?: number[];\n  enumLabels?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  tag?: string;\n}\n\nexport interface AnnotationTagPropertySpec\n  extends AnnotationNumericPropertySpec {\n  type: \"int8\";\n  tag: string;\n}\n\nexport const propertyTypeDataType: Record<\n  AnnotationPropertySpec[\"type\"],\n  DataType | undefined\n> = {\n  float32: DataType.FLOAT32,\n  uint32: DataType.UINT32,\n  int32: DataType.INT32,\n  uint16: DataType.UINT16,\n  int16: DataType.INT16,\n  uint8: DataType.UINT8,\n  int8: DataType.INT8,\n  rgb: undefined,\n  rgba: undefined,\n};\n\nexport type AnnotationPropertySpec =\n  | AnnotationColorPropertySpec\n  | AnnotationNumericPropertySpec;\n\nexport function isAnnotationNumericPropertySpec(\n  spec: AnnotationPropertySpec,\n): spec is AnnotationNumericPropertySpec {\n  return spec.type !== \"rgb\" && spec.type !== \"rgba\";\n}\n\nexport function isAnnotationTagPropertySpec(\n  spec: AnnotationPropertySpec,\n): spec is AnnotationTagPropertySpec {\n  return spec.type === \"uint8\" && spec.tag !== undefined;\n}\n\nexport interface AnnotationPropertyTypeHandler {\n  serializedBytes(rank: number): number;\n  alignment(rank: number): number;\n  serializeCode(property: string, offset: string, rank: number): string;\n  deserializeCode(property: string, offset: string, rank: number): string;\n  deserializeJson(obj: unknown): number;\n  serializeJson(value: number): any;\n}\n\nexport const annotationPropertyTypeHandlers: {\n  [K in AnnotationPropertySpec[\"type\"]]: AnnotationPropertyTypeHandler;\n} = {\n  rgb: {\n    serializedBytes() {\n      return 3;\n    },\n    alignment() {\n      return 1;\n    },\n    serializeCode(property: string, offset: string) {\n      return (\n        `dv.setUint16(${offset}, ${property}, true);` +\n        `dv.setUint8(${offset} + 2, ${property} >>> 16);`\n      );\n    },\n    deserializeCode(property: string, offset: string) {\n      return `${property} = dv.getUint16(${offset}, true) | (dv.getUint8(${offset} + 2) << 16);`;\n    },\n    deserializeJson(obj: unknown) {\n      return packColor(parseRGBColorSpecification(obj));\n    },\n    serializeJson(value: number) {\n      return serializeColor(unpackRGB(value));\n    },\n  },\n  rgba: {\n    serializedBytes() {\n      return 4;\n    },\n    alignment() {\n      return 1;\n    },\n    serializeCode(property: string, offset: string) {\n      return `dv.setUint32(${offset}, ${property}, true);`;\n    },\n    deserializeCode(property: string, offset: string) {\n      return `${property} = dv.getUint32(${offset}, true);`;\n    },\n    deserializeJson(obj: unknown) {\n      return packColor(parseRGBAColorSpecification(obj));\n    },\n    serializeJson(value: number) {\n      return serializeColor(unpackRGBA(value));\n    },\n  },\n  float32: {\n    serializedBytes() {\n      return 4;\n    },\n    alignment() {\n      return 4;\n    },\n    serializeCode(property: string, offset: string) {\n      return `dv.setFloat32(${offset}, ${property}, isLittleEndian);`;\n    },\n    deserializeCode(property: string, offset: string) {\n      return `${property} = dv.getFloat32(${offset}, isLittleEndian);`;\n    },\n    deserializeJson(obj: unknown) {\n      return verifyFloat(obj);\n    },\n    serializeJson(value: number) {\n      return value;\n    },\n  },\n  uint32: {\n    serializedBytes() {\n      return 4;\n    },\n    alignment() {\n      return 4;\n    },\n    serializeCode(property: string, offset: string) {\n      return `dv.setUint32(${offset}, ${property}, isLittleEndian);`;\n    },\n    deserializeCode(property: string, offset: string) {\n      return `${property} = dv.getUint32(${offset}, isLittleEndian);`;\n    },\n    deserializeJson(obj: unknown) {\n      return verifyInt(obj);\n    },\n    serializeJson(value: number) {\n      return value;\n    },\n  },\n  int32: {\n    serializedBytes() {\n      return 4;\n    },\n    alignment() {\n      return 4;\n    },\n    serializeCode(property: string, offset: string) {\n      return `dv.setInt32(${offset}, ${property}, isLittleEndian);`;\n    },\n    deserializeCode(property: string, offset: string) {\n      return `${property} = dv.getInt32(${offset}, isLittleEndian);`;\n    },\n    deserializeJson(obj: unknown) {\n      return verifyInt(obj);\n    },\n    serializeJson(value: number) {\n      return value;\n    },\n  },\n  uint16: {\n    serializedBytes() {\n      return 2;\n    },\n    alignment() {\n      return 2;\n    },\n    serializeCode(property: string, offset: string) {\n      return `dv.setUint16(${offset}, ${property}, isLittleEndian);`;\n    },\n    deserializeCode(property: string, offset: string) {\n      return `${property} = dv.getUint16(${offset}, isLittleEndian);`;\n    },\n    deserializeJson(obj: unknown) {\n      return verifyInt(obj);\n    },\n    serializeJson(value: number) {\n      return value;\n    },\n  },\n  int16: {\n    serializedBytes() {\n      return 2;\n    },\n    alignment() {\n      return 2;\n    },\n    serializeCode(property: string, offset: string) {\n      return `dv.setInt16(${offset}, ${property}, isLittleEndian);`;\n    },\n    deserializeCode(property: string, offset: string) {\n      return `${property} = dv.getInt16(${offset}, isLittleEndian);`;\n    },\n    deserializeJson(obj: unknown) {\n      return verifyInt(obj);\n    },\n    serializeJson(value: number) {\n      return value;\n    },\n  },\n  uint8: {\n    serializedBytes() {\n      return 1;\n    },\n    alignment() {\n      return 1;\n    },\n    serializeCode(property: string, offset: string) {\n      return `dv.setUint8(${offset}, ${property});`;\n    },\n    deserializeCode(property: string, offset: string) {\n      return `${property} = dv.getUint8(${offset});`;\n    },\n    deserializeJson(obj: unknown) {\n      return verifyInt(obj);\n    },\n    serializeJson(value: number) {\n      return value;\n    },\n  },\n  int8: {\n    serializedBytes() {\n      return 2;\n    },\n    alignment() {\n      return 1;\n    },\n    serializeCode(property: string, offset: string) {\n      return `dv.setInt8(${offset}, ${property});`;\n    },\n    deserializeCode(property: string, offset: string) {\n      return `${property} = dv.getInt8(${offset});`;\n    },\n    deserializeJson(obj: unknown) {\n      return verifyInt(obj);\n    },\n    serializeJson(value: number) {\n      return value;\n    },\n  },\n};\n\n// Maximum stride value supported by WebGL.\nconst MAX_BUFFER_STRIDE = 255;\n\nexport function getPropertyOffsets(\n  rank: number,\n  firstGroupInitialOffset: number,\n  propertySpecs: readonly Readonly<AnnotationPropertySpec>[],\n): {\n  serializedBytes: number;\n  offsets: { group: number; offset: number }[];\n  propertyGroupBytes: number[];\n} {\n  let serializedBytes = 0;\n  const numProperties = propertySpecs.length;\n  const permutation = new Array<number>(numProperties);\n  const propertyGroupBytes: number[] = [];\n  for (let i = 0; i < numProperties; ++i) {\n    permutation[i] = i;\n  }\n  const getAlignment = (i: number) =>\n    annotationPropertyTypeHandlers[propertySpecs[i].type].alignment(rank);\n  permutation.sort((i, j) => getAlignment(j) - getAlignment(i));\n  let propertyGroupIndex = 0;\n  const offsets = new Array<{ group: number; offset: number }>(numProperties);\n  let propertyGroupOffset = firstGroupInitialOffset;\n  const nextPropertyGroup = () => {\n    propertyGroupOffset += (4 - (propertyGroupOffset % 4)) % 4;\n    serializedBytes += propertyGroupOffset;\n    propertyGroupBytes[propertyGroupIndex] = propertyGroupOffset;\n    propertyGroupOffset = 0;\n    ++propertyGroupIndex;\n  };\n  for (let outputIndex = 0; outputIndex < numProperties; ++outputIndex) {\n    const propertyIndex = permutation[outputIndex];\n    const spec = propertySpecs[propertyIndex];\n    const handler = annotationPropertyTypeHandlers[spec.type];\n    const numBytes = handler.serializedBytes(rank);\n    const alignment = handler.alignment(rank);\n    // Check if the property fits in the current property group.\n    const alignmentOffset =\n      (alignment - (propertyGroupOffset % alignment)) % alignment;\n    const newStartOffset = propertyGroupOffset + alignmentOffset;\n    const newEndOffset = newStartOffset + numBytes;\n    const newAlignedEndOffset = newEndOffset + ((4 - (newEndOffset % 4)) % 4);\n    if (newAlignedEndOffset <= MAX_BUFFER_STRIDE) {\n      // Property fits\n      propertyGroupOffset += alignmentOffset;\n    } else {\n      // Property does not fit.\n      nextPropertyGroup();\n    }\n    offsets[propertyIndex] = {\n      offset: propertyGroupOffset,\n      group: propertyGroupIndex,\n    };\n    propertyGroupOffset += numBytes;\n  }\n  nextPropertyGroup();\n  return { serializedBytes, offsets, propertyGroupBytes };\n}\n\nexport class AnnotationPropertySerializer {\n  serializedBytes: number;\n  serialize: (\n    buffer: DataView,\n    offset: number,\n    annotationIndex: number,\n    annotationCount: number,\n    isLittleEndian: boolean,\n    properties: any[],\n  ) => void;\n  deserialize: (\n    buffer: DataView,\n    offset: number,\n    annotationIndex: number,\n    annotationCount: number,\n    isLittleEndian: boolean,\n    properties: any[],\n  ) => void;\n  propertyGroupBytes: number[];\n  constructor(\n    public rank: number,\n    public firstGroupInitialOffset: number,\n    public propertySpecs: readonly Readonly<AnnotationPropertySpec>[],\n  ) {\n    if (propertySpecs.length === 0) {\n      this.serializedBytes = firstGroupInitialOffset;\n      this.serialize = this.deserialize = () => {};\n      this.propertyGroupBytes = [firstGroupInitialOffset];\n      return;\n    }\n    const { serializedBytes, offsets, propertyGroupBytes } = getPropertyOffsets(\n      rank,\n      firstGroupInitialOffset,\n      propertySpecs,\n    );\n    this.propertyGroupBytes = propertyGroupBytes;\n    let groupOffsetCode = \"let groupOffset0 = offset;\";\n    for (\n      let groupIndex = 1;\n      groupIndex < propertyGroupBytes.length;\n      ++groupIndex\n    ) {\n      groupOffsetCode += `let groupOffset${groupIndex} = groupOffset${\n        groupIndex - 1\n      } + ${propertyGroupBytes[groupIndex - 1]}*annotationCount;`;\n    }\n    for (\n      let groupIndex = 0;\n      groupIndex < propertyGroupBytes.length;\n      ++groupIndex\n    ) {\n      groupOffsetCode += `groupOffset${groupIndex} += ${propertyGroupBytes[groupIndex]}*annotationIndex;`;\n    }\n    let serializeCode = groupOffsetCode;\n    let deserializeCode = groupOffsetCode;\n    const numProperties = propertySpecs.length;\n    for (\n      let propertyIndex = 0;\n      propertyIndex < numProperties;\n      ++propertyIndex\n    ) {\n      const { group, offset } = offsets[propertyIndex];\n      const spec = propertySpecs[propertyIndex];\n      const handler = annotationPropertyTypeHandlers[spec.type];\n      const propId = `properties[${propertyIndex}]`;\n      const offsetExpr = `groupOffset${group} + ${offset}`;\n      serializeCode += handler.serializeCode(propId, offsetExpr, rank);\n      deserializeCode += handler.deserializeCode(propId, offsetExpr, rank);\n    }\n    this.serializedBytes = serializedBytes;\n    this.serialize = new Function(\n      \"dv\",\n      \"offset\",\n      \"annotationIndex\",\n      \"annotationCount\",\n      \"isLittleEndian\",\n      \"properties\",\n      serializeCode,\n    ) as any;\n    this.deserialize = new Function(\n      \"dv\",\n      \"offset\",\n      \"annotationIndex\",\n      \"annotationCount\",\n      \"isLittleEndian\",\n      \"properties\",\n      deserializeCode,\n    ) as any;\n  }\n}\n\nexport function makeAnnotationPropertySerializers(\n  rank: number,\n  propertySpecs: readonly Readonly<AnnotationPropertySpec>[],\n) {\n  const serializers: AnnotationPropertySerializer[] = [];\n  for (const annotationType of annotationTypes) {\n    const handler = annotationTypeHandlers[annotationType];\n    serializers[annotationType] = new AnnotationPropertySerializer(\n      rank,\n      handler.serializedBytes(rank),\n      propertySpecs,\n    );\n  }\n  return serializers;\n}\n\nexport function formatNumericProperty(\n  property: AnnotationNumericPropertySpec,\n  value: number,\n): string {\n  const formattedValue =\n    property.type === \"float32\" ? value.toPrecision(6) : value.toString();\n  const { enumValues, enumLabels } = property;\n  if (enumValues !== undefined) {\n    const enumIndex = enumValues.indexOf(value);\n    if (enumIndex !== -1) {\n      return `${enumLabels![enumIndex]} (${formattedValue})`;\n    }\n  }\n  return formattedValue;\n}\n\nexport function formatAnnotationPropertyValue(\n  property: AnnotationPropertySpec,\n  value: any,\n): string {\n  switch (property.type) {\n    case \"rgb\":\n      return serializeColor(unpackRGB(value));\n    case \"rgba\":\n      return serializeColor(unpackRGBA(value));\n    default:\n      return formatNumericProperty(property, value);\n  }\n}\n\nexport function parseAnnotationPropertyId(obj: unknown) {\n  const s = verifyString(obj);\n  if (s.match(/^[a-z][a-zA-Z0-9_]*$/) === null) {\n    throw new Error(`Invalid property identifier: ${JSON.stringify(obj)}`);\n  }\n  return s;\n}\n\nexport function parseAnnotationPropertyType(obj: unknown) {\n  verifyString(obj);\n  if (\n    !Object.prototype.hasOwnProperty.call(annotationPropertyTypeHandlers, obj)\n  ) {\n    throw new Error(\"Unsupported property type: $JSON.stringify(obj)}\");\n  }\n  return obj as AnnotationPropertySpec[\"type\"];\n}\n\nexport function ensureUniqueAnnotationPropertyIds(\n  properties: AnnotationPropertySpec[],\n) {\n  const ids = new Set<string>();\n  for (const p of properties) {\n    if (ids.has(p.identifier)) {\n      throw new Error(`Duplicate property identifier: ${p.identifier}`);\n    }\n    ids.add(p.identifier);\n  }\n}\n\nfunction parseAnnotationPropertySpec(obj: unknown): AnnotationPropertySpec {\n  verifyObject(obj);\n  const identifier = verifyObjectProperty(obj, \"id\", parseAnnotationPropertyId);\n  const type = verifyObjectProperty(obj, \"type\", parseAnnotationPropertyType);\n  const description = verifyOptionalObjectProperty(\n    obj,\n    \"description\",\n    verifyString,\n  );\n  const defaultValue = verifyOptionalObjectProperty(\n    obj,\n    \"default\",\n    (x) => annotationPropertyTypeHandlers[type].deserializeJson(x),\n    0,\n  );\n  let enumValues: number[] | undefined;\n  let enumLabels: string[] | undefined;\n  let tag: string | undefined;\n  switch (type) {\n    case \"rgb\":\n    case \"rgba\":\n      break;\n    default: {\n      const dataType: DataType = DataType[type.toUpperCase() as any] as any;\n      enumValues = verifyOptionalObjectProperty(\n        obj,\n        \"enum_values\",\n        (valuesObj) =>\n          parseArray(\n            valuesObj,\n            (x) => parseDataTypeValue(dataType, x) as number,\n          ),\n      );\n      if (enumValues !== undefined) {\n        enumLabels = verifyObjectProperty(obj, \"enum_labels\", (labelsObj) =>\n          parseFixedLengthArray(\n            new Array<string>(enumValues!.length),\n            labelsObj,\n            verifyString,\n          ),\n        );\n      }\n      tag = verifyOptionalObjectProperty(obj, \"tag\", verifyString);\n    }\n  }\n  return {\n    type,\n    identifier,\n    description,\n    default: defaultValue,\n    enumValues,\n    enumLabels,\n    tag,\n  } as AnnotationPropertySpec;\n}\n\nfunction annotationPropertySpecToJson(spec: AnnotationPropertySpec) {\n  const defaultValue = spec.default;\n  const isNumeric = isAnnotationNumericPropertySpec(spec);\n  const tag = isNumeric ? spec.tag : undefined;\n  const enum_values = isNumeric ? spec.enumValues : undefined;\n  const enum_labels = isNumeric ? spec.enumLabels : undefined;\n  return {\n    id: spec.identifier,\n    description: spec.description,\n    type: spec.type,\n    tag,\n    enum_values,\n    enum_labels,\n    default:\n      defaultValue === 0\n        ? undefined\n        : annotationPropertyTypeHandlers[spec.type].serializeJson(defaultValue),\n  };\n}\n\nexport function annotationPropertySpecsToJson(\n  specs: AnnotationPropertySpec[] | undefined,\n) {\n  if (specs === undefined || specs.length === 0) return undefined;\n  return specs.map(annotationPropertySpecToJson);\n}\n\nexport function parseAnnotationPropertySpecs(obj: unknown) {\n  if (obj === undefined) return [];\n  const properties = parseArray(obj, parseAnnotationPropertySpec);\n  ensureUniqueAnnotationPropertyIds(properties);\n  return properties;\n}\n\nexport interface AnnotationBase {\n  /**\n   * If equal to `undefined`, then the description is unknown (possibly still being loaded).  If\n   * equal to `null`, then there is no description.\n   */\n  description?: string | undefined | null;\n\n  id: AnnotationId;\n  type: AnnotationType;\n\n  relatedSegments?: Uint64[][];\n  properties: any[];\n}\n\nexport interface Line extends AnnotationBase {\n  pointA: Float32Array;\n  pointB: Float32Array;\n  type: AnnotationType.LINE;\n}\n\nexport interface Point extends AnnotationBase {\n  point: Float32Array;\n  type: AnnotationType.POINT;\n}\n\nexport interface AxisAlignedBoundingBox extends AnnotationBase {\n  pointA: Float32Array;\n  pointB: Float32Array;\n  type: AnnotationType.AXIS_ALIGNED_BOUNDING_BOX;\n}\n\nexport interface Ellipsoid extends AnnotationBase {\n  center: Float32Array;\n  radii: Float32Array;\n  type: AnnotationType.ELLIPSOID;\n}\n\nexport type Annotation = Line | Point | AxisAlignedBoundingBox | Ellipsoid;\n\nexport interface AnnotationTypeHandler<T extends Annotation = Annotation> {\n  icon: string;\n  description: string;\n  toJSON: (annotation: T, rank: number) => any;\n  restoreState: (annotation: T, obj: any, rank: number) => void;\n  serializedBytes: (rank: number) => number;\n  serialize: (\n    buffer: DataView,\n    offset: number,\n    isLittleEndian: boolean,\n    rank: number,\n    annotation: T,\n  ) => void;\n  deserialize: (\n    buffer: DataView,\n    offset: number,\n    isLittleEndian: boolean,\n    rank: number,\n    id: string,\n  ) => T;\n  visitGeometry: (\n    annotation: T,\n    callback: (vec: Float32Array, isVector: boolean) => void,\n  ) => void;\n}\n\nfunction serializeFloatVector(\n  buffer: DataView,\n  offset: number,\n  isLittleEndian: boolean,\n  rank: number,\n  vec: Float32Array,\n) {\n  for (let i = 0; i < rank; ++i) {\n    buffer.setFloat32(offset, vec[i], isLittleEndian);\n    offset += 4;\n  }\n  return offset;\n}\n\nfunction serializeTwoFloatVectors(\n  buffer: DataView,\n  offset: number,\n  isLittleEndian: boolean,\n  rank: number,\n  vecA: Float32Array,\n  vecB: Float32Array,\n) {\n  offset = serializeFloatVector(buffer, offset, isLittleEndian, rank, vecA);\n  offset = serializeFloatVector(buffer, offset, isLittleEndian, rank, vecB);\n  return offset;\n}\n\nfunction deserializeFloatVector(\n  buffer: DataView,\n  offset: number,\n  isLittleEndian: boolean,\n  rank: number,\n  vec: Float32Array,\n) {\n  for (let i = 0; i < rank; ++i) {\n    vec[i] = buffer.getFloat32(offset, isLittleEndian);\n    offset += 4;\n  }\n  return offset;\n}\n\nfunction deserializeTwoFloatVectors(\n  buffer: DataView,\n  offset: number,\n  isLittleEndian: boolean,\n  rank: number,\n  vecA: Float32Array,\n  vecB: Float32Array,\n) {\n  offset = deserializeFloatVector(buffer, offset, isLittleEndian, rank, vecA);\n  offset = deserializeFloatVector(buffer, offset, isLittleEndian, rank, vecB);\n  return offset;\n}\n\nexport const annotationTypeHandlers: Record<\n  AnnotationType,\n  AnnotationTypeHandler\n> = {\n  [AnnotationType.LINE]: {\n    icon: \"ꕹ\",\n    description: \"Line\",\n    toJSON(annotation: Line) {\n      return {\n        pointA: Array.from(annotation.pointA),\n        pointB: Array.from(annotation.pointB),\n      };\n    },\n    restoreState(annotation: Line, obj: any, rank: number) {\n      annotation.pointA = verifyObjectProperty(obj, \"pointA\", (x) =>\n        parseFixedLengthArray(new Float32Array(rank), x, verifyFiniteFloat),\n      );\n      annotation.pointB = verifyObjectProperty(obj, \"pointB\", (x) =>\n        parseFixedLengthArray(new Float32Array(rank), x, verifyFiniteFloat),\n      );\n    },\n    serializedBytes(rank: number) {\n      return 2 * 4 * rank;\n    },\n    serialize(\n      buffer: DataView,\n      offset: number,\n      isLittleEndian: boolean,\n      rank: number,\n      annotation: Line,\n    ) {\n      serializeTwoFloatVectors(\n        buffer,\n        offset,\n        isLittleEndian,\n        rank,\n        annotation.pointA,\n        annotation.pointB,\n      );\n    },\n    deserialize: (\n      buffer: DataView,\n      offset: number,\n      isLittleEndian: boolean,\n      rank: number,\n      id: string,\n    ): Line => {\n      const pointA = new Float32Array(rank);\n      const pointB = new Float32Array(rank);\n      deserializeTwoFloatVectors(\n        buffer,\n        offset,\n        isLittleEndian,\n        rank,\n        pointA,\n        pointB,\n      );\n      return { type: AnnotationType.LINE, pointA, pointB, id, properties: [] };\n    },\n    visitGeometry(annotation: Line, callback) {\n      callback(annotation.pointA, false);\n      callback(annotation.pointB, false);\n    },\n  },\n  [AnnotationType.POINT]: {\n    icon: \"⚬\",\n    description: \"Point\",\n    toJSON: (annotation: Point) => {\n      return {\n        point: Array.from(annotation.point),\n      };\n    },\n    restoreState: (annotation: Point, obj: any, rank: number) => {\n      annotation.point = verifyObjectProperty(obj, \"point\", (x) =>\n        parseFixedLengthArray(new Float32Array(rank), x, verifyFiniteFloat),\n      );\n    },\n    serializedBytes: (rank) => rank * 4,\n    serialize: (\n      buffer: DataView,\n      offset: number,\n      isLittleEndian: boolean,\n      rank: number,\n      annotation: Point,\n    ) => {\n      serializeFloatVector(\n        buffer,\n        offset,\n        isLittleEndian,\n        rank,\n        annotation.point,\n      );\n    },\n    deserialize: (\n      buffer: DataView,\n      offset: number,\n      isLittleEndian: boolean,\n      rank: number,\n      id: string,\n    ): Point => {\n      const point = new Float32Array(rank);\n      deserializeFloatVector(buffer, offset, isLittleEndian, rank, point);\n      return { type: AnnotationType.POINT, point, id, properties: [] };\n    },\n    visitGeometry(annotation: Point, callback) {\n      callback(annotation.point, false);\n    },\n  },\n  [AnnotationType.AXIS_ALIGNED_BOUNDING_BOX]: {\n    icon: \"❑\",\n    description: \"Bounding Box\",\n    toJSON: (annotation: AxisAlignedBoundingBox) => {\n      return {\n        pointA: Array.from(annotation.pointA),\n        pointB: Array.from(annotation.pointB),\n      };\n    },\n    restoreState: (\n      annotation: AxisAlignedBoundingBox,\n      obj: any,\n      rank: number,\n    ) => {\n      annotation.pointA = verifyObjectProperty(obj, \"pointA\", (x) =>\n        parseFixedLengthArray(new Float32Array(rank), x, verifyFiniteFloat),\n      );\n      annotation.pointB = verifyObjectProperty(obj, \"pointB\", (x) =>\n        parseFixedLengthArray(new Float32Array(rank), x, verifyFiniteFloat),\n      );\n    },\n    serializedBytes: (rank) => 2 * 4 * rank,\n    serialize(\n      buffer: DataView,\n      offset: number,\n      isLittleEndian: boolean,\n      rank: number,\n      annotation: AxisAlignedBoundingBox,\n    ) {\n      serializeTwoFloatVectors(\n        buffer,\n        offset,\n        isLittleEndian,\n        rank,\n        annotation.pointA,\n        annotation.pointB,\n      );\n    },\n    deserialize: (\n      buffer: DataView,\n      offset: number,\n      isLittleEndian: boolean,\n      rank: number,\n      id: string,\n    ): AxisAlignedBoundingBox => {\n      const pointA = new Float32Array(rank);\n      const pointB = new Float32Array(rank);\n      deserializeTwoFloatVectors(\n        buffer,\n        offset,\n        isLittleEndian,\n        rank,\n        pointA,\n        pointB,\n      );\n      return {\n        type: AnnotationType.AXIS_ALIGNED_BOUNDING_BOX,\n        pointA,\n        pointB,\n        id,\n        properties: [],\n      };\n    },\n    visitGeometry(annotation: AxisAlignedBoundingBox, callback) {\n      callback(annotation.pointA, false);\n      callback(annotation.pointB, false);\n    },\n  },\n  [AnnotationType.ELLIPSOID]: {\n    icon: \"◎\",\n    description: \"Ellipsoid\",\n    toJSON: (annotation: Ellipsoid) => {\n      return {\n        center: Array.from(annotation.center),\n        radii: Array.from(annotation.radii),\n      };\n    },\n    restoreState: (annotation: Ellipsoid, obj: any, rank: number) => {\n      annotation.center = verifyObjectProperty(obj, \"center\", (x) =>\n        parseFixedLengthArray(new Float32Array(rank), x, verifyFiniteFloat),\n      );\n      annotation.radii = verifyObjectProperty(obj, \"radii\", (x) =>\n        parseFixedLengthArray(\n          new Float32Array(rank),\n          x,\n          verifyFiniteNonNegativeFloat,\n        ),\n      );\n    },\n    serializedBytes: (rank) => 2 * 4 * rank,\n    serialize(\n      buffer: DataView,\n      offset: number,\n      isLittleEndian: boolean,\n      rank: number,\n      annotation: Ellipsoid,\n    ) {\n      serializeTwoFloatVectors(\n        buffer,\n        offset,\n        isLittleEndian,\n        rank,\n        annotation.center,\n        annotation.radii,\n      );\n    },\n    deserialize: (\n      buffer: DataView,\n      offset: number,\n      isLittleEndian: boolean,\n      rank: number,\n      id: string,\n    ): Ellipsoid => {\n      const center = new Float32Array(rank);\n      const radii = new Float32Array(rank);\n      deserializeTwoFloatVectors(\n        buffer,\n        offset,\n        isLittleEndian,\n        rank,\n        center,\n        radii,\n      );\n      return {\n        type: AnnotationType.ELLIPSOID,\n        center,\n        radii,\n        id,\n        properties: [],\n      };\n    },\n    visitGeometry(annotation: Ellipsoid, callback) {\n      callback(annotation.center, false);\n      callback(annotation.radii, true);\n    },\n  },\n};\n\nexport interface AnnotationSchema {\n  rank: number;\n  relationships: readonly string[];\n  properties: WatchableValue<readonly Readonly<AnnotationPropertySpec>[]>;\n}\n\nexport function annotationToJson(\n  annotation: Annotation,\n  schema: AnnotationSchema,\n) {\n  const result = annotationTypeHandlers[annotation.type].toJSON(\n    annotation,\n    schema.rank,\n  );\n  result.type = AnnotationType[annotation.type].toLowerCase();\n  result.id = annotation.id;\n  result.description = annotation.description || undefined;\n  const { relatedSegments } = annotation;\n  if (relatedSegments?.some((x) => x.length !== 0)) {\n    result.segments = relatedSegments.map((segments) =>\n      segments.map((x) => x.toString()),\n    );\n  }\n  const propertySpecs = schema.properties.value;\n  if (propertySpecs.length !== 0) {\n    result.props = annotation.properties.map((prop, i) =>\n      annotationPropertyTypeHandlers[propertySpecs[i].type].serializeJson(prop),\n    );\n  }\n  return result;\n}\n\nfunction restoreAnnotation(\n  obj: any,\n  schema: AnnotationSchema,\n  allowMissingId = false,\n): Annotation {\n  verifyObject(obj);\n  const type = verifyObjectProperty(obj, \"type\", (x) =>\n    verifyEnumString(x, AnnotationType),\n  );\n  const id =\n    verifyObjectProperty(\n      obj,\n      \"id\",\n      allowMissingId ? verifyOptionalString : verifyString,\n    ) || makeAnnotationId();\n  const relatedSegments = verifyObjectProperty(obj, \"segments\", (relObj) => {\n    if (relObj === undefined) {\n      return schema.relationships.map(() => []);\n    }\n    const a = expectArray(relObj);\n    if (a.length === 0) {\n      return schema.relationships.map(() => []);\n    }\n    if (schema.relationships.length === 1 && !Array.isArray(a[0])) {\n      return [parseArray(a, (x) => Uint64.parseString(x))];\n    }\n    return parseArray(\n      expectArray(relObj, schema.relationships.length),\n      (segments) => parseArray(segments, (y) => Uint64.parseString(y)),\n    );\n  });\n  const properties = verifyObjectProperty(obj, \"props\", (propsObj) => {\n    const propSpecs = schema.properties.value;\n    if (propsObj === undefined) return propSpecs.map((x) => x.default);\n    return parseArray(expectArray(propsObj, propSpecs.length), (x, i) =>\n      annotationPropertyTypeHandlers[propSpecs[i].type].deserializeJson(x),\n    );\n  });\n  const result: Annotation = {\n    id,\n    description: verifyObjectProperty(obj, \"description\", verifyOptionalString),\n    relatedSegments,\n    properties,\n    type,\n  } as Annotation;\n  annotationTypeHandlers[type].restoreState(result, obj, schema.rank);\n  return result;\n}\n\nexport interface AnnotationSourceSignals {\n  changed: NullarySignal;\n  childAdded: Signal<(annotation: Annotation) => void>;\n  childUpdated: Signal<(annotation: Annotation) => void>;\n  childCommitted: Signal<(annotationId: string) => void>;\n  childDeleted: Signal<(annotationId: string) => void>;\n}\n\nexport class AnnotationSource\n  extends RefCounted\n  implements AnnotationSourceSignals\n{\n  protected annotationMap = new Map<AnnotationId, Annotation>();\n  changed = new NullarySignal();\n  readonly = false;\n  childAdded = new Signal<(annotation: Annotation) => void>();\n  childUpdated = new Signal<(annotation: Annotation) => void>();\n  childCommitted = new Signal<(annotationId: string) => void>();\n  childDeleted = new Signal<(annotationId: string) => void>();\n\n  public pending = new Set<AnnotationId>();\n\n  protected rank_: number;\n\n  get rank() {\n    return this.rank_;\n  }\n\n  annotationPropertySerializers: AnnotationPropertySerializer[];\n\n  constructor(\n    rank: number,\n    public readonly relationships: readonly string[] = [],\n    public readonly properties: WatchableValue<\n      readonly Readonly<AnnotationPropertySpec>[]\n    > = new WatchableValue([]),\n  ) {\n    super();\n    this.rank_ = rank;\n    this.annotationPropertySerializers = makeAnnotationPropertySerializers(\n      rank,\n      properties.value,\n    );\n  }\n\n  hasNonSerializedProperties() {\n    return true;\n  }\n\n  add(annotation: Annotation, commit = true): AnnotationReference {\n    this.ensureUpdated();\n    if (!annotation.id) {\n      annotation.id = makeAnnotationId();\n    } else if (this.annotationMap.has(annotation.id)) {\n      throw new Error(\n        `Annotation id already exists: ${JSON.stringify(annotation.id)}.`,\n      );\n    }\n    this.annotationMap.set(annotation.id, annotation);\n    if (!commit) {\n      this.pending.add(annotation.id);\n    }\n    this.changed.dispatch();\n    this.childAdded.dispatch(annotation);\n    if (commit) {\n      this.childCommitted.dispatch(annotation.id);\n    }\n    return this.getReference(annotation.id);\n  }\n\n  commit(reference: AnnotationReference): void {\n    this.ensureUpdated();\n    const id = reference.id;\n    this.pending.delete(id);\n    this.changed.dispatch();\n    this.childCommitted.dispatch(id);\n  }\n\n  update(reference: AnnotationReference, annotation: Annotation) {\n    this.ensureUpdated();\n    if (reference.value === null) {\n      throw new Error(\"Annotation already deleted.\");\n    }\n    reference.value = annotation;\n    this.annotationMap.set(annotation.id, annotation);\n    reference.changed.dispatch();\n    this.changed.dispatch();\n    this.childUpdated.dispatch(annotation);\n  }\n\n  [Symbol.iterator]() {\n    this.ensureUpdated();\n    return this.annotationMap.values();\n  }\n\n  get(id: AnnotationId) {\n    this.ensureUpdated();\n    return this.annotationMap.get(id);\n  }\n\n  delete(reference: AnnotationReference) {\n    if (reference.value === null) {\n      return;\n    }\n    reference.value = null;\n    this.annotationMap.delete(reference.id);\n    this.pending.delete(reference.id);\n    reference.changed.dispatch();\n    this.changed.dispatch();\n    this.childDeleted.dispatch(reference.id);\n  }\n\n  getReference(id: AnnotationId): AnnotationReference {\n    let existing = this.references.get(id);\n    if (existing !== undefined) {\n      return existing.addRef();\n    }\n    existing = new AnnotationReference(id);\n    existing.value = this.annotationMap.get(id) || null;\n    this.references.set(id, existing);\n    existing.registerDisposer(() => {\n      this.references.delete(id);\n    });\n    return existing;\n  }\n\n  references = new Map<AnnotationId, Borrowed<AnnotationReference>>();\n\n  protected ensureUpdated() {}\n\n  toJSON() {\n    this.ensureUpdated();\n    const result: any[] = [];\n    const { pending } = this;\n    for (const annotation of this) {\n      if (pending.has(annotation.id)) {\n        // Don't serialize uncommitted annotations.\n        continue;\n      }\n      result.push(annotationToJson(annotation, this));\n    }\n    return result;\n  }\n\n  clear() {\n    this.annotationMap.clear();\n    this.pending.clear();\n    this.changed.dispatch();\n  }\n\n  restoreState(obj: any) {\n    this.ensureUpdated();\n    const { annotationMap } = this;\n    annotationMap.clear();\n    this.pending.clear();\n    if (obj !== undefined) {\n      parseArray(obj, (x) => {\n        const annotation = restoreAnnotation(x, this);\n        annotationMap.set(annotation.id, annotation);\n      });\n    }\n    for (const reference of this.references.values()) {\n      const { id } = reference;\n      const value = annotationMap.get(id);\n      reference.value = value || null;\n      reference.changed.dispatch();\n    }\n    this.changed.dispatch();\n  }\n\n  reset() {\n    this.clear();\n  }\n}\n\nexport class LocalAnnotationSource extends AnnotationSource {\n  private curCoordinateTransform: CoordinateSpaceTransform;\n\n  get rank() {\n    this.ensureUpdated();\n    return this.rank_;\n  }\n\n  constructor(\n    public watchableTransform: WatchableCoordinateSpaceTransform,\n    public readonly properties: WatchableValue<\n      AnnotationPropertySpec[]\n    > = new WatchableValue([]),\n    relationships: string[],\n  ) {\n    super(watchableTransform.value.sourceRank, relationships, properties);\n    this.curCoordinateTransform = watchableTransform.value;\n    this.registerDisposer(\n      watchableTransform.changed.add(() => this.ensureUpdated()),\n    );\n\n    this.registerDisposer(\n      properties.changed.add(() => {\n        this.updateAnnotationPropertySerializers();\n        this.changed.dispatch();\n      }),\n    );\n  }\n\n  updateAnnotationPropertySerializers() {\n    this.annotationPropertySerializers = makeAnnotationPropertySerializers(\n      this.rank_,\n      this.properties.value,\n    );\n  }\n\n  addProperty(property: AnnotationPropertySpec) {\n    this.properties.value.push(property);\n    for (const annotation of this) {\n      annotation.properties.push(property.default);\n    }\n    this.properties.changed.dispatch();\n  }\n\n  removeProperty(identifier: string) {\n    const propertyIndex = this.properties.value.findIndex(\n      (x) => x.identifier === identifier,\n    );\n    this.properties.value.splice(propertyIndex, 1);\n    for (const annotation of this) {\n      annotation.properties.splice(propertyIndex, 1);\n    }\n    this.properties.changed.dispatch();\n  }\n\n  getTagProperties = () => {\n    const { properties } = this;\n    return properties.value.filter(isAnnotationTagPropertySpec);\n  };\n\n  ensureUpdated() {\n    const transform = this.watchableTransform.value;\n    const { curCoordinateTransform } = this;\n    if (transform === curCoordinateTransform) return;\n    this.curCoordinateTransform = transform;\n    const sourceRank = transform.sourceRank;\n    const oldSourceRank = curCoordinateTransform.sourceRank;\n    if (\n      oldSourceRank === sourceRank &&\n      (curCoordinateTransform.inputSpace === transform.inputSpace ||\n        arraysEqual(\n          curCoordinateTransform.inputSpace.ids.slice(0, sourceRank),\n          transform.inputSpace.ids.slice(0, sourceRank),\n        ))\n    ) {\n      return;\n    }\n    const { ids: newIds } = transform.inputSpace;\n    const oldIds = curCoordinateTransform.inputSpace.ids;\n    const newToOldDims: number[] = [];\n    for (let newDim = 0; newDim < sourceRank; ++newDim) {\n      let oldDim = oldIds.indexOf(newIds[newDim]);\n      if (oldDim >= oldSourceRank) {\n        oldDim = -1;\n      }\n      newToOldDims.push(oldDim);\n    }\n    const mapVector = (radii: Float32Array) => {\n      const newRadii = new Float32Array(sourceRank);\n      for (let i = 0; i < sourceRank; ++i) {\n        const oldDim = newToOldDims[i];\n        newRadii[i] = oldDim === -1 ? 0 : radii[i];\n      }\n      return newRadii;\n    };\n\n    for (const annotation of this.annotationMap.values()) {\n      switch (annotation.type) {\n        case AnnotationType.POINT:\n          annotation.point = mapVector(annotation.point);\n          break;\n        case AnnotationType.LINE:\n        case AnnotationType.AXIS_ALIGNED_BOUNDING_BOX:\n          annotation.pointA = mapVector(annotation.pointA);\n          annotation.pointB = mapVector(annotation.pointB);\n          break;\n        case AnnotationType.ELLIPSOID:\n          annotation.center = mapVector(annotation.center);\n          annotation.radii = mapVector(annotation.radii);\n          break;\n      }\n    }\n    if (this.rank_ !== sourceRank) {\n      this.rank_ = sourceRank;\n      this.updateAnnotationPropertySerializers();\n    }\n    this.changed.dispatch();\n  }\n}\n\nexport const DATA_BOUNDS_DESCRIPTION = \"Data Bounds\";\n\nexport function makeAnnotationId() {\n  return getRandomHexString(160);\n}\n\nexport function makeDataBoundsBoundingBoxAnnotation(\n  box: BoundingBox,\n): AxisAlignedBoundingBox {\n  return {\n    type: AnnotationType.AXIS_ALIGNED_BOUNDING_BOX,\n    id: \"data-bounds\",\n    description: DATA_BOUNDS_DESCRIPTION,\n    pointA: new Float32Array(box.lowerBounds),\n    pointB: new Float32Array(box.upperBounds),\n    properties: [],\n  };\n}\n\nexport function makeDataBoundsBoundingBoxAnnotationSet(\n  box: BoundingBox,\n): AnnotationSource {\n  const annotationSource = new AnnotationSource(box.lowerBounds.length);\n  annotationSource.readonly = true;\n  annotationSource.add(makeDataBoundsBoundingBoxAnnotation(box));\n  return annotationSource;\n}\n\nexport interface SerializedAnnotations {\n  data: Uint8Array;\n  typeToIds: string[][];\n  typeToOffset: number[];\n  typeToIdMaps: Map<string, number>[];\n}\n\nfunction serializeAnnotations(\n  allAnnotations: Annotation[][],\n  propertySerializers: AnnotationPropertySerializer[],\n): SerializedAnnotations {\n  let totalBytes = 0;\n  const typeToOffset: number[] = [];\n  for (const annotationType of annotationTypes) {\n    const propertySerializer = propertySerializers[annotationType];\n    const serializedPropertiesBytes = propertySerializer.serializedBytes;\n    typeToOffset[annotationType] = totalBytes;\n    const annotations: Annotation[] = allAnnotations[annotationType];\n    const count = annotations.length;\n    totalBytes += serializedPropertiesBytes * count;\n  }\n  const typeToIds: string[][] = [];\n  const typeToIdMaps: Map<string, number>[] = [];\n  const data = new ArrayBuffer(totalBytes);\n  const dataView = new DataView(data);\n  const isLittleEndian = ENDIANNESS === Endianness.LITTLE;\n  for (const annotationType of annotationTypes) {\n    const propertySerializer = propertySerializers[annotationType];\n    const { rank } = propertySerializer;\n    const serializeProperties = propertySerializer.serialize;\n    const annotations: Annotation[] = allAnnotations[annotationType];\n    typeToIds[annotationType] = annotations.map((x) => x.id);\n    typeToIdMaps[annotationType] = new Map(\n      annotations.map((x, i) => [x.id, i]),\n    );\n    const handler = annotationTypeHandlers[annotationType];\n    const serialize = handler.serialize;\n    const offset = typeToOffset[annotationType];\n    const geometryDataStride = propertySerializer.propertyGroupBytes[0];\n    for (let i = 0, count = annotations.length; i < count; ++i) {\n      const annotation = annotations[i];\n      serialize(\n        dataView,\n        offset + i * geometryDataStride,\n        isLittleEndian,\n        rank,\n        annotation,\n      );\n      serializeProperties(\n        dataView,\n        offset,\n        i,\n        count,\n        isLittleEndian,\n        annotation.properties,\n      );\n    }\n  }\n  return { data: new Uint8Array(data), typeToIds, typeToOffset, typeToIdMaps };\n}\n\nexport class AnnotationSerializer {\n  annotations: [Point[], Line[], AxisAlignedBoundingBox[], Ellipsoid[]] = [\n    [],\n    [],\n    [],\n    [],\n  ];\n  constructor(public propertySerializers: AnnotationPropertySerializer[]) {}\n  add(annotation: Annotation) {\n    (<Annotation[]>this.annotations[annotation.type]).push(annotation);\n  }\n  serialize(): SerializedAnnotations {\n    return serializeAnnotations(this.annotations, this.propertySerializers);\n  }\n}\n\nexport function fixAnnotationAfterStructuredCloning(obj: Annotation | null) {\n  if (obj == null) {\n    return obj;\n  }\n  const { relatedSegments } = obj;\n  if (relatedSegments !== undefined) {\n    for (\n      let i = 0, numRelationships = relatedSegments.length;\n      i < numRelationships;\n      ++i\n    ) {\n      const segments = relatedSegments[i];\n      if (segments === undefined) continue;\n      relatedSegments[i] = segments.map(\n        (x: { low: number; high: number }) => new Uint64(x.low, x.high),\n      );\n    }\n  }\n  return obj;\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { VisibleSegmentEquivalencePolicy } from \"#src/segmentation_graph/segment_id.js\";\nimport type { WatchableValueInterface } from \"#src/trackable_value.js\";\nimport { DisjointUint64Sets } from \"#src/util/disjoint_sets.js\";\nimport { parseArray } from \"#src/util/json.js\";\nimport { NullarySignal } from \"#src/util/signal.js\";\nimport { Uint64 } from \"#src/util/uint64.js\";\nimport type { RPC } from \"#src/worker_rpc.js\";\nimport {\n  registerRPC,\n  registerSharedObject,\n  SharedObjectCounterpart,\n} from \"#src/worker_rpc.js\";\n\nconst RPC_TYPE_ID = \"DisjointUint64Sets\";\nconst ADD_METHOD_ID = \"DisjointUint64Sets.add\";\nconst CLEAR_METHOD_ID = \"DisjointUint64Sets.clear\";\nconst HIGH_BIT_REPRESENTATIVE_CHANGED_ID =\n  \"DisjointUint64Sets.highBitRepresentativeChanged\";\nconst DELETE_SET_METHOD_ID = \"DisjointUint64Sets.deleteSet\";\n\n@registerSharedObject(RPC_TYPE_ID)\nexport class SharedDisjointUint64Sets\n  extends SharedObjectCounterpart\n  implements WatchableValueInterface<SharedDisjointUint64Sets>\n{\n  disjointSets = new DisjointUint64Sets();\n  changed = new NullarySignal();\n\n  /**\n   * For compatibility with `WatchableValueInterface`.\n   */\n  get value() {\n    return this;\n  }\n\n  static makeWithCounterpart(\n    rpc: RPC,\n    highBitRepresentative: WatchableValueInterface<VisibleSegmentEquivalencePolicy>,\n  ) {\n    const obj = new SharedDisjointUint64Sets();\n    obj.disjointSets.visibleSegmentEquivalencePolicy = highBitRepresentative;\n    obj.registerDisposer(\n      highBitRepresentative.changed.add(() => {\n        updateHighBitRepresentative(obj);\n      }),\n    );\n    obj.initializeCounterpart(rpc);\n    if (highBitRepresentative.value) {\n      updateHighBitRepresentative(obj);\n    }\n    return obj;\n  }\n\n  disposed() {\n    this.disjointSets = <any>undefined;\n    this.changed = <any>undefined;\n    super.disposed();\n  }\n\n  link(a: Uint64, b: Uint64) {\n    if (this.disjointSets.link(a, b)) {\n      const { rpc } = this;\n      if (rpc) {\n        rpc.invoke(ADD_METHOD_ID, {\n          id: this.rpcId,\n          al: a.low,\n          ah: a.high,\n          bl: b.low,\n          bh: b.high,\n        });\n      }\n      this.changed.dispatch();\n      return true;\n    }\n    return false;\n  }\n\n  linkAll(ids: Uint64[]) {\n    for (let i = 1, length = ids.length; i < length; ++i) {\n      this.link(ids[0], ids[i]);\n    }\n  }\n\n  has(x: Uint64): boolean {\n    return this.disjointSets.has(x);\n  }\n\n  get(x: Uint64): Uint64 {\n    return this.disjointSets.get(x);\n  }\n\n  clear() {\n    if (this.disjointSets.clear()) {\n      const { rpc } = this;\n      if (rpc) {\n        rpc.invoke(CLEAR_METHOD_ID, { id: this.rpcId });\n      }\n      this.changed.dispatch();\n    }\n  }\n\n  setElements(a: Uint64) {\n    return this.disjointSets.setElements(a);\n  }\n\n  deleteSet(x: Uint64) {\n    if (this.disjointSets.deleteSet(x)) {\n      const { rpc } = this;\n      if (rpc) {\n        rpc.invoke(DELETE_SET_METHOD_ID, {\n          id: this.rpcId,\n          l: x.low,\n          h: x.high,\n        });\n      }\n      this.changed.dispatch();\n    }\n  }\n\n  get size() {\n    return this.disjointSets.size;\n  }\n\n  toJSON() {\n    return this.disjointSets.toJSON();\n  }\n\n  /**\n   * Restores the state from a JSON representation.\n   */\n  restoreState(obj: any) {\n    if (obj !== undefined) {\n      const ids = [new Uint64(), new Uint64()];\n      parseArray(obj, (z) => {\n        parseArray(z, (s, index) => {\n          ids[index % 2].parseString(String(s), 10);\n          if (index !== 0) {\n            this.link(ids[0], ids[1]);\n          }\n        });\n      });\n    }\n  }\n\n  assignFrom(other: SharedDisjointUint64Sets | DisjointUint64Sets) {\n    this.clear();\n    if (other instanceof SharedDisjointUint64Sets) {\n      other = other.disjointSets;\n    }\n    for (const [a, b] of other) {\n      this.link(a, b);\n    }\n  }\n}\n\nconst tempA = new Uint64();\nconst tempB = new Uint64();\n\nregisterRPC(ADD_METHOD_ID, function (x) {\n  const obj = <SharedDisjointUint64Sets>this.get(x.id);\n  tempA.low = x.al;\n  tempA.high = x.ah;\n  tempB.low = x.bl;\n  tempB.high = x.bh;\n  if (obj.disjointSets.link(tempA, tempB)) {\n    obj.changed.dispatch();\n  }\n});\n\nregisterRPC(CLEAR_METHOD_ID, function (x) {\n  const obj = <SharedDisjointUint64Sets>this.get(x.id);\n  if (obj.disjointSets.clear()) {\n    obj.changed.dispatch();\n  }\n});\n\nfunction updateHighBitRepresentative(obj: SharedDisjointUint64Sets) {\n  obj.rpc!.invoke(HIGH_BIT_REPRESENTATIVE_CHANGED_ID, {\n    id: obj.rpcId,\n    value: obj.disjointSets.visibleSegmentEquivalencePolicy.value,\n  });\n}\n\nregisterRPC(HIGH_BIT_REPRESENTATIVE_CHANGED_ID, function (x) {\n  const obj = this.get(x.id) as SharedDisjointUint64Sets;\n  obj.disjointSets.visibleSegmentEquivalencePolicy.value = x.value;\n});\n\nregisterRPC(DELETE_SET_METHOD_ID, function (x) {\n  const obj = <SharedDisjointUint64Sets>this.get(x.id);\n  tempA.low = x.l;\n  tempA.high = x.h;\n  if (obj.disjointSets.deleteSet(tempA)) {\n    obj.changed.dispatch();\n  }\n});\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { hashCombine } from \"#src/gpu_hash/hash_function.js\";\nimport { getRandomValues } from \"#src/util/random.js\";\nimport { Uint64 } from \"#src/util/uint64.js\";\n\nexport const NUM_ALTERNATIVES = 3;\n\n// For 3 hash functions, a DEFAULT_LOAD_FACTOR of 0.8 reliably avoids\n// expensive rehashing caused by unresolvable collisions.\nconst DEFAULT_LOAD_FACTOR = 0.8;\n\nconst DEBUG = false;\n\n// Key that needs to be inserted.  Temporary variables used during insert.  These can safely be\n// global because control never leaves functions defined in this module while these are in use.\nlet pendingLow = 0;\nlet pendingHigh = 0;\nlet backupPendingLow = 0;\nlet backupPendingHigh = 0;\n\nexport abstract class HashTableBase {\n  loadFactor = DEFAULT_LOAD_FACTOR;\n  size = 0;\n  table: Uint32Array;\n  tableSize: number;\n  emptyLow = 4294967295;\n  emptyHigh = 4294967295;\n  maxRehashAttempts = 5;\n  maxAttempts = 5;\n  capacity: number;\n\n  /**\n   * Number of uint32 elements per entry in hash table.\n   */\n  entryStride: number;\n\n  generation = 0;\n\n  mungedEmptyKey = -1;\n\n  constructor(\n    public hashSeeds = HashTableBase.generateHashSeeds(NUM_ALTERNATIVES),\n  ) {\n    // Minimum size must be greater than 2 * hashSeeds.length.  Otherwise, tableWithMungedEmptyKey\n    // may loop infinitely.\n    let initialSize = 8;\n    while (initialSize < 2 * hashSeeds.length) {\n      initialSize *= 2;\n    }\n    this.allocate(initialSize);\n  }\n\n  private updateHashFunctions(numHashes: number) {\n    this.hashSeeds = HashTableBase.generateHashSeeds(numHashes);\n    this.mungedEmptyKey = -1;\n  }\n\n  /**\n   * Invokes callback with a modified version of the hash table data array.\n   *\n   * Replaces all slots that appear to be valid entries for (emptyLow, emptyHigh), i.e. slots that\n   * contain (emptyLow, emptyHigh) and to which (emptyLow, emptyHigh) hashes, with (mungedEmptyKey,\n   * mungedEmptyKey).\n   *\n   * mungedEmptyKey is chosen to be a 32-bit value with the property that the 64-bit value\n   * (mungedEmptyKey, mungedEmptyKey) does not hash to any of the same slots as (emptyLow,\n   * emptyHigh).\n   *\n   * This allows the modified data array to be used for lookups without special casing the empty\n   * key.\n   */\n  tableWithMungedEmptyKey(callback: (table: Uint32Array) => void) {\n    const numHashes = this.hashSeeds.length;\n    const emptySlots = new Array<number>(numHashes);\n    for (let i = 0; i < numHashes; ++i) {\n      emptySlots[i] = this.getHash(i, this.emptyLow, this.emptyHigh);\n    }\n    let { mungedEmptyKey } = this;\n    if (mungedEmptyKey === -1) {\n      chooseMungedEmptyKey: while (true) {\n        mungedEmptyKey = (Math.random() * 0x1000000) >>> 0;\n        for (let i = 0; i < numHashes; ++i) {\n          const h = this.getHash(i, mungedEmptyKey, mungedEmptyKey);\n          for (let j = 0; j < numHashes; ++j) {\n            if (emptySlots[j] === h) {\n              continue chooseMungedEmptyKey;\n            }\n          }\n        }\n        this.mungedEmptyKey = mungedEmptyKey;\n        break;\n      }\n    }\n    const { table, emptyLow, emptyHigh } = this;\n    for (let i = 0; i < numHashes; ++i) {\n      const h = emptySlots[i];\n      if (table[h] === emptyLow && table[h + 1] === emptyHigh) {\n        table[h] = mungedEmptyKey;\n        table[h + 1] = mungedEmptyKey;\n      }\n    }\n    try {\n      callback(table);\n    } finally {\n      for (let i = 0; i < numHashes; ++i) {\n        const h = emptySlots[i];\n        if (table[h] === mungedEmptyKey && table[h + 1] === mungedEmptyKey) {\n          table[h] = emptyLow;\n          table[h + 1] = emptyHigh;\n        }\n      }\n    }\n  }\n\n  static generateHashSeeds(numAlternatives = NUM_ALTERNATIVES) {\n    return getRandomValues(new Uint32Array(numAlternatives));\n  }\n\n  getHash(hashIndex: number, low: number, high: number) {\n    let hash = this.hashSeeds[hashIndex];\n    hash = hashCombine(hash, low);\n    hash = hashCombine(hash, high);\n    return this.entryStride * (hash & (this.tableSize - 1));\n  }\n\n  /**\n   * Iterates over the Uint64 keys contained in the hash set.\n   *\n   * Creates a new Uint64 object at every iteration (otherwise spread and Array.from() fail)\n   */\n  *keys(): IterableIterator<Uint64> {\n    const { emptyLow, emptyHigh, entryStride } = this;\n    const { table } = this;\n    for (let i = 0, length = table.length; i < length; i += entryStride) {\n      const low = table[i];\n      const high = table[i + 1];\n      if (low !== emptyLow || high !== emptyHigh) {\n        yield new Uint64(low, high);\n      }\n    }\n  }\n\n  /**\n   * Iterates over the Uint64 keys contained in the hash set.\n   *\n   * The same temp value will be modified and yielded at every iteration.\n   */\n  *unsafeKeys(temp = new Uint64()): IterableIterator<Uint64> {\n    const { emptyLow, emptyHigh, entryStride } = this;\n    const { table } = this;\n    for (let i = 0, length = table.length; i < length; i += entryStride) {\n      const low = table[i];\n      const high = table[i + 1];\n      if (low !== emptyLow || high !== emptyHigh) {\n        temp.low = low;\n        temp.high = high;\n        yield temp;\n      }\n    }\n  }\n\n  indexOfPair(low: number, high: number) {\n    const { table, emptyLow, emptyHigh } = this;\n    if (low === emptyLow && high === emptyHigh) {\n      return -1;\n    }\n    for (let i = 0, numHashes = this.hashSeeds.length; i < numHashes; ++i) {\n      const h = this.getHash(i, low, high);\n      if (table[h] === low && table[h + 1] === high) {\n        return h;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Returns the offset into the hash table of the specified element, or -1 if the element is not\n   * present.\n   */\n  indexOf(x: Uint64) {\n    return this.indexOfPair(x.low, x.high);\n  }\n\n  /**\n   * Changes the empty key to a value that is not equal to the current empty key and is not present\n   * in the table.\n   *\n   * This is called when an attempt is made to insert the empty key.\n   */\n  private chooseAnotherEmptyKey() {\n    const { emptyLow, emptyHigh, table, entryStride } = this;\n    let newLow: number;\n    let newHigh: number;\n    while (true) {\n      newLow = (Math.random() * 0x100000000) >>> 0;\n      newHigh = (Math.random() * 0x100000000) >>> 0;\n      if (newLow === emptyLow && newHigh === emptyHigh) {\n        continue;\n      }\n      if (this.hasPair(newLow, newHigh)) {\n        continue;\n      }\n      break;\n    }\n\n    this.emptyLow = newLow;\n    this.emptyHigh = newHigh;\n\n    // Replace empty keys in the table.\n    for (let h = 0, length = table.length; h < length; h += entryStride) {\n      if (table[h] === emptyLow && table[h + 1] === emptyHigh) {\n        table[h] = newLow;\n        table[h + 1] = newHigh;\n      }\n    }\n  }\n\n  /**\n   * Returns true iff the specified element is present.\n   */\n  has(x: Uint64) {\n    return this.indexOf(x) !== -1;\n  }\n\n  /**\n   * Returns true iff the specified element is present.\n   */\n  hasPair(low: number, high: number) {\n    return this.indexOfPair(low, high) !== -1;\n  }\n\n  delete(x: Uint64) {\n    const index = this.indexOf(x);\n    if (index !== -1) {\n      const { table } = this;\n      table[index] = this.emptyLow;\n      table[index + 1] = this.emptyHigh;\n      ++this.generation;\n      this.size--;\n      return true;\n    }\n    return false;\n  }\n\n  private clearTable() {\n    const { table, entryStride, emptyLow, emptyHigh } = this;\n    const length = table.length;\n\n    for (let h = 0; h < length; h += entryStride) {\n      table[h] = emptyLow;\n      table[h + 1] = emptyHigh;\n    }\n  }\n\n  clear() {\n    if (this.size === 0) {\n      return false;\n    }\n    this.size = 0;\n    ++this.generation;\n    this.clearTable();\n    return true;\n  }\n\n  reserve(x: number) {\n    if (x > this.capacity) {\n      this.backupPending();\n      this.grow(x);\n      this.restorePending();\n      return true;\n    }\n    return false;\n  }\n\n  protected swapPending(table: Uint32Array, offset: number) {\n    const tempLow = pendingLow;\n    const tempHigh = pendingHigh;\n    this.storePending(table, offset);\n    table[offset] = tempLow;\n    table[offset + 1] = tempHigh;\n  }\n\n  protected storePending(table: Uint32Array, offset: number) {\n    pendingLow = table[offset];\n    pendingHigh = table[offset + 1];\n  }\n\n  protected backupPending() {\n    backupPendingLow = pendingLow;\n    backupPendingHigh = pendingHigh;\n  }\n\n  protected restorePending() {\n    pendingLow = backupPendingLow;\n    pendingHigh = backupPendingHigh;\n  }\n\n  private tryToInsert() {\n    if (DEBUG) {\n      console.log(`tryToInsert: ${pendingLow}, ${pendingHigh}`);\n    }\n    let attempt = 0;\n    const { emptyLow, emptyHigh, maxAttempts, table } = this;\n    const numHashes = this.hashSeeds.length;\n\n    let tableIndex = Math.floor(Math.random() * numHashes);\n    while (true) {\n      const h = this.getHash(tableIndex, pendingLow, pendingHigh);\n      this.swapPending(table, h);\n      if (pendingLow === emptyLow && pendingHigh === emptyHigh) {\n        return true;\n      }\n      if (++attempt === maxAttempts) {\n        break;\n      }\n      tableIndex =\n        (tableIndex + Math.floor(Math.random() * (numHashes - 1)) + 1) %\n        numHashes;\n    }\n    return false;\n  }\n\n  private allocate(tableSize: number) {\n    this.tableSize = tableSize;\n    const { entryStride } = this;\n    this.table = new Uint32Array(tableSize * entryStride);\n    this.maxAttempts = tableSize;\n    this.clearTable();\n    this.capacity = tableSize * this.loadFactor;\n    this.mungedEmptyKey = -1;\n  }\n\n  private rehash(oldTable: Uint32Array, tableSize: number) {\n    if (DEBUG) {\n      console.log(\"rehash begin\");\n    }\n    this.allocate(tableSize);\n    this.updateHashFunctions(this.hashSeeds.length);\n    const { emptyLow, emptyHigh, entryStride } = this;\n    for (let h = 0, length = oldTable.length; h < length; h += entryStride) {\n      const low = oldTable[h];\n      const high = oldTable[h + 1];\n      if (low !== emptyLow || high !== emptyHigh) {\n        this.storePending(oldTable, h);\n        if (!this.tryToInsert()) {\n          if (DEBUG) {\n            console.log(\"rehash failed\");\n          }\n          return false;\n        }\n      }\n    }\n    if (DEBUG) {\n      console.log(\"rehash end\");\n    }\n    return true;\n  }\n\n  private grow(desiredTableSize: number) {\n    if (DEBUG) {\n      console.log(`grow: ${desiredTableSize}`);\n    }\n    const oldTable = this.table;\n    let { tableSize } = this;\n    while (tableSize < desiredTableSize) {\n      tableSize *= 2;\n    }\n    while (true) {\n      for (\n        let rehashAttempt = 0;\n        rehashAttempt < this.maxRehashAttempts;\n        ++rehashAttempt\n      ) {\n        if (this.rehash(oldTable, tableSize)) {\n          if (DEBUG) {\n            console.log(\"grow end\");\n          }\n          return;\n        }\n      }\n      tableSize *= 2;\n    }\n  }\n\n  protected insertInternal() {\n    ++this.generation;\n\n    if (pendingLow === this.emptyLow && pendingHigh === this.emptyHigh) {\n      this.chooseAnotherEmptyKey();\n    }\n\n    if (++this.size > this.capacity) {\n      this.backupPending();\n      this.grow(this.tableSize * 2);\n      this.restorePending();\n    }\n\n    while (!this.tryToInsert()) {\n      this.backupPending();\n      this.grow(this.tableSize);\n      this.restorePending();\n    }\n  }\n}\n\nexport class HashSetUint64 extends HashTableBase {\n  add(x: Uint64) {\n    const { low, high } = x;\n    if (this.hasPair(low, high)) {\n      return false;\n    }\n    if (DEBUG) {\n      console.log(`add: ${low},${high}`);\n    }\n    pendingLow = low;\n    pendingHigh = high;\n    this.insertInternal();\n    return true;\n  }\n\n  /**\n   * Iterates over the keys.\n   * Creates a new Uint64 object at every iteration (otherwise spread and Array.from() fail)\n   */\n  [Symbol.iterator]() {\n    return this.unsafeKeys();\n  }\n}\nHashSetUint64.prototype.entryStride = 2;\n\n// Value that needs to be inserted.  Temporary variables used during insert.  These can safely be\n// global because control never leaves functions defined in this module while these are in use.\nlet pendingValueLow = 0;\nlet pendingValueHigh = 0;\nlet backupPendingValueLow = 0;\nlet backupPendingValueHigh = 0;\n\nexport class HashMapUint64 extends HashTableBase {\n  set(key: Uint64, value: Uint64) {\n    const { low, high } = key;\n    if (this.hasPair(low, high)) {\n      return false;\n    }\n    if (DEBUG) {\n      console.log(`add: ${low},${high} -> ${value.low},${value.high}`);\n    }\n    pendingLow = low;\n    pendingHigh = high;\n    pendingValueLow = value.low;\n    pendingValueHigh = value.high;\n    this.insertInternal();\n    return true;\n  }\n\n  get(key: Uint64, value: Uint64): boolean {\n    const h = this.indexOf(key);\n    if (h === -1) {\n      return false;\n    }\n    const { table } = this;\n    value.low = table[h + 2];\n    value.high = table[h + 3];\n    return true;\n  }\n\n  protected swapPending(table: Uint32Array, offset: number) {\n    const tempLow = pendingValueLow;\n    const tempHigh = pendingValueHigh;\n    super.swapPending(table, offset);\n    table[offset + 2] = tempLow;\n    table[offset + 3] = tempHigh;\n  }\n\n  protected storePending(table: Uint32Array, offset: number) {\n    super.storePending(table, offset);\n    pendingValueLow = table[offset + 2];\n    pendingValueHigh = table[offset + 3];\n  }\n\n  protected backupPending() {\n    super.backupPending();\n    backupPendingValueLow = pendingValueLow;\n    backupPendingValueHigh = pendingValueHigh;\n  }\n\n  protected restorePending() {\n    super.restorePending();\n    pendingValueLow = backupPendingValueLow;\n    pendingValueHigh = backupPendingValueHigh;\n  }\n\n  /**\n   * Iterates over entries.  The same temporary value will be modified and yielded at every\n   * iteration.\n   */\n  [Symbol.iterator]() {\n    return this.unsafeEntries();\n  }\n\n  /**\n   * Iterates over entries.\n   * Creates new Uint64 objects at every iteration (otherwise spread and Array.from() fail)\n   */\n  *entries() {\n    const { emptyLow, emptyHigh, entryStride } = this;\n    const { table } = this;\n    for (let i = 0, length = table.length; i < length; i += entryStride) {\n      const low = table[i];\n      const high = table[i + 1];\n      if (low !== emptyLow || high !== emptyHigh) {\n        const key = new Uint64(low, high);\n        const value = new Uint64(table[i + 2], table[i + 3]);\n        yield [key, value];\n      }\n    }\n  }\n\n  /**\n   * Iterates over entries.  The same temporary value will be modified and yielded at every\n   * iteration.\n   */\n  *unsafeEntries(temp: [Uint64, Uint64] = [new Uint64(), new Uint64()]) {\n    const { emptyLow, emptyHigh, entryStride } = this;\n    const { table } = this;\n    const [key, value] = temp;\n    for (let i = 0, length = table.length; i < length; i += entryStride) {\n      const low = table[i];\n      const high = table[i + 1];\n      if (low !== emptyLow || high !== emptyHigh) {\n        key.low = low;\n        key.high = high;\n        value.low = table[i + 2];\n        value.high = table[i + 3];\n        yield temp;\n      }\n    }\n  }\n}\nHashMapUint64.prototype.entryStride = 4;\n","/**\n * @license\n * This work is a derivative of the Google Neuroglancer project,\n * Copyright 2016 Google Inc.\n * The Derivative Work is covered by\n * Copyright 2019 Howard Hughes Medical Institute\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HashMapUint64 } from \"#src/gpu_hash/hash_table.js\";\nimport type { WatchableValueInterface } from \"#src/trackable_value.js\";\nimport { Signal } from \"#src/util/signal.js\";\nimport type { Uint64 } from \"#src/util/uint64.js\";\nimport type { RPC } from \"#src/worker_rpc.js\";\nimport {\n  registerRPC,\n  registerSharedObject,\n  SharedObjectCounterpart,\n} from \"#src/worker_rpc.js\";\n\n@registerSharedObject(\"Uint64Map\")\nexport class Uint64Map\n  extends SharedObjectCounterpart\n  implements WatchableValueInterface<Uint64Map>\n{\n  hashTable = new HashMapUint64();\n  changed = new Signal<(x: Uint64 | null, add: boolean) => void>();\n\n  get value() {\n    return this;\n  }\n\n  static makeWithCounterpart(rpc: RPC) {\n    const obj = new Uint64Map();\n    obj.initializeCounterpart(rpc);\n    return obj;\n  }\n\n  set_(key: Uint64, value: Uint64) {\n    return this.hashTable.set(key, value);\n  }\n\n  set(key: Uint64, value: Uint64) {\n    if (this.set_(key, value)) {\n      const { rpc } = this;\n      if (rpc) {\n        rpc.invoke(\"Uint64Map.set\", { id: this.rpcId, key: key, value: value });\n      }\n      this.changed.dispatch(key, true);\n    }\n  }\n\n  has(key: Uint64) {\n    return this.hashTable.has(key);\n  }\n\n  get(key: Uint64, value: Uint64): boolean {\n    return this.hashTable.get(key, value);\n  }\n\n  [Symbol.iterator]() {\n    return this.hashTable.entries();\n  }\n\n  unsafeEntries() {\n    return this.hashTable.unsafeEntries();\n  }\n\n  delete_(key: Uint64) {\n    return this.hashTable.delete(key);\n  }\n\n  delete(key: Uint64) {\n    if (this.delete_(key)) {\n      const { rpc } = this;\n      if (rpc) {\n        rpc.invoke(\"Uint64Map.delete\", { id: this.rpcId, key: key });\n      }\n      this.changed.dispatch(key, false);\n    }\n  }\n\n  get size() {\n    return this.hashTable.size;\n  }\n\n  assignFrom(other: Uint64Map) {\n    this.clear();\n    for (const [key, value] of other.unsafeEntries()) {\n      this.set(key, value);\n    }\n  }\n\n  clear() {\n    if (this.hashTable.clear()) {\n      const { rpc } = this;\n      if (rpc) {\n        rpc.invoke(\"Uint64Map.clear\", { id: this.rpcId });\n      }\n      this.changed.dispatch(null, false);\n    }\n  }\n\n  toJSON() {\n    const result: { [key: string]: string } = {};\n    for (const [key, value] of this.hashTable.unsafeEntries()) {\n      result[key.toString()] = value.toString();\n    }\n    return result;\n  }\n}\n\nregisterRPC(\"Uint64Map.set\", function (x) {\n  const obj = this.get(x.id);\n  if (obj.set_(x.key, x.value)) {\n    obj.changed.dispatch();\n  }\n});\n\nregisterRPC(\"Uint64Map.delete\", function (x) {\n  const obj = this.get(x.id);\n  if (obj.delete_(x.key)) {\n    obj.changed.dispatch();\n  }\n});\n\nregisterRPC(\"Uint64Map.clear\", function (x) {\n  const obj = this.get(x.id);\n  if (obj.hashTable.clear()) {\n    obj.changed.dispatch();\n  }\n});\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HashSetUint64 } from \"#src/gpu_hash/hash_table.js\";\nimport type { WatchableValueInterface } from \"#src/trackable_value.js\";\nimport { Signal } from \"#src/util/signal.js\";\nimport type { Uint64 } from \"#src/util/uint64.js\";\nimport type { RPC } from \"#src/worker_rpc.js\";\nimport {\n  registerRPC,\n  registerSharedObject,\n  SharedObjectCounterpart,\n} from \"#src/worker_rpc.js\";\n\n@registerSharedObject(\"Uint64Set\")\nexport class Uint64Set\n  extends SharedObjectCounterpart\n  implements WatchableValueInterface<Uint64Set>\n{\n  hashTable = new HashSetUint64();\n  changed = new Signal<(x: Uint64 | Uint64[] | null, add: boolean) => void>();\n\n  get value() {\n    return this;\n  }\n\n  static makeWithCounterpart(rpc: RPC) {\n    const obj = new Uint64Set();\n    obj.initializeCounterpart(rpc);\n    return obj;\n  }\n\n  set(x: Uint64 | Uint64[], value: boolean) {\n    if (!value) {\n      this.delete(x);\n    } else {\n      this.add(x);\n    }\n  }\n\n  reserve_(x: number) {\n    return this.hashTable.reserve(x);\n  }\n\n  reserve(x: number) {\n    if (this.reserve_(x)) {\n      const { rpc } = this;\n      if (rpc) {\n        rpc.invoke(\"Uint64Set.reserve\", { id: this.rpcId, value: x });\n      }\n    }\n  }\n\n  add_(x: Uint64[]) {\n    let changed = false;\n    for (const v of x) {\n      changed = this.hashTable.add(v) || changed;\n    }\n    return changed;\n  }\n\n  add(x: Uint64 | Uint64[]) {\n    const tmp = Array<Uint64>().concat(x);\n    if (this.add_(tmp)) {\n      const { rpc } = this;\n      if (rpc) {\n        rpc.invoke(\"Uint64Set.add\", { id: this.rpcId, value: tmp });\n      }\n      this.changed.dispatch(x, true);\n    }\n  }\n\n  has(x: Uint64) {\n    return this.hashTable.has(x);\n  }\n\n  [Symbol.iterator]() {\n    return this.hashTable.keys();\n  }\n\n  unsafeKeys() {\n    return this.hashTable.unsafeKeys();\n  }\n\n  delete_(x: Uint64[]) {\n    let changed = false;\n    for (const v of x) {\n      changed = this.hashTable.delete(v) || changed;\n    }\n    return changed;\n  }\n\n  delete(x: Uint64 | Uint64[]) {\n    const tmp = Array<Uint64>().concat(x);\n    if (this.delete_(Array<Uint64>().concat(x))) {\n      const { rpc } = this;\n      if (rpc) {\n        rpc.invoke(\"Uint64Set.delete\", { id: this.rpcId, value: tmp });\n      }\n      this.changed.dispatch(x, false);\n    }\n  }\n\n  get size() {\n    return this.hashTable.size;\n  }\n\n  clear() {\n    if (this.hashTable.clear()) {\n      const { rpc } = this;\n      if (rpc) {\n        rpc.invoke(\"Uint64Set.clear\", { id: this.rpcId });\n      }\n      this.changed.dispatch(null, false);\n    }\n  }\n\n  toJSON() {\n    const result = new Array<string>();\n    for (const id of this.unsafeKeys()) {\n      result.push(id.toString());\n    }\n    // Need to sort entries, otherwise serialization changes every time.\n    result.sort();\n    return result;\n  }\n\n  assignFrom(other: Uint64Set) {\n    this.clear();\n    for (const key of other.unsafeKeys()) {\n      this.add(key);\n    }\n  }\n}\n\nregisterRPC(\"Uint64Set.reserve\", function (x) {\n  const obj = this.get(x.id);\n  if (obj.reserve_(x.value)) {\n    obj.changed.dispatch();\n  }\n});\n\nregisterRPC(\"Uint64Set.add\", function (x) {\n  const obj = this.get(x.id);\n  if (obj.add_(x.value)) {\n    obj.changed.dispatch();\n  }\n});\n\nregisterRPC(\"Uint64Set.delete\", function (x) {\n  const obj = this.get(x.id);\n  if (obj.delete_(x.value)) {\n    obj.changed.dispatch();\n  }\n});\n\nregisterRPC(\"Uint64Set.clear\", function (x) {\n  const obj = this.get(x.id);\n  if (obj.hashTable.clear()) {\n    obj.changed.dispatch();\n  }\n});\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VisibleSegmentEquivalencePolicy } from \"#src/segmentation_graph/segment_id.js\";\nimport type { SharedDisjointUint64Sets } from \"#src/shared_disjoint_sets.js\";\nimport type { SharedWatchableValue } from \"#src/shared_watchable_value.js\";\nimport type { Uint64OrderedSet } from \"#src/uint64_ordered_set.js\";\nimport type { Uint64Set } from \"#src/uint64_set.js\";\nimport type { RefCounted } from \"#src/util/disposable.js\";\nimport type { Uint64 } from \"#src/util/uint64.js\";\n\nexport interface VisibleSegmentsState {\n  visibleSegments: Uint64Set;\n  selectedSegments: Uint64OrderedSet;\n  segmentEquivalences: SharedDisjointUint64Sets;\n\n  // Specifies a temporary/alternative set of segments/equivalences to use for display purposes,\n  // used for previewing a merge/split.\n  temporaryVisibleSegments: Uint64Set;\n  temporarySegmentEquivalences: SharedDisjointUint64Sets;\n  useTemporaryVisibleSegments: SharedWatchableValue<boolean>;\n  useTemporarySegmentEquivalences: SharedWatchableValue<boolean>;\n}\n\nexport const VISIBLE_SEGMENTS_STATE_PROPERTIES = [\n  \"visibleSegments\",\n  \"segmentEquivalences\",\n  \"temporaryVisibleSegments\",\n  \"temporarySegmentEquivalences\",\n  \"useTemporaryVisibleSegments\",\n  \"useTemporarySegmentEquivalences\",\n] as const;\n\nexport function onVisibleSegmentsStateChanged(\n  context: RefCounted,\n  state: VisibleSegmentsState,\n  callback: () => void,\n) {\n  context.registerDisposer(state.visibleSegments.changed.add(callback));\n  context.registerDisposer(state.segmentEquivalences.changed.add(callback));\n}\n\nexport function onTemporaryVisibleSegmentsStateChanged(\n  context: RefCounted,\n  state: VisibleSegmentsState,\n  callback: () => void,\n) {\n  context.registerDisposer(\n    state.temporaryVisibleSegments.changed.add(callback),\n  );\n  context.registerDisposer(\n    state.temporarySegmentEquivalences.changed.add(callback),\n  );\n  context.registerDisposer(\n    state.useTemporaryVisibleSegments.changed.add(callback),\n  );\n  context.registerDisposer(\n    state.useTemporarySegmentEquivalences.changed.add(callback),\n  );\n}\n\n/**\n * Returns a string key for identifying a uint64 object id.  This is faster than\n * Uint64.prototype.toString().\n */\nexport function getObjectKey(objectId: Uint64): string {\n  return `${objectId.low},${objectId.high}`;\n}\n\nfunction isHighBitSegment(segmentId: Uint64): boolean {\n  return segmentId.high >>> 31 ? true : false;\n}\n\nexport function getVisibleSegments(state: VisibleSegmentsState) {\n  return state.useTemporaryVisibleSegments.value\n    ? state.temporaryVisibleSegments\n    : state.visibleSegments;\n}\n\nexport function getSegmentEquivalences(state: VisibleSegmentsState) {\n  return state.useTemporarySegmentEquivalences.value\n    ? state.temporarySegmentEquivalences\n    : state.segmentEquivalences;\n}\n\nexport function forEachVisibleSegment(\n  state: VisibleSegmentsState,\n  callback: (objectId: Uint64, rootObjectId: Uint64) => void,\n) {\n  const visibleSegments = getVisibleSegments(state);\n  const segmentEquivalences = getSegmentEquivalences(state);\n  const equivalencePolicy =\n    segmentEquivalences.disjointSets.visibleSegmentEquivalencePolicy.value;\n  for (const rootObjectId of visibleSegments.unsafeKeys()) {\n    if (\n      equivalencePolicy &\n      VisibleSegmentEquivalencePolicy.NONREPRESENTATIVE_EXCLUDED\n    ) {\n      const rootObjectId2 = segmentEquivalences.get(rootObjectId);\n      callback(rootObjectId, rootObjectId2);\n    } else {\n      // TODO(jbms): Remove this check if logic is added to ensure that it always holds.\n      if (!segmentEquivalences.disjointSets.isMinElement(rootObjectId)) {\n        continue;\n      }\n      for (const objectId of segmentEquivalences.setElements(rootObjectId)) {\n        if (\n          equivalencePolicy &\n            VisibleSegmentEquivalencePolicy.REPRESENTATIVE_EXCLUDED &&\n          equivalencePolicy &\n            VisibleSegmentEquivalencePolicy.MAX_REPRESENTATIVE &&\n          isHighBitSegment(objectId)\n        ) {\n          continue;\n        }\n        callback(objectId, rootObjectId);\n      }\n    }\n  }\n}\n\nexport interface IndexedSegmentProperty {\n  id: string;\n  type: \"string\";\n  description: string | undefined;\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Import to register the shared object types.\nimport \"#src/shared_disjoint_sets.js\";\nimport \"#src/uint64_map.js\";\nimport \"#src/uint64_set.js\";\n\nimport type { ChunkRequester } from \"#src/chunk_manager/backend.js\";\nimport { ChunkSource } from \"#src/chunk_manager/backend.js\";\nimport type { RenderLayerTransformOrError } from \"#src/render_coordinate_transform.js\";\nimport type {\n  IndexedSegmentProperty,\n  VisibleSegmentsState,\n} from \"#src/segmentation_display_state/base.js\";\nimport {\n  onTemporaryVisibleSegmentsStateChanged,\n  onVisibleSegmentsStateChanged,\n  VISIBLE_SEGMENTS_STATE_PROPERTIES,\n} from \"#src/segmentation_display_state/base.js\";\nimport type { SharedDisjointUint64Sets } from \"#src/shared_disjoint_sets.js\";\nimport type { SharedWatchableValue } from \"#src/shared_watchable_value.js\";\nimport type { Uint64OrderedSet } from \"#src/uint64_ordered_set.js\";\nimport type { Uint64Set } from \"#src/uint64_set.js\";\nimport type { AnyConstructor } from \"#src/util/mixin.js\";\nimport type { RPC } from \"#src/worker_rpc.js\";\n\nexport function receiveVisibleSegmentsState(\n  rpc: RPC,\n  options: any,\n  target: VisibleSegmentsState = {} as VisibleSegmentsState,\n): VisibleSegmentsState {\n  // No need to increase the reference count of these properties since our owner will hold a\n  // reference to their owners.\n  for (const property of VISIBLE_SEGMENTS_STATE_PROPERTIES) {\n    target[property] = rpc.get(options[property]);\n  }\n  return target;\n}\n\nexport const withSegmentationLayerBackendState = <\n  TBase extends AnyConstructor<ChunkRequester>,\n>(\n  Base: TBase,\n) =>\n  class SegmentationLayerState extends Base implements VisibleSegmentsState {\n    visibleSegments: Uint64Set;\n    selectedSegments: Uint64OrderedSet;\n    segmentEquivalences: SharedDisjointUint64Sets;\n    temporaryVisibleSegments: Uint64Set;\n    temporarySegmentEquivalences: SharedDisjointUint64Sets;\n    useTemporaryVisibleSegments: SharedWatchableValue<boolean>;\n    useTemporarySegmentEquivalences: SharedWatchableValue<boolean>;\n    transform: SharedWatchableValue<RenderLayerTransformOrError>;\n    renderScaleTarget: SharedWatchableValue<number>;\n    constructor(...args: any[]) {\n      const [rpc, options] = args as [RPC, any];\n      super(rpc, options);\n      receiveVisibleSegmentsState(rpc, options, this);\n      this.transform = rpc.get(options.transform);\n      this.renderScaleTarget = rpc.get(options.renderScaleTarget);\n\n      const scheduleUpdateChunkPriorities = () => {\n        this.chunkManager.scheduleUpdateChunkPriorities();\n      };\n      onTemporaryVisibleSegmentsStateChanged(\n        this,\n        this,\n        scheduleUpdateChunkPriorities,\n      );\n      onVisibleSegmentsStateChanged(this, this, scheduleUpdateChunkPriorities);\n      this.registerDisposer(\n        this.transform.changed.add(scheduleUpdateChunkPriorities),\n      );\n      this.registerDisposer(\n        this.renderScaleTarget.changed.add(scheduleUpdateChunkPriorities),\n      );\n    }\n  };\n\nexport class IndexedSegmentPropertySourceBackend extends ChunkSource {\n  properties: readonly Readonly<IndexedSegmentProperty>[];\n  constructor(rpc: RPC, options: any) {\n    super(rpc, options);\n    this.properties = options.properties;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { AnnotationGeometryChunkSpecification } from \"#src/annotation/base.js\";\nimport {\n  ANNOTATION_COMMIT_UPDATE_RESULT_RPC_ID,\n  ANNOTATION_COMMIT_UPDATE_RPC_ID,\n  ANNOTATION_METADATA_CHUNK_SOURCE_RPC_ID,\n  ANNOTATION_PERSPECTIVE_RENDER_LAYER_UPDATE_SOURCES_RPC_ID,\n  ANNOTATION_REFERENCE_ADD_RPC_ID,\n  ANNOTATION_REFERENCE_DELETE_RPC_ID,\n  ANNOTATION_RENDER_LAYER_RPC_ID,\n  ANNOTATION_RENDER_LAYER_UPDATE_SEGMENTATION_RPC_ID,\n  ANNOTATION_SPATIALLY_INDEXED_RENDER_LAYER_RPC_ID,\n  ANNOTATION_SUBSET_GEOMETRY_CHUNK_SOURCE_RPC_ID,\n  forEachVisibleAnnotationChunk,\n} from \"#src/annotation/base.js\";\nimport type {\n  Annotation,\n  AnnotationId,\n  SerializedAnnotations,\n} from \"#src/annotation/index.js\";\nimport { fixAnnotationAfterStructuredCloning } from \"#src/annotation/index.js\";\nimport type { ChunkManager } from \"#src/chunk_manager/backend.js\";\nimport {\n  Chunk,\n  ChunkRenderLayerBackend,\n  ChunkSource,\n  withChunkManager,\n} from \"#src/chunk_manager/backend.js\";\nimport { ChunkPriorityTier, ChunkState } from \"#src/chunk_manager/base.js\";\nimport type { DisplayDimensionRenderInfo } from \"#src/navigation_state.js\";\nimport { validateDisplayDimensionRenderInfoProperty } from \"#src/navigation_state.js\";\nimport type {\n  RenderedViewBackend,\n  RenderLayerBackendAttachment,\n} from \"#src/render_layer_backend.js\";\nimport { RenderLayerBackend } from \"#src/render_layer_backend.js\";\nimport { receiveVisibleSegmentsState } from \"#src/segmentation_display_state/backend.js\";\nimport type { VisibleSegmentsState } from \"#src/segmentation_display_state/base.js\";\nimport {\n  forEachVisibleSegment,\n  getObjectKey,\n  onTemporaryVisibleSegmentsStateChanged,\n  onVisibleSegmentsStateChanged,\n} from \"#src/segmentation_display_state/base.js\";\nimport type { SharedWatchableValue } from \"#src/shared_watchable_value.js\";\nimport {\n  deserializeTransformedSources,\n  SCALE_PRIORITY_MULTIPLIER,\n  SliceViewChunk,\n  SliceViewChunkSourceBackend,\n} from \"#src/sliceview/backend.js\";\nimport type { TransformedSource } from \"#src/sliceview/base.js\";\nimport { registerNested, WatchableValue } from \"#src/trackable_value.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport type { Borrowed } from \"#src/util/disposable.js\";\nimport type { Uint64 } from \"#src/util/uint64.js\";\nimport {\n  getBasePriority,\n  getPriorityTier,\n  withSharedVisibility,\n} from \"#src/visibility_priority/backend.js\";\nimport type { RPC } from \"#src/worker_rpc.js\";\nimport {\n  registerRPC,\n  registerSharedObject,\n  SharedObjectCounterpart,\n} from \"#src/worker_rpc.js\";\n\nconst ANNOTATION_METADATA_CHUNK_PRIORITY = 200;\nconst ANNOTATION_SEGMENT_FILTERED_CHUNK_PRIORITY = 60;\n\nexport class AnnotationMetadataChunk extends Chunk {\n  annotation: Annotation | undefined | null;\n  freeSystemMemory() {\n    this.annotation = undefined;\n  }\n  serialize(msg: any, transfers: any[]) {\n    super.serialize(msg, transfers);\n    msg.annotation = this.annotation;\n  }\n  downloadSucceeded() {\n    this.systemMemoryBytes = this.gpuMemoryBytes = 0;\n    super.downloadSucceeded();\n  }\n}\n\nexport class AnnotationGeometryData implements SerializedAnnotations {\n  data: Uint8Array;\n  typeToOffset: number[];\n  typeToIds: string[][];\n  typeToIdMaps: Map<string, number>[];\n\n  serialize(msg: any, transfers: any[]) {\n    msg.data = this.data;\n    msg.typeToOffset = this.typeToOffset;\n    msg.typeToIds = this.typeToIds;\n    msg.typeToIdMaps = this.typeToIdMaps;\n    transfers.push(this.data.buffer);\n  }\n\n  get numBytes() {\n    return this.data.byteLength;\n  }\n}\n\nfunction GeometryChunkMixin<TBase extends { new (...args: any[]): Chunk }>(\n  Base: TBase,\n) {\n  class C extends Base {\n    data: AnnotationGeometryData | undefined;\n    serialize(msg: any, transfers: any[]) {\n      super.serialize(msg, transfers);\n      const { data } = this;\n      if (data !== undefined) {\n        data.serialize(msg, transfers);\n        this.data = undefined;\n      }\n    }\n\n    downloadSucceeded() {\n      const { data } = this;\n      this.systemMemoryBytes = this.gpuMemoryBytes =\n        data === undefined ? 0 : data.numBytes;\n      super.downloadSucceeded();\n    }\n\n    freeSystemMemory() {\n      this.data = undefined;\n    }\n  }\n  return C;\n}\n\nexport class AnnotationGeometryChunk extends GeometryChunkMixin(\n  SliceViewChunk,\n) {\n  source: AnnotationGeometryChunkSourceBackend;\n}\n\nexport class AnnotationSubsetGeometryChunk extends GeometryChunkMixin(Chunk) {\n  source: AnnotationSubsetGeometryChunkSource;\n  objectId: Uint64;\n}\n\n@registerSharedObject(ANNOTATION_METADATA_CHUNK_SOURCE_RPC_ID)\nclass AnnotationMetadataChunkSource extends ChunkSource {\n  parent: Borrowed<AnnotationSource> | undefined = undefined;\n  getChunk(id: string) {\n    const { chunks } = this;\n    let chunk = chunks.get(id);\n    if (chunk === undefined) {\n      chunk = this.getNewChunk_(AnnotationMetadataChunk);\n      chunk.initialize(id);\n      this.addChunk(chunk);\n    }\n    return chunk;\n  }\n\n  download(\n    chunk: AnnotationMetadataChunk,\n    cancellationToken: CancellationToken,\n  ) {\n    return this.parent!.downloadMetadata(chunk, cancellationToken);\n  }\n}\n\nexport class AnnotationGeometryChunkSourceBackend extends SliceViewChunkSourceBackend<\n  AnnotationGeometryChunkSpecification,\n  AnnotationGeometryChunk\n> {\n  parent: Borrowed<AnnotationSource>;\n  constructor(rpc: RPC, options: any) {\n    super(rpc, options);\n    this.parent = rpc.get(options.parent);\n  }\n}\nAnnotationGeometryChunkSourceBackend.prototype.chunkConstructor =\n  AnnotationGeometryChunk;\n\n@registerSharedObject(ANNOTATION_SUBSET_GEOMETRY_CHUNK_SOURCE_RPC_ID)\nclass AnnotationSubsetGeometryChunkSource extends ChunkSource {\n  parent: Borrowed<AnnotationSource> | undefined = undefined;\n  chunks: Map<string, AnnotationSubsetGeometryChunk>;\n  relationshipIndex: number;\n  getChunk(objectId: Uint64) {\n    const key = getObjectKey(objectId);\n    const { chunks } = this;\n    let chunk = chunks.get(key);\n    if (chunk === undefined) {\n      chunk = this.getNewChunk_(AnnotationSubsetGeometryChunk);\n      chunk.initialize(key);\n      chunk.objectId = objectId.clone();\n      this.addChunk(chunk);\n    }\n    return chunk;\n  }\n  download(\n    chunk: AnnotationSubsetGeometryChunk,\n    cancellationToken: CancellationToken,\n  ) {\n    return this.parent!.downloadSegmentFilteredGeometry(\n      chunk,\n      this.relationshipIndex,\n      cancellationToken,\n    );\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nexport interface AnnotationSource {\n  // TODO(jbms): Move this declaration to class definition below and declare abstract once\n  // TypeScript supports mixins with abstract classes.\n  downloadMetadata(\n    chunk: AnnotationMetadataChunk,\n    cancellationToken: CancellationToken,\n  ): Promise<void>;\n  downloadSegmentFilteredGeometry(\n    chunk: AnnotationSubsetGeometryChunk,\n    relationshipIndex: number,\n    cancellationToken: CancellationToken,\n  ): Promise<void>;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nexport class AnnotationSource extends SharedObjectCounterpart {\n  references = new Set<AnnotationId>();\n  chunkManager: Borrowed<ChunkManager>;\n  metadataChunkSource: AnnotationMetadataChunkSource;\n  segmentFilteredSources: AnnotationSubsetGeometryChunkSource[];\n  constructor(rpc: RPC, options: any) {\n    super(rpc, options);\n    const chunkManager = (this.chunkManager = <ChunkManager>(\n      rpc.get(options.chunkManager)\n    ));\n    const metadataChunkSource = (this.metadataChunkSource =\n      this.registerDisposer(\n        rpc.getRef<AnnotationMetadataChunkSource>(options.metadataChunkSource),\n      ));\n    this.segmentFilteredSources = (options.segmentFilteredSource as any[]).map(\n      (x, i) => {\n        const source = this.registerDisposer(\n          rpc.getRef<AnnotationSubsetGeometryChunkSource>(x),\n        );\n        source.parent = this;\n        source.relationshipIndex = i;\n        return source;\n      },\n    );\n    metadataChunkSource.parent = this;\n    this.registerDisposer(\n      chunkManager.recomputeChunkPriorities.add(() =>\n        this.recomputeChunkPriorities(),\n      ),\n    );\n  }\n\n  private recomputeChunkPriorities() {\n    const { chunkManager, metadataChunkSource } = this;\n    for (const id of this.references) {\n      chunkManager.requestChunk(\n        metadataChunkSource.getChunk(id),\n        ChunkPriorityTier.VISIBLE,\n        ANNOTATION_METADATA_CHUNK_PRIORITY,\n      );\n    }\n  }\n\n  add(annotation: Annotation): Promise<AnnotationId> {\n    annotation;\n    throw new Error(\"Not implemented\");\n  }\n  delete(id: AnnotationId): Promise<void> {\n    id;\n    throw new Error(\"Not implemented\");\n  }\n  update(id: AnnotationId, newAnnotation: Annotation): Promise<void> {\n    id;\n    newAnnotation;\n    throw new Error(\"Not implemented\");\n  }\n}\n\nregisterRPC(ANNOTATION_REFERENCE_ADD_RPC_ID, function (x: any) {\n  const obj = <AnnotationSource>this.get(x.id);\n  obj.references.add(x.annotation);\n  obj.chunkManager.scheduleUpdateChunkPriorities();\n});\n\nregisterRPC(ANNOTATION_REFERENCE_DELETE_RPC_ID, function (x: any) {\n  const obj = <AnnotationSource>this.get(x.id);\n  obj.references.delete(x.annotation);\n  obj.chunkManager.scheduleUpdateChunkPriorities();\n});\n\nregisterRPC(ANNOTATION_COMMIT_UPDATE_RPC_ID, function (x: any) {\n  const obj = <AnnotationSource>this.get(x.id);\n  const annotationId: AnnotationId | undefined = x.annotationId;\n  const newAnnotation: Annotation | null = fixAnnotationAfterStructuredCloning(\n    x.newAnnotation,\n  );\n\n  let promise: Promise<Annotation | null>;\n  if (annotationId === undefined) {\n    promise = obj.add(newAnnotation!).then((id) => ({ ...newAnnotation!, id }));\n  } else if (newAnnotation === null) {\n    promise = obj.delete(annotationId).then(() => null);\n  } else {\n    promise = obj.update(annotationId, newAnnotation).then(() => newAnnotation);\n  }\n  // FIXME: Handle new chunks requested prior to update but not yet sent to frontend.\n  promise.then(\n    (result) => {\n      if (!obj.wasDisposed) {\n        this.invoke(ANNOTATION_COMMIT_UPDATE_RESULT_RPC_ID, {\n          id: obj.rpcId,\n          annotationId: annotationId || newAnnotation!.id,\n          newAnnotation: result,\n        });\n      }\n    },\n    (error: Error) => {\n      if (!obj.wasDisposed) {\n        this.invoke(ANNOTATION_COMMIT_UPDATE_RESULT_RPC_ID, {\n          id: obj.rpcId,\n          annotationId: annotationId || newAnnotation?.id,\n          error: error.message,\n        });\n      }\n    },\n  );\n});\n\ninterface AnnotationRenderLayerAttachmentState {\n  displayDimensionRenderInfo: DisplayDimensionRenderInfo;\n  transformedSources: TransformedSource<\n    AnnotationSpatiallyIndexedRenderLayerBackend,\n    AnnotationGeometryChunkSourceBackend\n  >[][];\n}\n\n@registerSharedObject(ANNOTATION_SPATIALLY_INDEXED_RENDER_LAYER_RPC_ID)\nclass AnnotationSpatiallyIndexedRenderLayerBackend extends withChunkManager(\n  RenderLayerBackend,\n) {\n  localPosition: SharedWatchableValue<Float32Array>;\n  renderScaleTarget: SharedWatchableValue<number>;\n\n  constructor(rpc: RPC, options: any) {\n    super(rpc, options);\n    this.renderScaleTarget = rpc.get(options.renderScaleTarget);\n    this.localPosition = rpc.get(options.localPosition);\n    const scheduleUpdateChunkPriorities = () =>\n      this.chunkManager.scheduleUpdateChunkPriorities();\n    this.registerDisposer(\n      this.localPosition.changed.add(scheduleUpdateChunkPriorities),\n    );\n    this.registerDisposer(\n      this.renderScaleTarget.changed.add(scheduleUpdateChunkPriorities),\n    );\n    this.registerDisposer(\n      this.chunkManager.recomputeChunkPriorities.add(() =>\n        this.recomputeChunkPriorities(),\n      ),\n    );\n  }\n\n  attach(\n    attachment: RenderLayerBackendAttachment<\n      RenderedViewBackend,\n      AnnotationRenderLayerAttachmentState\n    >,\n  ) {\n    const scheduleUpdateChunkPriorities = () =>\n      this.chunkManager.scheduleUpdateChunkPriorities();\n    const { view } = attachment;\n    attachment.registerDisposer(scheduleUpdateChunkPriorities);\n    attachment.registerDisposer(\n      view.projectionParameters.changed.add(scheduleUpdateChunkPriorities),\n    );\n    attachment.registerDisposer(\n      view.visibility.changed.add(scheduleUpdateChunkPriorities),\n    );\n    attachment.state = {\n      displayDimensionRenderInfo:\n        view.projectionParameters.value.displayDimensionRenderInfo,\n      transformedSources: [],\n    };\n  }\n\n  private recomputeChunkPriorities() {\n    this.chunkManager.registerLayer(this);\n    for (const attachment of this.attachments.values()) {\n      const { view } = attachment;\n      const visibility = view.visibility.value;\n      if (visibility === Number.NEGATIVE_INFINITY) {\n        continue;\n      }\n      const attachmentState =\n        attachment.state! as AnnotationRenderLayerAttachmentState;\n      const { transformedSources } = attachmentState;\n      if (\n        transformedSources.length === 0 ||\n        !validateDisplayDimensionRenderInfoProperty(\n          attachmentState,\n          view.projectionParameters.value.displayDimensionRenderInfo,\n        )\n      ) {\n        continue;\n      }\n      const priorityTier = getPriorityTier(visibility);\n      const basePriority = getBasePriority(visibility);\n\n      const projectionParameters = view.projectionParameters.value;\n\n      const { chunkManager } = this;\n      forEachVisibleAnnotationChunk(\n        projectionParameters,\n        this.localPosition.value,\n        this.renderScaleTarget.value,\n        transformedSources[0],\n        () => {},\n        (tsource, scaleIndex) => {\n          const chunk = (\n            tsource.source as AnnotationGeometryChunkSourceBackend\n          ).getChunk(tsource.curPositionInChunks);\n          ++this.numVisibleChunksNeeded;\n          // FIXME: calculate priority\n          if (chunk.state === ChunkState.GPU_MEMORY) {\n            ++this.numVisibleChunksAvailable;\n          }\n          const priority = 0;\n          chunkManager.requestChunk(\n            chunk,\n            priorityTier,\n            basePriority + priority + SCALE_PRIORITY_MULTIPLIER * scaleIndex,\n          );\n        },\n      );\n    }\n  }\n}\nAnnotationSpatiallyIndexedRenderLayerBackend;\n\nregisterRPC(\n  ANNOTATION_PERSPECTIVE_RENDER_LAYER_UPDATE_SOURCES_RPC_ID,\n  function (x) {\n    const view = this.get(x.view) as RenderedViewBackend;\n    const layer = this.get(\n      x.layer,\n    ) as AnnotationSpatiallyIndexedRenderLayerBackend;\n    const attachment = layer.attachments.get(\n      view,\n    )! as RenderLayerBackendAttachment<\n      RenderedViewBackend,\n      AnnotationRenderLayerAttachmentState\n    >;\n    attachment.state!.transformedSources = deserializeTransformedSources<\n      AnnotationGeometryChunkSourceBackend,\n      AnnotationSpatiallyIndexedRenderLayerBackend\n    >(this, x.sources, layer);\n    attachment.state!.displayDimensionRenderInfo = x.displayDimensionRenderInfo;\n    layer.chunkManager.scheduleUpdateChunkPriorities();\n  },\n);\n\ntype AnnotationLayerSegmentationState = VisibleSegmentsState | undefined | null;\n\n@registerSharedObject(ANNOTATION_RENDER_LAYER_RPC_ID)\nclass AnnotationLayerSharedObjectCounterpart extends withSharedVisibility(\n  withChunkManager(ChunkRenderLayerBackend),\n) {\n  source: AnnotationSource;\n\n  segmentationStates: WatchableValue<\n    AnnotationLayerSegmentationState[] | undefined\n  >;\n\n  constructor(rpc: RPC, options: any) {\n    super(rpc, options);\n    this.source = rpc.get(options.source);\n    this.segmentationStates = new WatchableValue(\n      this.getSegmentationState(options.segmentationStates),\n    );\n\n    const scheduleUpdateChunkPriorities = () =>\n      this.chunkManager.scheduleUpdateChunkPriorities();\n    this.registerDisposer(\n      registerNested((context, states) => {\n        if (states === undefined) return;\n        for (const state of states) {\n          if (state == null) continue;\n          onVisibleSegmentsStateChanged(\n            context,\n            state,\n            scheduleUpdateChunkPriorities,\n          );\n          onTemporaryVisibleSegmentsStateChanged(\n            context,\n            state,\n            scheduleUpdateChunkPriorities,\n          );\n        }\n        scheduleUpdateChunkPriorities();\n      }, this.segmentationStates),\n    );\n    this.registerDisposer(\n      this.chunkManager.recomputeChunkPriorities.add(() =>\n        this.recomputeChunkPriorities(),\n      ),\n    );\n  }\n\n  private recomputeChunkPriorities() {\n    const visibility = this.visibility.value;\n    if (visibility === Number.NEGATIVE_INFINITY) {\n      return;\n    }\n    const {\n      segmentationStates: { value: states },\n      source: { segmentFilteredSources },\n    } = this;\n    if (states === undefined) return;\n    const { chunkManager } = this;\n    chunkManager.registerLayer(this);\n    const numRelationships = states.length;\n    for (let i = 0; i < numRelationships; ++i) {\n      const state = states[i];\n      if (state == null) {\n        continue;\n      }\n      const priorityTier = getPriorityTier(visibility);\n      const basePriority = getBasePriority(visibility);\n      const source = segmentFilteredSources[i];\n      forEachVisibleSegment(state, (objectId) => {\n        const chunk = source.getChunk(objectId);\n        ++this.numVisibleChunksNeeded;\n        if (chunk.state === ChunkState.GPU_MEMORY) {\n          ++this.numVisibleChunksAvailable;\n        }\n        chunkManager.requestChunk(\n          chunk,\n          priorityTier,\n          basePriority + ANNOTATION_SEGMENT_FILTERED_CHUNK_PRIORITY,\n        );\n      });\n    }\n  }\n\n  getSegmentationState(\n    msg: any[] | undefined,\n  ): AnnotationLayerSegmentationState[] | undefined {\n    if (msg === undefined) return undefined;\n    return msg.map((x) => {\n      if (x == null) {\n        return x as undefined | null;\n      }\n      return receiveVisibleSegmentsState(this.rpc!, x);\n    });\n  }\n}\nAnnotationLayerSharedObjectCounterpart;\n\nregisterRPC(ANNOTATION_RENDER_LAYER_UPDATE_SEGMENTATION_RPC_ID, function (x) {\n  const obj = <AnnotationLayerSharedObjectCounterpart>this.get(x.id);\n  obj.segmentationStates.value = obj.getSegmentationState(x.segmentationStates);\n});\n","/**\n * @license\n * Copyright 2017 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Generic facility for providing authentication/authorization credentials.\n */\n\nimport type { OAuth2Credentials } from \"#src/credentials_provider/oauth2.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport { MultipleConsumerCancellationTokenSource } from \"#src/util/cancellation.js\";\nimport type { Owned } from \"#src/util/disposable.js\";\nimport { RefCounted } from \"#src/util/disposable.js\";\nimport type { HttpError } from \"#src/util/http_request.js\";\nimport { StringMemoize } from \"#src/util/memoize.js\";\n\n/**\n * Wraps an arbitrary JSON credentials object with a generation number.\n *\n * The generation number is used for tracking whether the credentials have been updated/renewed.\n */\nexport interface CredentialsWithGeneration<T> {\n  generation: number;\n  credentials: T;\n}\n\nexport abstract class CredentialsProvider<Credentials> extends RefCounted {\n  /**\n   * Request valid credentials.  If `invalidCredentials` is specified, it indicates that the\n   * specified credentials are invalid.\n   *\n   * This method can be conveniently defined using the `makeCredentialsGetter` function.\n   */\n  abstract get: (\n    invalidCredentials?: CredentialsWithGeneration<Credentials>,\n    cancellationToken?: CancellationToken,\n  ) => Promise<CredentialsWithGeneration<Credentials>>;\n\n  errorHandler? = async (\n    error: HttpError,\n    credentials: OAuth2Credentials,\n  ): Promise<\"refresh\"> => {\n    const { status } = error;\n    if (status === 401) {\n      // 401: Authorization needed.  OAuth2 token may have expired.\n      return \"refresh\";\n    }\n    if (status === 403 && !credentials.accessToken) {\n      // Anonymous access denied.  Request credentials.\n      return \"refresh\";\n    }\n    if (error instanceof Error && credentials.email !== undefined) {\n      error.message += `  (Using credentials for ${JSON.stringify(\n        credentials.email,\n      )})`;\n    }\n    throw error;\n  };\n}\n\nexport function makeCachedCredentialsGetter<Credentials>(\n  getUncached: (\n    invalidCredentials: CredentialsWithGeneration<Credentials> | undefined,\n    cancellationToken: CancellationToken,\n  ) => Promise<CredentialsWithGeneration<Credentials>>,\n) {\n  let cachedCredentials: CredentialsWithGeneration<Credentials> | undefined;\n  let pendingCredentials:\n    | Promise<CredentialsWithGeneration<Credentials>>\n    | undefined;\n  let pendingCancellationToken:\n    | MultipleConsumerCancellationTokenSource\n    | undefined;\n  return (\n    invalidCredentials?: CredentialsWithGeneration<Credentials>,\n    cancellationToken?: CancellationToken,\n  ) => {\n    if (\n      pendingCredentials !== undefined &&\n      (cachedCredentials === undefined ||\n        invalidCredentials === undefined ||\n        cachedCredentials.generation !== invalidCredentials.generation)\n    ) {\n      if (cachedCredentials === undefined) {\n        pendingCancellationToken!.addConsumer(cancellationToken);\n      }\n      return pendingCredentials;\n    }\n    cachedCredentials = undefined;\n    pendingCancellationToken = new MultipleConsumerCancellationTokenSource();\n    pendingCredentials = getUncached(\n      invalidCredentials,\n      pendingCancellationToken,\n    ).then(\n      (credentials) => {\n        cachedCredentials = credentials;\n        pendingCancellationToken = undefined;\n        return credentials;\n      },\n      (reason) => {\n        if (pendingCancellationToken!.isCanceled) {\n          pendingCancellationToken = undefined;\n          pendingCredentials = undefined;\n        }\n        throw reason;\n      },\n    );\n    return pendingCredentials;\n  };\n}\n\nexport function makeCredentialsGetter<Credentials>(\n  getWithoutGeneration: (\n    cancellationToken: CancellationToken,\n  ) => Promise<Credentials>,\n) {\n  let generation = 0;\n  return makeCachedCredentialsGetter<Credentials>(\n    (_invalidCredentials, cancellationToken) =>\n      getWithoutGeneration(cancellationToken).then((credentials) => ({\n        generation: ++generation,\n        credentials,\n      })),\n  );\n}\n\n/**\n * Interface for obtaining a CredentialsProvider based on a string key.\n */\nexport interface CredentialsManager {\n  getCredentialsProvider<Credentials>(\n    key: string,\n    parameters?: any,\n  ): Owned<CredentialsProvider<Credentials>>;\n}\n\nexport type ProviderGetter<Credentials> = (\n  parameters: any,\n  credentialsManager: CredentialsManager,\n) => Owned<CredentialsProvider<Credentials>>;\n\n/**\n * CredentialsManager that supports registration.\n */\nexport class MapBasedCredentialsManager implements CredentialsManager {\n  providers = new Map<\n    string,\n    (\n      parameters: any,\n      credentialsManager: CredentialsManager,\n    ) => Owned<CredentialsProvider<any>>\n  >();\n  topLevelManager: CredentialsManager = this;\n  register<Credentials>(\n    key: string,\n    providerGetter: ProviderGetter<Credentials>,\n  ) {\n    this.providers.set(key, providerGetter);\n  }\n\n  getCredentialsProvider<Credentials>(\n    key: string,\n    parameters?: any,\n  ): Owned<CredentialsProvider<Credentials>> {\n    const getter = this.providers.get(key);\n    if (getter === undefined) {\n      throw new Error(\n        `No registered credentials provider: ${JSON.stringify(key)}`,\n      );\n    }\n    return getter(parameters, this.topLevelManager);\n  }\n}\n\n/**\n * CredentialsManager that wraps another and caches the CredentialsProvider objects.\n */\nexport class CachingCredentialsManager<Base extends CredentialsManager>\n  extends RefCounted\n  implements CredentialsManager\n{\n  memoize = new StringMemoize();\n\n  constructor(public base: Base) {\n    super();\n  }\n\n  getCredentialsProvider<Credentials>(\n    key: string,\n    parameters?: any,\n  ): Owned<CredentialsProvider<Credentials>> {\n    return this.memoize.get({ key, parameters }, () =>\n      this.registerDisposer(\n        this.base.getCredentialsProvider<Credentials>(key, parameters).addRef(),\n      ),\n    );\n  }\n}\n\nexport class CachingMapBasedCredentialsManager extends CachingCredentialsManager<MapBasedCredentialsManager> {\n  constructor() {\n    super(new MapBasedCredentialsManager());\n    this.base.topLevelManager = this;\n  }\n\n  register<Credentials>(\n    key: string,\n    providerGetter: ProviderGetter<Credentials>,\n  ) {\n    this.base.register(key, providerGetter);\n  }\n}\n\nexport type MaybeOptionalCredentialsProvider<T> = T extends undefined\n  ? undefined\n  : CredentialsProvider<Exclude<T, undefined>>;\n\nexport class AnonymousFirstCredentialsProvider<\n  T,\n> extends CredentialsProvider<T> {\n  private anonymous = true;\n  constructor(\n    private baseProvider: CredentialsProvider<T>,\n    private anonymousCredentials: T,\n  ) {\n    super();\n  }\n\n  get = makeCachedCredentialsGetter(\n    (invalidCredentials?: CredentialsWithGeneration<T>) => {\n      if (this.anonymous && invalidCredentials === undefined) {\n        return Promise.resolve({\n          generation: -10,\n          credentials: this.anonymousCredentials,\n        });\n      }\n      this.anonymous = false;\n      return this.baseProvider.get(invalidCredentials);\n    },\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Defines a CredentialsProvider that forwards requests to a SharedCredentialsProvider on\n * another thread.\n */\n\nimport type {\n  CredentialsProvider,\n  CredentialsWithGeneration,\n  MaybeOptionalCredentialsProvider,\n} from \"#src/credentials_provider/index.js\";\nimport { makeCachedCredentialsGetter } from \"#src/credentials_provider/index.js\";\nimport {\n  CREDENTIALS_PROVIDER_GET_RPC_ID,\n  CREDENTIALS_PROVIDER_RPC_ID,\n} from \"#src/credentials_provider/shared_common.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport {\n  registerSharedObject,\n  SharedObjectCounterpart,\n} from \"#src/worker_rpc.js\";\n\n@registerSharedObject(CREDENTIALS_PROVIDER_RPC_ID)\nexport class SharedCredentialsProviderCounterpart<Credentials>\n  extends SharedObjectCounterpart\n  implements CredentialsProvider<Credentials>\n{\n  get = makeCachedCredentialsGetter(\n    (\n      invalidCredentials?: CredentialsWithGeneration<Credentials>,\n      cancellationToken?: CancellationToken,\n    ): Promise<CredentialsWithGeneration<Credentials>> =>\n      this.rpc!.promiseInvoke(\n        CREDENTIALS_PROVIDER_GET_RPC_ID,\n        { providerId: this.rpcId, invalidCredentials: invalidCredentials },\n        cancellationToken,\n      ),\n  );\n}\n\nexport function WithSharedCredentialsProviderCounterpart<Credentials>() {\n  return <TBase extends { new (...args: any[]): SharedObjectCounterpart }>(\n    Base: TBase,\n  ) =>\n    class extends Base {\n      credentialsProvider: MaybeOptionalCredentialsProvider<Credentials>;\n      constructor(...args: any[]) {\n        super(...args);\n        const options = args[1];\n        this.credentialsProvider = this.rpc!.getOptionalRef<\n          SharedCredentialsProviderCounterpart<Exclude<Credentials, undefined>>\n        >(options.credentialsProvider) as any;\n      }\n    };\n}\n","/**\n * @license\n * Copyright 2017 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { fetchWithCredentials } from \"#src/credentials_provider/http_request.js\";\nimport type { CredentialsProvider } from \"#src/credentials_provider/index.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport { uncancelableToken } from \"#src/util/cancellation.js\";\nimport type { ResponseTransform } from \"#src/util/http_request.js\";\nimport { cancellableFetchOk } from \"#src/util/http_request.js\";\n\nexport type BossToken = string;\n\n/**\n * Key used for retrieving the CredentialsProvider from a CredentialsManager.\n */\nexport const credentialsKey = \"boss\";\n\nexport function fetchWithBossCredentials<T>(\n  credentialsProvider: CredentialsProvider<BossToken>,\n  input: RequestInfo,\n  init: RequestInit,\n  transformResponse: ResponseTransform<T>,\n  cancellationToken: CancellationToken = uncancelableToken,\n): Promise<T> {\n  return cancellableFetchOk(\n    input,\n    init,\n    transformResponse,\n    cancellationToken,\n  ).catch((error) => {\n    if (\n      error.status !== 500 &&\n      error.status !== 401 &&\n      error.status !== 403 &&\n      error.status !== 504\n    ) {\n      // Prevent an infinite loop of error = 0 where the request\n      // has been cancelled\n      throw error;\n    }\n    return fetchWithCredentials(\n      credentialsProvider,\n      input,\n      init,\n      transformResponse,\n      (credentials) => {\n        const headers = new Headers(init.headers);\n        headers.set(\"Authorization\", `Bearer ${credentials}`);\n        return { ...init, headers };\n      },\n      (error) => {\n        const { status } = error;\n        if (status === 403 || status === 401) {\n          // Authorization needed.  Retry with refreshed token.\n          return \"refresh\";\n        }\n        throw error;\n      },\n      cancellationToken,\n    );\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { mat4, vec3 } from \"#src/util/geom.js\";\nimport { isAABBVisible } from \"#src/util/geom.js\";\nimport { getOctreeChildIndex } from \"#src/util/zorder.js\";\n\nconst DEBUG_CHUNKS_TO_DRAW = false;\n\nexport interface MultiscaleMeshManifest {\n  /**\n   * Size of finest-resolution (base) chunk in object coordinates.\n   */\n  chunkShape: vec3;\n\n  /**\n   * Starting corner position of (0, 0, 0) chunk in object coordinates.\n   */\n  chunkGridSpatialOrigin: vec3;\n\n  /**\n   * Axis-aligned bounding box lower bound of object in object coordinates to use for clipping and\n   * level-of-detail calculations.\n   */\n  clipLowerBound: vec3;\n\n  /**\n   * Axis-aligned bounding box upper bound of object in object coordinates to use for clipping and\n   * level-of-detail calculations.\n   */\n  clipUpperBound: vec3;\n\n  /**\n   * Specifies the number of levels of detail (as `lodScales.length`), and the resolution in object\n   * coordinates for each level of detail.  If `lodScales[lod] === 0`, then level-of-detail `lod`\n   * does not exist.\n   *\n   * Level of detail `0` is the finest resolution.\n   *\n   * The non-zero values must be non-decreasing.\n   *\n   * For each chunk, the chosen `lod` is the largest value such that\n   * `lodScales[lod] <= detailCutoff * pixelSize`, where `pixelSize` is the maximum spatial distance\n   * spanned by a single viewport pixel within the projected image of the chunk.\n   */\n  lodScales: Float32Array;\n\n  /**\n   * C order `[numLods, 3]` array specifying the xyz vertex position offset in object coordinates\n   * for each level of detail.\n   */\n  vertexOffsets: Float32Array;\n\n  /**\n   * Row-major `[n, 5]` array where each row is of the form `[x, y, z, start, end_and_empty]`, where\n   * `x`, `y`, and `z` are the chunk grid coordinates of the entry at a particular level of detail.\n   * Row `n-1` corresponds to level of detail `lodScales.length - 1`, the root of the octree.  Given\n   * a row corresponding to an octree node at level of detail `lod`, bits `start` specifies the row\n   * number of the first child octree node at level of detail `lod-1`, and bits `[0,30]` of\n   * `end_and_empty` specify one past the row number of the last child octree node.  Bit `31` of\n   * `end_and_empty` is set to `1` if the mesh for the octree node is empty and should not be\n   * requested/rendered.\n   */\n  octree: Uint32Array;\n}\n\n/**\n * @param detailCutoff Factor by which the spatial resolution of the mesh may be worse than the\n *     spatial resolution of a single viewport pixel.  For example, a value of 10 means that if a\n *     given portion of the object will be rendered such that a pixel corresponds to 50 nm, then a\n *     mesh level of detail down to 500 nm will be requested for that portion of the object.\n */\nexport function getDesiredMultiscaleMeshChunks(\n  manifest: MultiscaleMeshManifest,\n  modelViewProjection: mat4,\n  clippingPlanes: Float32Array,\n  detailCutoff: number,\n  viewportWidth: number,\n  viewportHeight: number,\n  callback: (\n    lod: number,\n    row: number,\n    renderScale: number,\n    empty: number,\n  ) => void,\n) {\n  const { octree, lodScales, chunkGridSpatialOrigin, chunkShape } = manifest;\n  const maxLod = lodScales.length - 1;\n  const m00 = modelViewProjection[0];\n  const m01 = modelViewProjection[4];\n  const m02 = modelViewProjection[8];\n  const m10 = modelViewProjection[1];\n  const m11 = modelViewProjection[5];\n  const m12 = modelViewProjection[9];\n  const m30 = modelViewProjection[3];\n  const m31 = modelViewProjection[7];\n  const m32 = modelViewProjection[11];\n  const m33 = modelViewProjection[15];\n\n  const minWXcoeff = m30 > 0 ? 0 : 1;\n  const minWYcoeff = m31 > 0 ? 0 : 1;\n  const minWZcoeff = m32 > 0 ? 0 : 1;\n\n  const nearA = clippingPlanes[4 * 4];\n  const nearB = clippingPlanes[4 * 4 + 1];\n  const nearC = clippingPlanes[4 * 4 + 2];\n  const nearD = clippingPlanes[4 * 4 + 3];\n\n  function getPointW(x: number, y: number, z: number) {\n    return m30 * x + m31 * y + m32 * z + m33;\n  }\n\n  function getBoxW(\n    xLower: number,\n    yLower: number,\n    zLower: number,\n    xUpper: number,\n    yUpper: number,\n    zUpper: number,\n  ) {\n    return getPointW(\n      xLower + minWXcoeff * (xUpper - xLower),\n      yLower + minWYcoeff * (yUpper - yLower),\n      zLower + minWZcoeff * (zUpper - zLower),\n    );\n  }\n\n  /**\n   * Minimum value of w within clipping frustrum (under the assumption that the minimum value occurs\n   * on the near clipping plane).\n   */\n  const minWClip = getPointW(-nearD * nearA, -nearD * nearB, -nearD * nearC);\n\n  const objectXLower = manifest.clipLowerBound[0];\n  const objectYLower = manifest.clipLowerBound[1];\n  const objectZLower = manifest.clipLowerBound[2];\n  const objectXUpper = manifest.clipUpperBound[0];\n  const objectYUpper = manifest.clipUpperBound[1];\n  const objectZUpper = manifest.clipUpperBound[2];\n\n  const xScale = Math.sqrt(\n    (m00 * viewportWidth) ** 2 + (m10 * viewportHeight) ** 2,\n  );\n  const yScale = Math.sqrt(\n    (m01 * viewportWidth) ** 2 + (m11 * viewportHeight) ** 2,\n  );\n  const zScale = Math.sqrt(\n    (m02 * viewportWidth) ** 2 + (m12 * viewportHeight) ** 2,\n  );\n\n  const scaleFactor = Math.max(xScale, yScale, zScale);\n\n  function handleChunk(lod: number, row: number, priorLodScale: number) {\n    const size = 1 << lod;\n    const rowOffset = row * 5;\n    const gridX = octree[rowOffset];\n    const gridY = octree[rowOffset + 1];\n    const gridZ = octree[rowOffset + 2];\n    const childBegin = octree[rowOffset + 3];\n    const childEndAndEmpty = octree[rowOffset + 4];\n    let xLower = gridX * size * chunkShape[0] + chunkGridSpatialOrigin[0];\n    let yLower = gridY * size * chunkShape[1] + chunkGridSpatialOrigin[1];\n    let zLower = gridZ * size * chunkShape[2] + chunkGridSpatialOrigin[2];\n    let xUpper = xLower + size * chunkShape[0];\n    let yUpper = yLower + size * chunkShape[1];\n    let zUpper = zLower + size * chunkShape[2];\n    xLower = Math.max(xLower, objectXLower);\n    yLower = Math.max(yLower, objectYLower);\n    zLower = Math.max(zLower, objectZLower);\n    xUpper = Math.min(xUpper, objectXUpper);\n    yUpper = Math.min(yUpper, objectYUpper);\n    zUpper = Math.min(zUpper, objectZUpper);\n\n    if (\n      isAABBVisible(\n        xLower,\n        yLower,\n        zLower,\n        xUpper,\n        yUpper,\n        zUpper,\n        clippingPlanes,\n      )\n    ) {\n      const minW = Math.max(\n        minWClip,\n        getBoxW(xLower, yLower, zLower, xUpper, yUpper, zUpper),\n      );\n      const pixelSize = minW / scaleFactor;\n\n      if (priorLodScale === 0 || pixelSize * detailCutoff < priorLodScale) {\n        const lodScale = lodScales[lod];\n        if (lodScale !== 0) {\n          callback(lod, row, lodScale / pixelSize, childEndAndEmpty >>> 31);\n        }\n\n        if (\n          lod > 0 &&\n          (lodScale === 0 || pixelSize * detailCutoff < lodScale)\n        ) {\n          const nextPriorLodScale = lodScale === 0 ? priorLodScale : lodScale;\n          const childEnd = (childEndAndEmpty & 0x7fffffff) >>> 0;\n          for (let childRow = childBegin; childRow < childEnd; ++childRow) {\n            handleChunk(lod - 1, childRow, nextPriorLodScale);\n          }\n        }\n      }\n    }\n  }\n  handleChunk(maxLod, octree.length / 5 - 1, 0);\n}\n\nexport function getMultiscaleChunksToDraw(\n  manifest: MultiscaleMeshManifest,\n  modelViewProjection: mat4,\n  clippingPlanes: Float32Array,\n  detailCutoff: number,\n  viewportWidth: number,\n  viewportHeight: number,\n  hasChunk: (lod: number, row: number, renderScale: number) => boolean,\n  callback: (\n    lod: number,\n    row: number,\n    subChunkBegin: number,\n    subChunkEnd: number,\n    renderScale: number,\n  ) => void,\n) {\n  const { lodScales } = manifest;\n  let maxLod = 0;\n  while (maxLod + 1 < lodScales.length && lodScales[maxLod + 1] !== 0) {\n    ++maxLod;\n  }\n\n  const stackEntryStride = 3;\n\n  // [row, parentSubChunkIndex, renderScale]\n  const stack: number[] = [];\n  let stackDepth = 0;\n  let priorSubChunkIndex = 0;\n  function emitChunksUpTo(targetStackIndex: number, subChunkIndex: number) {\n    if (DEBUG_CHUNKS_TO_DRAW) {\n      console.log(\n        `emitChunksUpTo: stackDepth=${stackDepth}, targetStackIndex=${targetStackIndex}, subChunkIndex=${subChunkIndex}, priorSubChunkIndex=${priorSubChunkIndex}`,\n      );\n    }\n    while (true) {\n      if (stackDepth === 0) return;\n\n      // Finish last chunk of last (finest) lod.\n      const stackIndex = stackDepth - 1;\n      const entryLod = maxLod - stackIndex;\n      const entryRow = stack[stackIndex * stackEntryStride];\n      const numSubChunks = entryLod === 0 ? 1 : 8;\n      const entrySubChunkIndex = stack[stackIndex * stackEntryStride + 1];\n      const entryRenderScale = stack[stackIndex * stackEntryStride + 2];\n      if (targetStackIndex === stackDepth) {\n        const endSubChunk = subChunkIndex & (numSubChunks - 1);\n\n        if (priorSubChunkIndex !== endSubChunk && entryRow !== -1) {\n          if (DEBUG_CHUNKS_TO_DRAW) {\n            console.log(\n              `  drawing chunk because priorSubChunkIndex (${priorSubChunkIndex}) != endSubChunk (${endSubChunk})`,\n            );\n          }\n          callback(\n            entryLod,\n            entryRow,\n            priorSubChunkIndex,\n            endSubChunk,\n            entryRenderScale,\n          );\n        }\n        priorSubChunkIndex = endSubChunk + 1;\n        return;\n      }\n      if (priorSubChunkIndex !== numSubChunks && entryRow !== -1) {\n        callback(\n          entryLod,\n          entryRow,\n          priorSubChunkIndex,\n          numSubChunks,\n          entryRenderScale,\n        );\n      }\n      priorSubChunkIndex = entrySubChunkIndex + 1;\n      --stackDepth;\n    }\n  }\n\n  let priorMissingLod = 0;\n  if (DEBUG_CHUNKS_TO_DRAW) {\n    console.log(\"\");\n    console.log(\"Starting to draw\");\n  }\n  const { octree } = manifest;\n  getDesiredMultiscaleMeshChunks(\n    manifest,\n    modelViewProjection,\n    clippingPlanes,\n    detailCutoff,\n    viewportWidth,\n    viewportHeight,\n    (lod, row, renderScale, empty) => {\n      if (!empty && !hasChunk(lod, row, renderScale)) {\n        priorMissingLod = Math.max(lod, priorMissingLod);\n        return;\n      }\n      if (lod < priorMissingLod) {\n        // A parent chunk (containing chunk at coarser level-of-detail) is missing.  We can't draw\n        // chunks at this level-of-detail because we would not be able to fill in gaps.\n        return;\n      }\n      priorMissingLod = 0;\n      const rowOffset = row * 5;\n      const x = octree[rowOffset];\n      const y = octree[rowOffset + 1];\n      const z = octree[rowOffset + 2];\n      const subChunkIndex = getOctreeChildIndex(x, y, z);\n      const stackIndex = maxLod - lod;\n      emitChunksUpTo(stackIndex, subChunkIndex);\n      const stackOffset = stackIndex * stackEntryStride;\n      stack[stackOffset] = empty ? -1 : row;\n      stack[stackOffset + 1] = subChunkIndex;\n      stack[stackOffset + 2] = renderScale;\n      if (DEBUG_CHUNKS_TO_DRAW) {\n        console.log(\n          `Adding to stack: lod=${lod}, row=${stack[stackOffset]}, subChunkIndex=${subChunkIndex}`,\n        );\n      }\n      priorSubChunkIndex = 0;\n      stackDepth = stackIndex + 1;\n    },\n  );\n\n  emitChunksUpTo(0, 0);\n}\n\nexport function validateOctree(octree: Uint32Array) {\n  if (octree.length % 5 !== 0) {\n    throw new Error(\"Invalid length\");\n  }\n  const numNodes = octree.length / 5;\n  const seenNodes = new Set<number>();\n  function exploreNode(node: number) {\n    if (seenNodes.has(node)) {\n      throw new Error(\"Previously seen node\");\n    }\n    seenNodes.add(node);\n    if (node < 0 || node >= numNodes) {\n      throw new Error(\"Invalid node reference\");\n    }\n    const x = octree[node * 5];\n    const y = octree[node * 5 + 1];\n    const z = octree[node * 5 + 2];\n    const beginChild = octree[node * 5 + 3];\n    const endChild = octree[node * 5 + 4];\n    if (\n      beginChild < 0 ||\n      endChild < 0 ||\n      endChild < beginChild ||\n      endChild > numNodes ||\n      beginChild + 8 < endChild\n    ) {\n      throw new Error(\"Invalid child references\");\n    }\n    for (let child = beginChild; child < endChild; ++child) {\n      const childX = octree[child * 5];\n      const childY = octree[child * 5 + 1];\n      const childZ = octree[child * 5 + 2];\n      if (childX >>> 1 !== x || childY >>> 1 !== y || childZ >>> 1 !== z) {\n        throw new Error(\"invalid child\");\n      }\n      exploreNode(child);\n    }\n  }\n  if (numNodes === 0) return;\n  exploreNode(numNodes - 1);\n  if (seenNodes.size !== numNodes) {\n    throw new Error(\"Orphan nodes in octree\");\n  }\n}\n\nexport function getMultiscaleFragmentKey(\n  objectKey: string,\n  lod: number,\n  chunkIndex: number,\n) {\n  return `${objectKey}/${lod}:${chunkIndex}`;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Conversion from independent triangles to triangle strips.\n *\n * http://www.codercorner.com/Strips.htm\n */\n\nimport { hashCombine } from \"#src/gpu_hash/hash_function.js\";\nimport type { MeshVertexIndices } from \"#src/mesh/base.js\";\n\nconst DEBUG_TIMING = false;\n\n/**\n * Sorts the vertex indices for each triangle in ascending order.\n *\n * This ensures later edge comparisons can be done more efficiently.  This can reverse face\n * orientations, which would normally be a problem, but since we render all faces as double-sided it\n * isn't an issue.\n */\nfunction normalizeTriangleVertexOrder(indices: MeshVertexIndices) {\n  let maxVertex = 0;\n  for (let i = 0, length = indices.length; i < length; i += 3) {\n    let a = indices[i];\n    let b = indices[i + 1];\n    let c = indices[i + 2];\n    let t: number;\n    if (a > b) {\n      t = a;\n      a = b;\n      b = t;\n    }\n    if (b > c) {\n      t = b;\n      b = c;\n      c = t;\n    }\n    if (a > b) {\n      t = a;\n      a = b;\n      b = t;\n    }\n    indices[i] = a;\n    indices[i + 1] = b;\n    indices[i + 2] = c;\n    if (c > maxVertex) maxVertex = c;\n  }\n  return maxVertex;\n}\n\nlet collisions = 0;\nfunction hashTableInsert(\n  table: Uint32Array,\n  numBuckets: number,\n  value: number,\n  emptyValue: number,\n  hashCode: number,\n  equals: (x: number) => boolean,\n) {\n  const mask = (numBuckets - 1) >>> 0;\n  let bucket = (hashCode & mask) >>> 0;\n  for (let probe = 0; ; ++probe) {\n    const x = table[bucket];\n    if (x === emptyValue) {\n      table[bucket] = value;\n      return value;\n    }\n    if (equals(x)) {\n      return x;\n    }\n    ++collisions;\n    bucket = ((bucket + probe + 1) & mask) >>> 0;\n  }\n}\n\nfunction hashEdge(a: number, b: number) {\n  return hashCombine(hashCombine(0, a), b);\n}\n\n// edgeIndex: 0, 1, 2\n// vertexA:   0  0  1   <-  bit 1\n// vertexB:   1  2  2   <-  1 + bit 1  of (edgeIndex + 1)\n// vertexC:   2  1  0   <-  2 - edgeIndex\n\n// BC         2  2  1\n// BC flipped 0  1  1\n// AC         1  0  0\n// AC flipped 0  0  1\n\n// Lookup table, where the 3 bits starting at (edgeIndex * 3 + flipped * 12) specify the new value\n// of `edgeIndexAndFlipped`.\nconst nextEdgeTable = 0b1_00_0_00_0_01_000_1_01_1_10_0_10;\n\n/**\n * Computes the edge index and flipped state in a triangle strip for the next edge after the given\n * edge.\n *\n * @param edgeIndexAndFlipped Bits 0,1 specify the `edgeIndex` in the range `[0, 2]` corresponding\n *     to the last edge that was traversed.  Bit 2 specifies the `flipped` state.  If `flipped` is\n *     equal to 0, the last two emitted vertices are B and C relative to `edgeIndex`.  If `flipped`\n *     is equal to 1, the last two emitted vertices are A and C relative to `edgeIndex`.\n * @returns The next `edgeIndexAndFlipped` value specifying `nextEdgeIndex` and `nextFlipped`.  If\n *     `flipped == 0`, `nextEdgeIndex` corresponds to the B-C edge relative to `edgeIndex`; if\n *     `flipped == 1`, `nextEdgeIndex` correspond to the A-C edge relative to `edgeIndex`.  The\n *     `nextFlipped` value is equal to 1 iff `vertexCIndex(edgeIndex) ==\n *     vertexAIndex(nextEdgeIndex)`.\n */\nexport function getNextEdge(edgeIndexAndFlipped: number) {\n  return (nextEdgeTable >>> (edgeIndexAndFlipped * 3)) & 7;\n}\n\nexport function getBaseIndex(entry: number) {\n  return (entry >>> 2) * 3;\n}\n\nexport function getEdgeIndex(entry: number) {\n  return entry & 3;\n}\n\n/**\n * Computes the first vertex offset for the given edge.\n *\n * @returns `[0, 0, 1][edgeIndex]`\n */\nexport function vertexAIndex(edgeIndex: number) {\n  return edgeIndex >>> 1;\n}\n\n/**\n * Computes the second vertex offset for the given edge.\n *\n * @returns `[1, 2, 2][edgeIndex]`\n */\nexport function vertexBIndex(edgeIndex: number) {\n  return 1 + ((edgeIndex + 1) >>> 1);\n}\n\n/**\n * Computes the opposite vertex offset for the given edge.\n *\n * @returns `[2, 1, 0][edgeIndex]`\n */\nexport function vertexCIndex(edgeIndex: number) {\n  return 2 - edgeIndex;\n}\n\nexport function getEdgeMapSize(numIndices: number) {\n  const numEdges = numIndices;\n\n  // Choose quadratic probing hash table size to be the smallest power of 2 greater than `numEdges`.\n  const edgeMapSize = 2 ** Math.ceil(Math.log2(numEdges));\n  return edgeMapSize * 4;\n}\n\nfunction computeTriangleAdjacencies(\n  triangleAdjacencies: Uint32Array,\n  indices: MeshVertexIndices,\n  edgeMap: Uint32Array,\n): Uint32Array {\n  const numTriangles = indices.length / 3;\n  // Row-major array of shape `[numTriangles, 3]` specifying the triangles adjacent to each\n  // triangle.  The triangle index `i` corresponds to elements `[i * 3, (i + 1) * 3)` of the\n  // `indices` array.  For each triangle, columns 0 to 2 are the indices of the triangles adjacent\n  // to edge 0-1, edge 0-2, and edge 1-2, respectively.\n\n  const edgeMapSize = edgeMap.length;\n  const emptyEntry = 0xffffffff;\n  triangleAdjacencies.fill(emptyEntry);\n  edgeMap.fill(emptyEntry);\n\n  // Insert edges\n  for (let triangle = 0; triangle < numTriangles; ++triangle) {\n    const baseIndex = triangle * 3;\n    for (let edgeIndex = 0; edgeIndex < 3; ++edgeIndex) {\n      const vertexA0 = indices[baseIndex + vertexAIndex(edgeIndex)];\n      const vertexB0 = indices[baseIndex + vertexBIndex(edgeIndex)];\n      const newEntry = (triangle << 2) | edgeIndex;\n      const existingEntry = hashTableInsert(\n        edgeMap,\n        edgeMapSize,\n        newEntry,\n        emptyEntry,\n        hashEdge(vertexA0, vertexB0),\n        (x) => {\n          const otherBaseIndex = getBaseIndex(x);\n          const otherEdgeIndex = getEdgeIndex(x);\n          const vertexA1 =\n            indices[otherBaseIndex + vertexAIndex(otherEdgeIndex)];\n          const vertexB1 =\n            indices[otherBaseIndex + vertexBIndex(otherEdgeIndex)];\n          // console.log('checking equality', vertexA0, vertexA1, vertexB0, vertexB1);\n          return vertexA0 === vertexA1 && vertexB0 === vertexB1;\n        },\n      );\n      if (existingEntry !== newEntry) {\n        const otherBaseIndex = getBaseIndex(existingEntry);\n        const otherEdgeIndex = getEdgeIndex(existingEntry);\n        triangleAdjacencies[otherBaseIndex + otherEdgeIndex] = newEntry;\n        triangleAdjacencies[baseIndex + edgeIndex] = existingEntry;\n      }\n    }\n  }\n\n  return triangleAdjacencies;\n}\n\nfunction emitTriangleStrips(\n  indices: MeshVertexIndices,\n  triangleAdjacencies: Uint32Array,\n  output: MeshVertexIndices,\n  outputIndex: number,\n): number {\n  const invalidVertex = ~0 >>> (32 - 8 * output.BYTES_PER_ELEMENT);\n  const numIndices = indices.length;\n  const numTriangles = numIndices / 3;\n  const emptyEntry = 0xffffffff;\n\n  // Extract strips\n  startNewStrip: for (let triangle = 0; triangle < numTriangles; ++triangle) {\n    let baseIndex = triangle * 3;\n    if (indices[baseIndex] === invalidVertex) {\n      // Triangle was already emitted.\n      continue;\n    }\n    for (let edgeIndex = 0; edgeIndex < 3; ++edgeIndex) {\n      let entry = triangleAdjacencies[baseIndex + edgeIndex];\n      if (entry === emptyEntry) continue;\n      let otherBaseIndex = getBaseIndex(entry);\n      if (indices[otherBaseIndex] === invalidVertex) continue;\n      const otherEdgeIndex = getEdgeIndex(entry);\n      output[outputIndex++] = indices[baseIndex + vertexCIndex(edgeIndex)];\n      output[outputIndex++] = indices[baseIndex + vertexAIndex(edgeIndex)];\n      output[outputIndex++] = indices[baseIndex + vertexBIndex(edgeIndex)];\n\n      let edgeIndexAndFlipped = otherEdgeIndex;\n\n      while (true) {\n        indices[baseIndex] = invalidVertex;\n        baseIndex = otherBaseIndex;\n        output[outputIndex++] =\n          indices[baseIndex + vertexCIndex(edgeIndexAndFlipped & 3)];\n\n        edgeIndexAndFlipped = getNextEdge(edgeIndexAndFlipped);\n\n        entry = triangleAdjacencies[baseIndex + (edgeIndexAndFlipped & 3)];\n        if (\n          entry === emptyEntry ||\n          indices[(otherBaseIndex = getBaseIndex(entry))] === invalidVertex\n        ) {\n          // console.log(stripLength);\n          // End of strip.  Emit restart index.\n          output[outputIndex++] = invalidVertex;\n          indices[baseIndex] = invalidVertex;\n          continue startNewStrip;\n        }\n        edgeIndexAndFlipped = getEdgeIndex(entry) | (edgeIndexAndFlipped & 4);\n      }\n    }\n    // Emit isolated triangle.\n    output[outputIndex++] = indices[baseIndex];\n    output[outputIndex++] = indices[baseIndex + 1];\n    output[outputIndex++] = indices[baseIndex + 2];\n    indices[baseIndex] = invalidVertex;\n    output[outputIndex++] = invalidVertex;\n  }\n  return outputIndex;\n}\n\nexport function computeTriangleStrips<T extends MeshVertexIndices>(\n  indices: T,\n  subChunkOffsets?: Uint32Array,\n): MeshVertexIndices {\n  if (indices.length === 0) return indices;\n  collisions = 0;\n  if (subChunkOffsets === undefined) {\n    subChunkOffsets = Uint32Array.of(0, indices.length);\n  }\n  let adjacenciesElapsed = 0;\n  let emitElapsed = 0;\n  let startTime = 0;\n  let midTime = 0;\n  let endTime = 0;\n\n  const maxVertexIndex = normalizeTriangleVertexOrder(indices);\n  const outputBufferSize = (indices.length / 3) * 4;\n  const output =\n    maxVertexIndex >= 65535\n      ? new Uint32Array(outputBufferSize)\n      : new Uint16Array(outputBufferSize);\n  let outputIndex = 0;\n\n  let maxSubChunkIndices = 0;\n  const numSubChunks = subChunkOffsets.length - 1;\n  for (let subChunk = 0; subChunk < numSubChunks; ++subChunk) {\n    maxSubChunkIndices = Math.max(\n      maxSubChunkIndices,\n      subChunkOffsets[subChunk + 1] - subChunkOffsets[subChunk],\n    );\n  }\n\n  const triangleAdjacencies = new Uint32Array(maxSubChunkIndices);\n  const edgeMap = new Uint32Array(getEdgeMapSize(maxSubChunkIndices));\n\n  let subChunkOffset = subChunkOffsets[0];\n  for (let subChunk = 0; subChunk < numSubChunks; ++subChunk) {\n    subChunkOffsets[subChunk] = outputIndex;\n    const subChunkEnd = subChunkOffsets[subChunk + 1];\n    const subIndices = indices.subarray(subChunkOffset, subChunkEnd);\n    if (DEBUG_TIMING) startTime = Date.now();\n    computeTriangleAdjacencies(triangleAdjacencies, subIndices, edgeMap);\n    if (DEBUG_TIMING) midTime = Date.now();\n    outputIndex = emitTriangleStrips(\n      subIndices,\n      triangleAdjacencies,\n      output,\n      outputIndex,\n    );\n    if (DEBUG_TIMING) {\n      endTime = Date.now();\n      adjacenciesElapsed += midTime - startTime;\n      emitElapsed += endTime - midTime;\n    }\n    subChunkOffset = subChunkEnd;\n  }\n  --outputIndex;\n  subChunkOffsets[numSubChunks] = outputIndex;\n  const shrunkOutput: T = new (output.constructor as any)(outputIndex);\n  shrunkOutput.set(output.subarray(0, outputIndex));\n  if (DEBUG_TIMING) {\n    console.log(\n      `reduced from ${indices.byteLength}(${indices.BYTES_PER_ELEMENT}) -> ${shrunkOutput.byteLength}(${shrunkOutput.BYTES_PER_ELEMENT}): adj=${adjacenciesElapsed}, emit=${emitElapsed}, ${collisions}/${indices.length} collisions`,\n    );\n  }\n  return shrunkOutput;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { TypedArray } from \"#src/util/array.js\";\nimport type { Uint64 } from \"#src/util/uint64.js\";\n\nexport function getOctreeChildIndex(x: number, y: number, z: number) {\n  return (x & 1) | ((y << 1) & 2) | ((z << 2) & 4);\n}\n\n/**\n * Decodes a \"compressed\" 3-d morton index.\n *\n * Decoded bit `i` of `x`, `y`, and `z` is at bit `i + min(i, yBits) + min(i, zBits)`, `i + min(i +\n * 1, xBits) + min(i, zBits)`, and `i + min(i + 1, xBits) + min(i + 1, zBits)` of `zindex`,\n * respectively, for `i` in `[0, xBits)`, `[0, yBits)`, `[0, zBits)`, respectively.\n */\nexport function decodeZIndexCompressed(\n  zindex: Uint64,\n  xBits: number,\n  yBits: number,\n  zBits: number,\n): Uint32Array {\n  const maxCoordBits = Math.max(xBits, yBits, zBits);\n  let inputBit = 0;\n  let inputValue = zindex.low;\n  let x = 0;\n  let y = 0;\n  let z = 0;\n  for (let coordBit = 0; coordBit < maxCoordBits; ++coordBit) {\n    if (coordBit < xBits) {\n      const bit = (inputValue >>> inputBit) & 1;\n      x |= bit << coordBit;\n      if (inputBit === 31) {\n        inputBit = 0;\n        inputValue = zindex.high;\n      } else {\n        ++inputBit;\n      }\n    }\n    if (coordBit < yBits) {\n      const bit = (inputValue >>> inputBit) & 1;\n      y |= bit << coordBit;\n      if (inputBit === 31) {\n        inputBit = 0;\n        inputValue = zindex.high;\n      } else {\n        ++inputBit;\n      }\n    }\n    if (coordBit < zBits) {\n      const bit = (inputValue >>> inputBit) & 1;\n      z |= bit << coordBit;\n      if (inputBit === 31) {\n        inputBit = 0;\n        inputValue = zindex.high;\n      } else {\n        ++inputBit;\n      }\n    }\n  }\n  return Uint32Array.of(x, y, z);\n}\n\nexport function encodeZIndexCompressed3d(\n  zindex: Uint64,\n  xBits: number,\n  yBits: number,\n  zBits: number,\n  x: number,\n  y: number,\n  z: number,\n): Uint64 {\n  const maxBits = Math.max(xBits, yBits, zBits);\n  let outputBit = 0;\n  let outputNum = 0;\n  let isHigh = false;\n  function writeBit(b: number): void {\n    outputNum |= (b & 1) << outputBit;\n    if (++outputBit === 32) {\n      zindex.low = outputNum >>> 0;\n      outputNum = 0;\n      outputBit = 0;\n      isHigh = true;\n    }\n  }\n  for (let bit = 0; bit < maxBits; ++bit) {\n    if (bit < xBits) {\n      writeBit((x >> bit) & 1);\n    }\n    if (bit < yBits) {\n      writeBit((y >> bit) & 1);\n    }\n    if (bit < zBits) {\n      writeBit((z >> bit) & 1);\n    }\n  }\n  if (isHigh) {\n    zindex.high = outputNum >>> 0;\n  } else {\n    zindex.high = 0;\n    zindex.low = outputNum >>> 0;\n  }\n  return zindex;\n}\n\nexport function encodeZIndexCompressed(\n  zindex: Uint64,\n  position: TypedArray,\n  shape: TypedArray,\n): Uint64 {\n  let outputBit = 0;\n  const rank = position.length;\n  let outputNum = 0;\n  let isHigh = false;\n  function writeBit(b: number): void {\n    outputNum |= (b & 1) << outputBit;\n    if (++outputBit === 32) {\n      zindex.low = outputNum >>> 0;\n      outputNum = 0;\n      outputBit = 0;\n      isHigh = true;\n    }\n  }\n\n  for (let bit = 0; bit < 32; ++bit) {\n    for (let dim = 0; dim < rank; ++dim) {\n      if ((shape[dim] - 1) >>> bit) {\n        writeBit(position[dim] >>> bit);\n      }\n    }\n  }\n  if (isHigh) {\n    zindex.high = outputNum >>> 0;\n  } else {\n    zindex.high = 0;\n    zindex.low = outputNum >>> 0;\n  }\n  return zindex;\n}\n\nfunction lessMsb(a: number, b: number) {\n  return a < b && a < (a ^ b);\n}\n\n/**\n * Returns `true` if `(x0, y0, z0)` occurs before `(x1, y1, z1)` in Z-curve order.\n */\nexport function zorder3LessThan(\n  x0: number,\n  y0: number,\n  z0: number,\n  x1: number,\n  y1: number,\n  z1: number,\n): boolean {\n  let mostSignificant0 = z0;\n  let mostSignificant1 = z1;\n\n  if (lessMsb(mostSignificant0 ^ mostSignificant1, y0 ^ y1)) {\n    mostSignificant0 = y0;\n    mostSignificant1 = y1;\n  }\n\n  if (lessMsb(mostSignificant0 ^ mostSignificant1, x0 ^ x1)) {\n    mostSignificant0 = x0;\n    mostSignificant1 = x1;\n  }\n\n  return mostSignificant0 < mostSignificant1;\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Chunk,\n  ChunkSource,\n  withChunkManager,\n} from \"#src/chunk_manager/backend.js\";\nimport { ChunkPriorityTier, ChunkState } from \"#src/chunk_manager/base.js\";\nimport type {\n  EncodedMeshData,\n  EncodedVertexPositions,\n  MeshVertexIndices,\n  MultiscaleFragmentFormat,\n} from \"#src/mesh/base.js\";\nimport {\n  FRAGMENT_SOURCE_RPC_ID,\n  MESH_LAYER_RPC_ID,\n  MULTISCALE_FRAGMENT_SOURCE_RPC_ID,\n  MULTISCALE_MESH_LAYER_RPC_ID,\n  VertexPositionFormat,\n} from \"#src/mesh/base.js\";\nimport type { MultiscaleMeshManifest } from \"#src/mesh/multiscale.js\";\nimport { getDesiredMultiscaleMeshChunks } from \"#src/mesh/multiscale.js\";\nimport { computeTriangleStrips } from \"#src/mesh/triangle_strips.js\";\nimport type { PerspectiveViewBackend } from \"#src/perspective_view/backend.js\";\nimport { PerspectiveViewRenderLayerBackend } from \"#src/perspective_view/backend.js\";\nimport { get3dModelToDisplaySpaceMatrix } from \"#src/render_coordinate_transform.js\";\nimport type { RenderLayerBackendAttachment } from \"#src/render_layer_backend.js\";\nimport { withSegmentationLayerBackendState } from \"#src/segmentation_display_state/backend.js\";\nimport {\n  getObjectKey,\n  forEachVisibleSegment,\n} from \"#src/segmentation_display_state/base.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport type { Endianness } from \"#src/util/endian.js\";\nimport { convertEndian32 } from \"#src/util/endian.js\";\nimport { getFrustrumPlanes, mat4, vec3 } from \"#src/util/geom.js\";\nimport {\n  verifyObject,\n  verifyObjectProperty,\n  verifyStringArray,\n} from \"#src/util/json.js\";\nimport { Uint64 } from \"#src/util/uint64.js\";\nimport { zorder3LessThan } from \"#src/util/zorder.js\";\nimport {\n  getBasePriority,\n  getPriorityTier,\n  withSharedVisibility,\n} from \"#src/visibility_priority/backend.js\";\nimport type { RPC } from \"#src/worker_rpc.js\";\nimport { registerSharedObject } from \"#src/worker_rpc.js\";\n\nconst MESH_OBJECT_MANIFEST_CHUNK_PRIORITY = 100;\nconst MESH_OBJECT_FRAGMENT_CHUNK_PRIORITY = 50;\n\nconst CONVERT_TO_TRIANGLE_STRIPS = false;\n\nexport type FragmentId = string;\n\n// Chunk that contains the list of fragments that make up a single object.\nexport class ManifestChunk extends Chunk {\n  objectId = new Uint64();\n  fragmentIds: FragmentId[] | null;\n  // We can't save a reference to objectId, because it may be a temporary\n  // object.\n  initializeManifestChunk(key: string, objectId: Uint64) {\n    super.initialize(key);\n    this.objectId.assign(objectId);\n  }\n\n  freeSystemMemory() {\n    this.fragmentIds = null;\n  }\n\n  serialize(msg: any, transfers: any[]) {\n    super.serialize(msg, transfers);\n    msg.fragmentIds = this.fragmentIds;\n  }\n\n  downloadSucceeded() {\n    // We can't easily determine the memory usage of the JSON manifest.  Just use 100 bytes as a\n    // default value.\n    this.systemMemoryBytes = 100;\n    this.gpuMemoryBytes = 0;\n    super.downloadSucceeded();\n    if (this.priorityTier < ChunkPriorityTier.RECENT) {\n      this.source!.chunkManager.scheduleUpdateChunkPriorities();\n    }\n  }\n\n  toString() {\n    return this.objectId.toString();\n  }\n}\n\nexport interface RawMeshData {\n  vertexPositions: Float32Array | Uint32Array;\n  indices: MeshVertexIndices;\n}\n\nexport interface RawPartitionedMeshData extends RawMeshData {\n  subChunkOffsets: Uint32Array;\n}\n\nfunction serializeMeshData(data: EncodedMeshData, msg: any, transfers: any[]) {\n  const { vertexPositions, indices, vertexNormals, strips } = data;\n  msg.vertexPositions = vertexPositions;\n  msg.indices = indices;\n  msg.strips = strips;\n  msg.vertexNormals = vertexNormals;\n  const vertexPositionsBuffer = vertexPositions!.buffer;\n  transfers.push(vertexPositionsBuffer);\n  const indicesBuffer = indices!.buffer;\n  if (indicesBuffer !== vertexPositionsBuffer) {\n    transfers.push(indicesBuffer);\n  }\n  transfers.push(vertexNormals!.buffer);\n}\n\nfunction getMeshDataSize(data: EncodedMeshData) {\n  const { vertexPositions, indices, vertexNormals } = data;\n  return (\n    vertexPositions!.byteLength +\n    indices!.byteLength +\n    vertexNormals!.byteLength\n  );\n}\n\n/**\n * Chunk that contains the mesh for a single fragment of a single object.\n */\nexport class FragmentChunk extends Chunk {\n  manifestChunk: ManifestChunk | null = null;\n  fragmentId: FragmentId | null = null;\n  meshData: EncodedMeshData | null = null;\n  initializeFragmentChunk(\n    key: string,\n    manifestChunk: ManifestChunk,\n    fragmentId: FragmentId,\n  ) {\n    super.initialize(key);\n    this.manifestChunk = manifestChunk;\n    this.fragmentId = fragmentId;\n  }\n  freeSystemMemory() {\n    this.manifestChunk = null;\n    this.meshData = null;\n    this.fragmentId = null;\n  }\n  serialize(msg: any, transfers: any[]) {\n    super.serialize(msg, transfers);\n    serializeMeshData(this.meshData!, msg, transfers);\n    this.meshData = null;\n  }\n  downloadSucceeded() {\n    this.systemMemoryBytes = this.gpuMemoryBytes = getMeshDataSize(\n      this.meshData!,\n    );\n    super.downloadSucceeded();\n  }\n}\n\n/**\n * Assigns chunk.fragmentKeys to response[keysPropertyName].\n *\n * Verifies that response[keysPropertyName] is an array of strings.\n */\nexport function decodeJsonManifestChunk(\n  chunk: ManifestChunk,\n  response: any,\n  keysPropertyName: string,\n) {\n  verifyObject(response);\n  chunk.fragmentIds = verifyObjectProperty(\n    response,\n    keysPropertyName,\n    verifyStringArray,\n  );\n}\n\n/**\n * Computes normal vectors for each vertex of a triangular mesh.\n *\n * The normal vector for each triangle with vertices (v0, v1, v2) is computed as the (normalized)\n * cross product of (v1 - v0, v2 - v1).  The normal vector for each vertex is obtained by averaging\n * the normal vector of each of the triangles that contains it.\n *\n * @param positions The vertex positions in [x0, y0, z0, x1, y1, z1, ...] format.\n * @param indices The indices of the triangle vertices.  Each triplet of consecutive values\n *     specifies a triangle.\n */\nexport function computeVertexNormals(\n  positions: Float32Array | Uint8Array | Uint16Array | Uint32Array,\n  indices: Uint8Array | Uint16Array | Uint32Array,\n) {\n  const faceNormal = vec3.create();\n  const v1v0 = vec3.create();\n  const v2v1 = vec3.create();\n  const vertexNormals = new Float32Array(positions.length);\n  const numIndices = indices.length;\n  for (let i = 0; i < numIndices; i += 3) {\n    const i0 = indices[i] * 3;\n    const i1 = indices[i + 1] * 3;\n    const i2 = indices[i + 2] * 3;\n    for (let j = 0; j < 3; ++j) {\n      v1v0[j] = positions[i1 + j] - positions[i0 + j];\n      v2v1[j] = positions[i2 + j] - positions[i1 + j];\n    }\n    vec3.cross(faceNormal, v1v0, v2v1);\n    vec3.normalize(faceNormal, faceNormal);\n\n    for (let k = 0; k < 3; ++k) {\n      const index = indices[i + k];\n      const offset = index * 3;\n      for (let j = 0; j < 3; ++j) {\n        vertexNormals[offset + j] += faceNormal[j];\n      }\n    }\n  }\n  // Normalize all vertex normals.\n  const numVertices = vertexNormals.length;\n  for (let i = 0; i < numVertices; i += 3) {\n    const vec = <vec3>vertexNormals.subarray(i, i + 3);\n    vec3.normalize(vec, vec);\n  }\n  return vertexNormals;\n}\n\n/**\n * Converts a floating-point number in the range `[-1, 1]` to an integer in the range `[-127, 127]`.\n */\nfunction snorm8(x: number) {\n  return Math.min(Math.max(-127, x * 127 + 0.5), 127) >>> 0;\n}\n\nfunction signNotZero(x: number) {\n  return x < 0 ? -1 : 1;\n}\n\n/**\n * Encodes normal vectors represented as 3x32-bit floating vectors into a 2x8-bit octahedron\n * representation.\n *\n * Zina H. Cigolle, Sam Donow, Daniel Evangelakos, Michael Mara, Morgan McGuire, and Quirin Meyer,\n * Survey of Efficient Representations for Independent Unit Vectors, Journal of Computer Graphics\n * Techniques (JCGT), vol. 3, no. 2, 1-30, 2014\n *\n * Available online http://jcgt.org/published/0003/02/01/\n *\n * @param out[out] Row-major array of shape `[n, 2]` set to octahedron representation.\n * @param normals[in] Row-major array of shape `[n, 3]` specifying unit normal vectors.\n */\nexport function encodeNormals32fx3ToOctahedron8x2(\n  out: Uint8Array,\n  normals: Float32Array,\n) {\n  const length = normals.length;\n  let outIndex = 0;\n  for (let i = 0; i < length; i += 3) {\n    const x = normals[i];\n    const y = normals[i + 1];\n    const z = normals[i + 2];\n\n    const invL1Norm = 1 / (Math.abs(x) + Math.abs(y) + Math.abs(z));\n\n    if (z < 0) {\n      out[outIndex] = snorm8((1 - Math.abs(y * invL1Norm)) * signNotZero(x));\n      out[outIndex + 1] = snorm8(\n        (1 - Math.abs(x * invL1Norm)) * signNotZero(y),\n      );\n    } else {\n      out[outIndex] = snorm8(x * invL1Norm);\n      out[outIndex + 1] = snorm8(y * invL1Norm);\n    }\n    outIndex += 2;\n  }\n}\n\n/**\n * Extracts vertex positions and indices of the specified endianness from `data'.\n *\n * The vertexByteOffset specifies the byte offset into `data' of the start of the vertex position\n * data.  The vertex data must consist of verticesPerPrimitive * numVertices 32-bit float values.\n *\n * If indexByteOffset is not specified, it defaults to the end of the vertex position data.  If\n * numPrimitives is not specified, it is assumed that the index data continues until the end of the\n * array.\n */\nexport function decodeVertexPositionsAndIndices(\n  verticesPerPrimitive: number,\n  data: ArrayBuffer,\n  endianness: Endianness,\n  vertexByteOffset: number,\n  numVertices: number,\n  indexByteOffset?: number,\n  numPrimitives?: number,\n): RawMeshData {\n  const vertexPositions = new Float32Array(\n    data,\n    vertexByteOffset,\n    numVertices * 3,\n  );\n  convertEndian32(vertexPositions, endianness);\n\n  if (indexByteOffset === undefined) {\n    indexByteOffset = vertexByteOffset + 12 * numVertices;\n  }\n\n  let numIndices: number | undefined;\n  if (numPrimitives !== undefined) {\n    numIndices = numPrimitives * verticesPerPrimitive;\n  }\n\n  // For compatibility with Firefox, length argument must not be undefined.\n  const indices =\n    numIndices === undefined\n      ? new Uint32Array(data, indexByteOffset)\n      : new Uint32Array(data, indexByteOffset, numIndices);\n  if (indices.length % verticesPerPrimitive !== 0) {\n    throw new Error(\n      `Number of indices is not a multiple of ${verticesPerPrimitive}: ${indices.length}.`,\n    );\n  }\n  convertEndian32(indices, endianness);\n\n  return { vertexPositions, indices };\n}\n\n/**\n * Extracts vertex positions and triangle vertex indices of the specified endianness from `data'.\n *\n * Vertex normals are computed.\n *\n * See decodeVertexPositionsAndIndices above.\n */\nexport function decodeTriangleVertexPositionsAndIndices(\n  data: ArrayBuffer,\n  endianness: Endianness,\n  vertexByteOffset: number,\n  numVertices: number,\n  indexByteOffset?: number,\n  numTriangles?: number,\n) {\n  return decodeVertexPositionsAndIndices(\n    /*verticesPerPrimitive=*/ 3,\n    data,\n    endianness,\n    vertexByteOffset,\n    numVertices,\n    indexByteOffset,\n    numTriangles,\n  );\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nexport interface MeshSource {\n  // TODO(jbms): Move this declaration to class definition below and declare abstract once\n  // TypeScript supports mixins with abstract classes.\n  downloadFragment(\n    chunk: FragmentChunk,\n    cancellationToken: CancellationToken,\n  ): Promise<void>;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nexport class MeshSource extends ChunkSource {\n  fragmentSource: FragmentSource;\n\n  constructor(rpc: RPC, options: any) {\n    super(rpc, options);\n    const fragmentSource = (this.fragmentSource = this.registerDisposer(\n      rpc.getRef<FragmentSource>(options.fragmentSource),\n    ));\n    fragmentSource.meshSource = this;\n  }\n\n  getChunk(objectId: Uint64) {\n    const key = getObjectKey(objectId);\n    let chunk = <ManifestChunk>this.chunks.get(key);\n    if (chunk === undefined) {\n      chunk = this.getNewChunk_(ManifestChunk);\n      chunk.initializeManifestChunk(key, objectId);\n      this.addChunk(chunk);\n    }\n    return chunk;\n  }\n\n  getFragmentKey(objectKey: string | null, fragmentId: string) {\n    return { key: `${objectKey}/${fragmentId}`, fragmentId: fragmentId };\n  }\n\n  getFragmentChunk(manifestChunk: ManifestChunk, fragmentId: FragmentId) {\n    const fragmentSource = this.fragmentSource;\n    const { key: fragmentKey, fragmentId: parsedFragmentId } =\n      this.getFragmentKey(manifestChunk.key, fragmentId);\n    let chunk = <FragmentChunk>fragmentSource.chunks.get(fragmentKey);\n    if (chunk === undefined) {\n      chunk = fragmentSource.getNewChunk_(FragmentChunk);\n      chunk.initializeFragmentChunk(\n        fragmentKey,\n        manifestChunk,\n        parsedFragmentId,\n      );\n      fragmentSource.addChunk(chunk);\n    }\n    return chunk;\n  }\n}\n\n@registerSharedObject(FRAGMENT_SOURCE_RPC_ID)\nexport class FragmentSource extends ChunkSource {\n  meshSource: MeshSource | null = null;\n  download(chunk: FragmentChunk, cancellationToken: CancellationToken) {\n    return this.meshSource!.downloadFragment(chunk, cancellationToken);\n  }\n}\n\n@registerSharedObject(MESH_LAYER_RPC_ID)\nexport class MeshLayer extends withSegmentationLayerBackendState(\n  withSharedVisibility(withChunkManager(PerspectiveViewRenderLayerBackend)),\n) {\n  source: MeshSource;\n  constructor(rpc: RPC, options: any) {\n    super(rpc, options);\n    this.source = this.registerDisposer(rpc.getRef<MeshSource>(options.source));\n    this.registerDisposer(\n      this.chunkManager.recomputeChunkPriorities.add(() => {\n        this.updateChunkPriorities();\n      }),\n    );\n  }\n\n  attach(attachment: RenderLayerBackendAttachment<PerspectiveViewBackend>) {\n    const scheduleUpdateChunkPriorities = () => {\n      this.chunkManager.scheduleUpdateChunkPriorities();\n    };\n    const { view } = attachment;\n    attachment.registerDisposer(\n      view.visibility.changed.add(scheduleUpdateChunkPriorities),\n    );\n    attachment.registerDisposer(scheduleUpdateChunkPriorities);\n    scheduleUpdateChunkPriorities();\n  }\n\n  private updateChunkPriorities() {\n    const visibility = this.visibility.value;\n    if (visibility === Number.NEGATIVE_INFINITY) {\n      return;\n    }\n    this.chunkManager.registerLayer(this);\n    const priorityTier = getPriorityTier(visibility);\n    const basePriority = getBasePriority(visibility);\n    const { source, chunkManager } = this;\n    forEachVisibleSegment(this, (objectId) => {\n      const manifestChunk = source.getChunk(objectId);\n      ++this.numVisibleChunksNeeded;\n      chunkManager.requestChunk(\n        manifestChunk,\n        priorityTier,\n        basePriority + MESH_OBJECT_MANIFEST_CHUNK_PRIORITY,\n      );\n      const state = manifestChunk.state;\n      if (\n        state === ChunkState.SYSTEM_MEMORY_WORKER ||\n        state === ChunkState.SYSTEM_MEMORY ||\n        state === ChunkState.GPU_MEMORY\n      ) {\n        ++this.numVisibleChunksAvailable;\n        for (const fragmentId of manifestChunk.fragmentIds!) {\n          const fragmentChunk = source.getFragmentChunk(\n            manifestChunk,\n            fragmentId,\n          );\n          ++this.numVisibleChunksNeeded;\n          chunkManager.requestChunk(\n            fragmentChunk,\n            priorityTier,\n            basePriority + MESH_OBJECT_FRAGMENT_CHUNK_PRIORITY,\n          );\n          if (fragmentChunk.state === ChunkState.GPU_MEMORY) {\n            ++this.numVisibleChunksAvailable;\n          }\n        }\n      }\n    });\n  }\n}\n\n// Chunk that contains the list of fragments that make up a single object.\nexport class MultiscaleManifestChunk extends Chunk {\n  objectId = new Uint64();\n  manifest: MultiscaleMeshManifest | undefined;\n  // We can't save a reference to objectId, because it may be a temporary\n  // object.\n  initializeManifestChunk(key: string, objectId: Uint64) {\n    super.initialize(key);\n    this.objectId.assign(objectId);\n  }\n\n  freeSystemMemory() {\n    this.manifest = undefined;\n  }\n\n  serialize(msg: any, transfers: any[]) {\n    super.serialize(msg, transfers);\n    msg.manifest = this.manifest;\n  }\n\n  downloadSucceeded() {\n    this.systemMemoryBytes = this.manifest!.octree.byteLength;\n    this.gpuMemoryBytes = 0;\n    super.downloadSucceeded();\n    if (this.priorityTier < ChunkPriorityTier.RECENT) {\n      this.source!.chunkManager.scheduleUpdateChunkPriorities();\n    }\n  }\n\n  toString() {\n    return this.objectId.toString();\n  }\n}\n\n/**\n * Chunk that contains the mesh for a single fragment of a single object.\n */\nexport class MultiscaleFragmentChunk extends Chunk {\n  subChunkOffsets: Uint32Array | null = null;\n  meshData: EncodedMeshData | null = null;\n  lod = 0;\n  chunkIndex = 0;\n  manifestChunk: MultiscaleManifestChunk | null = null;\n  freeSystemMemory() {\n    this.meshData = this.subChunkOffsets = null;\n  }\n  serialize(msg: any, transfers: any[]) {\n    super.serialize(msg, transfers);\n    serializeMeshData(this.meshData!, msg, transfers);\n    const { subChunkOffsets } = this;\n    msg.subChunkOffsets = subChunkOffsets;\n    transfers.push(subChunkOffsets!.buffer);\n    this.meshData = this.subChunkOffsets = null;\n  }\n  downloadSucceeded() {\n    const { subChunkOffsets } = this;\n    this.systemMemoryBytes = this.gpuMemoryBytes = getMeshDataSize(\n      this.meshData!,\n    );\n    this.systemMemoryBytes += subChunkOffsets!.byteLength;\n    super.downloadSucceeded();\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nexport interface MultiscaleMeshSource {\n  // TODO(jbms): Move this declaration to class definition below and declare abstract once\n  // TypeScript supports mixins with abstract classes.\n  downloadFragment(\n    chunk: MultiscaleFragmentChunk,\n    cancellationToken: CancellationToken,\n  ): Promise<void>;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nexport class MultiscaleMeshSource extends ChunkSource {\n  fragmentSource: MultiscaleFragmentSource;\n  format: MultiscaleFragmentFormat;\n\n  constructor(rpc: RPC, options: any) {\n    super(rpc, options);\n    const fragmentSource = (this.fragmentSource = this.registerDisposer(\n      rpc.getRef<MultiscaleFragmentSource>(options.fragmentSource),\n    ));\n    this.format = options.format;\n    fragmentSource.meshSource = this;\n  }\n\n  getChunk(objectId: Uint64) {\n    const key = getObjectKey(objectId);\n    let chunk = <MultiscaleManifestChunk>this.chunks.get(key);\n    if (chunk === undefined) {\n      chunk = this.getNewChunk_(MultiscaleManifestChunk);\n      chunk.initializeManifestChunk(key, objectId);\n      this.addChunk(chunk);\n    }\n    return chunk;\n  }\n\n  getFragmentChunk(\n    manifestChunk: MultiscaleManifestChunk,\n    lod: number,\n    chunkIndex: number,\n  ) {\n    const key = `${manifestChunk.key}/${lod}:${chunkIndex}`;\n    const fragmentSource = this.fragmentSource;\n    let chunk = <MultiscaleFragmentChunk>fragmentSource.chunks.get(key);\n    if (chunk === undefined) {\n      chunk = fragmentSource.getNewChunk_(MultiscaleFragmentChunk);\n      chunk.initialize(key);\n      chunk.lod = lod;\n      chunk.chunkIndex = chunkIndex;\n      chunk.manifestChunk = manifestChunk;\n      fragmentSource.addChunk(chunk);\n    }\n    return chunk;\n  }\n}\n\n@registerSharedObject(MULTISCALE_FRAGMENT_SOURCE_RPC_ID)\nexport class MultiscaleFragmentSource extends ChunkSource {\n  meshSource: MultiscaleMeshSource | null = null;\n  download(\n    chunk: MultiscaleFragmentChunk,\n    cancellationToken: CancellationToken,\n  ) {\n    return this.meshSource!.downloadFragment(chunk, cancellationToken);\n  }\n}\n\nconst tempModelMatrix = mat4.create();\n\n@registerSharedObject(MULTISCALE_MESH_LAYER_RPC_ID)\nexport class MultiscaleMeshLayer extends withSegmentationLayerBackendState(\n  withSharedVisibility(withChunkManager(PerspectiveViewRenderLayerBackend)),\n) {\n  source: MultiscaleMeshSource;\n\n  constructor(rpc: RPC, options: any) {\n    super(rpc, options);\n    this.source = this.registerDisposer(\n      rpc.getRef<MultiscaleMeshSource>(options.source),\n    );\n    this.registerDisposer(\n      this.chunkManager.recomputeChunkPriorities.add(() => {\n        this.updateChunkPriorities();\n      }),\n    );\n  }\n\n  attach(attachment: RenderLayerBackendAttachment<PerspectiveViewBackend>) {\n    const scheduleUpdateChunkPriorities = () =>\n      this.chunkManager.scheduleUpdateChunkPriorities();\n    const { view } = attachment;\n    attachment.registerDisposer(\n      view.projectionParameters.changed.add(scheduleUpdateChunkPriorities),\n    );\n    attachment.registerDisposer(\n      view.visibility.changed.add(scheduleUpdateChunkPriorities),\n    );\n    attachment.registerDisposer(scheduleUpdateChunkPriorities);\n    scheduleUpdateChunkPriorities();\n  }\n\n  private updateChunkPriorities() {\n    const maxVisibility = this.visibility.value;\n    if (maxVisibility === Number.NEGATIVE_INFINITY) {\n      return;\n    }\n    const {\n      transform: { value: transform },\n    } = this;\n    if (transform.error !== undefined) return;\n    const manifestChunks = new Array<MultiscaleManifestChunk>();\n    this.chunkManager.registerLayer(this);\n    {\n      const priorityTier = getPriorityTier(maxVisibility);\n      const basePriority = getBasePriority(maxVisibility);\n      const { source, chunkManager } = this;\n      forEachVisibleSegment(this, (objectId) => {\n        const manifestChunk = source.getChunk(objectId);\n        ++this.numVisibleChunksNeeded;\n        chunkManager.requestChunk(\n          manifestChunk,\n          priorityTier,\n          basePriority + MESH_OBJECT_MANIFEST_CHUNK_PRIORITY,\n        );\n        const state = manifestChunk.state;\n        if (\n          state === ChunkState.SYSTEM_MEMORY_WORKER ||\n          state === ChunkState.SYSTEM_MEMORY ||\n          state === ChunkState.GPU_MEMORY\n        ) {\n          manifestChunks.push(manifestChunk);\n          ++this.numVisibleChunksAvailable;\n        }\n      });\n    }\n    if (manifestChunks.length === 0) return;\n    const { source, chunkManager } = this;\n    for (const { view } of this.attachments.values()) {\n      const visibility = view.visibility.value;\n      if (visibility === Number.NEGATIVE_INFINITY) {\n        continue;\n      }\n      const priorityTier = getPriorityTier(visibility);\n      const basePriority = getBasePriority(visibility);\n      const projectionParameters = view.projectionParameters.value;\n      const modelViewProjectionMatrix = tempModelMatrix;\n      try {\n        get3dModelToDisplaySpaceMatrix(\n          modelViewProjectionMatrix,\n          projectionParameters.displayDimensionRenderInfo,\n          transform,\n        );\n      } catch {\n        continue;\n      }\n      mat4.multiply(\n        modelViewProjectionMatrix,\n        projectionParameters.viewProjectionMat,\n        modelViewProjectionMatrix,\n      );\n      const clippingPlanes = getFrustrumPlanes(\n        new Float32Array(24),\n        modelViewProjectionMatrix,\n      );\n      const detailCutoff = this.renderScaleTarget.value;\n      for (const manifestChunk of manifestChunks) {\n        const maxLod = manifestChunk.manifest!.lodScales.length - 1;\n        getDesiredMultiscaleMeshChunks(\n          manifestChunk.manifest!,\n          modelViewProjectionMatrix,\n          clippingPlanes,\n          detailCutoff,\n          projectionParameters.width,\n          projectionParameters.height,\n          (lod, chunkIndex, _renderScale, empty) => {\n            if (empty) return;\n            const fragmentChunk = source.getFragmentChunk(\n              manifestChunk,\n              lod,\n              chunkIndex,\n            );\n            ++this.numVisibleChunksNeeded;\n            chunkManager.requestChunk(\n              fragmentChunk,\n              priorityTier,\n              basePriority + MESH_OBJECT_FRAGMENT_CHUNK_PRIORITY - maxLod + lod,\n            );\n            if (fragmentChunk.state === ChunkState.GPU_MEMORY) {\n              ++this.numVisibleChunksAvailable;\n            }\n          },\n        );\n      }\n    }\n  }\n}\n\nfunction convertMeshData(\n  data: RawMeshData & { subChunkOffsets?: Uint32Array },\n  vertexPositionFormat: VertexPositionFormat,\n): EncodedMeshData {\n  const normals = computeVertexNormals(data.vertexPositions, data.indices);\n  const encodedNormals = new Uint8Array((normals.length / 3) * 2);\n  encodeNormals32fx3ToOctahedron8x2(encodedNormals, normals);\n  let encodedIndices: MeshVertexIndices;\n  let strips: boolean;\n  if (CONVERT_TO_TRIANGLE_STRIPS) {\n    encodedIndices = computeTriangleStrips(data.indices, data.subChunkOffsets);\n    strips = true;\n  } else {\n    if (\n      data.indices.BYTES_PER_ELEMENT === 4 &&\n      data.vertexPositions.length / 3 < 65535\n    ) {\n      encodedIndices = new Uint16Array(data.indices.length);\n      encodedIndices.set(data.indices);\n    } else {\n      encodedIndices = data.indices;\n    }\n    strips = false;\n  }\n  let encodedVertexPositions: EncodedVertexPositions;\n  if (vertexPositionFormat === VertexPositionFormat.uint10) {\n    const vertexPositions = data.vertexPositions;\n    const numVertices = vertexPositions.length / 3;\n    encodedVertexPositions = new Uint32Array(numVertices);\n    for (\n      let inputIndex = 0, outputIndex = 0;\n      outputIndex < numVertices;\n      inputIndex += 3, ++outputIndex\n    ) {\n      encodedVertexPositions[outputIndex] =\n        (vertexPositions[inputIndex] & 1023) |\n        ((vertexPositions[inputIndex + 1] & 1023) << 10) |\n        ((vertexPositions[inputIndex + 2] & 1023) << 20);\n    }\n  } else if (vertexPositionFormat === VertexPositionFormat.uint16) {\n    const vertexPositions = data.vertexPositions;\n    if (vertexPositions.BYTES_PER_ELEMENT === 2) {\n      encodedVertexPositions = vertexPositions;\n    } else {\n      encodedVertexPositions = new Uint16Array(vertexPositions.length);\n      encodedVertexPositions.set(vertexPositions);\n    }\n  } else {\n    encodedVertexPositions = data.vertexPositions as Float32Array;\n  }\n  return {\n    vertexPositions: encodedVertexPositions,\n    vertexNormals: encodedNormals,\n    indices: encodedIndices,\n    strips,\n  };\n}\n\nexport function assignMeshFragmentData(\n  chunk: FragmentChunk,\n  data: RawMeshData,\n  vertexPositionFormat: VertexPositionFormat = VertexPositionFormat.float32,\n) {\n  chunk.meshData = convertMeshData(data, vertexPositionFormat);\n}\n\nexport function assignMultiscaleMeshFragmentData(\n  chunk: MultiscaleFragmentChunk,\n  data: RawPartitionedMeshData,\n  vertexPositionFormat: VertexPositionFormat,\n) {\n  chunk.meshData = convertMeshData(data, vertexPositionFormat);\n  chunk.subChunkOffsets = data.subChunkOffsets;\n}\n\nexport function generateHigherOctreeLevel(\n  octree: Uint32Array,\n  priorStart: number,\n  priorEnd: number,\n): number {\n  let curEnd = priorEnd;\n  for (let i = 0; i < 3; ++i) {\n    octree[curEnd * 5 + i] = octree[priorStart * 5 + i] >>> 1;\n  }\n  octree[curEnd * 5 + 3] = priorStart;\n  for (let i = priorStart + 1; i < priorEnd; ++i) {\n    const x = octree[i * 5] >>> 1;\n    const y = octree[i * 5 + 1] >>> 1;\n    const z = octree[i * 5 + 2] >>> 1;\n    if (\n      x !== octree[curEnd * 5] ||\n      y !== octree[curEnd * 5 + 1] ||\n      z !== octree[curEnd * 5 + 2]\n    ) {\n      octree[curEnd * 5 + 4] = i;\n      ++curEnd;\n      octree[curEnd * 5] = x;\n      octree[curEnd * 5 + 1] = y;\n      octree[curEnd * 5 + 2] = z;\n      octree[curEnd * 5 + 3] = i;\n    }\n  }\n  octree[curEnd * 5 + 4] = priorEnd;\n  ++curEnd;\n  return curEnd;\n}\n\nexport function computeOctreeChildOffsets(\n  octree: Uint32Array,\n  childStart: number,\n  childEnd: number,\n  parentEnd: number,\n) {\n  let childNode = childStart;\n  for (let parentNode = childEnd; parentNode < parentEnd; ++parentNode) {\n    const parentX = octree[parentNode * 5];\n    const parentY = octree[parentNode * 5 + 1];\n    const parentZ = octree[parentNode * 5 + 2];\n    while (childNode < childEnd) {\n      const childX = octree[childNode * 5] >>> 1;\n      const childY = octree[childNode * 5 + 1] >>> 1;\n      const childZ = octree[childNode * 5 + 2] >>> 1;\n      if (!zorder3LessThan(childX, childY, childZ, parentX, parentY, parentZ)) {\n        break;\n      }\n      ++childNode;\n    }\n    octree[parentNode * 5 + 3] = childNode;\n    while (childNode < childEnd) {\n      const childX = octree[childNode * 5] >>> 1;\n      const childY = octree[childNode * 5 + 1] >>> 1;\n      const childZ = octree[childNode * 5 + 2] >>> 1;\n      if (childX !== parentX || childY !== parentY || childZ !== parentZ) {\n        break;\n      }\n      ++childNode;\n    }\n    octree[parentNode * 5 + 4] += childNode;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Interface for defining transcode operations.\n */\n\nexport interface AsyncComputationSpec<Signature extends (...args: any) => any> {\n  id: string;\n  t?: Signature;\n}\n\n/**\n * Declares an asynchronous operation.\n */\nexport function asyncComputation<Signature extends (...args: any) => any>(\n  id: string,\n): AsyncComputationSpec<Signature> {\n  return { id };\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport const decodeGzip =\n  asyncComputation<(data: Uint8Array) => Uint8Array>(\"decodeGzip\");\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { AsyncComputationSpec } from \"#src/async_computation/index.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport { CANCELED } from \"#src/util/cancellation.js\";\n\nlet numWorkers = 0;\nconst freeWorkers: Worker[] = [];\nconst pendingTasks = new Map<\n  number,\n  { msg: any; transfer: Transferable[] | undefined }\n>();\nconst tasks = new Map<\n  number,\n  {\n    resolve: (value: any) => void;\n    reject: (error: any) => void;\n    cleanup: () => void;\n  }\n>();\n// On Safari, `navigator.hardwareConcurrency` is not defined.\nconst maxWorkers =\n  typeof navigator.hardwareConcurrency === \"undefined\"\n    ? 4\n    : Math.min(12, navigator.hardwareConcurrency);\nlet nextTaskId = 0;\n\nfunction returnWorker(worker: Worker) {\n  for (const [id, task] of pendingTasks) {\n    pendingTasks.delete(id);\n    worker.postMessage(task.msg, task.transfer as Transferable[]);\n    return;\n  }\n  freeWorkers.push(worker);\n}\n\nfunction launchWorker() {\n  ++numWorkers;\n  // Note: For compatibility with multiple bundlers, a browser-compatible URL\n  // must be used with `new URL`, which means a Node.js subpath import like\n  // \"#src/async_computation.bundle.js\" cannot be used.\n  const worker = new Worker(\n    /* webpackChunkName: \"neuroglancer_async_computation\" */\n    new URL(\"../async_computation.bundle.js\", import.meta.url),\n    { type: \"module\" },\n  );\n  let ready = false;\n  worker.onmessage = (msg) => {\n    // First message indicates worker is ready.\n    if (!ready) {\n      ready = true;\n      returnWorker(worker);\n      return;\n    }\n    const { id, value, error } = msg.data as {\n      id: number;\n      value?: any;\n      error?: string;\n    };\n    returnWorker(worker);\n    const callbacks = tasks.get(id)!;\n    tasks.delete(id);\n    if (callbacks === undefined) return;\n    callbacks.cleanup();\n    if (error !== undefined) {\n      callbacks.reject(new Error(error));\n    } else {\n      callbacks.resolve(value);\n    }\n  };\n}\n\nexport function requestAsyncComputation<\n  Signature extends (...args: any) => any,\n>(\n  request: AsyncComputationSpec<Signature>,\n  cancellationToken: CancellationToken,\n  transfer: Transferable[] | undefined,\n  ...args: Parameters<Signature>\n): Promise<ReturnType<Signature>> {\n  if (cancellationToken.isCanceled) return Promise.reject(CANCELED);\n  const id = nextTaskId++;\n  const msg = { t: request.id, id, args: args };\n  const cleanup = cancellationToken.add(() => {\n    pendingTasks.delete(id);\n    tasks.delete(id);\n  });\n  const promise = new Promise<ReturnType<Signature>>((resolve, reject) => {\n    tasks.set(id, { resolve, reject, cleanup });\n  });\n  if (freeWorkers.length !== 0) {\n    freeWorkers.pop()!.postMessage(msg, transfer as Transferable[]);\n  } else {\n    pendingTasks.set(id, { msg, transfer });\n    if (tasks.size > numWorkers && numWorkers < maxWorkers) {\n      launchWorker();\n    }\n  }\n  return promise;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport const encodeCompressedSegmentationUint32 = asyncComputation<\n  (\n    rawData: Uint32Array,\n    shape: ArrayLike<number>,\n    blockSize: ArrayLike<number>,\n  ) => Uint32Array\n>(\"encodeCompressedSegmentationUint32\");\n\nexport const encodeCompressedSegmentationUint64 = asyncComputation<\n  (\n    rawData: Uint32Array,\n    shape: ArrayLike<number>,\n    blockSize: ArrayLike<number>,\n  ) => Uint32Array\n>(\"encodeCompressedSegmentationUint64\");\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts raw data volumes to the appropriate format required by the frontend.\n */\n\nimport {\n  encodeCompressedSegmentationUint32,\n  encodeCompressedSegmentationUint64,\n} from \"#src/async_computation/encode_compressed_segmentation_request.js\";\nimport { requestAsyncComputation } from \"#src/async_computation/request.js\";\nimport { DataType } from \"#src/sliceview/base.js\";\nimport type { VolumeChunk } from \"#src/sliceview/volume/backend.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\n\nexport async function postProcessRawData(\n  chunk: VolumeChunk,\n  cancellationToken: CancellationToken,\n  data: ArrayBufferView,\n) {\n  cancellationToken;\n  const { spec } = chunk.source!;\n  if (spec.compressedSegmentationBlockSize !== undefined) {\n    const { dataType } = spec;\n    const chunkDataSize = chunk.chunkDataSize!;\n    const shape = [\n      chunkDataSize[0],\n      chunkDataSize[1],\n      chunkDataSize[2],\n      chunkDataSize[3] || 1,\n    ];\n    switch (dataType) {\n      case DataType.UINT32:\n        chunk.data = await requestAsyncComputation(\n          encodeCompressedSegmentationUint32,\n          cancellationToken,\n          [data.buffer],\n          data as Uint32Array,\n          shape,\n          spec.compressedSegmentationBlockSize,\n        );\n        break;\n      case DataType.UINT64:\n        chunk.data = await requestAsyncComputation(\n          encodeCompressedSegmentationUint64,\n          cancellationToken,\n          [data.buffer],\n          data as Uint32Array,\n          shape,\n          spec.compressedSegmentationBlockSize,\n        );\n        break;\n      default:\n        throw new Error(\n          `Unsupported data type for compressed segmentation: ${DataType[dataType]}`,\n        );\n    }\n  } else {\n    chunk.data = data;\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Support for parsing NumPy dtype strings.\n */\n\nimport { DataType } from \"#src/util/data_type.js\";\nimport { Endianness } from \"#src/util/endian.js\";\n\nexport interface NumpyDtype {\n  dataType: DataType;\n  endianness: Endianness;\n}\n\nconst supportedDataTypes = new Map<string, NumpyDtype>();\nsupportedDataTypes.set(\"|u1\", {\n  endianness: Endianness.LITTLE,\n  dataType: DataType.UINT8,\n});\nsupportedDataTypes.set(\"|i1\", {\n  endianness: Endianness.LITTLE,\n  dataType: DataType.INT8,\n});\nfor (const [endiannessChar, endianness] of <[string, Endianness][]>[\n  [\"<\", Endianness.LITTLE],\n  [\">\", Endianness.BIG],\n]) {\n  // For now, treat both signed and unsigned integer types as unsigned.\n  for (const typeChar of [\"u\", \"i\"]) {\n    supportedDataTypes.set(`${endiannessChar}${typeChar}8`, {\n      endianness,\n      dataType: DataType.UINT64,\n    });\n  }\n  supportedDataTypes.set(`${endiannessChar}u2`, {\n    endianness,\n    dataType: DataType.UINT16,\n  });\n\n  supportedDataTypes.set(`${endiannessChar}i2`, {\n    endianness,\n    dataType: DataType.INT16,\n  });\n\n  supportedDataTypes.set(`${endiannessChar}u4`, {\n    endianness,\n    dataType: DataType.UINT32,\n  });\n\n  supportedDataTypes.set(`${endiannessChar}i4`, {\n    endianness,\n    dataType: DataType.INT32,\n  });\n\n  supportedDataTypes.set(`${endiannessChar}f4`, {\n    endianness,\n    dataType: DataType.FLOAT32,\n  });\n}\n\nexport function parseNumpyDtype(typestr: unknown): NumpyDtype {\n  const dtype = supportedDataTypes.get(typestr as any);\n  if (dtype === undefined) {\n    throw new Error(`Unsupported numpy data type: ${JSON.stringify(typestr)}`);\n  }\n  return dtype;\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Basic support for parsing the Python Numpy 'npy' serialization format.\n *\n * See http://docs.scipy.org/doc/numpy-dev/neps/npy-format.html\n */\n\nimport type { TypedArray } from \"#src/util/array.js\";\nimport type { DataType } from \"#src/util/data_type.js\";\nimport {\n  DATA_TYPE_ARRAY_CONSTRUCTOR,\n  DATA_TYPE_BYTES,\n  DATA_TYPE_JAVASCRIPT_ELEMENTS_PER_ARRAY_ELEMENT,\n} from \"#src/util/data_type.js\";\nimport { convertEndian } from \"#src/util/endian.js\";\nimport { pythonLiteralParse } from \"#src/util/json.js\";\nimport { parseNumpyDtype } from \"#src/util/numpy_dtype.js\";\n\nexport class NumpyArray {\n  constructor(\n    public data: TypedArray,\n    public shape: number[],\n    public dataType: DataType,\n    public fortranOrder: boolean,\n  ) {}\n}\n\nexport function parseNpy(x: Uint8Array) {\n  // Verify 6-byte magic sequence: 147, 78, 85, 77, 80, 89\n  if (\n    x[0] !== 147 ||\n    x[1] !== 78 ||\n    x[2] !== 85 ||\n    x[3] !== 77 ||\n    x[4] !== 80 ||\n    x[5] !== 89\n  ) {\n    throw new Error(\"Data does not match npy format.\");\n  }\n  const majorVersion = x[6];\n  const minorVersion = x[7];\n  if (majorVersion !== 1 || minorVersion !== 0) {\n    throw new Error(`Unsupported npy version ${majorVersion}.${minorVersion}`);\n  }\n  const dv = new DataView(x.buffer, x.byteOffset, x.byteLength);\n  const headerLength = dv.getUint16(8, /*littleEndian=*/ true);\n  const header = new TextDecoder(\"utf-8\").decode(\n    x.subarray(10, headerLength + 10),\n  );\n  let headerObject: any;\n  const dataOffset = headerLength + 10;\n  try {\n    headerObject = pythonLiteralParse(header);\n  } catch (e) {\n    throw new Error(`Failed to parse npy header: ${e}`);\n  }\n  const dtype = headerObject.descr;\n  const shape = headerObject.shape;\n  let numElements = 1;\n  if (!Array.isArray(shape)) {\n    throw new Error(\"Invalid shape ${JSON.stringify(shape)}\");\n  }\n  for (const dim of shape) {\n    if (typeof dim !== \"number\") {\n      throw new Error(\"Invalid shape ${JSON.stringify(shape)}\");\n    }\n    numElements *= dim;\n  }\n  const { dataType, endianness } = parseNumpyDtype(dtype);\n  const bytesPerElement = DATA_TYPE_BYTES[dataType];\n  const javascriptElementsPerArrayElement =\n    DATA_TYPE_JAVASCRIPT_ELEMENTS_PER_ARRAY_ELEMENT[dataType];\n  const arrayConstructor = DATA_TYPE_ARRAY_CONSTRUCTOR[dataType];\n  const javascriptElements = javascriptElementsPerArrayElement * numElements;\n  if (bytesPerElement * numElements + dataOffset !== x.byteLength) {\n    throw new Error(\"Expected length does not match length of data\");\n  }\n  const data = new arrayConstructor(\n    x.buffer,\n    x.byteOffset + dataOffset,\n    javascriptElements,\n  );\n  convertEndian(data, endianness, bytesPerElement);\n  return new NumpyArray(\n    data,\n    shape,\n    dataType,\n    headerObject.fortran_order === true,\n  );\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This decodes the BOSS (https://github.com/jhuapl-boss/) NPZ format, which is the Python\n * NPY binary format with zlib encoding.\n *\n * This is NOT the same as the Python NPZ format, which is a ZIP file containing multiple files\n * (each corresponding to a different variable) in NPY binary format.\n */\n\nimport { decodeGzip } from \"#src/async_computation/decode_gzip_request.js\";\nimport { requestAsyncComputation } from \"#src/async_computation/request.js\";\nimport { postProcessRawData } from \"#src/sliceview/backend_chunk_decoders/postprocess.js\";\nimport { DataType } from \"#src/sliceview/base.js\";\nimport type { VolumeChunk } from \"#src/sliceview/volume/backend.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport { vec3Key } from \"#src/util/geom.js\";\nimport { parseNpy } from \"#src/util/npy.js\";\n\nexport async function decodeBossNpzChunk(\n  chunk: VolumeChunk,\n  cancellationToken: CancellationToken,\n  response: ArrayBuffer,\n) {\n  const parseResult = parseNpy(\n    await requestAsyncComputation(\n      decodeGzip,\n      cancellationToken,\n      [response],\n      new Uint8Array(response),\n    ),\n  );\n  const chunkDataSize = chunk.chunkDataSize!;\n  const source = chunk.source!;\n  const { shape } = parseResult;\n  if (\n    shape.length !== 3 ||\n    shape[0] !== chunkDataSize[2] ||\n    shape[1] !== chunkDataSize[1] ||\n    shape[2] !== chunkDataSize[0]\n  ) {\n    throw new Error(\n      `Shape ${JSON.stringify(shape)} does not match chunkDataSize ${vec3Key(\n        chunkDataSize,\n      )}`,\n    );\n  }\n  const parsedDataType = parseResult.dataType;\n  const { spec } = source;\n  if (parsedDataType !== spec.dataType) {\n    throw new Error(\n      `Data type ${\n        DataType[parsedDataType]\n      } does not match expected data type ${DataType[spec.dataType]}`,\n    );\n  }\n  await postProcessRawData(chunk, cancellationToken, parseResult.data);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { DecodedImage } from \"#src/async_computation/decode_png_request.js\";\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport const decodeJpeg =\n  asyncComputation<\n    (\n      data: Uint8Array,\n      width: number | undefined,\n      height: number | undefined,\n      numComponents: number | undefined,\n      convertToGrayscale: boolean,\n    ) => DecodedImage\n  >(\"decodeJpeg\");\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeJpeg } from \"#src/async_computation/decode_jpeg_request.js\";\nimport { requestAsyncComputation } from \"#src/async_computation/request.js\";\nimport { postProcessRawData } from \"#src/sliceview/backend_chunk_decoders/postprocess.js\";\nimport type { VolumeChunk } from \"#src/sliceview/volume/backend.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\n\nexport async function decodeJpegChunk(\n  chunk: VolumeChunk,\n  cancellationToken: CancellationToken,\n  response: ArrayBuffer,\n) {\n  const chunkDataSize = chunk.chunkDataSize!;\n  const { uint8Array: decoded } = await requestAsyncComputation(\n    decodeJpeg,\n    cancellationToken,\n    [response],\n    new Uint8Array(response),\n    chunkDataSize[0],\n    chunkDataSize[1] * chunkDataSize[2],\n    chunkDataSize[3] || 1,\n    false,\n  );\n  await postProcessRawData(chunk, cancellationToken, decoded);\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Chunk } from \"#src/chunk_manager/backend.js\";\nimport {\n  SliceViewChunk,\n  SliceViewChunkSourceBackend,\n} from \"#src/sliceview/backend.js\";\nimport type {\n  DataType,\n  SliceViewChunkSpecification,\n} from \"#src/sliceview/base.js\";\nimport type {\n  VolumeChunkSource as VolumeChunkSourceInterface,\n  VolumeChunkSpecification,\n} from \"#src/sliceview/volume/base.js\";\nimport type { vec3 } from \"#src/util/geom.js\";\nimport * as vector from \"#src/util/vector.js\";\nimport type { RPC } from \"#src/worker_rpc.js\";\n\nexport class VolumeChunk extends SliceViewChunk {\n  source: VolumeChunkSource | null = null;\n  data: ArrayBufferView | null;\n  chunkDataSize: Uint32Array | null;\n\n  initializeVolumeChunk(key: string, chunkGridPosition: vec3) {\n    super.initializeVolumeChunk(key, chunkGridPosition);\n    this.chunkDataSize = null;\n    this.data = null;\n  }\n\n  serialize(msg: any, transfers: any[]) {\n    super.serialize(msg, transfers);\n    const chunkDataSize = this.chunkDataSize;\n    if (chunkDataSize !== this.source!.spec.chunkDataSize) {\n      msg.chunkDataSize = chunkDataSize;\n    }\n    const data = (msg.data = this.data);\n    if (data !== null) {\n      transfers.push(data!.buffer);\n    }\n    this.data = null;\n  }\n\n  downloadSucceeded() {\n    this.systemMemoryBytes = this.gpuMemoryBytes = this.data?.byteLength ?? 0;\n    super.downloadSucceeded();\n  }\n\n  freeSystemMemory() {\n    this.data = null;\n  }\n}\n\ninterface ChunkWithGridPositionAndDataSize extends Chunk {\n  chunkGridPosition: Float32Array;\n  chunkDataSize: Uint32Array | null;\n}\n\ninterface SliceViewChunkSpecWithOffsetAndDatatype\n  extends SliceViewChunkSpecification<Uint32Array> {\n  baseVoxelOffset: Float32Array;\n  dataType: DataType;\n}\n\ninterface ChunkSourceForChunkBounds {\n  spec: SliceViewChunkSpecWithOffsetAndDatatype;\n  tempChunkDataSize: Uint32Array;\n  tempChunkPosition: Float32Array;\n}\n\n/**\n * Helper function for computing the voxel bounds of a chunk based on its chunkGridPosition.\n *\n * This assumes that the grid of chunk positions starts at this.baseVoxelOffset.  Chunks are\n * clipped to lie within upperVoxelBound, but are not clipped to lie within lowerVoxelBound.  (The\n * frontend code currently cannot handle chunks clipped at their lower corner, and the chunk\n * layout can generally be chosen so that lowerVoxelBound lies on a chunk boundary.)\n *\n * This sets chunk.chunkDataSize to a copy of the returned chunkDataSize if it differs from\n * source.spec.chunkDataSize; otherwise, it is set to source.spec.chunkDataSize.\n *\n * @returns A globally-allocated Vec3 containing the chunk corner position in voxel coordinates.\n * The returned Vec3 will be invalidated by any subsequent call to this method, even on a\n * different VolumeChunkSource instance.\n */\nexport function computeChunkBounds(\n  source: ChunkSourceForChunkBounds,\n  chunk: ChunkWithGridPositionAndDataSize,\n) {\n  const { spec, tempChunkDataSize, tempChunkPosition } = source;\n  const { upperVoxelBound, rank, baseVoxelOffset } = spec;\n\n  const origChunkDataSize = spec.chunkDataSize;\n  const newChunkDataSize = tempChunkDataSize;\n\n  // Chunk start position in voxel coordinates.\n  const chunkPosition = vector.multiply(\n    tempChunkPosition,\n    chunk.chunkGridPosition,\n    origChunkDataSize,\n  );\n\n  // Specifies whether the chunk only partially fits within the data bounds.\n  let partial = false;\n  for (let i = 0; i < rank; ++i) {\n    const upper = Math.min(\n      upperVoxelBound[i],\n      chunkPosition[i] + origChunkDataSize[i],\n    );\n    const size = (newChunkDataSize[i] = upper - chunkPosition[i]);\n    if (size !== origChunkDataSize[i]) {\n      partial = true;\n    }\n  }\n\n  vector.add(chunkPosition, chunkPosition, baseVoxelOffset);\n\n  if (partial) {\n    chunk.chunkDataSize = Uint32Array.from(newChunkDataSize);\n  } else {\n    chunk.chunkDataSize = origChunkDataSize;\n  }\n\n  return chunkPosition;\n}\n\nexport class VolumeChunkSource\n  extends SliceViewChunkSourceBackend\n  implements VolumeChunkSourceInterface\n{\n  spec: VolumeChunkSpecification;\n  tempChunkDataSize: Uint32Array;\n  tempChunkPosition: Float32Array;\n  constructor(rpc: RPC, options: any) {\n    super(rpc, options);\n    const rank = this.spec.rank;\n    this.tempChunkDataSize = new Uint32Array(rank);\n    this.tempChunkPosition = new Float32Array(rank);\n  }\n\n  computeChunkBounds(chunk: VolumeChunk) {\n    return computeChunkBounds(this, chunk);\n  }\n}\nVolumeChunkSource.prototype.chunkConstructor = VolumeChunk;\n","/**\n * @license\n * Copyright 2017 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WithParameters } from \"#src/chunk_manager/backend.js\";\nimport type { ChunkSourceParametersConstructor } from \"#src/chunk_manager/base.js\";\nimport { WithSharedCredentialsProviderCounterpart } from \"#src/credentials_provider/shared_counterpart.js\";\nimport type { BossToken } from \"#src/datasource/boss/api.js\";\nimport { fetchWithBossCredentials } from \"#src/datasource/boss/api.js\";\nimport {\n  MeshSourceParameters,\n  VolumeChunkSourceParameters,\n} from \"#src/datasource/boss/base.js\";\nimport type { FragmentChunk, ManifestChunk } from \"#src/mesh/backend.js\";\nimport {\n  assignMeshFragmentData,\n  decodeJsonManifestChunk,\n  decodeTriangleVertexPositionsAndIndices,\n  MeshSource,\n} from \"#src/mesh/backend.js\";\nimport { decodeBossNpzChunk } from \"#src/sliceview/backend_chunk_decoders/bossNpz.js\";\nimport type { ChunkDecoder } from \"#src/sliceview/backend_chunk_decoders/index.js\";\nimport { decodeJpegChunk } from \"#src/sliceview/backend_chunk_decoders/jpeg.js\";\nimport type { VolumeChunk } from \"#src/sliceview/volume/backend.js\";\nimport { VolumeChunkSource } from \"#src/sliceview/volume/backend.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport { Endianness } from \"#src/util/endian.js\";\nimport {\n  cancellableFetchOk,\n  responseArrayBuffer,\n} from \"#src/util/http_request.js\";\nimport type { SharedObject } from \"#src/worker_rpc.js\";\nimport { registerSharedObject } from \"#src/worker_rpc.js\";\n\nconst chunkDecoders = new Map<string, ChunkDecoder>();\nchunkDecoders.set(\"npz\", decodeBossNpzChunk);\nchunkDecoders.set(\"jpeg\", decodeJpegChunk);\n\nconst acceptHeaders = new Map<string, string>();\nacceptHeaders.set(\"npz\", \"application/npygz\");\nacceptHeaders.set(\"jpeg\", \"image/jpeg\");\n\nfunction BossSource<\n  Parameters,\n  TBase extends { new (...args: any[]): SharedObject },\n>(\n  Base: TBase,\n  parametersConstructor: ChunkSourceParametersConstructor<Parameters>,\n) {\n  return WithParameters(\n    WithSharedCredentialsProviderCounterpart<BossToken>()(Base),\n    parametersConstructor,\n  );\n}\n\n@registerSharedObject()\nexport class BossVolumeChunkSource extends BossSource(\n  VolumeChunkSource,\n  VolumeChunkSourceParameters,\n) {\n  chunkDecoder = chunkDecoders.get(this.parameters.encoding)!;\n\n  async download(chunk: VolumeChunk, cancellationToken: CancellationToken) {\n    const { parameters } = this;\n    let url = `${parameters.baseUrl}/latest/cutout/${parameters.collection}/${parameters.experiment}/${parameters.channel}/${parameters.resolution}`;\n    {\n      // chunkPosition must not be captured, since it will be invalidated by the next call to\n      // computeChunkBounds.\n      const chunkPosition = this.computeChunkBounds(chunk);\n      const chunkDataSize = chunk.chunkDataSize!;\n      for (let i = 0; i < 3; ++i) {\n        url += `/${chunkPosition[i]}:${chunkPosition[i] + chunkDataSize[i]}`;\n      }\n    }\n    url += \"/\";\n\n    if (parameters.window !== undefined) {\n      url += `?window=${parameters.window[0]},${parameters.window[1]}`;\n    }\n    const response = await fetchWithBossCredentials(\n      this.credentialsProvider,\n      url,\n      { headers: { Accept: acceptHeaders.get(parameters.encoding)! } },\n      responseArrayBuffer,\n      cancellationToken,\n    );\n    await this.chunkDecoder(chunk, cancellationToken, response);\n  }\n}\n\nfunction decodeManifestChunk(chunk: ManifestChunk, response: any) {\n  return decodeJsonManifestChunk(chunk, response, \"fragments\");\n}\n\nfunction decodeFragmentChunk(chunk: FragmentChunk, response: ArrayBuffer) {\n  const dv = new DataView(response);\n  const numVertices = dv.getUint32(0, true);\n  assignMeshFragmentData(\n    chunk,\n    decodeTriangleVertexPositionsAndIndices(\n      response,\n      Endianness.LITTLE,\n      /*vertexByteOffset=*/ 4,\n      numVertices,\n    ),\n  );\n}\n\n@registerSharedObject()\nexport class BossMeshSource extends BossSource(\n  MeshSource,\n  MeshSourceParameters,\n) {\n  download(chunk: ManifestChunk, cancellationToken: CancellationToken) {\n    const { parameters } = this;\n    return cancellableFetchOk(\n      `${parameters.baseUrl}${chunk.objectId}`,\n      {},\n      responseArrayBuffer,\n      cancellationToken,\n    ).then((response) => decodeManifestChunk(chunk, response));\n  }\n\n  downloadFragment(chunk: FragmentChunk, cancellationToken: CancellationToken) {\n    const { parameters } = this;\n    return cancellableFetchOk(\n      `${parameters.baseUrl}${chunk.fragmentId}`,\n      {},\n      responseArrayBuffer,\n      cancellationToken,\n    ).then((response) => decodeFragmentChunk(chunk, response));\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { CredentialsProvider } from \"#src/credentials_provider/index.js\";\nimport type { OAuth2Credentials } from \"#src/credentials_provider/oauth2.js\";\nimport { fetchWithOAuth2Credentials } from \"#src/credentials_provider/oauth2.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport { uncancelableToken } from \"#src/util/cancellation.js\";\nimport { responseArrayBuffer, responseJson } from \"#src/util/http_request.js\";\n\nexport type { OAuth2Credentials };\n\nexport type BrainmapsCredentialsProvider =\n  CredentialsProvider<OAuth2Credentials>;\n\n/**\n * Key used for retrieving the CredentialsProvider from a CredentialsManager.\n */\nexport const credentialsKey = \"google-brainmaps\";\n\nexport interface BrainmapsInstance {\n  description: string;\n  /**\n   * One or more server URLs to use to connect to the instance.\n   */\n  serverUrl: string;\n}\n\n/**\n * API-related interfaces.\n */\n\nexport interface ChangeSpecPayload {\n  change_stack_id?: string;\n  time_stamp?: number;\n  skip_equivalences?: boolean;\n}\n\nexport interface ChangeStackAwarePayload {\n  change_spec?: ChangeSpecPayload;\n}\n\nexport interface GeometryPayload {\n  corner: string;\n  size: string;\n  scale: number;\n}\n\nexport interface GeometryAwarePayload {\n  geometry: GeometryPayload;\n}\n\nexport interface ImageFormatOptionsPayload {\n  image_format?: \"AUTO\" | \"JPEG\" | \"PNG\" | \"JSON\";\n  jpeg_quality?: number;\n  compressed_segmentation_block_size?: string;\n}\n\nexport interface SubvolumePayload\n  extends ChangeStackAwarePayload,\n    GeometryAwarePayload {\n  image_format_options?: ImageFormatOptionsPayload;\n  subvolume_format?: \"RAW\" | \"SINGLE_IMAGE\";\n}\n\nexport interface SkeletonPayload extends ChangeStackAwarePayload {\n  object_id: string;\n}\n\nexport interface MeshFragmentPayload extends ChangeStackAwarePayload {\n  fragment_key: string;\n  object_id: string;\n}\n\nexport interface BatchMeshFragment {\n  object_id: string;\n  fragment_keys: string[];\n}\n\nexport interface BatchMeshFragmentPayload {\n  volume_id: string;\n  mesh_name: string;\n  batches: BatchMeshFragment[];\n}\n\nexport interface HttpCall {\n  method: \"GET\" | \"POST\";\n  path: string;\n  payload?: string;\n}\n\nexport function makeRequest(\n  instance: BrainmapsInstance,\n  credentialsProvider: BrainmapsCredentialsProvider,\n  httpCall: HttpCall & { responseType: \"arraybuffer\" },\n  cancellationToken?: CancellationToken,\n): Promise<ArrayBuffer>;\nexport function makeRequest(\n  instance: BrainmapsInstance,\n  credentialsProvider: BrainmapsCredentialsProvider,\n  httpCall: HttpCall & { responseType: \"json\" },\n  cancellationToken?: CancellationToken,\n): Promise<any>;\n\nexport function makeRequest(\n  instance: BrainmapsInstance,\n  credentialsProvider: BrainmapsCredentialsProvider,\n  httpCall: HttpCall & { responseType: XMLHttpRequestResponseType },\n  cancellationToken: CancellationToken = uncancelableToken,\n): any {\n  return fetchWithOAuth2Credentials(\n    credentialsProvider,\n    `${instance.serverUrl}${httpCall.path}`,\n    { method: httpCall.method, body: httpCall.payload },\n    httpCall.responseType === \"json\" ? responseJson : responseArrayBuffer,\n    cancellationToken,\n  );\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Chunk,\n  ChunkRenderLayerBackend,\n  ChunkSource,\n  withChunkManager,\n} from \"#src/chunk_manager/backend.js\";\nimport { ChunkState } from \"#src/chunk_manager/base.js\";\nimport { decodeVertexPositionsAndIndices } from \"#src/mesh/backend.js\";\nimport { withSegmentationLayerBackendState } from \"#src/segmentation_display_state/backend.js\";\nimport {\n  forEachVisibleSegment,\n  getObjectKey,\n} from \"#src/segmentation_display_state/base.js\";\nimport { SKELETON_LAYER_RPC_ID } from \"#src/skeleton/base.js\";\nimport type { TypedArray } from \"#src/util/array.js\";\nimport type { Endianness } from \"#src/util/endian.js\";\nimport { Uint64 } from \"#src/util/uint64.js\";\nimport {\n  getBasePriority,\n  getPriorityTier,\n  withSharedVisibility,\n} from \"#src/visibility_priority/backend.js\";\nimport type { RPC } from \"#src/worker_rpc.js\";\nimport { registerSharedObject } from \"#src/worker_rpc.js\";\n\nconst SKELETON_CHUNK_PRIORITY = 60;\n\n// Chunk that contains the skeleton of a single object.\nexport class SkeletonChunk extends Chunk {\n  objectId = new Uint64();\n  vertexPositions: Float32Array | null = null;\n  vertexAttributes: TypedArray[] | null = null;\n  indices: Uint32Array | null = null;\n\n  initializeSkeletonChunk(key: string, objectId: Uint64) {\n    super.initialize(key);\n    this.objectId.assign(objectId);\n  }\n  freeSystemMemory() {\n    this.vertexPositions = this.indices = null;\n  }\n\n  private getVertexAttributeBytes() {\n    let total = this.vertexPositions!.byteLength;\n    const { vertexAttributes } = this;\n    if (vertexAttributes != null) {\n      vertexAttributes.forEach((a) => {\n        total += a.byteLength;\n      });\n    }\n    return total;\n  }\n\n  serialize(msg: any, transfers: any[]) {\n    super.serialize(msg, transfers);\n    const vertexPositions = this.vertexPositions!;\n    const indices = this.indices!;\n    msg.numVertices = vertexPositions.length / 3;\n    msg.indices = indices;\n    transfers.push(indices.buffer);\n\n    const { vertexAttributes } = this;\n    if (vertexAttributes != null && vertexAttributes.length > 0) {\n      const vertexData = new Uint8Array(this.getVertexAttributeBytes());\n      vertexData.set(\n        new Uint8Array(\n          vertexPositions.buffer,\n          vertexPositions.byteOffset,\n          vertexPositions.byteLength,\n        ),\n      );\n      const vertexAttributeOffsets = (msg.vertexAttributeOffsets =\n        new Uint32Array(vertexAttributes.length + 1));\n      vertexAttributeOffsets[0] = 0;\n      let offset = vertexPositions.byteLength;\n      vertexAttributes.forEach((a, i) => {\n        vertexAttributeOffsets[i + 1] = offset;\n        vertexData.set(\n          new Uint8Array(a.buffer, a.byteOffset, a.byteLength),\n          offset,\n        );\n        offset += a.byteLength;\n      });\n      transfers.push(vertexData.buffer);\n      msg.vertexAttributes = vertexData;\n    } else {\n      msg.vertexAttributes = new Uint8Array(\n        vertexPositions.buffer,\n        vertexPositions.byteOffset,\n        vertexPositions.byteLength,\n      );\n      msg.vertexAttributeOffsets = Uint32Array.of(0);\n      if (vertexPositions.buffer !== transfers[0]) {\n        transfers.push(vertexPositions.buffer);\n      }\n    }\n    this.vertexPositions = this.indices = this.vertexAttributes = null;\n  }\n  downloadSucceeded() {\n    this.systemMemoryBytes = this.gpuMemoryBytes =\n      this.indices!.byteLength + this.getVertexAttributeBytes();\n    super.downloadSucceeded();\n  }\n}\n\nexport class SkeletonSource extends ChunkSource {\n  chunks: Map<string, SkeletonChunk>;\n  getChunk(objectId: Uint64) {\n    const key = getObjectKey(objectId);\n    let chunk = this.chunks.get(key);\n    if (chunk === undefined) {\n      chunk = this.getNewChunk_(SkeletonChunk);\n      chunk.initializeSkeletonChunk(key, objectId);\n      this.addChunk(chunk);\n    }\n    return chunk;\n  }\n}\n\n@registerSharedObject(SKELETON_LAYER_RPC_ID)\nexport class SkeletonLayer extends withSegmentationLayerBackendState(\n  withSharedVisibility(withChunkManager(ChunkRenderLayerBackend)),\n) {\n  source: SkeletonSource;\n\n  constructor(rpc: RPC, options: any) {\n    super(rpc, options);\n    this.source = this.registerDisposer(\n      rpc.getRef<SkeletonSource>(options.source),\n    );\n    this.registerDisposer(\n      this.chunkManager.recomputeChunkPriorities.add(() => {\n        this.updateChunkPriorities();\n      }),\n    );\n  }\n\n  private updateChunkPriorities() {\n    const visibility = this.visibility.value;\n    if (visibility === Number.NEGATIVE_INFINITY) {\n      return;\n    }\n    this.chunkManager.registerLayer(this);\n    const priorityTier = getPriorityTier(visibility);\n    const basePriority = getBasePriority(visibility);\n    const { source, chunkManager } = this;\n    forEachVisibleSegment(this, (objectId) => {\n      const chunk = source.getChunk(objectId);\n      ++this.numVisibleChunksNeeded;\n      if (chunk.state === ChunkState.GPU_MEMORY) {\n        ++this.numVisibleChunksAvailable;\n      }\n      chunkManager.requestChunk(\n        chunk,\n        priorityTier,\n        basePriority + SKELETON_CHUNK_PRIORITY,\n      );\n    });\n  }\n}\n\n/**\n * Extracts vertex positions and edge vertex indices of the specified endianness from `data'.\n *\n * See documentation of decodeVertexPositionsAndIndices.\n */\nexport function decodeSkeletonVertexPositionsAndIndices(\n  chunk: SkeletonChunk,\n  data: ArrayBuffer,\n  endianness: Endianness,\n  vertexByteOffset: number,\n  numVertices: number,\n  indexByteOffset?: number,\n  numEdges?: number,\n) {\n  const meshData = decodeVertexPositionsAndIndices(\n    /*verticesPerPrimitive=*/ 2,\n    data,\n    endianness,\n    vertexByteOffset,\n    numVertices,\n    indexByteOffset,\n    numEdges,\n  );\n  chunk.vertexPositions = meshData.vertexPositions as Float32Array;\n  chunk.indices = meshData.indices as Uint32Array;\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { VolumeChunk } from \"#src/sliceview/volume/backend.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\n\nexport async function decodeCompressedSegmentationChunk(\n  chunk: VolumeChunk,\n  cancellationToken: CancellationToken,\n  response: ArrayBuffer,\n) {\n  cancellationToken;\n  chunk.data = new Uint32Array(response);\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { postProcessRawData } from \"#src/sliceview/backend_chunk_decoders/postprocess.js\";\nimport type { VolumeChunk } from \"#src/sliceview/volume/backend.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport { DATA_TYPE_BYTES, makeDataTypeArrayView } from \"#src/util/data_type.js\";\nimport type { Endianness } from \"#src/util/endian.js\";\nimport { convertEndian, ENDIANNESS } from \"#src/util/endian.js\";\nimport * as vector from \"#src/util/vector.js\";\n\nexport async function decodeRawChunk(\n  chunk: VolumeChunk,\n  cancellationToken: CancellationToken,\n  response: ArrayBuffer,\n  endianness: Endianness = ENDIANNESS,\n  byteOffset = 0,\n  byteLength: number = response.byteLength,\n) {\n  cancellationToken;\n  const { spec } = chunk.source!;\n  const { dataType } = spec;\n  const numElements = vector.prod(chunk.chunkDataSize!);\n  const bytesPerElement = DATA_TYPE_BYTES[dataType];\n  const expectedBytes = numElements * bytesPerElement;\n  if (expectedBytes !== byteLength) {\n    throw new Error(\n      `Raw-format chunk is ${byteLength} bytes, ` +\n        `but ${numElements} * ${bytesPerElement} = ${expectedBytes} bytes are expected.`,\n    );\n  }\n  const data = makeDataTypeArrayView(\n    dataType,\n    response,\n    byteOffset,\n    byteLength,\n  );\n  convertEndian(data, endianness, bytesPerElement);\n  await postProcessRawData(chunk, cancellationToken, data);\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  AnnotationGeometryChunk,\n  AnnotationMetadataChunk,\n  AnnotationSubsetGeometryChunk,\n} from \"#src/annotation/backend.js\";\nimport {\n  AnnotationGeometryChunkSourceBackend,\n  AnnotationGeometryData,\n  AnnotationSource,\n} from \"#src/annotation/backend.js\";\nimport type { Annotation, AnnotationId } from \"#src/annotation/index.js\";\nimport {\n  AnnotationSerializer,\n  AnnotationType,\n  makeAnnotationPropertySerializers,\n} from \"#src/annotation/index.js\";\nimport { WithParameters } from \"#src/chunk_manager/backend.js\";\nimport type { ChunkSourceParametersConstructor } from \"#src/chunk_manager/base.js\";\nimport type { CredentialsProvider } from \"#src/credentials_provider/index.js\";\nimport { WithSharedCredentialsProviderCounterpart } from \"#src/credentials_provider/shared_counterpart.js\";\nimport type {\n  BatchMeshFragment,\n  BatchMeshFragmentPayload,\n  BrainmapsInstance,\n  ChangeStackAwarePayload,\n  OAuth2Credentials,\n  SkeletonPayload,\n  SubvolumePayload,\n} from \"#src/datasource/brainmaps/api.js\";\nimport { makeRequest } from \"#src/datasource/brainmaps/api.js\";\nimport type { ChangeSpec } from \"#src/datasource/brainmaps/base.js\";\nimport {\n  AnnotationSourceParameters,\n  AnnotationSpatialIndexSourceParameters,\n  MeshSourceParameters,\n  MultiscaleMeshSourceParameters,\n  SkeletonSourceParameters,\n  VolumeChunkEncoding,\n  VolumeSourceParameters,\n} from \"#src/datasource/brainmaps/base.js\";\nimport type {\n  FragmentChunk,\n  ManifestChunk,\n  MultiscaleFragmentChunk,\n  MultiscaleManifestChunk,\n} from \"#src/mesh/backend.js\";\nimport {\n  assignMeshFragmentData,\n  assignMultiscaleMeshFragmentData,\n  generateHigherOctreeLevel,\n  MeshSource,\n  MultiscaleMeshSource,\n} from \"#src/mesh/backend.js\";\nimport { VertexPositionFormat } from \"#src/mesh/base.js\";\nimport type { MultiscaleMeshManifest } from \"#src/mesh/multiscale.js\";\nimport type { SkeletonChunk } from \"#src/skeleton/backend.js\";\nimport {\n  decodeSkeletonVertexPositionsAndIndices,\n  SkeletonSource,\n} from \"#src/skeleton/backend.js\";\nimport { decodeCompressedSegmentationChunk } from \"#src/sliceview/backend_chunk_decoders/compressed_segmentation.js\";\nimport { decodeJpegChunk } from \"#src/sliceview/backend_chunk_decoders/jpeg.js\";\nimport { decodeRawChunk } from \"#src/sliceview/backend_chunk_decoders/raw.js\";\nimport type { VolumeChunk } from \"#src/sliceview/volume/backend.js\";\nimport { VolumeChunkSource } from \"#src/sliceview/volume/backend.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport { convertEndian32, Endianness } from \"#src/util/endian.js\";\nimport { kInfinityVec, kZeroVec, vec3, vec3Key } from \"#src/util/geom.js\";\nimport {\n  parseArray,\n  parseFixedLengthArray,\n  verifyObject,\n  verifyObjectProperty,\n  verifyOptionalString,\n  verifyString,\n  verifyStringArray,\n} from \"#src/util/json.js\";\nimport { defaultStringCompare } from \"#src/util/string.js\";\nimport { Uint64 } from \"#src/util/uint64.js\";\nimport * as vector from \"#src/util/vector.js\";\nimport {\n  decodeZIndexCompressed,\n  encodeZIndexCompressed3d,\n  getOctreeChildIndex,\n  zorder3LessThan,\n} from \"#src/util/zorder.js\";\nimport type { SharedObject } from \"#src/worker_rpc.js\";\nimport { registerSharedObject } from \"#src/worker_rpc.js\";\n\nconst CHUNK_DECODERS = new Map([\n  [VolumeChunkEncoding.RAW, decodeRawChunk],\n  [VolumeChunkEncoding.JPEG, decodeJpegChunk],\n  [\n    VolumeChunkEncoding.COMPRESSED_SEGMENTATION,\n    decodeCompressedSegmentationChunk,\n  ],\n]);\n\nfunction applyChangeStack(\n  changeStack: ChangeSpec | undefined,\n  payload: ChangeStackAwarePayload,\n) {\n  if (!changeStack) {\n    return;\n  }\n  payload.change_spec = {\n    change_stack_id: changeStack.changeStackId,\n  };\n  if (changeStack.timeStamp) {\n    payload.change_spec.time_stamp = changeStack.timeStamp;\n  }\n  if (changeStack.skipEquivalences) {\n    payload.change_spec.skip_equivalences = changeStack.skipEquivalences;\n  }\n}\n\nfunction BrainmapsSource<\n  Parameters,\n  TBase extends { new (...args: any[]): SharedObject },\n>(\n  Base: TBase,\n  parametersConstructor: ChunkSourceParametersConstructor<Parameters>,\n) {\n  return WithParameters(\n    WithSharedCredentialsProviderCounterpart<OAuth2Credentials>()(Base),\n    parametersConstructor,\n  );\n}\n\nconst tempUint64 = new Uint64();\n\n@registerSharedObject()\nexport class BrainmapsVolumeChunkSource extends BrainmapsSource(\n  VolumeChunkSource,\n  VolumeSourceParameters,\n) {\n  chunkDecoder = CHUNK_DECODERS.get(this.parameters.encoding)!;\n\n  private applyEncodingParams(payload: SubvolumePayload) {\n    const { encoding } = this.parameters;\n    switch (encoding) {\n      case VolumeChunkEncoding.RAW:\n        payload.subvolume_format = \"RAW\";\n        break;\n      case VolumeChunkEncoding.JPEG:\n        payload.subvolume_format = \"SINGLE_IMAGE\";\n        payload.image_format_options = {\n          image_format: \"JPEG\",\n          jpeg_quality: this.parameters.jpegQuality!,\n        };\n        return;\n      case VolumeChunkEncoding.COMPRESSED_SEGMENTATION:\n        payload.subvolume_format = \"RAW\";\n        payload.image_format_options = {\n          compressed_segmentation_block_size: vec3Key(\n            this.spec.compressedSegmentationBlockSize!,\n          ),\n        };\n        break;\n      default:\n        throw new Error(`Invalid encoding: ${encoding}`);\n    }\n  }\n\n  async download(chunk: VolumeChunk, cancellationToken: CancellationToken) {\n    const { parameters } = this;\n\n    // chunkPosition must not be captured, since it will be invalidated by the next call to\n    // computeChunkBounds.\n    const chunkPosition = this.computeChunkBounds(chunk);\n    const chunkDataSize = chunk.chunkDataSize!;\n    const path = `/v1/volumes/${parameters.volumeId}/subvolume:binary`;\n\n    const payload: SubvolumePayload = {\n      geometry: {\n        corner: vec3Key(chunkPosition),\n        size: vec3Key(chunkDataSize),\n        scale: parameters.scaleIndex,\n      },\n    };\n\n    this.applyEncodingParams(payload);\n    applyChangeStack(parameters.changeSpec, payload);\n\n    const response = await makeRequest(\n      parameters.instance,\n      this.credentialsProvider,\n      {\n        method: \"POST\",\n        payload: JSON.stringify(payload),\n        path,\n        responseType: \"arraybuffer\",\n      },\n      cancellationToken,\n    );\n    await this.chunkDecoder(chunk, cancellationToken, response);\n  }\n}\n\nfunction getFragmentCorner(\n  fragmentId: string,\n  xBits: number,\n  yBits: number,\n  zBits: number,\n): Uint32Array {\n  const id = new Uint64();\n  if (!id.tryParseString(fragmentId, 16)) {\n    throw new Error(\n      `Couldn't parse fragmentId ${fragmentId} as hex-encoded Uint64`,\n    );\n  }\n  return decodeZIndexCompressed(id, xBits, yBits, zBits);\n}\n\ninterface BrainmapsMultiscaleManifestChunk extends MultiscaleManifestChunk {\n  fragmentSupervoxelIds: { fragmentId: string; supervoxelIds: string[] }[];\n}\n\nfunction decodeMultiscaleManifestChunk(\n  chunk: BrainmapsMultiscaleManifestChunk,\n  response: any,\n) {\n  verifyObject(response);\n  const source = chunk.source as BrainmapsMultiscaleMeshSource;\n  const fragmentKeys = verifyObjectProperty(\n    response,\n    \"fragmentKey\",\n    verifyStringArray,\n  );\n  const supervoxelIds = verifyObjectProperty(\n    response,\n    \"supervoxelId\",\n    verifyStringArray,\n  );\n  const length = fragmentKeys.length;\n  if (length !== supervoxelIds.length) {\n    throw new Error(\n      \"Expected fragmentKey and supervoxelId arrays to have the same length.\",\n    );\n  }\n  const fragmentSupervoxelIds = new Map<string, string[]>();\n  fragmentKeys.forEach((fragmentId, i) => {\n    let ids = fragmentSupervoxelIds.get(fragmentId);\n    if (ids === undefined) {\n      ids = [];\n      fragmentSupervoxelIds.set(fragmentId, ids);\n    }\n    ids.push(supervoxelIds[i]);\n  });\n  const { chunkShape } = source.parameters.info;\n  const gridShape = source.parameters.info.lods[0].gridShape;\n  const xBits = Math.ceil(Math.log2(gridShape[0]));\n  const yBits = Math.ceil(Math.log2(gridShape[1]));\n  const zBits = Math.ceil(Math.log2(gridShape[2]));\n  const fragmentIdAndCorners = Array.from(fragmentSupervoxelIds.entries()).map(\n    ([id, supervoxelIds]) => ({\n      fragmentId: id,\n      corner: getFragmentCorner(id, xBits, yBits, zBits),\n      supervoxelIds,\n    }),\n  );\n  fragmentIdAndCorners.sort((a, b) => {\n    return zorder3LessThan(\n      a.corner[0],\n      a.corner[1],\n      a.corner[2],\n      b.corner[0],\n      b.corner[1],\n      b.corner[2],\n    )\n      ? -1\n      : 1;\n  });\n  let clipLowerBound: vec3;\n  let clipUpperBound: vec3;\n  let minNumLods = 0;\n  let octree: Uint32Array;\n  if (length === 0) {\n    clipLowerBound = clipUpperBound = kZeroVec;\n    octree = Uint32Array.of(0, 0, 0, 0, 0x80000000);\n  } else {\n    const minCoord = vec3.clone(kInfinityVec);\n    const maxCoord = vec3.clone(kZeroVec);\n    fragmentIdAndCorners.forEach((x) => {\n      const { corner } = x;\n      for (let i = 0; i < 3; ++i) {\n        minCoord[i] = Math.min(minCoord[i], corner[i]);\n        maxCoord[i] = Math.max(maxCoord[i], corner[i]);\n      }\n    });\n    minNumLods = 1;\n    while (\n      maxCoord[0] >>> (minNumLods - 1) !== minCoord[0] >>> (minNumLods - 1) ||\n      maxCoord[1] >>> (minNumLods - 1) !== minCoord[1] >>> (minNumLods - 1) ||\n      maxCoord[2] >>> (minNumLods - 1) !== minCoord[2] >>> (minNumLods - 1)\n    ) {\n      ++minNumLods;\n    }\n    clipLowerBound = vec3.multiply(minCoord, minCoord, chunkShape);\n    clipUpperBound = vec3.add(\n      maxCoord,\n      vec3.multiply(maxCoord, maxCoord, chunkShape),\n      chunkShape,\n    );\n  }\n  const { lods } = source.parameters.info;\n  const lodScales = new Float32Array(Math.max(lods.length, minNumLods));\n  for (let lodIndex = 0; lodIndex < lods.length; ++lodIndex) {\n    lodScales[lodIndex] = lods[lodIndex].scale;\n  }\n\n  if (length !== 0) {\n    const octreeTemp = new Uint32Array(\n      fragmentIdAndCorners.length * lodScales.length * 5,\n    );\n    fragmentIdAndCorners.forEach((x, i) => {\n      octreeTemp.set(x.corner, i * 5);\n      octreeTemp[i * 5] = x.corner[0];\n    });\n    let priorStart = 0;\n    let priorEnd = fragmentIdAndCorners.length;\n    for (let lod = 1; lod < lodScales.length; ++lod) {\n      const curEnd = generateHigherOctreeLevel(\n        octreeTemp,\n        priorStart,\n        priorEnd,\n      );\n      priorStart = priorEnd;\n      priorEnd = curEnd;\n    }\n    octree = octreeTemp.slice(0, priorEnd * 5);\n  }\n\n  const manifest: MultiscaleMeshManifest = {\n    chunkShape,\n    chunkGridSpatialOrigin: kZeroVec,\n    clipLowerBound,\n    clipUpperBound,\n    octree: octree!,\n    lodScales: lodScales,\n    vertexOffsets: new Float32Array(lodScales.length * 3),\n  };\n  chunk.manifest = manifest;\n  chunk.fragmentSupervoxelIds = fragmentIdAndCorners;\n}\n\nconst maxMeshBatchSize = 255;\n\ninterface BatchMeshResponseFragment {\n  fullKey: string;\n  buffer: ArrayBuffer;\n  verticesOffset: number;\n  indicesOffset: number;\n  numVertices: number;\n  numIndices: number;\n}\n\nfunction decodeBatchMeshResponse(\n  response: ArrayBuffer,\n  callback: (fragment: BatchMeshResponseFragment) => void,\n) {\n  const length = response.byteLength;\n  let index = 0;\n  const dataView = new DataView(response);\n  const headerSize =\n    /*object id*/ 8 +\n    /*fragment key length*/ 8 +\n    /*num vertices*/ 8 +\n    /*num triangles*/ 8;\n  while (index < length) {\n    if (index + headerSize > length) {\n      throw new Error(\"Invalid batch mesh fragment response.\");\n    }\n    const objectIdLow = dataView.getUint32(index, /*littleEndian=*/ true);\n    const objectIdHigh = dataView.getUint32(index + 4, /*littleEndian=*/ true);\n    const objectIdString = new Uint64(objectIdLow, objectIdHigh).toString();\n    const prefix = objectIdString + \"\\0\";\n    index += 8;\n    const fragmentKeyLength = dataView.getUint32(index, /*littleEndian=*/ true);\n    const fragmentKeyLengthHigh = dataView.getUint32(\n      index + 4,\n      /*littleEndian=*/ true,\n    );\n    index += 8;\n    if (fragmentKeyLengthHigh !== 0) {\n      throw new Error(\"Invalid batch mesh fragment response.\");\n    }\n    if (\n      index + fragmentKeyLength + /* num vertices */ 8 + /*num indices*/ 8 >\n      length\n    ) {\n      throw new Error(\"Invalid batch mesh fragment response.\");\n    }\n    const fragmentKey = new TextDecoder().decode(\n      new Uint8Array(response, index, fragmentKeyLength),\n    );\n    const fullKey = prefix + fragmentKey;\n    index += fragmentKeyLength;\n    const numVertices = dataView.getUint32(index, /*littleEndian=*/ true);\n    const numVerticesHigh = dataView.getUint32(\n      index + 4,\n      /*littleEndian=*/ true,\n    );\n    index += 8;\n    const numTriangles = dataView.getUint32(index, /*littleEndian=*/ true);\n    const numTrianglesHigh = dataView.getUint32(\n      index + 4,\n      /*littleEndian=*/ true,\n    );\n    index += 8;\n    if (numVerticesHigh !== 0 || numTrianglesHigh !== 0) {\n      throw new Error(\"Invalid batch mesh fragment response.\");\n    }\n    const endOffset = index + numTriangles * 12 + numVertices * 12;\n    if (endOffset > length) {\n      throw new Error(\"Invalid batch mesh fragment response.\");\n    }\n    callback({\n      fullKey,\n      buffer: response,\n      verticesOffset: index,\n      numVertices,\n      indicesOffset: index + 12 * numVertices,\n      numIndices: numTriangles * 3,\n    });\n    index = endOffset;\n  }\n}\n\nfunction combineBatchMeshFragments(fragments: BatchMeshResponseFragment[]) {\n  let totalVertices = 0;\n  let totalIndices = 0;\n  for (const fragment of fragments) {\n    totalVertices += fragment.numVertices;\n    totalIndices += fragment.numIndices;\n  }\n  const vertexBuffer = new Float32Array(totalVertices * 3);\n  const indexBuffer = new Uint32Array(totalIndices);\n  let vertexOffset = 0;\n  let indexOffset = 0;\n  for (const fragment of fragments) {\n    vertexBuffer.set(\n      new Float32Array(\n        fragment.buffer,\n        fragment.verticesOffset,\n        fragment.numVertices * 3,\n      ),\n      vertexOffset * 3,\n    );\n    const { numIndices } = fragment;\n    const sourceIndices = new Uint32Array(\n      fragment.buffer,\n      fragment.indicesOffset,\n      numIndices,\n    );\n    convertEndian32(sourceIndices, Endianness.LITTLE);\n    for (let i = 0; i < numIndices; ++i) {\n      indexBuffer[indexOffset++] = sourceIndices[i] + vertexOffset;\n    }\n    vertexOffset += fragment.numVertices;\n  }\n  convertEndian32(vertexBuffer, Endianness.LITTLE);\n  return { vertexPositions: vertexBuffer, indices: indexBuffer };\n}\n\nasync function makeBatchMeshRequest<T>(\n  credentialsProvider: CredentialsProvider<OAuth2Credentials>,\n  parameters: {\n    instance: BrainmapsInstance;\n    volumeId: string;\n    meshName: string;\n  },\n  ids: Map<string, T>,\n  cancellationToken: CancellationToken,\n): Promise<ArrayBuffer> {\n  const path = \"/v1/objects/meshes:batch\";\n  const batches: BatchMeshFragment[] = [];\n  let prevObjectId: string | undefined;\n  let batchSize = 0;\n  const pendingIds = new Map<string, T>();\n  for (const [id, idData] of ids) {\n    pendingIds.set(id, idData);\n    ids.delete(id);\n    const splitIndex = id.indexOf(\"\\0\");\n    const objectId = id.substring(0, splitIndex);\n    const fragmentId = id.substring(splitIndex + 1);\n    if (objectId !== prevObjectId) {\n      batches.push({ object_id: objectId, fragment_keys: [] });\n    }\n    batches[batches.length - 1].fragment_keys.push(fragmentId);\n    if (++batchSize === maxMeshBatchSize) break;\n  }\n  const payload: BatchMeshFragmentPayload = {\n    volume_id: parameters.volumeId,\n    mesh_name: parameters.meshName,\n    batches: batches,\n  };\n  try {\n    return await makeRequest(\n      parameters.instance,\n      credentialsProvider,\n      {\n        method: \"POST\",\n        path,\n        payload: JSON.stringify(payload),\n        responseType: \"arraybuffer\",\n      },\n      cancellationToken,\n    );\n  } finally {\n    for (const [id, idData] of pendingIds) {\n      ids.set(id, idData);\n    }\n  }\n}\n\n@registerSharedObject()\nexport class BrainmapsMultiscaleMeshSource extends BrainmapsSource(\n  MultiscaleMeshSource,\n  MultiscaleMeshSourceParameters,\n) {\n  private listFragmentsParams = (() => {\n    const { parameters } = this;\n    const { changeSpec } = parameters;\n    if (changeSpec !== undefined) {\n      return `&header.changeStackId=${changeSpec.changeStackId}`;\n    }\n    return \"\";\n  })();\n\n  download(\n    chunk: BrainmapsMultiscaleManifestChunk,\n    cancellationToken: CancellationToken,\n  ) {\n    const { parameters } = this;\n    const path =\n      `/v1/objects/${parameters.volumeId}/meshes/` +\n      `${parameters.info.lods[0].info.name}:listfragments?` +\n      `object_id=${chunk.objectId}&return_supervoxel_ids=true` +\n      this.listFragmentsParams;\n    return makeRequest(\n      parameters.instance,\n      this.credentialsProvider,\n      {\n        method: \"GET\",\n        path,\n        responseType: \"json\",\n      },\n      cancellationToken,\n    ).then((response) => decodeMultiscaleManifestChunk(chunk, response));\n  }\n\n  async downloadFragment(\n    chunk: MultiscaleFragmentChunk,\n    cancellationToken: CancellationToken,\n  ) {\n    const { parameters } = this;\n\n    const manifestChunk =\n      chunk.manifestChunk! as BrainmapsMultiscaleManifestChunk;\n    const { fragmentSupervoxelIds } = manifestChunk;\n    const manifest = manifestChunk.manifest!;\n    const { lod } = chunk;\n    const { octree } = manifest;\n    const numBaseChunks = fragmentSupervoxelIds.length;\n    const row = chunk.chunkIndex;\n    let startChunkIndex = row;\n    while (startChunkIndex >= numBaseChunks) {\n      startChunkIndex = octree[startChunkIndex * 5 + 3];\n    }\n    let endChunkIndex = row + 1;\n    while (endChunkIndex > numBaseChunks) {\n      endChunkIndex = octree[endChunkIndex * 5 - 1] & 0x7fffffff;\n    }\n    const { relativeBlockShape, gridShape } = parameters.info.lods[lod];\n    const xBits = Math.ceil(Math.log2(gridShape[0]));\n    const yBits = Math.ceil(Math.log2(gridShape[1]));\n    const zBits = Math.ceil(Math.log2(gridShape[2]));\n\n    let ids = new Map<string, number>();\n    for (\n      let chunkIndex = startChunkIndex;\n      chunkIndex < endChunkIndex;\n      ++chunkIndex\n    ) {\n      // Determine number of x, y, and z bits to skip.\n      const gridX = Math.floor(octree[chunkIndex * 5] / relativeBlockShape[0]);\n      const gridY = Math.floor(\n        octree[chunkIndex * 5 + 1] / relativeBlockShape[1],\n      );\n      const gridZ = Math.floor(\n        octree[chunkIndex * 5 + 2] / relativeBlockShape[2],\n      );\n      const fragmentKey = encodeZIndexCompressed3d(\n        tempUint64,\n        xBits,\n        yBits,\n        zBits,\n        gridX,\n        gridY,\n        gridZ,\n      )\n        .toString(16)\n        .padStart(16, \"0\");\n      const entry = fragmentSupervoxelIds[chunkIndex];\n      for (const supervoxelId of entry.supervoxelIds) {\n        ids.set(supervoxelId + \"\\0\" + fragmentKey, chunkIndex);\n      }\n    }\n\n    const prevLod = Math.max(0, lod - 1);\n\n    const fragments: (BatchMeshResponseFragment & { chunkIndex: number })[] =\n      [];\n\n    const idArray = Array.from(ids);\n    idArray.sort((a, b) => defaultStringCompare(a[0], b[0]));\n    ids = new Map(idArray);\n\n    const meshName = parameters.info.lods[lod].info.name;\n\n    const parallelRequests = true;\n\n    await new Promise((resolve, reject) => {\n      let requestsInProgress = 0;\n      let error = false;\n      const maybeIssueMoreRequests = () => {\n        if (error) return;\n        while (ids.size !== 0) {\n          ++requestsInProgress;\n          makeBatchMeshRequest(\n            this.credentialsProvider,\n            {\n              instance: parameters.instance,\n              volumeId: parameters.volumeId,\n              meshName,\n            },\n            ids,\n            cancellationToken,\n          )\n            .then((response) => {\n              --requestsInProgress;\n              decodeBatchMeshResponse(\n                response,\n                (\n                  fragment: BatchMeshResponseFragment & { chunkIndex: number },\n                ) => {\n                  const chunkIndex = ids.get(fragment.fullKey)!;\n                  if (!ids.delete(fragment.fullKey)) {\n                    throw new Error(\n                      `Received unexpected fragment key: ${JSON.stringify(\n                        fragment.fullKey,\n                      )}.`,\n                    );\n                  }\n                  fragment.chunkIndex = chunkIndex;\n                  fragments.push(fragment);\n                },\n              );\n              maybeIssueMoreRequests();\n            })\n            .catch((e) => {\n              error = true;\n              reject(e);\n            });\n          if (!parallelRequests) break;\n        }\n        // Notify the chunk queue of the number of download slots being used.  This partially limits\n        // parallelism by maximum number of concurrent downloads, and avoids fetch errors due to an\n        // excessive number of concurrent requests.\n        //\n        // Note that the limit on the number of concurrent downloads is not enforced perfectly.  If\n        // the new value of `downloadSlots` results in the total number of concurrent downloads\n        // exceeding the maximum allowed, the concurrent requests are still issued.  However, no\n        // additional lower-priority chunks will be promoted to `ChunkState.DOWNLOADING` until a\n        // download slot is available.\n        chunk.downloadSlots = Math.max(1, requestsInProgress);\n        if (requestsInProgress === 0) {\n          resolve(undefined);\n          return;\n        }\n      };\n      maybeIssueMoreRequests();\n    });\n\n    // Combine fragments\n    fragments.sort((a, b) => a.chunkIndex - b.chunkIndex);\n    let indexOffset = 0;\n    const numSubChunks = 1 << (3 * (lod - prevLod));\n    const subChunkOffsets = new Uint32Array(numSubChunks + 1);\n    let prevSubChunkIndex = 0;\n    for (const fragment of fragments) {\n      const row = fragment.chunkIndex;\n      const subChunkIndex =\n        getOctreeChildIndex(\n          octree[row * 5] >>> prevLod,\n          octree[row * 5 + 1] >>> prevLod,\n          octree[row * 5 + 2] >>> prevLod,\n        ) &\n        (numSubChunks - 1);\n      subChunkOffsets.fill(\n        indexOffset,\n        prevSubChunkIndex + 1,\n        subChunkIndex + 1,\n      );\n      prevSubChunkIndex = subChunkIndex;\n      indexOffset += fragment.numIndices;\n    }\n    subChunkOffsets.fill(indexOffset, prevSubChunkIndex + 1, numSubChunks + 1);\n    assignMultiscaleMeshFragmentData(\n      chunk,\n      { ...combineBatchMeshFragments(fragments), subChunkOffsets },\n      VertexPositionFormat.float32,\n    );\n  }\n}\n\nfunction groupFragmentsIntoBatches(ids: string[]) {\n  const batches = [];\n  let index = 0;\n  const length = ids.length;\n  while (index < length) {\n    batches.push(JSON.stringify(ids.slice(index, index + maxMeshBatchSize)));\n    index += maxMeshBatchSize;\n  }\n  return batches;\n}\n\nfunction decodeManifestChunkWithSupervoxelIds(\n  chunk: ManifestChunk,\n  response: any,\n) {\n  verifyObject(response);\n  const fragmentKeys = verifyObjectProperty(\n    response,\n    \"fragmentKey\",\n    verifyStringArray,\n  );\n  const supervoxelIds = verifyObjectProperty(\n    response,\n    \"supervoxelId\",\n    verifyStringArray,\n  );\n  const length = fragmentKeys.length;\n  if (length !== supervoxelIds.length) {\n    throw new Error(\n      \"Expected fragmentKey and supervoxelId arrays to have the same length.\",\n    );\n  }\n  const fragmentIds = supervoxelIds.map(\n    (supervoxelId, index) => supervoxelId + \"\\0\" + fragmentKeys[index],\n  );\n  chunk.fragmentIds = groupFragmentsIntoBatches(fragmentIds);\n}\n\n@registerSharedObject()\nexport class BrainmapsMeshSource extends BrainmapsSource(\n  MeshSource,\n  MeshSourceParameters,\n) {\n  private listFragmentsParams = (() => {\n    const { parameters } = this;\n    const { changeSpec } = parameters;\n    if (changeSpec !== undefined) {\n      return `&header.changeStackId=${changeSpec.changeStackId}`;\n    }\n    return \"\";\n  })();\n\n  download(chunk: ManifestChunk, cancellationToken: CancellationToken) {\n    const { parameters } = this;\n    const path =\n      `/v1/objects/${parameters.volumeId}/meshes/` +\n      `${parameters.meshName}:listfragments?` +\n      `object_id=${chunk.objectId}&return_supervoxel_ids=true` +\n      this.listFragmentsParams;\n    return makeRequest(\n      parameters.instance,\n      this.credentialsProvider,\n      {\n        method: \"GET\",\n        path,\n        responseType: \"json\",\n      },\n      cancellationToken,\n    ).then((response) => decodeManifestChunkWithSupervoxelIds(chunk, response));\n  }\n\n  async downloadFragment(\n    chunk: FragmentChunk,\n    cancellationToken: CancellationToken,\n  ) {\n    const { parameters } = this;\n\n    const ids = new Map<string, null>();\n    for (const id of JSON.parse(chunk.fragmentId!)) {\n      ids.set(id, null);\n    }\n\n    const fragments: BatchMeshResponseFragment[] = [];\n\n    const { credentialsProvider } = this;\n\n    while (ids.size !== 0) {\n      const response = await makeBatchMeshRequest(\n        credentialsProvider,\n        parameters,\n        ids,\n        cancellationToken,\n      );\n      decodeBatchMeshResponse(response, (fragment) => {\n        if (!ids.delete(fragment.fullKey)) {\n          throw new Error(\n            `Received unexpected fragment key: ${JSON.stringify(\n              fragment.fullKey,\n            )}.`,\n          );\n        }\n        fragments.push(fragment);\n      });\n    }\n    assignMeshFragmentData(chunk, combineBatchMeshFragments(fragments));\n  }\n}\n\nfunction decodeSkeletonChunk(chunk: SkeletonChunk, response: ArrayBuffer) {\n  const dv = new DataView(response);\n  const numVertices = dv.getUint32(0, true);\n  const numVerticesHigh = dv.getUint32(4, true);\n  if (numVerticesHigh !== 0) {\n    throw new Error(\"The number of vertices should not exceed 2^32-1.\");\n  }\n  const numEdges = dv.getUint32(8, true);\n  const numEdgesHigh = dv.getUint32(12, true);\n  if (numEdgesHigh !== 0) {\n    throw new Error(\"The number of edges should not exceed 2^32-1.\");\n  }\n  decodeSkeletonVertexPositionsAndIndices(\n    chunk,\n    response,\n    Endianness.LITTLE,\n    /*vertexByteOffset=*/ 16,\n    numVertices,\n    /*indexByteOffset=*/ undefined,\n    /*numEdges=*/ numEdges,\n  );\n}\n\n@registerSharedObject()\nexport class BrainmapsSkeletonSource extends BrainmapsSource(\n  SkeletonSource,\n  SkeletonSourceParameters,\n) {\n  download(chunk: SkeletonChunk, cancellationToken: CancellationToken) {\n    const { parameters } = this;\n    const payload: SkeletonPayload = {\n      object_id: `${chunk.objectId}`,\n    };\n    const path =\n      `/v1/objects/${parameters.volumeId}` +\n      `/meshes/${parameters.meshName}` +\n      \"/skeleton:binary\";\n    applyChangeStack(parameters.changeSpec, payload);\n    return makeRequest(\n      parameters.instance,\n      this.credentialsProvider,\n      {\n        method: \"POST\",\n        path,\n        payload: JSON.stringify(payload),\n        responseType: \"arraybuffer\",\n      },\n      cancellationToken,\n    ).then((response) => decodeSkeletonChunk(chunk, response));\n  }\n}\n\nconst spatialAnnotationTypes = [\"LOCATION\", \"LINE\", \"VOLUME\"];\n\nfunction parseCommaSeparatedPoint(x: string) {\n  const pattern = /(-?[0-9]+),(-?[0-9]+),(-?[0-9]+)/;\n  const cornerParts = x.match(pattern);\n  if (cornerParts === null) {\n    throw new Error(`Error parsing number triplet: ${JSON.stringify(x)}.`);\n  }\n  return vec3.fromValues(\n    parseFloat(cornerParts[1]),\n    parseFloat(cornerParts[2]),\n    parseFloat(cornerParts[3]),\n  );\n}\n\nfunction getIdPrefix(parameters: AnnotationSourceParameters) {\n  return parameters.volumeId + \":\" + parameters.changestack + \":\";\n}\n\nfunction parseBrainmapsAnnotationId(idPrefix: string, fullId: string) {\n  if (!fullId.startsWith(idPrefix)) {\n    throw new Error(\n      `Received annotation id ${JSON.stringify(\n        fullId,\n      )} does not have expected prefix of ${JSON.stringify(idPrefix)}.`,\n    );\n  }\n  const id = fullId.substring(idPrefix.length);\n  return id;\n}\n\nfunction parseObjectLabels(obj: any): Uint64[][] | undefined {\n  if (obj == null) {\n    return undefined;\n  }\n  return [parseArray(obj, (x) => Uint64.parseString(\"\" + x, 10))];\n}\n\nfunction parseAnnotation(\n  entry: any,\n  idPrefix: string,\n  expectedId?: string,\n): Annotation {\n  const corner = verifyObjectProperty(entry, \"corner\", (x) =>\n    parseCommaSeparatedPoint(verifyString(x)),\n  );\n  const size = verifyObjectProperty(entry, \"size\", (x) =>\n    parseCommaSeparatedPoint(verifyString(x)),\n  );\n  const description = verifyObjectProperty(\n    entry,\n    \"payload\",\n    verifyOptionalString,\n  );\n  const spatialAnnotationType = verifyObjectProperty(\n    entry,\n    \"type\",\n    verifyString,\n  );\n  const fullId = verifyObjectProperty(entry, \"id\", verifyString);\n  const id = parseBrainmapsAnnotationId(idPrefix, fullId);\n  const segments = verifyObjectProperty(\n    entry,\n    \"objectLabels\",\n    parseObjectLabels,\n  );\n  if (expectedId !== undefined && id !== expectedId) {\n    throw new Error(\n      `Received annotation has unexpected id ${JSON.stringify(fullId)}.`,\n    );\n  }\n  switch (spatialAnnotationType) {\n    case \"LOCATION\": {\n      if (vec3.equals(size, kZeroVec)) {\n        return {\n          type: AnnotationType.POINT,\n          id,\n          point: corner,\n          description,\n          relatedSegments: segments,\n          properties: [],\n        };\n      }\n      const radii = vec3.scale(vec3.create(), size, 0.5);\n      const center = vec3.add(vec3.create(), corner, radii);\n      return {\n        type: AnnotationType.ELLIPSOID,\n        id,\n        center,\n        radii,\n        description,\n        relatedSegments: segments,\n        properties: [],\n      };\n    }\n    case \"LINE\":\n      return {\n        type: AnnotationType.LINE,\n        id,\n        pointA: corner,\n        pointB: vec3.add(vec3.create(), corner, size),\n        description,\n        relatedSegments: segments,\n        properties: [],\n      };\n    case \"VOLUME\":\n      return {\n        type: AnnotationType.AXIS_ALIGNED_BOUNDING_BOX,\n        id,\n        pointA: corner,\n        pointB: vec3.add(vec3.create(), corner, size),\n        description,\n        relatedSegments: segments,\n        properties: [],\n      };\n    default:\n      throw new Error(\n        `Unknown spatial annotation type: ${JSON.stringify(\n          spatialAnnotationType,\n        )}.`,\n      );\n  }\n}\n\nfunction parseAnnotationResponse(\n  response: any,\n  idPrefix: string,\n  expectedId?: string,\n): Annotation {\n  verifyObject(response);\n  const entry = verifyObjectProperty(response, \"annotations\", (x) =>\n    parseFixedLengthArray(<any[]>[undefined], x, verifyObject),\n  )[0];\n  return parseAnnotation(entry, idPrefix, expectedId);\n}\n\nconst annotationPropertySerializers = makeAnnotationPropertySerializers(\n  /*rank=*/ 3,\n  /*propertySpecs=*/ [],\n);\n\nfunction parseAnnotations(\n  chunk: AnnotationGeometryChunk | AnnotationSubsetGeometryChunk,\n  responses: any[],\n) {\n  const serializer = new AnnotationSerializer(annotationPropertySerializers);\n  const source = <BrainmapsAnnotationSource>chunk.source.parent;\n  const idPrefix = getIdPrefix(source.parameters);\n  responses.forEach((response, responseIndex) => {\n    try {\n      verifyObject(response);\n      const annotationsArray = verifyObjectProperty(\n        response,\n        \"annotations\",\n        (x) => (x === undefined ? [] : x),\n      );\n      if (!Array.isArray(annotationsArray)) {\n        throw new Error(\n          `Expected array, but received ${JSON.stringify(\n            typeof annotationsArray,\n          )}.`,\n        );\n      }\n      for (const entry of annotationsArray) {\n        try {\n          serializer.add(parseAnnotation(entry, idPrefix));\n        } catch (e) {\n          throw new Error(`Error parsing annotation: ${e.message}`);\n        }\n      }\n    } catch (parseError) {\n      throw new Error(\n        `Error parsing ${spatialAnnotationTypes[responseIndex]} annotations: ${parseError.message}`,\n      );\n    }\n  });\n  chunk.data = Object.assign(\n    new AnnotationGeometryData(),\n    serializer.serialize(),\n  );\n}\n\nfunction getSpatialAnnotationTypeFromId(id: string) {\n  const index = id.indexOf(\".\");\n  return id.substring(0, index);\n}\n\nfunction toCommaSeparated(v: vec3) {\n  return `${Math.round(v[0])},${Math.round(v[1])},${Math.round(v[2])}`;\n}\n\nfunction getFullSpatialAnnotationId(\n  parameters: AnnotationSourceParameters,\n  id: string,\n) {\n  return `${parameters.volumeId}:${parameters.changestack}:${id}`;\n}\n\nfunction annotationToBrainmaps(annotation: Annotation): any {\n  const payload = annotation.description || \"\";\n  const objectLabels =\n    annotation.relatedSegments === undefined\n      ? undefined\n      : annotation.relatedSegments[0].map((x) => x.toString());\n  switch (annotation.type) {\n    case AnnotationType.LINE: {\n      const { pointA, pointB } = annotation;\n      const size = vec3.subtract(vec3.create(), pointB as vec3, pointA as vec3);\n      return {\n        type: \"LINE\",\n        corner: toCommaSeparated(pointA as vec3),\n        size: toCommaSeparated(size),\n        object_labels: objectLabels,\n        payload,\n      };\n    }\n    case AnnotationType.AXIS_ALIGNED_BOUNDING_BOX: {\n      const { pointA, pointB } = annotation;\n      const minPoint = vector.min(vec3.create(), pointA, pointB);\n      const maxPoint = vector.max(vec3.create(), pointA, pointB);\n      const size = vec3.subtract(maxPoint, maxPoint, minPoint);\n      return {\n        type: \"VOLUME\",\n        corner: toCommaSeparated(minPoint),\n        size: toCommaSeparated(size),\n        object_labels: objectLabels,\n        payload,\n      };\n    }\n    case AnnotationType.POINT: {\n      return {\n        type: \"LOCATION\",\n        corner: toCommaSeparated(annotation.point as vec3),\n        size: \"0,0,0\",\n        object_labels: objectLabels,\n        payload,\n      };\n    }\n    case AnnotationType.ELLIPSOID: {\n      const corner = vec3.subtract(\n        vec3.create(),\n        annotation.center as vec3,\n        annotation.radii as vec3,\n      );\n      const size = vec3.scale(vec3.create(), annotation.radii as vec3, 2);\n      return {\n        type: \"LOCATION\",\n        corner: toCommaSeparated(corner),\n        size: toCommaSeparated(size),\n        object_labels: objectLabels,\n        payload,\n      };\n    }\n  }\n}\n\n@registerSharedObject() //\nexport class BrainmapsAnnotationGeometryChunkSource extends BrainmapsSource(\n  AnnotationGeometryChunkSourceBackend,\n  AnnotationSpatialIndexSourceParameters,\n) {\n  async download(\n    chunk: AnnotationGeometryChunk,\n    cancellationToken: CancellationToken,\n  ) {\n    const { parameters } = this;\n    return Promise.all(\n      spatialAnnotationTypes.map((spatialAnnotationType) =>\n        makeRequest(\n          parameters.instance,\n          this.credentialsProvider,\n          {\n            method: \"POST\",\n            path: `/v1/changes/${parameters.volumeId}/${parameters.changestack}/spatials:get`,\n            payload: JSON.stringify({\n              type: spatialAnnotationType,\n              ignore_payload: true,\n            }),\n            responseType: \"json\",\n          },\n          cancellationToken,\n        ),\n      ),\n    ).then((values) => {\n      parseAnnotations(chunk, values);\n    });\n  }\n}\n\n@registerSharedObject()\nexport class BrainmapsAnnotationSource extends BrainmapsSource(\n  AnnotationSource,\n  AnnotationSourceParameters,\n) {\n  downloadSegmentFilteredGeometry(\n    chunk: AnnotationSubsetGeometryChunk,\n    _relationshipIndex: number,\n    cancellationToken: CancellationToken,\n  ) {\n    const { parameters } = this;\n    return Promise.all(\n      spatialAnnotationTypes.map((spatialAnnotationType) =>\n        makeRequest(\n          parameters.instance,\n          this.credentialsProvider,\n          {\n            method: \"POST\",\n            path: `/v1/changes/${parameters.volumeId}/${parameters.changestack}/spatials:get`,\n            payload: JSON.stringify({\n              type: spatialAnnotationType,\n              object_labels: [chunk.objectId.toString()],\n              ignore_payload: true,\n            }),\n            responseType: \"json\",\n          },\n          cancellationToken,\n        ),\n      ),\n    ).then((values) => {\n      parseAnnotations(chunk, values);\n    });\n  }\n\n  downloadMetadata(\n    chunk: AnnotationMetadataChunk,\n    cancellationToken: CancellationToken,\n  ) {\n    const { parameters } = this;\n    const id = chunk.key!;\n    return makeRequest(\n      parameters.instance,\n      this.credentialsProvider,\n      {\n        method: \"POST\",\n        path: `/v1/changes/${parameters.volumeId}/${parameters.changestack}/spatials:get`,\n        payload: JSON.stringify({\n          type: getSpatialAnnotationTypeFromId(id),\n          id: getFullSpatialAnnotationId(parameters, id),\n        }),\n        responseType: \"json\",\n      },\n      cancellationToken,\n    ).then(\n      (response) => {\n        chunk.annotation = parseAnnotationResponse(\n          response,\n          getIdPrefix(parameters),\n          id,\n        );\n      },\n      () => {\n        chunk.annotation = null;\n      },\n    );\n  }\n\n  add(annotation: Annotation) {\n    const { parameters } = this;\n    const brainmapsAnnotation = annotationToBrainmaps(annotation);\n    return makeRequest(parameters.instance, this.credentialsProvider, {\n      method: \"POST\",\n      path: `/v1/changes/${parameters.volumeId}/${parameters.changestack}/spatials:push`,\n      payload: JSON.stringify({ annotations: [brainmapsAnnotation] }),\n      responseType: \"json\",\n    }).then((response) => {\n      verifyObject(response);\n      const ids = verifyObjectProperty(response, \"ids\", verifyStringArray);\n      if (ids.length !== 1) {\n        throw new Error(\n          `Expected list of 1 id, but received ${JSON.stringify(ids)}.`,\n        );\n      }\n      const idPrefix = getIdPrefix(this.parameters);\n      return parseBrainmapsAnnotationId(idPrefix, ids[0]);\n    });\n  }\n\n  update(id: AnnotationId, annotation: Annotation) {\n    const { parameters } = this;\n    const brainmapsAnnotation = annotationToBrainmaps(annotation);\n    brainmapsAnnotation.id = getFullSpatialAnnotationId(parameters, id);\n    return makeRequest(parameters.instance, this.credentialsProvider, {\n      method: \"POST\",\n      path: `/v1/changes/${parameters.volumeId}/${parameters.changestack}/spatials:push`,\n      payload: JSON.stringify({ annotations: [brainmapsAnnotation] }),\n      responseType: \"json\",\n    });\n  }\n\n  delete(id: AnnotationId) {\n    const { parameters } = this;\n    return makeRequest(parameters.instance, this.credentialsProvider, {\n      method: \"POST\",\n      path: `/v1/changes/${parameters.volumeId}/${parameters.changestack}/spatials:delete`,\n      payload: JSON.stringify({\n        type: getSpatialAnnotationTypeFromId(id),\n        ids: [getFullSpatialAnnotationId(parameters, id)],\n      }),\n      responseType: \"json\",\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2022 William Silversmith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport interface DecodedImage {\n  width: number;\n  height: number;\n  numComponents: number;\n  uint8Array: Uint8Array;\n}\n\nexport const decodePng =\n  asyncComputation<\n    (\n      data: Uint8Array,\n      width: number | undefined,\n      height: number | undefined,\n      numComponents: number | undefined,\n      bytesPerPixel: number,\n      convertToGrayscale: boolean,\n    ) => DecodedImage\n  >(\"decodePng\");\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Provides file listing and completion for storage systems supporting the S3 XML API (e.g. S3\n * and GCS).\n */\n\nimport { fetchWithOAuth2Credentials } from \"#src/credentials_provider/oauth2.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport type { BasicCompletionResult } from \"#src/util/completion.js\";\nimport type { SpecialProtocolCredentialsProvider } from \"#src/util/special_protocol_request.js\";\n\nexport async function getS3BucketListing(\n  credentialsProvider: SpecialProtocolCredentialsProvider,\n  bucketUrl: string,\n  prefix: string,\n  delimiter: string,\n  cancellationToken: CancellationToken,\n): Promise<string[]> {\n  const response = await fetchWithOAuth2Credentials(\n    credentialsProvider,\n    `${bucketUrl}?prefix=${encodeURIComponent(prefix)}` +\n      `&delimiter=${encodeURIComponent(delimiter)}`,\n    /*init=*/ {},\n    (x) => x.text(),\n    cancellationToken,\n  );\n  const doc = new DOMParser().parseFromString(response, \"application/xml\");\n  const commonPrefixNodes = doc.evaluate(\n    '//*[name()=\"CommonPrefixes\"]/*[name()=\"Prefix\"]',\n    doc,\n    null,\n    XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,\n    null,\n  );\n  const results: string[] = [];\n  for (let i = 0, n = commonPrefixNodes.snapshotLength; i < n; ++i) {\n    results.push(commonPrefixNodes.snapshotItem(i)!.textContent || \"\");\n  }\n  const contents = doc.evaluate(\n    '//*[name()=\"Contents\"]/*[name()=\"Key\"]',\n    doc,\n    null,\n    XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,\n    null,\n  );\n  for (let i = 0, n = contents.snapshotLength; i < n; ++i) {\n    results.push(contents.snapshotItem(i)!.textContent || \"\");\n  }\n  return results;\n}\n\nexport async function getS3CompatiblePathCompletions(\n  credentialsProvider: SpecialProtocolCredentialsProvider,\n  enteredBucketUrl: string,\n  bucketUrl: string,\n  path: string,\n  cancellationToken: CancellationToken,\n): Promise<BasicCompletionResult> {\n  const prefix = path;\n  if (!prefix.startsWith(\"/\")) throw null;\n  const paths = await getS3BucketListing(\n    credentialsProvider,\n    bucketUrl,\n    path.substring(1),\n    \"/\",\n    cancellationToken,\n  );\n  const offset = path.lastIndexOf(\"/\");\n  return {\n    offset: offset + enteredBucketUrl.length + 1,\n    completions: paths.map((x) => ({ value: x.substring(offset) })),\n  };\n}\n","/**\n * @license\n * Copyright 2021 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport { uncancelableToken } from \"#src/util/cancellation.js\";\nimport type { ResponseTransform } from \"#src/util/http_request.js\";\nimport { cancellableFetchOk } from \"#src/util/http_request.js\";\nimport { getS3CompatiblePathCompletions } from \"#src/util/s3_bucket_listing.js\";\n\n// Support for s3:// special protocol.\n\nexport async function cancellableFetchS3Ok<T>(\n  bucket: string,\n  path: string,\n  requestInit: RequestInit,\n  transformResponse: ResponseTransform<T>,\n  cancellationToken: CancellationToken = uncancelableToken,\n) {\n  return await cancellableFetchOk(\n    `https://${bucket}.s3.amazonaws.com${path}`,\n    requestInit,\n    transformResponse,\n    cancellationToken,\n  );\n}\n\nexport async function getS3PathCompletions(\n  bucket: string,\n  path: string,\n  cancellationToken: CancellationToken,\n) {\n  return await getS3CompatiblePathCompletions(\n    undefined,\n    `s3://${bucket}`,\n    `https://${bucket}.s3.amazonaws.com`,\n    path,\n    cancellationToken,\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport pythonIntegration from \"#python_integration_build\";\nimport type {\n  CredentialsManager,\n  MaybeOptionalCredentialsProvider,\n} from \"#src/credentials_provider/index.js\";\nimport { fetchWithOAuth2Credentials } from \"#src/credentials_provider/oauth2.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport { uncancelableToken } from \"#src/util/cancellation.js\";\nimport type { ResponseTransform } from \"#src/util/http_request.js\";\nimport { parseUrl } from \"#src/util/http_request.js\";\nimport { getRandomHexString } from \"#src/util/random.js\";\nimport { cancellableFetchS3Ok } from \"#src/util/s3.js\";\n\nexport type SpecialProtocolCredentials = any;\nexport type SpecialProtocolCredentialsProvider =\n  MaybeOptionalCredentialsProvider<SpecialProtocolCredentials>;\n\nfunction getMiddleAuthCredentialsProvider(\n  credentialsManager: CredentialsManager,\n  url: string,\n): SpecialProtocolCredentialsProvider {\n  return credentialsManager.getCredentialsProvider(\n    \"middleauthapp\",\n    new URL(url).origin,\n  );\n}\n\nfunction getNgauthCredentialsProvider(\n  credentialsManager: CredentialsManager,\n  serverUrl: string,\n  path: string,\n): SpecialProtocolCredentialsProvider {\n  const bucketPattern = /^\\/([^/]+)/;\n  const m = path.match(bucketPattern);\n  if (m === null) return undefined;\n  return pythonIntegration\n    ? credentialsManager.getCredentialsProvider(\"gcs\", { bucket: m[1] })\n    : credentialsManager.getCredentialsProvider(\"ngauth_gcs\", {\n        authServer: serverUrl,\n        bucket: m[1],\n      });\n}\n\nexport function parseSpecialUrl(\n  url: string,\n  credentialsManager: CredentialsManager,\n): { url: string; credentialsProvider: SpecialProtocolCredentialsProvider } {\n  const u = parseUrl(url);\n  switch (u.protocol) {\n    case \"gs\":\n    case \"gs+xml\":\n      return {\n        credentialsProvider: pythonIntegration\n          ? credentialsManager.getCredentialsProvider(\"gcs\", {\n              bucket: u.host,\n            })\n          : undefined,\n        url,\n      };\n    case \"gs+ngauth+http\":\n      return {\n        credentialsProvider: getNgauthCredentialsProvider(\n          credentialsManager,\n          `http://${u.host}`,\n          u.path,\n        ),\n        url: \"gs:/\" + u.path,\n      };\n    case \"gs+ngauth+https\":\n      return {\n        credentialsProvider: getNgauthCredentialsProvider(\n          credentialsManager,\n          `https://${u.host}`,\n          u.path,\n        ),\n        url: \"gs:/\" + u.path,\n      };\n    case \"gs+xml+ngauth+http\":\n      return {\n        credentialsProvider: getNgauthCredentialsProvider(\n          credentialsManager,\n          `http://${u.host}`,\n          u.path,\n        ),\n        url: \"gs+xml:/\" + u.path,\n      };\n    case \"gs+xml+ngauth+https\":\n      return {\n        credentialsProvider: getNgauthCredentialsProvider(\n          credentialsManager,\n          `https://${u.host}`,\n          u.path,\n        ),\n        url: \"gs+xml:/\" + u.path,\n      };\n    case \"middleauth+https\":\n      url = url.substr(\"middleauth+\".length);\n      return {\n        credentialsProvider: getMiddleAuthCredentialsProvider(\n          credentialsManager,\n          url,\n        ),\n        url: url,\n      };\n    case \"s3\":\n      return {\n        credentialsProvider: undefined,\n        url,\n      };\n    default:\n      return {\n        credentialsProvider: undefined,\n        url,\n      };\n  }\n}\n\nexport async function cancellableFetchSpecialOk<T>(\n  credentialsProvider: SpecialProtocolCredentialsProvider,\n  url: string,\n  init: RequestInit,\n  transformResponse: ResponseTransform<T>,\n  cancellationToken: CancellationToken = uncancelableToken,\n): Promise<T> {\n  const u = parseUrl(url);\n  switch (u.protocol) {\n    case \"gs\":\n      // Include random query string parameter (ignored by GCS) to bypass GCS cache and ensure a\n      // cached response is never used.\n      //\n      // This addresses two issues related to GCS:\n      //\n      // 1. GCS fails to send an updated `Access-Control-Allow-Origin` header in 304 responses to\n      //    cache revalidation requests.\n      //\n      //    https://bugs.chromium.org/p/chromium/issues/detail?id=1214563#c2\n      //\n      //    The random query string parameter ensures cached responses are never used.\n      //\n      //    Note: This issue does not apply to gs+xml because with the XML API, the\n      //    Access-Control-Allow-Origin response header does not vary with the Origin.\n      //\n      // 2. If the object does not prohibit caching (e.g. public bucket and default `cache-control`\n      //    metadata value), GCS may return stale responses.\n      //\n      return fetchWithOAuth2Credentials(\n        credentialsProvider,\n        `https://www.googleapis.com/storage/v1/b/${u.host}/o/` +\n          `${encodeURIComponent(u.path.substring(1))}?alt=media` +\n          `&neuroglancer=${getRandomHexString()}`,\n        init,\n        transformResponse,\n        cancellationToken,\n      );\n    case \"gs+xml\":\n      return fetchWithOAuth2Credentials(\n        credentialsProvider,\n        `https://storage.googleapis.com/${u.host}${u.path}` +\n          `?neuroglancer=${getRandomHexString()}`,\n        init,\n        transformResponse,\n        cancellationToken,\n      );\n    case \"s3\":\n      return cancellableFetchS3Ok(\n        u.host,\n        u.path,\n        init,\n        transformResponse,\n        cancellationToken,\n      );\n    default:\n      return fetchWithOAuth2Credentials(\n        credentialsProvider,\n        url,\n        init,\n        transformResponse,\n        cancellationToken,\n      );\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc., 2023 Gergely Csucs\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeJpeg } from \"#src/async_computation/decode_jpeg_request.js\";\nimport { decodePng } from \"#src/async_computation/decode_png_request.js\";\nimport { requestAsyncComputation } from \"#src/async_computation/request.js\";\nimport { WithParameters } from \"#src/chunk_manager/backend.js\";\nimport { WithSharedCredentialsProviderCounterpart } from \"#src/credentials_provider/shared_counterpart.js\";\nimport {\n  ImageTileEncoding,\n  ImageTileSourceParameters,\n} from \"#src/datasource/deepzoom/base.js\";\nimport type { VolumeChunk } from \"#src/sliceview/volume/backend.js\";\nimport { VolumeChunkSource } from \"#src/sliceview/volume/backend.js\";\nimport { transposeArray2d } from \"#src/util/array.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport {\n  isNotFoundError,\n  responseArrayBuffer,\n} from \"#src/util/http_request.js\";\nimport type { SpecialProtocolCredentials } from \"#src/util/special_protocol_request.js\";\nimport { cancellableFetchSpecialOk } from \"#src/util/special_protocol_request.js\";\nimport { registerSharedObject } from \"#src/worker_rpc.js\";\n\n/* This is enough if support for these aren't needed:\n * - Firefox before 105 (OffscreenCanvas, 2022-09-20)\n * - Safari before 16.4 (OffscreenCanvas, 2023-03-27)\n */\n// declare var OffscreenCanvas: any; // shutting up some outdated compiler(?)\n\n@registerSharedObject()\nexport class DeepzoomImageTileSource extends WithParameters(\n  WithSharedCredentialsProviderCounterpart<SpecialProtocolCredentials>()(\n    VolumeChunkSource,\n  ),\n  ImageTileSourceParameters,\n) {\n  gridShape = (() => {\n    const gridShape = new Uint32Array(2);\n    const { upperVoxelBound, chunkDataSize } = this.spec;\n    for (let i = 0; i < 2; ++i) {\n      gridShape[i] = Math.ceil(upperVoxelBound[i] / chunkDataSize[i]);\n    }\n    return gridShape;\n  })();\n\n  async download(\n    chunk: VolumeChunk,\n    cancellationToken: CancellationToken,\n  ): Promise<void> {\n    const { parameters } = this;\n\n    // /* This block is enough if support for these aren't needed:\n    //  * - Firefox before 105 (OffscreenCanvas, 2022-09-20)\n    //  * - Safari before 16.4 (OffscreenCanvas, 2023-03-27)\n    //  */\n    // const {tilesize, overlap} = parameters;\n    // const [x, y] = chunk.chunkGridPosition;\n    // const url = `${parameters.url}/${x}_${y}.${ImageTileEncoding[parameters.encoding].toLowerCase()}`;\n    // const response: Blob = await cancellableFetchSpecialOk(this.credentialsProvider, url, {}, response => response.blob(), cancellationToken);\n    // const tile = await createImageBitmap(response);\n    // const canvas = new OffscreenCanvas(tilesize, tilesize);\n    // const ctx = canvas.getContext(\"2d\")!;\n    // ctx.drawImage(tile, x === 0 ? 0 : -overlap, y === 0 ? 0 : -overlap);\n    // const id = ctx.getImageData(0, 0, tilesize, tilesize).data;\n    // const t2 = tilesize * tilesize;\n    // const d = chunk.data = new Uint8Array(t2 * 3);\n    // for (let i = 0; i < t2; i++) {\n    //   d[i] = id[i * 4];\n    //   d[i + t2] = id[i * 4 + 1];\n    //   d[i + 2 * t2] = id[i * 4 + 2];\n    // }\n    // Todo: ^ \"transposeArray2d\" likely does the same\n\n    const { tilesize, overlap, encoding } = parameters;\n    const [x, y] = chunk.chunkGridPosition;\n    const ox = x === 0 ? 0 : overlap;\n    const oy = y === 0 ? 0 : overlap;\n    const url = `${parameters.url}/${x}_${y}.${parameters.format}`;\n    try {\n      const responseBuffer = await cancellableFetchSpecialOk(\n        this.credentialsProvider,\n        url,\n        {},\n        responseArrayBuffer,\n        cancellationToken,\n      );\n\n      let tilewidth = 0;\n      let tileheight = 0;\n      let tiledata: Uint8Array | undefined;\n      switch (encoding) {\n        case ImageTileEncoding.PNG: {\n          const pngbitmap = await requestAsyncComputation(\n            decodePng,\n            cancellationToken,\n            [responseBuffer],\n            new Uint8Array(responseBuffer),\n            undefined,\n            undefined,\n            3,\n            1,\n            false,\n          );\n          ({ width: tilewidth, height: tileheight } = pngbitmap);\n          tiledata = transposeArray2d(\n            pngbitmap.uint8Array,\n            tilewidth * tileheight,\n            3,\n          );\n          break;\n        }\n\n        case ImageTileEncoding.JPG:\n        case ImageTileEncoding.JPEG: {\n          const jpegbitmap = await requestAsyncComputation(\n            decodeJpeg,\n            cancellationToken,\n            [responseBuffer],\n            new Uint8Array(responseBuffer),\n            undefined,\n            undefined,\n            3,\n            false,\n          );\n          ({\n            uint8Array: tiledata,\n            width: tilewidth,\n            height: tileheight,\n          } = jpegbitmap);\n          break;\n        }\n      }\n      if (tiledata !== undefined) {\n        const t2 = tilesize * tilesize;\n        const twh = tilewidth * tileheight;\n        const d = (chunk.data = new Uint8Array(t2 * 3));\n        for (let k = 0; k < 3; k++)\n          for (let j = 0; j < tileheight; j++)\n            for (let i = 0; i < tilewidth; i++)\n              d[i + j * tilesize + k * t2] =\n                tiledata[i + ox + (j + oy) * tilewidth + k * twh];\n      }\n    } catch (e) {\n      if (!isNotFoundError(e)) throw e;\n    }\n  }\n}\n","/**\n * @license\n * This work is a derivative of the Google Neuroglancer project,\n * Copyright 2016 Google Inc.\n * The Derivative Work is covered by\n * Copyright 2019 Howard Hughes Medical Institute\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { fetchWithCredentials } from \"#src/credentials_provider/http_request.js\";\nimport type { CredentialsProvider } from \"#src/credentials_provider/index.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport { uncancelableToken } from \"#src/util/cancellation.js\";\nimport type { ResponseTransform } from \"#src/util/http_request.js\";\nimport {\n  cancellableFetchOk,\n  responseArrayBuffer,\n  responseJson,\n} from \"#src/util/http_request.js\";\n\nexport interface DVIDToken {\n  // If token is undefined, it indicates anonymous credentials that may be retried.\n  token?: string;\n}\n\nexport const credentialsKey = \"DVID\";\n\ninterface HttpCall {\n  method: \"GET\" | \"POST\" | \"DELETE\" | \"HEAD\";\n  url: string;\n  payload?: string;\n}\n\nexport class DVIDInstance {\n  constructor(\n    public baseUrl: string,\n    public nodeKey: string,\n  ) {}\n\n  getNodeApiUrl(path = \"\"): string {\n    return `${this.baseUrl}/api/node/${this.nodeKey}${path}`;\n  }\n\n  getRepoInfoUrl(): string {\n    return `${this.baseUrl}/api/repos/info`;\n  }\n\n  getKeyValueUrl(dataName: string, key: string) {\n    return `${this.getNodeApiUrl()}/${dataName}/key/${key}`;\n  }\n\n  getKeyValueRangeUrl(dataName: string, startKey: string, endKey: string) {\n    return `${this.getNodeApiUrl()}/${dataName}/keyrange/${startKey}/${endKey}`;\n  }\n\n  getKeyValuesUrl(dataName: string) {\n    return `${this.getNodeApiUrl()}/${dataName}/keyvalues?jsontar=false`;\n  }\n}\n\nexport function appendQueryStringForDvid(\n  url: string,\n  user: string | null | undefined,\n) {\n  if (url.includes(\"?\")) {\n    url += \"&\";\n  } else {\n    url += \"?\";\n  }\n  url += \"app=Neuroglancer\";\n  if (user) {\n    url += `&u=${user}`;\n  }\n  return url;\n}\n\nexport function responseText(response: Response): Promise<any> {\n  return response.text();\n}\n\nexport function makeRequest(\n  httpCall: HttpCall & { responseType: \"arraybuffer\" },\n  cancellationToken?: CancellationToken,\n): Promise<ArrayBuffer>;\n\nexport function makeRequest(\n  httpCall: HttpCall & { responseType: \"json\" },\n  cancellationToken?: CancellationToken,\n): Promise<any>;\n\nexport function makeRequest(\n  httpCall: HttpCall & { responseType: \"\" },\n  cancellationToken?: CancellationToken,\n): Promise<any>;\n\nexport function makeRequest(\n  httpCall: HttpCall & { responseType: XMLHttpRequestResponseType },\n  cancellationToken: CancellationToken = uncancelableToken,\n): any {\n  const requestInfo = `${httpCall.url}`;\n  const init = { method: httpCall.method, body: httpCall.payload };\n\n  if (httpCall.responseType === \"\") {\n    return cancellableFetchOk(\n      requestInfo,\n      init,\n      responseText,\n      cancellationToken,\n    );\n  }\n  return cancellableFetchOk(requestInfo, init, responseJson, cancellationToken);\n}\n\nexport function makeRequestWithCredentials(\n  credentialsProvider: CredentialsProvider<DVIDToken>,\n  httpCall: HttpCall & { responseType: \"arraybuffer\" },\n  cancellationToken?: CancellationToken,\n): Promise<ArrayBuffer>;\n\nexport function makeRequestWithCredentials(\n  credentialsProvider: CredentialsProvider<DVIDToken>,\n  httpCall: HttpCall & { responseType: \"json\" },\n  cancellationToken?: CancellationToken,\n): Promise<any>;\n\nexport function makeRequestWithCredentials(\n  credentialsProvider: CredentialsProvider<DVIDToken>,\n  httpCall: HttpCall & { responseType: \"\" },\n  cancellationToken?: CancellationToken,\n): Promise<any>;\n\nexport function makeRequestWithCredentials(\n  credentialsProvider: CredentialsProvider<DVIDToken>,\n  httpCall: HttpCall & { responseType: XMLHttpRequestResponseType },\n  cancellationToken: CancellationToken = uncancelableToken,\n): Promise<any> {\n  return fetchWithDVIDCredentials(\n    credentialsProvider,\n    httpCall.url,\n    { method: httpCall.method, body: httpCall.payload },\n    httpCall.responseType === \"\"\n      ? responseText\n      : httpCall.responseType === \"json\"\n        ? responseJson\n        : responseArrayBuffer,\n    cancellationToken,\n  );\n}\n\nexport function fetchWithDVIDCredentials<T>(\n  credentialsProvider: CredentialsProvider<DVIDToken>,\n  input: string,\n  init: RequestInit,\n  transformResponse: ResponseTransform<T>,\n  cancellationToken: CancellationToken = uncancelableToken,\n): Promise<T> {\n  return fetchWithCredentials(\n    credentialsProvider,\n    input,\n    init,\n    transformResponse,\n    (credentials: DVIDToken, init: RequestInit) => {\n      const newInit: RequestInit = { ...init };\n      if (credentials.token) {\n        newInit.headers = {\n          ...newInit.headers,\n          Authorization: `Bearer ${credentials}`,\n        };\n      }\n      return newInit;\n    },\n    (error) => {\n      const { status } = error;\n      if (status === 403 || status === 401) {\n        // Authorization needed.  Retry with refreshed token.\n        return \"refresh\";\n      }\n      throw error;\n    },\n    cancellationToken,\n  );\n}\n","/**\n * @license\n * This work is a derivative of the Google Neuroglancer project,\n * Copyright 2016 Google Inc.\n * The Derivative Work is covered by\n * Copyright 2020 Howard Hughes Medical Institute\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { SkeletonChunk } from \"#src/skeleton/backend.js\";\n\nexport function decodeSwcSkeletonChunk(chunk: SkeletonChunk, swcStr: string) {\n  const swcObjects: Array<PointObj> = parseSwc(swcStr);\n\n  if (swcObjects.length < 1) {\n    throw new Error(\"ERROR parsing swc data\");\n  }\n\n  const indexMap = new Uint32Array(swcObjects.length);\n\n  let nodeCount = 0;\n  let edgeCount = 0;\n  swcObjects.forEach((swcObj, i) => {\n    if (swcObj) {\n      indexMap[i] = nodeCount++;\n      if (swcObj.parent >= 0) {\n        ++edgeCount;\n      }\n    }\n  });\n\n  const glVertices = new Float32Array(3 * nodeCount);\n  const glIndices = new Uint32Array(2 * edgeCount);\n\n  let nodeIndex = 0;\n  let edgetIndex = 0;\n  swcObjects.forEach((swcObj) => {\n    if (swcObj) {\n      glVertices[3 * nodeIndex] = swcObj.x;\n      glVertices[3 * nodeIndex + 1] = swcObj.y;\n      glVertices[3 * nodeIndex + 2] = swcObj.z;\n\n      if (swcObj.parent >= 0) {\n        glIndices[2 * edgetIndex] = nodeIndex;\n        glIndices[2 * edgetIndex + 1] = indexMap[swcObj.parent];\n        ++edgetIndex;\n      }\n      ++nodeIndex;\n    }\n  });\n\n  chunk.indices = glIndices;\n  chunk.vertexPositions = glVertices;\n}\n\n/*\n * Parses a standard SWC file into an array of point objects\n * modified from\n * https://github.com/JaneliaSciComp/SharkViewer/blob/d9969a7c513beee32ff9650b00bf79cda8f3c76a/html/js/sharkviewer_loader.js\n */\nfunction parseSwc(swcStr: string) {\n  const swcInputAr = swcStr.split(\"\\n\");\n  const swcObjectsAr: Array<PointObj> = [];\n  const float = \"-?\\\\d*(?:\\\\.\\\\d+)?\";\n  const pattern = new RegExp(\n    \"^[ \\\\t]*(\" +\n      [\n        \"\\\\d+\", // index\n        \"\\\\d+\", // type\n        float, // x\n        float, // y\n        float, // z\n        float, // radius\n        \"-1|\\\\d+\", // parent\n      ].join(\")[ \\\\t]+(\") +\n      \")[ \\\\t]*$\",\n  );\n\n  swcInputAr.forEach((e) => {\n    // if line meets swc point criteria, add it to the array\n    const match = e.match(pattern);\n    if (match) {\n      const point = (swcObjectsAr[parseInt(match[1], 10)] = new PointObj());\n      point.type = parseInt(match[2], 10);\n      point.x = parseFloat(match[3]);\n      point.y = parseFloat(match[4]);\n      point.z = parseFloat(match[5]);\n      point.radius = parseFloat(match[6]);\n      point.parent = parseInt(match[7], 10);\n    }\n  });\n  return swcObjectsAr;\n}\n\nclass PointObj {\n  type: number;\n  x: number;\n  y: number;\n  z: number;\n  radius: number;\n  parent: number;\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WithParameters } from \"#src/chunk_manager/backend.js\";\nimport type { ChunkSourceParametersConstructor } from \"#src/chunk_manager/base.js\";\nimport { WithSharedCredentialsProviderCounterpart } from \"#src/credentials_provider/shared_counterpart.js\";\nimport type { DVIDToken } from \"#src/datasource/dvid/api.js\";\nimport {\n  DVIDInstance,\n  makeRequestWithCredentials,\n  appendQueryStringForDvid,\n} from \"#src/datasource/dvid/api.js\";\nimport {\n  MeshSourceParameters,\n  SkeletonSourceParameters,\n  VolumeChunkEncoding,\n  VolumeChunkSourceParameters,\n} from \"#src/datasource/dvid/base.js\";\nimport type { FragmentChunk, ManifestChunk } from \"#src/mesh/backend.js\";\nimport {\n  assignMeshFragmentData,\n  decodeTriangleVertexPositionsAndIndices,\n  MeshSource,\n} from \"#src/mesh/backend.js\";\nimport type { SkeletonChunk } from \"#src/skeleton/backend.js\";\nimport { SkeletonSource } from \"#src/skeleton/backend.js\";\nimport { decodeSwcSkeletonChunk } from \"#src/skeleton/decode_swc_skeleton.js\";\nimport { decodeCompressedSegmentationChunk } from \"#src/sliceview/backend_chunk_decoders/compressed_segmentation.js\";\nimport { decodeJpegChunk } from \"#src/sliceview/backend_chunk_decoders/jpeg.js\";\nimport type { VolumeChunk } from \"#src/sliceview/volume/backend.js\";\nimport { VolumeChunkSource } from \"#src/sliceview/volume/backend.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport { Endianness } from \"#src/util/endian.js\";\nimport type { SharedObject } from \"#src/worker_rpc.js\";\nimport { registerSharedObject } from \"#src/worker_rpc.js\";\n\nfunction DVIDSource<\n  Parameters,\n  TBase extends { new (...args: any[]): SharedObject },\n>(\n  Base: TBase,\n  parametersConstructor: ChunkSourceParametersConstructor<Parameters>,\n) {\n  return WithParameters(\n    WithSharedCredentialsProviderCounterpart<DVIDToken>()(Base),\n    parametersConstructor,\n  );\n}\n\n@registerSharedObject()\nexport class DVIDSkeletonSource extends DVIDSource(\n  SkeletonSource,\n  SkeletonSourceParameters,\n) {\n  download(chunk: SkeletonChunk, cancellationToken: CancellationToken) {\n    const { parameters } = this;\n    const bodyid = `${chunk.objectId}`;\n    const url =\n      `${parameters.baseUrl}/api/node/${parameters.nodeKey}` +\n      `/${parameters.dataInstanceKey}/key/` +\n      bodyid +\n      \"_swc\";\n    return makeRequestWithCredentials(\n      this.credentialsProvider,\n      {\n        method: \"GET\",\n        url: appendQueryStringForDvid(url, parameters.user),\n        responseType: \"arraybuffer\",\n      },\n      cancellationToken,\n    ).then((response) => {\n      const enc = new TextDecoder(\"utf-8\");\n      decodeSwcSkeletonChunk(chunk, enc.decode(response));\n    });\n  }\n}\n\nexport function decodeFragmentChunk(\n  chunk: FragmentChunk,\n  response: ArrayBuffer,\n) {\n  const dv = new DataView(response);\n  const numVertices = dv.getUint32(0, true);\n  assignMeshFragmentData(\n    chunk,\n    decodeTriangleVertexPositionsAndIndices(\n      response,\n      Endianness.LITTLE,\n      /*vertexByteOffset=*/ 4,\n      numVertices,\n    ),\n  );\n}\n\n@registerSharedObject()\nexport class DVIDMeshSource extends DVIDSource(\n  MeshSource,\n  MeshSourceParameters,\n) {\n  download(chunk: ManifestChunk) {\n    // DVID does not currently store meshes chunked, the main\n    // use-case is for low-resolution 3D views.\n    // for now, fragmentId is the body id\n    chunk.fragmentIds = [`${chunk.objectId}`];\n    return Promise.resolve(undefined);\n  }\n\n  downloadFragment(chunk: FragmentChunk, cancellationToken: CancellationToken) {\n    const { parameters } = this;\n    const dvidInstance = new DVIDInstance(\n      parameters.baseUrl,\n      parameters.nodeKey,\n    );\n    const meshUrl = dvidInstance.getKeyValueUrl(\n      parameters.dataInstanceKey,\n      `${chunk.fragmentId}.ngmesh`,\n    );\n\n    return makeRequestWithCredentials(\n      this.credentialsProvider,\n      {\n        method: \"GET\",\n        url: appendQueryStringForDvid(meshUrl, parameters.user),\n        responseType: \"arraybuffer\",\n      },\n      cancellationToken,\n    ).then((response) => decodeFragmentChunk(chunk, response));\n  }\n}\n\n@registerSharedObject()\nexport class DVIDVolumeChunkSource extends DVIDSource(\n  VolumeChunkSource,\n  VolumeChunkSourceParameters,\n) {\n  async download(chunk: VolumeChunk, cancellationToken: CancellationToken) {\n    const params = this.parameters;\n    let path: string;\n    {\n      // chunkPosition must not be captured, since it will be invalidated by the next call to\n      // computeChunkBounds.\n      const chunkPosition = this.computeChunkBounds(chunk);\n      const chunkDataSize = chunk.chunkDataSize!;\n\n      // if the volume is an image, get a jpeg\n      path = this.getPath(chunkPosition, chunkDataSize);\n    }\n    const decoder = this.getDecoder(params);\n    const response = await makeRequestWithCredentials(\n      this.credentialsProvider,\n      {\n        method: \"GET\",\n        url: appendQueryStringForDvid(`${params.baseUrl}${path}`, params.user),\n        responseType: \"arraybuffer\",\n      },\n      cancellationToken,\n    );\n    await decoder(\n      chunk,\n      cancellationToken,\n      params.encoding === VolumeChunkEncoding.JPEG\n        ? response.slice(16)\n        : response,\n    );\n  }\n  getPath(chunkPosition: Float32Array, chunkDataSize: Uint32Array) {\n    const params = this.parameters;\n    if (params.encoding === VolumeChunkEncoding.JPEG) {\n      return (\n        `/api/node/${params.nodeKey}/${params.dataInstanceKey}/subvolblocks/` +\n        `${chunkDataSize[0]}_${chunkDataSize[1]}_${chunkDataSize[2]}/` +\n        `${chunkPosition[0]}_${chunkPosition[1]}_${chunkPosition[2]}`\n      );\n    }\n    if (params.encoding === VolumeChunkEncoding.RAW) {\n      return (\n        `/api/node/${params.nodeKey}/${params.dataInstanceKey}/raw/0_1_2/` +\n        `${chunkDataSize[0]}_${chunkDataSize[1]}_${chunkDataSize[2]}/` +\n        `${chunkPosition[0]}_${chunkPosition[1]}_${chunkPosition[2]}/jpeg`\n      );\n    }\n    if (params.encoding === VolumeChunkEncoding.COMPRESSED_SEGMENTATIONARRAY) {\n      return (\n        `/api/node/${params.nodeKey}/${params.dataInstanceKey}/raw/0_1_2/` +\n        `${chunkDataSize[0]}_${chunkDataSize[1]}_${chunkDataSize[2]}/` +\n        `${chunkPosition[0]}_${chunkPosition[1]}_${chunkPosition[2]}?compression=googlegzip&scale=${params.dataScale}`\n      );\n    }\n    // encoding is COMPRESSED_SEGMENTATION\n    return (\n      `/api/node/${params.nodeKey}/${params.dataInstanceKey}/raw/0_1_2/` +\n      `${chunkDataSize[0]}_${chunkDataSize[1]}_${chunkDataSize[2]}/` +\n      `${chunkPosition[0]}_${chunkPosition[1]}_${chunkPosition[2]}?compression=googlegzip`\n    );\n  }\n  getDecoder(params: any) {\n    if (\n      params.encoding === VolumeChunkEncoding.JPEG ||\n      params.encoding === VolumeChunkEncoding.RAW\n    ) {\n      return decodeJpegChunk;\n    }\n    // encoding is COMPRESSED_SEGMENTATION\n    return decodeCompressedSegmentationChunk;\n  }\n}\n","/**\n * @license\n * Copyright 2019 The Neuroglancer Authors\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ShardingParameters } from \"#src/datasource/precomputed/base.js\";\nimport type {\n  ChunkLayoutOptions,\n  SliceViewChunkSource,\n  SliceViewChunkSpecification,\n  SliceViewChunkSpecificationBaseOptions,\n  SliceViewChunkSpecificationOptions,\n  DataType,\n} from \"#src/sliceview/base.js\";\nimport { makeSliceViewChunkSpecification } from \"#src/sliceview/base.js\";\nimport type { mat4 } from \"#src/util/geom.js\";\n\nimport { Uint64 } from \"#src/util/uint64.js\";\n\nexport const PYCG_APP_VERSION = 1;\nexport const GRAPHENE_MESH_NEW_SEGMENT_RPC_ID = \"GrapheneMeshSource:NewSegment\";\n\nexport enum VolumeChunkEncoding {\n  RAW = 0,\n  JPEG = 1,\n  COMPRESSED_SEGMENTATION = 2,\n}\n\nexport class VolumeChunkSourceParameters {\n  url: string;\n  encoding: VolumeChunkEncoding;\n  sharding: ShardingParameters | undefined;\n\n  static RPC_ID = \"graphene/VolumeChunkSource\";\n}\n\nexport class ChunkedGraphSourceParameters {\n  url: string;\n\n  static RPC_ID = \"graphene/ChunkedGraphSource\";\n}\n\nexport class MeshSourceParameters {\n  manifestUrl: string;\n  fragmentUrl: string;\n  lod: number;\n  sharding: Array<ShardingParameters> | undefined;\n  nBitsForLayerId: number;\n\n  static RPC_ID = \"graphene/MeshSource\";\n}\n\nexport class MultiscaleMeshMetadata {\n  transform: mat4;\n  lodScaleMultiplier: number;\n  vertexQuantizationBits: number;\n  sharding: Array<ShardingParameters> | undefined;\n}\n\nexport const responseIdentity = async (x: any) => x;\n\nexport function isBaseSegmentId(segmentId: Uint64, nBitsForLayerId: number) {\n  const layerId = Uint64.rshift(new Uint64(), segmentId, 64 - nBitsForLayerId);\n  return Uint64.equal(layerId, Uint64.ONE);\n}\n\nexport function getGrapheneFragmentKey(fragmentId: string) {\n  const sharded = fragmentId.charAt(0) === \"~\";\n\n  if (sharded) {\n    const parts = fragmentId.substring(1).split(/:(.+)/);\n    return { key: parts[0], fragmentId: parts[1] };\n  }\n  return { key: fragmentId, fragmentId: fragmentId };\n}\n\nexport const CHUNKED_GRAPH_LAYER_RPC_ID = \"ChunkedGraphLayer\";\nexport const CHUNKED_GRAPH_RENDER_LAYER_UPDATE_SOURCES_RPC_ID =\n  \"ChunkedGraphLayer:updateSources\";\nexport const RENDER_RATIO_LIMIT = 5.0;\n\nexport interface ChunkedGraphChunkSpecificationBaseOptions\n  extends SliceViewChunkSpecificationBaseOptions {\n  /**\n   * Specifies offset for use by backend.ts:GenericVolumeChunkSource.computeChunkBounds in\n   * calculating chunk voxel coordinates.  The calculated chunk coordinates will be equal to the\n   * voxel position (in chunkLayout coordinates) plus this value.\n   *\n   * Defaults to kZeroVec if not specified.\n   */\n  baseVoxelOffset?: Float32Array;\n  dataType: DataType;\n}\n\nexport interface ChunkedGraphChunkSpecificationOptions\n  extends ChunkedGraphChunkSpecificationBaseOptions,\n    SliceViewChunkSpecificationOptions<Uint32Array> {}\n\n/**\n * Specifies parameters for ChunkedGraphChunkSpecification.getDefaults.\n */\nexport interface ChunkedGraphChunkSpecificationGetDefaultsOptions\n  extends ChunkedGraphChunkSpecificationBaseOptions,\n    ChunkLayoutOptions {}\n\n/**\n * Specifies a chunk layout and voxel size.\n */\nexport interface ChunkedGraphChunkSpecification\n  extends SliceViewChunkSpecification<Uint32Array> {\n  baseVoxelOffset: Float32Array;\n  dataType: DataType;\n}\n\nexport function makeChunkedGraphChunkSpecification(\n  options: ChunkedGraphChunkSpecificationOptions,\n): ChunkedGraphChunkSpecification {\n  const { rank, dataType } = options;\n  const { baseVoxelOffset = new Float32Array(rank) } = options;\n\n  return {\n    ...makeSliceViewChunkSpecification(options),\n    baseVoxelOffset,\n    dataType,\n  };\n}\n\nexport interface ChunkedGraphChunkSource extends SliceViewChunkSource {\n  spec: ChunkedGraphChunkSpecification;\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst OBJECT_ID_SYMBOL = Symbol(\"objectId\");\nlet nextObjectId = 0;\n\n/**\n * Returns a string that uniquely identifies a particular primitive value or object instance.\n */\nexport function getObjectId(x: any) {\n  if (x instanceof Object) {\n    let id = x[OBJECT_ID_SYMBOL];\n    if (id === undefined) {\n      id = x[OBJECT_ID_SYMBOL] = nextObjectId++;\n    }\n    return `o${id}`;\n  }\n  return \"\" + JSON.stringify(x);\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file\n * Provides a simple way to request a file on the backend with priority integration.\n */\n\nimport type { ChunkManager } from \"#src/chunk_manager/backend.js\";\nimport { Chunk, ChunkSourceBase } from \"#src/chunk_manager/backend.js\";\nimport { ChunkPriorityTier, ChunkState } from \"#src/chunk_manager/base.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport {\n  CANCELED,\n  makeCancelablePromise,\n  MultipleConsumerCancellationTokenSource,\n} from \"#src/util/cancellation.js\";\nimport type { Borrowed, Owned } from \"#src/util/disposable.js\";\nimport { responseArrayBuffer } from \"#src/util/http_request.js\";\nimport { stableStringify } from \"#src/util/json.js\";\nimport { getObjectId } from \"#src/util/object_id.js\";\nimport type { SpecialProtocolCredentialsProvider } from \"#src/util/special_protocol_request.js\";\nimport { cancellableFetchSpecialOk } from \"#src/util/special_protocol_request.js\";\n\nexport type PriorityGetter = () => {\n  priorityTier: ChunkPriorityTier;\n  priority: number;\n};\n\ninterface FileDataRequester<Data> {\n  resolve: (data: Data) => void;\n  reject: (error: any) => void;\n  getPriority: PriorityGetter;\n}\n\nclass GenericSharedDataChunk<Key, Data> extends Chunk {\n  decodedKey?: Key;\n  data?: Data;\n  requesters?: Set<FileDataRequester<Data>>;\n\n  initialize(key: string) {\n    super.initialize(key);\n    this.requesters = new Set<FileDataRequester<Data>>();\n  }\n\n  downloadSucceeded() {\n    super.downloadSucceeded();\n    const { requesters, data } = this;\n    this.requesters = undefined;\n    for (const requester of requesters!) {\n      requester.resolve(data!);\n    }\n  }\n\n  downloadFailed(error: any) {\n    super.downloadFailed(error);\n    const { requesters } = this;\n    this.requesters = undefined;\n    for (const requester of requesters!) {\n      requester.reject(error);\n    }\n  }\n\n  freeSystemMemory() {\n    this.data = undefined;\n  }\n}\n\nexport interface GenericSharedDataSourceOptions<Key, Data> {\n  encodeKey?: (key: Key) => string;\n  download: (\n    key: Key,\n    cancellationToken: CancellationToken,\n  ) => Promise<{ size: number; data: Data }>;\n  sourceQueueLevel?: number;\n}\n\nexport class GenericSharedDataSource<Key, Data> extends ChunkSourceBase {\n  chunks: Map<string, GenericSharedDataChunk<Key, Data>>;\n\n  private encodeKeyFunction: (key: Key) => string;\n\n  private downloadFunction: (\n    key: Key,\n    cancellationToken: CancellationToken,\n  ) => Promise<{ size: number; data: Data }>;\n\n  constructor(\n    chunkManager: Owned<ChunkManager>,\n    options: GenericSharedDataSourceOptions<Key, Data>,\n  ) {\n    super(chunkManager);\n    this.registerDisposer(chunkManager);\n    const { encodeKey = stableStringify } = options;\n    this.downloadFunction = options.download;\n    this.encodeKeyFunction = encodeKey;\n    const { sourceQueueLevel = 0 } = options;\n    this.sourceQueueLevel = sourceQueueLevel;\n\n    // This source is unusual in that it updates its own chunk priorities.\n    this.registerDisposer(\n      this.chunkManager.recomputeChunkPrioritiesLate.add(() => {\n        this.updateChunkPriorities();\n      }),\n    );\n  }\n\n  updateChunkPriorities() {\n    const { chunkManager } = this;\n    for (const chunk of this.chunks.values()) {\n      const { requesters } = chunk;\n      if (requesters !== undefined) {\n        for (const requester of requesters) {\n          const { priorityTier, priority } = requester.getPriority();\n          if (priorityTier === ChunkPriorityTier.RECENT) continue;\n          chunkManager.requestChunk(\n            chunk,\n            priorityTier,\n            priority,\n            ChunkState.SYSTEM_MEMORY_WORKER,\n          );\n        }\n      }\n    }\n  }\n\n  async download(\n    chunk: GenericSharedDataChunk<Key, Data>,\n    cancellationToken: CancellationToken,\n  ) {\n    const { size, data } = await this.downloadFunction(\n      chunk.decodedKey!,\n      cancellationToken,\n    );\n    chunk.systemMemoryBytes = size;\n    chunk.data = data;\n  }\n\n  /**\n   * Precondition: priorityTier <= ChunkPriorityTier.LAST_ORDERED_TIER\n   */\n  getData(\n    key: Key,\n    getPriority: PriorityGetter,\n    cancellationToken: CancellationToken,\n  ) {\n    const encodedKey = this.encodeKeyFunction(key);\n    let chunk = this.chunks.get(encodedKey);\n    if (chunk === undefined) {\n      chunk = this.getNewChunk_<GenericSharedDataChunk<Key, Data>>(\n        GenericSharedDataChunk,\n      );\n      chunk.decodedKey = key;\n      chunk.initialize(encodedKey);\n      this.addChunk(chunk);\n    }\n    return makeCancelablePromise<Data>(\n      cancellationToken,\n      (resolve, reject, token) => {\n        // If the data is already available or the request has already failed, resolve/reject the\n        // promise immediately.\n        switch (chunk!.state) {\n          case ChunkState.FAILED:\n            reject(chunk!.error);\n            return;\n\n          case ChunkState.SYSTEM_MEMORY_WORKER:\n            resolve(chunk!.data!);\n            return;\n        }\n        const requester: FileDataRequester<Data> = {\n          resolve,\n          reject,\n          getPriority,\n        };\n        chunk!.requesters!.add(requester);\n        token.add(() => {\n          const { requesters } = chunk!;\n          if (requesters !== undefined) {\n            requesters.delete(requester);\n            this.chunkManager.scheduleUpdateChunkPriorities();\n          }\n          reject(CANCELED);\n        });\n        this.chunkManager.scheduleUpdateChunkPriorities();\n      },\n    );\n  }\n\n  static get<Key, Data>(\n    chunkManager: Borrowed<ChunkManager>,\n    memoizeKey: string,\n    options: GenericSharedDataSourceOptions<Key, Data>,\n  ) {\n    return chunkManager.memoize.get(\n      `getFileSource:${memoizeKey}`,\n      () => new GenericSharedDataSource(chunkManager.addRef(), options),\n    );\n  }\n\n  static getData<Key, Data>(\n    chunkManager: Borrowed<ChunkManager>,\n    memoizeKey: string,\n    options: GenericSharedDataSourceOptions<Key, Data>,\n    key: Key,\n    getPriority: PriorityGetter,\n    cancellationToken: CancellationToken,\n  ) {\n    const source = GenericSharedDataSource.get(\n      chunkManager,\n      memoizeKey,\n      options,\n    );\n    const result = source.getData(key, getPriority, cancellationToken);\n    source.dispose();\n    return result;\n  }\n\n  static getUrl<Data>(\n    chunkManager: Borrowed<ChunkManager>,\n    credentialsProvider: SpecialProtocolCredentialsProvider,\n    decodeFunction: (\n      buffer: ArrayBuffer,\n      cancellationToken: CancellationToken,\n    ) => Promise<{ size: number; data: Data }>,\n    url: string,\n    getPriority: PriorityGetter,\n    cancellationToken: CancellationToken,\n  ) {\n    return GenericSharedDataSource.getData<string, Data>(\n      chunkManager,\n      `${getObjectId(decodeFunction)}`,\n      {\n        download: (url: string, cancellationToken: CancellationToken) =>\n          cancellableFetchSpecialOk(\n            credentialsProvider,\n            url,\n            {},\n            responseArrayBuffer,\n            cancellationToken,\n          ).then((response) => decodeFunction(response, cancellationToken)),\n      },\n      url,\n      getPriority,\n      cancellationToken,\n    );\n  }\n}\n\nclass AsyncCacheChunk<Data> extends Chunk {\n  promise: Promise<Data> | undefined;\n  cancellationSource: MultipleConsumerCancellationTokenSource | undefined;\n\n  initialize(key: string) {\n    super.initialize(key);\n  }\n\n  freeSystemMemory() {\n    this.promise = undefined;\n    this.cancellationSource = undefined;\n  }\n}\n\nexport interface SimpleAsyncCacheOptions<Key, Value> {\n  encodeKey?: (key: Key) => string;\n  get: (\n    key: Key,\n    cancellationToken: CancellationToken,\n  ) => Promise<{ size: number; data: Value }>;\n}\n\nexport class SimpleAsyncCache<Key, Value> extends ChunkSourceBase {\n  chunks: Map<string, AsyncCacheChunk<Value>>;\n\n  constructor(\n    chunkManager: Owned<ChunkManager>,\n    options: SimpleAsyncCacheOptions<Key, Value>,\n  ) {\n    super(chunkManager);\n    this.registerDisposer(chunkManager);\n    this.downloadFunction = options.get;\n    this.encodeKeyFunction = options.encodeKey ?? stableStringify;\n  }\n  encodeKeyFunction: (key: Key) => string;\n  downloadFunction: (\n    key: Key,\n    cancellationToken: CancellationToken,\n  ) => Promise<{ size: number; data: Value }>;\n\n  get(key: Key, cancellationToken: CancellationToken): Promise<Value> {\n    const encodedKey = this.encodeKeyFunction(key);\n    let chunk = this.chunks.get(encodedKey);\n    if (chunk === undefined) {\n      chunk = this.getNewChunk_<AsyncCacheChunk<Value>>(AsyncCacheChunk);\n      chunk.initialize(encodedKey);\n      this.addChunk(chunk);\n    }\n    if (chunk.promise === undefined) {\n      let completed = false;\n      const cancellationSource = (chunk!.cancellationSource =\n        new MultipleConsumerCancellationTokenSource());\n      cancellationSource.add(() => {\n        if (!completed) {\n          chunk!.promise = undefined;\n        }\n      });\n      chunk.promise = (async () => {\n        try {\n          const { data, size } = await this.downloadFunction(\n            key,\n            cancellationSource,\n          );\n          chunk.systemMemoryBytes = size;\n          chunk!.queueManager.updateChunkState(\n            chunk!,\n            ChunkState.SYSTEM_MEMORY,\n          );\n          return data;\n        } catch (e) {\n          chunk!.queueManager.updateChunkState(chunk!, ChunkState.FAILED);\n          throw e;\n        } finally {\n          completed = true;\n        }\n      })();\n    }\n    chunk.cancellationSource!.addConsumer(cancellationToken);\n    return chunk.promise;\n  }\n}\n\nexport function makeSimpleAsyncCache<Key, Data>(\n  chunkManager: ChunkManager,\n  memoizeKey: string,\n  options: SimpleAsyncCacheOptions<Key, Data>,\n) {\n  return chunkManager.memoize.get(\n    `simpleAsyncCache:${memoizeKey}`,\n    () => new SimpleAsyncCache(chunkManager.addRef(), options),\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { RawPartitionedMeshData, RawMeshData } from \"#src/mesh/backend.js\";\n\nlet decodeResult: RawPartitionedMeshData | Error | undefined = undefined;\nlet numPartitions = 0;\n\nlet wasmModule: WebAssembly.Instance | undefined;\n\nconst libraryEnv = {\n  emscripten_notify_memory_growth: (memoryIndex: number) => {\n    memoryIndex;\n  },\n  neuroglancer_draco_receive_decoded_mesh: (\n    numFaces: number,\n    numVertices: number,\n    indicesPointer: number,\n    vertexPositionsPointer: number,\n    subchunkOffsetsPointer: number,\n  ) => {\n    const numIndices = numFaces * 3;\n    const memory = wasmModule!.exports.memory as WebAssembly.Memory;\n    const indices = new Uint32Array(\n      memory.buffer,\n      indicesPointer,\n      numIndices,\n    ).slice();\n    const vertexPositions = new Uint32Array(\n      memory.buffer,\n      vertexPositionsPointer,\n      3 * numVertices,\n    ).slice();\n    const subChunkOffsets = new Uint32Array(\n      memory.buffer,\n      subchunkOffsetsPointer,\n      numPartitions + 1,\n    ).slice();\n    const mesh: RawPartitionedMeshData = {\n      indices,\n      vertexPositions,\n      subChunkOffsets,\n    };\n    decodeResult = mesh;\n  },\n  proc_exit: (code: number) => {\n    throw `proc exit: ${code}`;\n  },\n};\nlet dracoModulePromise: Promise<WebAssembly.Instance> | undefined;\n\nfunction getDracoModulePromise() {\n  if (dracoModulePromise == undefined) {\n    dracoModulePromise = (async () => {\n      const m = (wasmModule = (\n        await WebAssembly.instantiateStreaming(\n          fetch(new URL(\"./neuroglancer_draco.wasm\", import.meta.url)),\n          {\n            env: libraryEnv,\n            wasi_snapshot_preview1: libraryEnv,\n          },\n        )\n      ).instance);\n      (m.exports._initialize as Function)();\n      return m;\n    })();\n  }\n  return dracoModulePromise;\n}\n\nexport async function decodeDracoPartitioned(\n  buffer: Uint8Array,\n  vertexQuantizationBits: number,\n  partition: boolean,\n): Promise<RawPartitionedMeshData> {\n  const m = await getDracoModulePromise();\n  const offset = (m.exports.malloc as Function)(buffer.byteLength);\n  const heap = new Uint8Array((m.exports.memory as WebAssembly.Memory).buffer);\n  heap.set(buffer, offset);\n  numPartitions = partition ? 8 : 1;\n  const code = (m.exports.neuroglancer_draco_decode as Function)(\n    offset,\n    buffer.byteLength,\n    partition,\n    vertexQuantizationBits,\n    true,\n  );\n  if (code === 0) {\n    const r = decodeResult;\n    decodeResult = undefined;\n    if (r instanceof Error) throw r;\n    return r!;\n  }\n  throw new Error(`Failed to decode draco mesh: ${code}`);\n}\n\nexport async function decodeDraco(buffer: Uint8Array): Promise<RawMeshData> {\n  const m = await getDracoModulePromise();\n  const offset = (m.exports.malloc as Function)(buffer.byteLength);\n  const heap = new Uint8Array((m.exports.memory as WebAssembly.Memory).buffer);\n  heap.set(buffer, offset);\n  const code = (m.exports.neuroglancer_draco_decode as Function)(\n    offset,\n    buffer.byteLength,\n    false,\n    0,\n    false,\n  );\n  if (code === 0) {\n    const r = decodeResult;\n    decodeResult = undefined;\n    if (r instanceof Error) throw r;\n    r!.vertexPositions = new Float32Array(r!.vertexPositions.buffer);\n    return r!;\n  }\n  throw new Error(`Failed to decode draco mesh: ${code}`);\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { SkeletonChunk } from \"#src/skeleton/backend.js\";\nimport { decodeSkeletonVertexPositionsAndIndices } from \"#src/skeleton/backend.js\";\nimport type { VertexAttributeInfo } from \"#src/skeleton/base.js\";\nimport { DATA_TYPE_BYTES } from \"#src/util/data_type.js\";\nimport {\n  convertEndian16,\n  convertEndian32,\n  Endianness,\n} from \"#src/util/endian.js\";\n\nexport function decodeSkeletonChunk(\n  chunk: SkeletonChunk,\n  response: ArrayBuffer,\n  vertexAttributes: Map<string, VertexAttributeInfo>,\n) {\n  const dv = new DataView(response);\n  const numVertices = dv.getUint32(0, true);\n  const numEdges = dv.getUint32(4, true);\n\n  const vertexPositionsStartOffset = 8;\n\n  let curOffset = 8 + numVertices * 4 * 3;\n  decodeSkeletonVertexPositionsAndIndices(\n    chunk,\n    response,\n    Endianness.LITTLE,\n    /*vertexByteOffset=*/ vertexPositionsStartOffset,\n    numVertices,\n    /*indexByteOffset=*/ curOffset,\n    /*numEdges=*/ numEdges,\n  );\n  curOffset += numEdges * 4 * 2;\n  const attributes: Uint8Array[] = [];\n  for (const info of vertexAttributes.values()) {\n    const bytesPerVertex = DATA_TYPE_BYTES[info.dataType] * info.numComponents;\n    const totalBytes = bytesPerVertex * numVertices;\n    const attribute = new Uint8Array(response, curOffset, totalBytes);\n    switch (bytesPerVertex) {\n      case 2:\n        convertEndian16(attribute, Endianness.LITTLE);\n        break;\n      case 4:\n      case 8:\n        convertEndian32(attribute, Endianness.LITTLE);\n        break;\n    }\n    attributes.push(attribute);\n    curOffset += totalBytes;\n  }\n  chunk.vertexAttributes = attributes;\n}\n","/**\n * @license\n * Copyright 2021 William Silversmith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport const decodeCompresso =\n  asyncComputation<(data: Uint8Array) => Uint8Array>(\"decodeCompresso\");\n","/**\n * @license\n * Copyright 2021 William Silvermsith.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeCompresso } from \"#src/async_computation/decode_compresso_request.js\";\nimport { requestAsyncComputation } from \"#src/async_computation/request.js\";\nimport { decodeRawChunk } from \"#src/sliceview/backend_chunk_decoders/raw.js\";\nimport type { VolumeChunk } from \"#src/sliceview/volume/backend.js\";\nimport type { TypedArray } from \"#src/util/array.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\n\nexport async function decodeCompressoChunk(\n  chunk: VolumeChunk,\n  cancellationToken: CancellationToken,\n  response: ArrayBuffer,\n) {\n  const image: TypedArray = await requestAsyncComputation(\n    decodeCompresso,\n    cancellationToken,\n    [response],\n    new Uint8Array(response),\n  );\n\n  await decodeRawChunk(chunk, cancellationToken, image.buffer);\n}\n","/**\n * @license\n * Copyright 2022 William Silvermsith.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodePng } from \"#src/async_computation/decode_png_request.js\";\nimport { requestAsyncComputation } from \"#src/async_computation/request.js\";\nimport { decodeRawChunk } from \"#src/sliceview/backend_chunk_decoders/raw.js\";\nimport type { VolumeChunk } from \"#src/sliceview/volume/backend.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport { DATA_TYPE_BYTES } from \"#src/util/data_type.js\";\n\nexport async function decodePngChunk(\n  chunk: VolumeChunk,\n  cancellationToken: CancellationToken,\n  response: ArrayBuffer,\n) {\n  const chunkDataSize = chunk.chunkDataSize!;\n  const dataType = chunk.source!.spec.dataType;\n  const { uint8Array: image } = await requestAsyncComputation(\n    decodePng,\n    cancellationToken,\n    [response],\n    /*buffer=*/ new Uint8Array(response),\n    /*width=*/ chunkDataSize[0],\n    /*height=*/ chunkDataSize[1] * chunkDataSize[2],\n    /*numComponents=*/ chunkDataSize[3] || 1,\n    /*bytesPerPixel=*/ DATA_TYPE_BYTES[dataType],\n    /*convertToGrayscale=*/ false,\n  );\n\n  await decodeRawChunk(chunk, cancellationToken, image.buffer);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport {\n  getByteRangeHeader,\n  responseArrayBuffer,\n} from \"#src/util/http_request.js\";\nimport type { SpecialProtocolCredentialsProvider } from \"#src/util/special_protocol_request.js\";\nimport { cancellableFetchSpecialOk } from \"#src/util/special_protocol_request.js\";\nimport type { Uint64 } from \"#src/util/uint64.js\";\n\n/**\n * On Chromium, multiple concurrent byte range requests to the same URL are serialized unless the\n * cache is disabled.  Disabling the cache works around the problem.\n *\n * https://bugs.chromium.org/p/chromium/issues/detail?id=969828\n */\nconst cacheMode =\n  navigator.userAgent.indexOf(\"Chrome\") !== -1 ? \"no-store\" : \"default\";\n\nexport function fetchSpecialHttpByteRange(\n  credentialsProvider: SpecialProtocolCredentialsProvider,\n  url: string,\n  startOffset: Uint64 | number,\n  endOffset: Uint64 | number,\n  cancellationToken: CancellationToken,\n): Promise<ArrayBuffer> {\n  return cancellableFetchSpecialOk(\n    credentialsProvider,\n    url,\n    {\n      headers: getByteRangeHeader(startOffset, endOffset),\n      cache: cacheMode,\n    },\n    responseArrayBuffer,\n    cancellationToken,\n  );\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Uint64 } from \"#src/util/uint64.js\";\n\n/**\n * This is a very simple string hash function.  It isn't secure, but\n * is suitable for sharding of requests.\n */\nexport function simpleStringHash(s: string): number {\n  let h = 0;\n  const length = s.length;\n  for (let i = 0; i < length; ++i) {\n    h = (h * 31 + s.charCodeAt(i)) | 0;\n  }\n  return h;\n}\n\n/**\n * MurmurHash3_x86_32 mixing function\n */\nexport function murmurHash3_x86_32Mix(h: number, k: number): number {\n  k = Math.imul(k, 0xcc9e2d51) >>> 0;\n  k = ((k << 15) | (k >>> 17)) >>> 0;\n  k = Math.imul(k, 0x1b873593) >>> 0;\n  h ^= k;\n  h = ((h << 13) | (h >>> 19)) >>> 0;\n  h = (Math.imul(h, 5) + 0xe6546b64) >>> 0;\n  return h;\n}\n\n/**\n * MurmurHash3_x86_32 finalization function\n */\nexport function murmurHash3_x86_32Finalize(h: number, len: number) {\n  h ^= len;\n  h ^= h >>> 16;\n  h = Math.imul(h, 0x85ebca6b) >>> 0;\n  h ^= h >>> 13;\n  h *= 0xc2b2ae35;\n  h ^= h >>> 16;\n  return h >>> 0;\n}\n\n/**\n * MurmurHash3_x86_32, specialized for 8 bytes of input.\n */\nexport function murmurHash3_x86_32Hash64Bits(\n  seed: number,\n  low: number,\n  high: number,\n): number {\n  let h = seed;\n  h = murmurHash3_x86_32Mix(h, low);\n  h = murmurHash3_x86_32Mix(h, high);\n  return murmurHash3_x86_32Finalize(h, 8);\n}\n\nfunction murmurHash3_x86_128Mix(h: number) {\n  h ^= h >>> 16;\n  h = Math.imul(h, 0x85ebca6b);\n  h ^= h >>> 13;\n  h = Math.imul(h, 0xc2b2ae35);\n  h ^= h >>> 16;\n  return h;\n}\n\nfunction rotl32(x: number, r: number) {\n  return (x << r) | (x >>> (32 - r));\n}\n\n/**\n * MurmurHash3_x86_128, specialized for 8 bytes of input.\n *\n * Only the low 8 bytes of output are returned.\n */\nexport function murmurHash3_x86_128Hash64Bits(\n  out: Uint64,\n  seed: number,\n  low: number,\n  high: number,\n): Uint64 {\n  let h1 = seed;\n  let h2 = seed;\n  let h3 = seed;\n  let h4 = seed;\n  const c1 = 0x239b961b;\n  const c2 = 0xab0e9789;\n  const c3 = 0x38b34ae5;\n  // const c4 = 0xa1e38b93;\n\n  let k2 = Math.imul(high, c2);\n  k2 = rotl32(k2, 16);\n  k2 = Math.imul(k2, c3);\n  h2 ^= k2;\n\n  let k1 = Math.imul(low, c1);\n  k1 = rotl32(k1, 15);\n  k1 = Math.imul(k1, c2);\n  h1 ^= k1;\n\n  const len = 8;\n\n  h1 ^= len;\n  h2 ^= len;\n  h3 ^= len;\n  h4 ^= len;\n\n  h1 = (h1 + h2) >>> 0;\n  h1 = (h1 + h3) >>> 0;\n  h1 = (h1 + h4) >>> 0;\n  h2 = (h2 + h1) >>> 0;\n  h3 = (h3 + h1) >>> 0;\n  h4 = (h4 + h1) >>> 0;\n\n  h1 = murmurHash3_x86_128Mix(h1);\n  h2 = murmurHash3_x86_128Mix(h2);\n  h3 = murmurHash3_x86_128Mix(h3);\n  h4 = murmurHash3_x86_128Mix(h4);\n\n  h1 = (h1 + h2) >>> 0;\n  h1 = (h1 + h3) >>> 0;\n  h1 = (h1 + h4) >>> 0;\n  h2 = (h2 + h1) >>> 0;\n\n  // h3 = (h3 + h1) >>> 0;\n  // h4 = (h4 + h1) >>> 0;\n\n  out.low = h1;\n  out.high = h2;\n  return out;\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  AnnotationGeometryChunk,\n  AnnotationMetadataChunk,\n  AnnotationSubsetGeometryChunk,\n} from \"#src/annotation/backend.js\";\nimport {\n  AnnotationGeometryData,\n  AnnotationSource,\n  AnnotationGeometryChunkSourceBackend,\n} from \"#src/annotation/backend.js\";\nimport type { Annotation } from \"#src/annotation/index.js\";\nimport {\n  AnnotationPropertySerializer,\n  annotationTypeHandlers,\n  annotationTypes,\n} from \"#src/annotation/index.js\";\nimport { decodeGzip } from \"#src/async_computation/decode_gzip_request.js\";\nimport { requestAsyncComputation } from \"#src/async_computation/request.js\";\nimport type { Chunk, ChunkManager } from \"#src/chunk_manager/backend.js\";\nimport { WithParameters } from \"#src/chunk_manager/backend.js\";\nimport { GenericSharedDataSource } from \"#src/chunk_manager/generic_file_source.js\";\nimport { WithSharedCredentialsProviderCounterpart } from \"#src/credentials_provider/shared_counterpart.js\";\nimport type { ShardingParameters } from \"#src/datasource/precomputed/base.js\";\nimport {\n  AnnotationSourceParameters,\n  AnnotationSpatialIndexSourceParameters,\n  DataEncoding,\n  IndexedSegmentPropertySourceParameters,\n  MeshSourceParameters,\n  MultiscaleMeshSourceParameters,\n  ShardingHashFunction,\n  SkeletonSourceParameters,\n  VolumeChunkEncoding,\n  VolumeChunkSourceParameters,\n} from \"#src/datasource/precomputed/base.js\";\nimport type {\n  FragmentChunk,\n  ManifestChunk,\n  MultiscaleFragmentChunk,\n  MultiscaleManifestChunk,\n} from \"#src/mesh/backend.js\";\nimport {\n  assignMeshFragmentData,\n  assignMultiscaleMeshFragmentData,\n  computeOctreeChildOffsets,\n  decodeJsonManifestChunk,\n  decodeTriangleVertexPositionsAndIndices,\n  generateHigherOctreeLevel,\n  MeshSource,\n  MultiscaleMeshSource,\n} from \"#src/mesh/backend.js\";\nimport { decodeDracoPartitioned } from \"#src/mesh/draco/index.js\";\nimport { IndexedSegmentPropertySourceBackend } from \"#src/segmentation_display_state/backend.js\";\nimport type { SkeletonChunk } from \"#src/skeleton/backend.js\";\nimport { SkeletonSource } from \"#src/skeleton/backend.js\";\nimport { decodeSkeletonChunk } from \"#src/skeleton/decode_precomputed_skeleton.js\";\nimport { decodeCompressedSegmentationChunk } from \"#src/sliceview/backend_chunk_decoders/compressed_segmentation.js\";\nimport { decodeCompressoChunk } from \"#src/sliceview/backend_chunk_decoders/compresso.js\";\nimport type { ChunkDecoder } from \"#src/sliceview/backend_chunk_decoders/index.js\";\nimport { decodeJpegChunk } from \"#src/sliceview/backend_chunk_decoders/jpeg.js\";\nimport { decodePngChunk } from \"#src/sliceview/backend_chunk_decoders/png.js\";\nimport { decodeRawChunk } from \"#src/sliceview/backend_chunk_decoders/raw.js\";\nimport type { VolumeChunk } from \"#src/sliceview/volume/backend.js\";\nimport { VolumeChunkSource } from \"#src/sliceview/volume/backend.js\";\nimport { fetchSpecialHttpByteRange } from \"#src/util/byte_range_http_requests.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport type { Borrowed } from \"#src/util/disposable.js\";\nimport { convertEndian32, Endianness } from \"#src/util/endian.js\";\nimport { vec3 } from \"#src/util/geom.js\";\nimport { murmurHash3_x86_128Hash64Bits } from \"#src/util/hash.js\";\nimport {\n  isNotFoundError,\n  responseArrayBuffer,\n  responseJson,\n} from \"#src/util/http_request.js\";\nimport { stableStringify } from \"#src/util/json.js\";\nimport { getObjectId } from \"#src/util/object_id.js\";\nimport type {\n  SpecialProtocolCredentials,\n  SpecialProtocolCredentialsProvider,\n} from \"#src/util/special_protocol_request.js\";\nimport { cancellableFetchSpecialOk } from \"#src/util/special_protocol_request.js\";\nimport { Uint64 } from \"#src/util/uint64.js\";\nimport {\n  encodeZIndexCompressed,\n  encodeZIndexCompressed3d,\n  zorder3LessThan,\n} from \"#src/util/zorder.js\";\nimport { registerSharedObject } from \"#src/worker_rpc.js\";\n\n// Set to true to validate the multiscale index.\nconst DEBUG_MULTISCALE_INDEX = false;\n\nconst shardingHashFunctions: Map<ShardingHashFunction, (out: Uint64) => void> =\n  new Map([\n    [\n      ShardingHashFunction.MURMURHASH3_X86_128,\n      (out) => {\n        murmurHash3_x86_128Hash64Bits(out, 0, out.low, out.high);\n      },\n    ],\n    [ShardingHashFunction.IDENTITY, (_out) => {}],\n  ]);\n\ninterface ShardInfo {\n  shardUrl: string;\n  offset: Uint64;\n}\n\ninterface DecodedMinishardIndex {\n  data: Uint32Array;\n  shardUrl: string;\n}\n\ninterface MinishardIndexSource\n  extends GenericSharedDataSource<Uint64, DecodedMinishardIndex | undefined> {\n  sharding: ShardingParameters;\n  credentialsProvider: SpecialProtocolCredentialsProvider;\n}\n\nfunction getMinishardIndexDataSource(\n  chunkManager: Borrowed<ChunkManager>,\n  credentialsProvider: SpecialProtocolCredentialsProvider,\n  parameters: { url: string; sharding: ShardingParameters | undefined },\n): MinishardIndexSource | undefined {\n  const { url, sharding } = parameters;\n  if (sharding === undefined) return undefined;\n  const source = GenericSharedDataSource.get<\n    Uint64,\n    DecodedMinishardIndex | undefined\n  >(\n    chunkManager,\n    stableStringify({\n      type: \"precomputed:shardedDataSource\",\n      url,\n      sharding,\n      credentialsProvider: getObjectId(credentialsProvider),\n    }),\n    {\n      download: async (\n        shardAndMinishard: Uint64,\n        cancellationToken: CancellationToken,\n      ) => {\n        const minishard = Uint64.lowMask(new Uint64(), sharding.minishardBits);\n        Uint64.and(minishard, minishard, shardAndMinishard);\n        const shard = Uint64.lowMask(new Uint64(), sharding.shardBits);\n        const temp = new Uint64();\n        Uint64.rshift(temp, shardAndMinishard, sharding.minishardBits);\n        Uint64.and(shard, shard, temp);\n        const shardUrl = `${url}/${shard\n          .toString(16)\n          .padStart(Math.ceil(sharding.shardBits / 4), \"0\")}.shard`;\n        // Retrive minishard index start/end offsets.\n        const shardIndexSize = new Uint64(16);\n        Uint64.lshift(shardIndexSize, shardIndexSize, sharding.minishardBits);\n\n        // Multiply minishard by 16.\n        const shardIndexStart = Uint64.lshift(new Uint64(), minishard, 4);\n        const shardIndexEnd = Uint64.addUint32(\n          new Uint64(),\n          shardIndexStart,\n          16,\n        );\n        let shardIndexResponse: ArrayBuffer;\n        try {\n          shardIndexResponse = await fetchSpecialHttpByteRange(\n            credentialsProvider,\n            shardUrl,\n            shardIndexStart,\n            shardIndexEnd,\n            cancellationToken,\n          );\n        } catch (e) {\n          if (isNotFoundError(e)) return { data: undefined, size: 0 };\n          throw e;\n        }\n        if (shardIndexResponse.byteLength !== 16) {\n          throw new Error(\"Failed to retrieve minishard offset\");\n        }\n        const shardIndexDv = new DataView(shardIndexResponse);\n        const minishardStartOffset = new Uint64(\n          shardIndexDv.getUint32(0, /*littleEndian=*/ true),\n          shardIndexDv.getUint32(4, /*littleEndian=*/ true),\n        );\n        const minishardEndOffset = new Uint64(\n          shardIndexDv.getUint32(8, /*littleEndian=*/ true),\n          shardIndexDv.getUint32(12, /*littleEndian=*/ true),\n        );\n        if (Uint64.equal(minishardStartOffset, minishardEndOffset)) {\n          return { data: undefined, size: 0 };\n        }\n        // The start/end offsets in the shard index are relative to the end of the shard\n        // index.\n        Uint64.add(minishardStartOffset, minishardStartOffset, shardIndexSize);\n        Uint64.add(minishardEndOffset, minishardEndOffset, shardIndexSize);\n\n        let minishardIndexResponse = await fetchSpecialHttpByteRange(\n          credentialsProvider,\n          shardUrl,\n          minishardStartOffset,\n          minishardEndOffset,\n          cancellationToken,\n        );\n        if (sharding.minishardIndexEncoding === DataEncoding.GZIP) {\n          minishardIndexResponse = (\n            await requestAsyncComputation(\n              decodeGzip,\n              cancellationToken,\n              [minishardIndexResponse],\n              new Uint8Array(minishardIndexResponse),\n            )\n          ).buffer;\n        }\n        if (minishardIndexResponse.byteLength % 24 !== 0) {\n          throw new Error(\n            `Invalid minishard index length: ${minishardIndexResponse.byteLength}`,\n          );\n        }\n        const minishardIndex = new Uint32Array(minishardIndexResponse);\n        convertEndian32(minishardIndex, Endianness.LITTLE);\n\n        const minishardIndexSize = minishardIndex.byteLength / 24;\n        let prevEntryKeyLow = 0;\n        let prevEntryKeyHigh = 0;\n        // Offsets in the minishard index are relative to the end of the shard index.\n        let prevStartLow = shardIndexSize.low;\n        let prevStartHigh = shardIndexSize.high;\n        for (let i = 0; i < minishardIndexSize; ++i) {\n          let entryKeyLow = prevEntryKeyLow + minishardIndex[i * 2];\n          let entryKeyHigh = prevEntryKeyHigh + minishardIndex[i * 2 + 1];\n          if (entryKeyLow >= 4294967296) {\n            entryKeyLow -= 4294967296;\n            entryKeyHigh += 1;\n          }\n          prevEntryKeyLow = minishardIndex[i * 2] = entryKeyLow;\n          prevEntryKeyHigh = minishardIndex[i * 2 + 1] = entryKeyHigh;\n          let startLow =\n            prevStartLow + minishardIndex[(minishardIndexSize + i) * 2];\n          let startHigh =\n            prevStartHigh + minishardIndex[(minishardIndexSize + i) * 2 + 1];\n          if (startLow >= 4294967296) {\n            startLow -= 4294967296;\n            startHigh += 1;\n          }\n          minishardIndex[(minishardIndexSize + i) * 2] = startLow;\n          minishardIndex[(minishardIndexSize + i) * 2 + 1] = startHigh;\n          const sizeLow = minishardIndex[(2 * minishardIndexSize + i) * 2];\n          const sizeHigh = minishardIndex[(2 * minishardIndexSize + i) * 2 + 1];\n          let endLow = startLow + sizeLow;\n          let endHigh = startHigh + sizeHigh;\n          if (endLow >= 4294967296) {\n            endLow -= 4294967296;\n            endHigh += 1;\n          }\n          prevStartLow = endLow;\n          prevStartHigh = endHigh;\n          minishardIndex[(2 * minishardIndexSize + i) * 2] = endLow;\n          minishardIndex[(2 * minishardIndexSize + i) * 2 + 1] = endHigh;\n        }\n        return {\n          data: { data: minishardIndex, shardUrl },\n          size: minishardIndex.byteLength,\n        };\n      },\n      encodeKey: (key: Uint64) => key.toString(),\n      sourceQueueLevel: 1,\n    },\n  ) as MinishardIndexSource;\n  source.sharding = sharding;\n  source.credentialsProvider = credentialsProvider;\n  return source;\n}\n\nfunction findMinishardEntry(\n  minishardIndex: DecodedMinishardIndex,\n  key: Uint64,\n): { startOffset: Uint64; endOffset: Uint64 } | undefined {\n  const minishardIndexData = minishardIndex.data;\n  const minishardIndexSize = minishardIndexData.length / 6;\n  const keyLow = key.low;\n  const keyHigh = key.high;\n  for (let i = 0; i < minishardIndexSize; ++i) {\n    if (\n      minishardIndexData[i * 2] !== keyLow ||\n      minishardIndexData[i * 2 + 1] !== keyHigh\n    ) {\n      continue;\n    }\n    const startOffset = new Uint64(\n      minishardIndexData[(minishardIndexSize + i) * 2],\n      minishardIndexData[(minishardIndexSize + i) * 2 + 1],\n    );\n    const endOffset = new Uint64(\n      minishardIndexData[(2 * minishardIndexSize + i) * 2],\n      minishardIndexData[(2 * minishardIndexSize + i) * 2 + 1],\n    );\n    return { startOffset, endOffset };\n  }\n  return undefined;\n}\n\nasync function getShardedData(\n  minishardIndexSource: MinishardIndexSource,\n  chunk: Chunk,\n  key: Uint64,\n  cancellationToken: CancellationToken,\n): Promise<{ shardInfo: ShardInfo; data: ArrayBuffer } | undefined> {\n  const { sharding } = minishardIndexSource;\n  const hashFunction = shardingHashFunctions.get(sharding.hash)!;\n  const hashCode = Uint64.rshift(new Uint64(), key, sharding.preshiftBits);\n  hashFunction(hashCode);\n  const shardAndMinishard = Uint64.lowMask(\n    new Uint64(),\n    sharding.minishardBits + sharding.shardBits,\n  );\n  Uint64.and(shardAndMinishard, shardAndMinishard, hashCode);\n  const getPriority = () => ({\n    priorityTier: chunk.priorityTier,\n    priority: chunk.priority,\n  });\n  const minishardIndex = await minishardIndexSource.getData(\n    shardAndMinishard,\n    getPriority,\n    cancellationToken,\n  );\n  if (minishardIndex === undefined) return undefined;\n  const minishardEntry = findMinishardEntry(minishardIndex, key);\n  if (minishardEntry === undefined) return undefined;\n  const { startOffset, endOffset } = minishardEntry;\n  let data = await fetchSpecialHttpByteRange(\n    minishardIndexSource.credentialsProvider,\n    minishardIndex.shardUrl,\n    startOffset,\n    endOffset,\n    cancellationToken,\n  );\n  if (minishardIndexSource.sharding.dataEncoding === DataEncoding.GZIP) {\n    data = (\n      await requestAsyncComputation(\n        decodeGzip,\n        cancellationToken,\n        [data],\n        new Uint8Array(data),\n      )\n    ).buffer;\n  }\n  return {\n    data,\n    shardInfo: { shardUrl: minishardIndex.shardUrl, offset: startOffset },\n  };\n}\n\nfunction getOrNotFoundError<T>(v: T | undefined) {\n  if (v === undefined) throw new Error(\"not found\");\n  return v;\n}\n\nconst chunkDecoders = new Map<VolumeChunkEncoding, ChunkDecoder>();\nchunkDecoders.set(VolumeChunkEncoding.RAW, decodeRawChunk);\nchunkDecoders.set(VolumeChunkEncoding.JPEG, decodeJpegChunk);\nchunkDecoders.set(\n  VolumeChunkEncoding.COMPRESSED_SEGMENTATION,\n  decodeCompressedSegmentationChunk,\n);\nchunkDecoders.set(VolumeChunkEncoding.COMPRESSO, decodeCompressoChunk);\nchunkDecoders.set(VolumeChunkEncoding.PNG, decodePngChunk);\n\n@registerSharedObject()\nexport class PrecomputedVolumeChunkSource extends WithParameters(\n  WithSharedCredentialsProviderCounterpart<SpecialProtocolCredentials>()(\n    VolumeChunkSource,\n  ),\n  VolumeChunkSourceParameters,\n) {\n  chunkDecoder = chunkDecoders.get(this.parameters.encoding)!;\n  private minishardIndexSource = getMinishardIndexDataSource(\n    this.chunkManager,\n    this.credentialsProvider,\n    this.parameters,\n  );\n\n  gridShape = (() => {\n    const gridShape = new Uint32Array(3);\n    const { upperVoxelBound, chunkDataSize } = this.spec;\n    for (let i = 0; i < 3; ++i) {\n      gridShape[i] = Math.ceil(upperVoxelBound[i] / chunkDataSize[i]);\n    }\n    return gridShape;\n  })();\n\n  async download(\n    chunk: VolumeChunk,\n    cancellationToken: CancellationToken,\n  ): Promise<void> {\n    const { parameters } = this;\n\n    const { minishardIndexSource } = this;\n    let response: ArrayBuffer | undefined;\n    if (minishardIndexSource === undefined) {\n      let url: string;\n      {\n        // chunkPosition must not be captured, since it will be invalidated by the next call to\n        // computeChunkBounds.\n        const chunkPosition = this.computeChunkBounds(chunk);\n        const chunkDataSize = chunk.chunkDataSize!;\n        url =\n          `${parameters.url}/${chunkPosition[0]}-${\n            chunkPosition[0] + chunkDataSize[0]\n          }_` +\n          `${chunkPosition[1]}-${chunkPosition[1] + chunkDataSize[1]}_` +\n          `${chunkPosition[2]}-${chunkPosition[2] + chunkDataSize[2]}`;\n      }\n      try {\n        response = await cancellableFetchSpecialOk(\n          this.credentialsProvider,\n          url,\n          {},\n          responseArrayBuffer,\n          cancellationToken,\n        );\n      } catch (e) {\n        if (isNotFoundError(e)) {\n          response = undefined;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      this.computeChunkBounds(chunk);\n      const { gridShape } = this;\n      const { chunkGridPosition } = chunk;\n      const xBits = Math.ceil(Math.log2(gridShape[0]));\n      const yBits = Math.ceil(Math.log2(gridShape[1]));\n      const zBits = Math.ceil(Math.log2(gridShape[2]));\n      const chunkIndex = encodeZIndexCompressed3d(\n        new Uint64(),\n        xBits,\n        yBits,\n        zBits,\n        chunkGridPosition[0],\n        chunkGridPosition[1],\n        chunkGridPosition[2],\n      );\n      response = (\n        await getShardedData(\n          minishardIndexSource,\n          chunk,\n          chunkIndex,\n          cancellationToken,\n        )\n      )?.data;\n    }\n    if (response !== undefined) {\n      await this.chunkDecoder(chunk, cancellationToken, response);\n    }\n  }\n}\n\nexport function decodeManifestChunk(chunk: ManifestChunk, response: any) {\n  return decodeJsonManifestChunk(chunk, response, \"fragments\");\n}\n\nexport function decodeFragmentChunk(\n  chunk: FragmentChunk,\n  response: ArrayBuffer,\n) {\n  const dv = new DataView(response);\n  const numVertices = dv.getUint32(0, true);\n  assignMeshFragmentData(\n    chunk,\n    decodeTriangleVertexPositionsAndIndices(\n      response,\n      Endianness.LITTLE,\n      /*vertexByteOffset=*/ 4,\n      numVertices,\n    ),\n  );\n}\n\n@registerSharedObject()\nexport class PrecomputedMeshSource extends WithParameters(\n  WithSharedCredentialsProviderCounterpart<SpecialProtocolCredentials>()(\n    MeshSource,\n  ),\n  MeshSourceParameters,\n) {\n  async download(chunk: ManifestChunk, cancellationToken: CancellationToken) {\n    const { parameters } = this;\n    const response = await cancellableFetchSpecialOk(\n      this.credentialsProvider,\n      `${parameters.url}/${chunk.objectId}:${parameters.lod}`,\n      {},\n      responseJson,\n      cancellationToken,\n    );\n    decodeManifestChunk(chunk, response);\n  }\n\n  async downloadFragment(\n    chunk: FragmentChunk,\n    cancellationToken: CancellationToken,\n  ) {\n    const { parameters } = this;\n    const response = await cancellableFetchSpecialOk(\n      this.credentialsProvider,\n      `${parameters.url}/${chunk.fragmentId}`,\n      {},\n      responseArrayBuffer,\n      cancellationToken,\n    );\n    decodeFragmentChunk(chunk, response);\n  }\n}\n\ninterface PrecomputedMultiscaleManifestChunk extends MultiscaleManifestChunk {\n  /**\n   * Byte offsets into data file for each octree node.\n   *\n   * Stored as Float64Array to allow 53-bit integer values.\n   */\n  offsets: Float64Array;\n  shardInfo?: ShardInfo;\n}\n\nfunction decodeMultiscaleManifestChunk(\n  chunk: PrecomputedMultiscaleManifestChunk,\n  response: ArrayBuffer,\n) {\n  if (response.byteLength < 28 || response.byteLength % 4 !== 0) {\n    throw new Error(`Invalid index file size: ${response.byteLength}`);\n  }\n  const dv = new DataView(response);\n  let offset = 0;\n  const chunkShape = vec3.fromValues(\n    dv.getFloat32(offset, /*littleEndian=*/ true),\n    dv.getFloat32(offset + 4, /*littleEndian=*/ true),\n    dv.getFloat32(offset + 8, /*littleEndian=*/ true),\n  );\n  offset += 12;\n  const gridOrigin = vec3.fromValues(\n    dv.getFloat32(offset, /*littleEndian=*/ true),\n    dv.getFloat32(offset + 4, /*littleEndian=*/ true),\n    dv.getFloat32(offset + 8, /*littleEndian=*/ true),\n  );\n  offset += 12;\n  const numStoredLods = dv.getUint32(offset, /*littleEndian=*/ true);\n  offset += 4;\n  if (response.byteLength < offset + (4 + 4 + 4 * 3) * numStoredLods) {\n    throw new Error(\n      `Invalid index file size for ${numStoredLods} lods: ${response.byteLength}`,\n    );\n  }\n  const storedLodScales = new Float32Array(response, offset, numStoredLods);\n  offset += 4 * numStoredLods;\n  convertEndian32(storedLodScales, Endianness.LITTLE);\n  const vertexOffsets = new Float32Array(response, offset, numStoredLods * 3);\n  convertEndian32(vertexOffsets, Endianness.LITTLE);\n  offset += 12 * numStoredLods;\n  const numFragmentsPerLod = new Uint32Array(response, offset, numStoredLods);\n  offset += 4 * numStoredLods;\n  convertEndian32(numFragmentsPerLod, Endianness.LITTLE);\n  const totalFragments = numFragmentsPerLod.reduce((a, b) => a + b);\n  if (response.byteLength !== offset + 16 * totalFragments) {\n    throw new Error(\n      `Invalid index file size for ${numStoredLods} lods and ` +\n        `${totalFragments} total fragments: ${response.byteLength}`,\n    );\n  }\n  const fragmentInfo = new Uint32Array(response, offset);\n  convertEndian32(fragmentInfo, Endianness.LITTLE);\n  const clipLowerBound = vec3.fromValues(\n    Number.POSITIVE_INFINITY,\n    Number.POSITIVE_INFINITY,\n    Number.POSITIVE_INFINITY,\n  );\n  const clipUpperBound = vec3.fromValues(\n    Number.NEGATIVE_INFINITY,\n    Number.NEGATIVE_INFINITY,\n    Number.NEGATIVE_INFINITY,\n  );\n  let numLods = Math.max(1, storedLodScales.length);\n  // Compute `clipLowerBound` and `clipUpperBound` and `numLods`.  Note that `numLods` is >=\n  // `storedLodScales.length`; it may contain additional levels since at the highest level the\n  // octree must be a single node.\n  {\n    let fragmentBase = 0;\n    for (let lodIndex = 0; lodIndex < numStoredLods; ++lodIndex) {\n      const numFragments = numFragmentsPerLod[lodIndex];\n      if (DEBUG_MULTISCALE_INDEX) {\n        for (let i = 1; i < numFragments; ++i) {\n          const x0 = fragmentInfo[fragmentBase + numFragments * 0 + (i - 1)];\n          const y0 = fragmentInfo[fragmentBase + numFragments * 1 + (i - 1)];\n          const z0 = fragmentInfo[fragmentBase + numFragments * 2 + (i - 1)];\n          const x1 = fragmentInfo[fragmentBase + numFragments * 0 + i];\n          const y1 = fragmentInfo[fragmentBase + numFragments * 1 + i];\n          const z1 = fragmentInfo[fragmentBase + numFragments * 2 + i];\n          if (!zorder3LessThan(x0, y0, z0, x1, y1, z1)) {\n            console.log(\n              \"Fragment index violates zorder constraint: \" +\n                `lod=${lodIndex}, ` +\n                `chunk ${i - 1} = [${x0},${y0},${z0}], ` +\n                `chunk ${i} = [${x1},${y1},${z1}]`,\n            );\n          }\n        }\n      }\n      for (let i = 0; i < 3; ++i) {\n        let upperBoundValue = Number.NEGATIVE_INFINITY;\n        let lowerBoundValue = Number.POSITIVE_INFINITY;\n        const base = fragmentBase + numFragments * i;\n        for (let j = 0; j < numFragments; ++j) {\n          const v = fragmentInfo[base + j];\n          upperBoundValue = Math.max(upperBoundValue, v);\n          lowerBoundValue = Math.min(lowerBoundValue, v);\n        }\n        if (numFragments !== 0) {\n          while (\n            upperBoundValue >>> (numLods - lodIndex - 1) !==\n            lowerBoundValue >>> (numLods - lodIndex - 1)\n          ) {\n            ++numLods;\n          }\n          if (lodIndex === 0) {\n            clipLowerBound[i] = Math.min(\n              clipLowerBound[i],\n              (1 << lodIndex) * lowerBoundValue,\n            );\n            clipUpperBound[i] = Math.max(\n              clipUpperBound[i],\n              (1 << lodIndex) * (upperBoundValue + 1),\n            );\n          }\n        }\n      }\n      fragmentBase += numFragments * 4;\n    }\n  }\n\n  // Compute upper bound on number of nodes that will be in the octree, so that we can allocate a\n  // sufficiently large buffer without having to worry about resizing.\n  let maxFragments = 0;\n  {\n    let prevNumFragments = 0;\n    let prevLodIndex = 0;\n    for (let lodIndex = 0; lodIndex < numStoredLods; ++lodIndex) {\n      const numFragments = numFragmentsPerLod[lodIndex];\n      maxFragments += prevNumFragments * (lodIndex - prevLodIndex);\n      prevLodIndex = lodIndex;\n      prevNumFragments = numFragments;\n      maxFragments += numFragments;\n    }\n    maxFragments += (numLods - 1 - prevLodIndex) * prevNumFragments;\n  }\n  const octreeTemp = new Uint32Array(5 * maxFragments);\n  const offsetsTemp = new Float64Array(maxFragments + 1);\n  let octree: Uint32Array;\n  {\n    let priorStart = 0;\n    let baseRow = 0;\n    let dataOffset = 0;\n    let fragmentBase = 0;\n    for (let lodIndex = 0; lodIndex < numStoredLods; ++lodIndex) {\n      const numFragments = numFragmentsPerLod[lodIndex];\n      // Copy in indices\n      for (let j = 0; j < numFragments; ++j) {\n        for (let i = 0; i < 3; ++i) {\n          octreeTemp[5 * (baseRow + j) + i] =\n            fragmentInfo[fragmentBase + j + i * numFragments];\n        }\n        const dataSize = fragmentInfo[fragmentBase + j + 3 * numFragments];\n        dataOffset += dataSize;\n        offsetsTemp[baseRow + j + 1] = dataOffset;\n        if (dataSize === 0) {\n          // Mark node as empty.\n          octreeTemp[5 * (baseRow + j) + 4] = 0x80000000;\n        }\n      }\n\n      fragmentBase += 4 * numFragments;\n\n      if (lodIndex !== 0) {\n        // Connect with prior level\n        computeOctreeChildOffsets(\n          octreeTemp,\n          priorStart,\n          baseRow,\n          baseRow + numFragments,\n        );\n      }\n\n      priorStart = baseRow;\n      baseRow += numFragments;\n      while (\n        lodIndex + 1 < numLods &&\n        (lodIndex + 1 >= storedLodScales.length ||\n          storedLodScales[lodIndex + 1] === 0)\n      ) {\n        const curEnd = generateHigherOctreeLevel(\n          octreeTemp,\n          priorStart,\n          baseRow,\n        );\n        offsetsTemp.fill(dataOffset, baseRow + 1, curEnd + 1);\n        priorStart = baseRow;\n        baseRow = curEnd;\n        ++lodIndex;\n      }\n    }\n    octree = octreeTemp.slice(0, 5 * baseRow);\n    chunk.offsets = offsetsTemp.slice(0, baseRow + 1);\n  }\n  const source = chunk.source! as PrecomputedMultiscaleMeshSource;\n  const { lodScaleMultiplier } = source.parameters.metadata;\n  const lodScales = new Float32Array(numLods);\n  lodScales.set(storedLodScales, 0);\n  for (let i = 0; i < storedLodScales.length; ++i) {\n    lodScales[i] *= lodScaleMultiplier;\n  }\n  chunk.manifest = {\n    chunkShape,\n    chunkGridSpatialOrigin: gridOrigin,\n    clipLowerBound: vec3.add(\n      clipLowerBound,\n      gridOrigin,\n      vec3.multiply(clipLowerBound, clipLowerBound, chunkShape),\n    ),\n    clipUpperBound: vec3.add(\n      clipUpperBound,\n      gridOrigin,\n      vec3.multiply(clipUpperBound, clipUpperBound, chunkShape),\n    ),\n    octree,\n    lodScales,\n    vertexOffsets,\n  };\n}\n\nasync function decodeMultiscaleFragmentChunk(\n  chunk: MultiscaleFragmentChunk,\n  response: ArrayBuffer,\n) {\n  const { lod } = chunk;\n  const source = chunk.manifestChunk!\n    .source! as PrecomputedMultiscaleMeshSource;\n  const rawMesh = await decodeDracoPartitioned(\n    new Uint8Array(response),\n    source.parameters.metadata.vertexQuantizationBits,\n    lod !== 0,\n  );\n  assignMultiscaleMeshFragmentData(\n    chunk,\n    rawMesh,\n    source.format.vertexPositionFormat,\n  );\n}\n\n@registerSharedObject() //\nexport class PrecomputedMultiscaleMeshSource extends WithParameters(\n  WithSharedCredentialsProviderCounterpart<SpecialProtocolCredentials>()(\n    MultiscaleMeshSource,\n  ),\n  MultiscaleMeshSourceParameters,\n) {\n  private minishardIndexSource = getMinishardIndexDataSource(\n    this.chunkManager,\n    this.credentialsProvider,\n    { url: this.parameters.url, sharding: this.parameters.metadata.sharding },\n  );\n\n  async download(\n    chunk: PrecomputedMultiscaleManifestChunk,\n    cancellationToken: CancellationToken,\n  ): Promise<void> {\n    const { parameters, minishardIndexSource } = this;\n    let data: ArrayBuffer;\n    if (minishardIndexSource === undefined) {\n      data = await cancellableFetchSpecialOk(\n        this.credentialsProvider,\n        `${parameters.url}/${chunk.objectId}.index`,\n        {},\n        responseArrayBuffer,\n        cancellationToken,\n      );\n    } else {\n      ({ data, shardInfo: chunk.shardInfo } = getOrNotFoundError(\n        await getShardedData(\n          minishardIndexSource,\n          chunk,\n          chunk.objectId,\n          cancellationToken,\n        ),\n      ));\n    }\n    decodeMultiscaleManifestChunk(chunk, data);\n  }\n\n  async downloadFragment(\n    chunk: MultiscaleFragmentChunk,\n    cancellationToken: CancellationToken,\n  ): Promise<void> {\n    const { parameters } = this;\n    const manifestChunk =\n      chunk.manifestChunk! as PrecomputedMultiscaleManifestChunk;\n    const chunkIndex = chunk.chunkIndex;\n    const { shardInfo, offsets } = manifestChunk;\n    const startOffset = offsets[chunkIndex];\n    const endOffset = offsets[chunkIndex + 1];\n    let requestUrl: string;\n    let adjustedStartOffset: Uint64 | number;\n    let adjustedEndOffset: Uint64 | number;\n    if (shardInfo !== undefined) {\n      requestUrl = shardInfo.shardUrl;\n      const fullDataSize = offsets[offsets.length - 1];\n      let startLow = shardInfo.offset.low - fullDataSize + startOffset;\n      let startHigh = shardInfo.offset.high;\n      let endLow = startLow + endOffset - startOffset;\n      let endHigh = startHigh;\n      while (startLow < 0) {\n        startLow += 4294967296;\n        startHigh -= 1;\n      }\n      while (endLow < 0) {\n        endLow += 4294967296;\n        endHigh -= 1;\n      }\n      while (endLow > 4294967296) {\n        endLow -= 4294967296;\n        endHigh += 1;\n      }\n      adjustedStartOffset = new Uint64(startLow, startHigh);\n      adjustedEndOffset = new Uint64(endLow, endHigh);\n    } else {\n      requestUrl = `${parameters.url}/${manifestChunk.objectId}`;\n      adjustedStartOffset = startOffset;\n      adjustedEndOffset = endOffset;\n    }\n    const response = await fetchSpecialHttpByteRange(\n      this.credentialsProvider,\n      requestUrl,\n      adjustedStartOffset,\n      adjustedEndOffset,\n      cancellationToken,\n    );\n    await decodeMultiscaleFragmentChunk(chunk, response);\n  }\n}\n\nasync function fetchByUint64(\n  credentialsProvider: SpecialProtocolCredentialsProvider,\n  url: string,\n  chunk: Chunk,\n  minishardIndexSource: MinishardIndexSource | undefined,\n  id: Uint64,\n  cancellationToken: CancellationToken,\n) {\n  if (minishardIndexSource === undefined) {\n    try {\n      return await cancellableFetchSpecialOk(\n        credentialsProvider,\n        `${url}/${id}`,\n        {},\n        responseArrayBuffer,\n        cancellationToken,\n      );\n    } catch (e) {\n      if (isNotFoundError(e)) return undefined;\n      throw e;\n    }\n  }\n  const result = await getShardedData(\n    minishardIndexSource,\n    chunk,\n    id,\n    cancellationToken,\n  );\n  if (result === undefined) return undefined;\n  return result.data;\n}\n\n@registerSharedObject() //\nexport class PrecomputedSkeletonSource extends WithParameters(\n  WithSharedCredentialsProviderCounterpart<SpecialProtocolCredentials>()(\n    SkeletonSource,\n  ),\n  SkeletonSourceParameters,\n) {\n  private minishardIndexSource = getMinishardIndexDataSource(\n    this.chunkManager,\n    this.credentialsProvider,\n    { url: this.parameters.url, sharding: this.parameters.metadata.sharding },\n  );\n  async download(chunk: SkeletonChunk, cancellationToken: CancellationToken) {\n    const { parameters } = this;\n    const response = getOrNotFoundError(\n      await fetchByUint64(\n        this.credentialsProvider,\n        parameters.url,\n        chunk,\n        this.minishardIndexSource,\n        chunk.objectId,\n        cancellationToken,\n      ),\n    );\n    decodeSkeletonChunk(chunk, response, parameters.metadata.vertexAttributes);\n  }\n}\n\nfunction parseAnnotations(\n  buffer: ArrayBuffer,\n  parameters: AnnotationSourceParameters,\n  propertySerializer: AnnotationPropertySerializer,\n): AnnotationGeometryData {\n  const dv = new DataView(buffer);\n  if (buffer.byteLength <= 8) throw new Error(\"Expected at least 8 bytes\");\n  const countLow = dv.getUint32(0, /*littleEndian=*/ true);\n  const countHigh = dv.getUint32(4, /*littleEndian=*/ true);\n  if (countHigh !== 0) throw new Error(\"Annotation count too high\");\n  const numBytes = propertySerializer.serializedBytes;\n  const expectedBytes = 8 + (numBytes + 8) * countLow;\n  if (buffer.byteLength !== expectedBytes) {\n    throw new Error(\n      `Expected ${expectedBytes} bytes, but received: ${buffer.byteLength} bytes`,\n    );\n  }\n  const idOffset = 8 + numBytes * countLow;\n  const id = new Uint64();\n  const ids = new Array<string>(countLow);\n  for (let i = 0; i < countLow; ++i) {\n    id.low = dv.getUint32(idOffset + i * 8, /*littleEndian=*/ true);\n    id.high = dv.getUint32(idOffset + i * 8 + 4, /*littleEndian=*/ true);\n    ids[i] = id.toString();\n  }\n  const geometryData = new AnnotationGeometryData();\n  const origData = new Uint8Array(buffer, 8, numBytes * countLow);\n  let data: Uint8Array;\n  const { propertyGroupBytes } = propertySerializer;\n  if (propertyGroupBytes.length > 1) {\n    // Need to transpose the property data.\n    data = new Uint8Array(origData.length);\n\n    let origOffset = 0;\n    let groupOffset = 0;\n    for (\n      let groupIndex = 0;\n      groupIndex < propertyGroupBytes.length;\n      ++groupIndex\n    ) {\n      const groupBytesPerAnnotation = propertyGroupBytes[groupIndex];\n      for (\n        let annotationIndex = 0;\n        annotationIndex < countLow;\n        ++annotationIndex\n      ) {\n        const origBase = origOffset + annotationIndex * numBytes;\n        const newBase = groupOffset + annotationIndex * groupBytesPerAnnotation;\n        for (let i = 0; i < groupBytesPerAnnotation; ++i) {\n          data[newBase + i] = origData[origBase + i];\n        }\n      }\n      origOffset += groupBytesPerAnnotation;\n      groupOffset += groupBytesPerAnnotation * countLow;\n    }\n  } else {\n    data = origData;\n  }\n  geometryData.data = data;\n  // FIXME: convert endian in order to support big endian platforms\n  const typeToOffset = (geometryData.typeToOffset = new Array<number>(\n    annotationTypes.length,\n  ));\n  typeToOffset.fill(0);\n  typeToOffset[parameters.type] = 0;\n  const typeToIds = (geometryData.typeToIds = new Array<string[]>(\n    annotationTypes.length,\n  ));\n  const typeToIdMaps = (geometryData.typeToIdMaps = new Array<\n    Map<string, number>\n  >(annotationTypes.length));\n  typeToIds.fill([]);\n  typeToIds[parameters.type] = ids;\n  typeToIdMaps.fill(new Map());\n  typeToIdMaps[parameters.type] = new Map(ids.map((id, i) => [id, i]));\n  return geometryData;\n}\n\nfunction parseSingleAnnotation(\n  buffer: ArrayBuffer,\n  parameters: AnnotationSourceParameters,\n  propertySerializer: AnnotationPropertySerializer,\n  id: string,\n): Annotation {\n  const handler = annotationTypeHandlers[parameters.type];\n  const baseNumBytes = propertySerializer.serializedBytes;\n  const numRelationships = parameters.relationships.length;\n  const minNumBytes = baseNumBytes + 4 * numRelationships;\n  if (buffer.byteLength < minNumBytes) {\n    throw new Error(\n      `Expected at least ${minNumBytes} bytes, but received: ${buffer.byteLength}`,\n    );\n  }\n  const dv = new DataView(buffer);\n  const annotation = handler.deserialize(\n    dv,\n    0,\n    /*isLittleEndian=*/ true,\n    parameters.rank,\n    id,\n  );\n  propertySerializer.deserialize(\n    dv,\n    /*offset=*/ 0,\n    /*annotationIndex=*/ 0,\n    /*annotationCount=*/ 1,\n    /*isLittleEndian=*/ true,\n    (annotation.properties = new Array(parameters.properties.length)),\n  );\n  let offset = baseNumBytes;\n  const relatedSegments: Uint64[][] = (annotation.relatedSegments = []);\n  relatedSegments.length = numRelationships;\n  for (let i = 0; i < numRelationships; ++i) {\n    const count = dv.getUint32(offset, /*littleEndian=*/ true);\n    if (buffer.byteLength < minNumBytes + count * 8) {\n      throw new Error(\n        `Expected at least ${minNumBytes} bytes, but received: ${buffer.byteLength}`,\n      );\n    }\n    offset += 4;\n    const segments: Uint64[] = (relatedSegments[i] = []);\n    for (let j = 0; j < count; ++j) {\n      segments[j] = new Uint64(\n        dv.getUint32(offset, /*littleEndian=*/ true),\n        dv.getUint32(offset + 4, /*littleEndian=*/ true),\n      );\n      offset += 8;\n    }\n  }\n  if (offset !== buffer.byteLength) {\n    throw new Error(\n      `Expected ${offset} bytes, but received: ${buffer.byteLength}`,\n    );\n  }\n  return annotation;\n}\n\n@registerSharedObject() //\nexport class PrecomputedAnnotationSpatialIndexSourceBackend extends WithParameters(\n  WithSharedCredentialsProviderCounterpart<SpecialProtocolCredentials>()(\n    AnnotationGeometryChunkSourceBackend,\n  ),\n  AnnotationSpatialIndexSourceParameters,\n) {\n  private minishardIndexSource = getMinishardIndexDataSource(\n    this.chunkManager,\n    this.credentialsProvider,\n    this.parameters,\n  );\n  parent: PrecomputedAnnotationSourceBackend;\n  async download(\n    chunk: AnnotationGeometryChunk,\n    cancellationToken: CancellationToken,\n  ) {\n    const { parameters } = this;\n\n    const { minishardIndexSource } = this;\n    const { parent } = this;\n    let response: ArrayBuffer | undefined;\n    const { chunkGridPosition } = chunk;\n    if (minishardIndexSource === undefined) {\n      const url = `${parameters.url}/${chunkGridPosition.join(\"_\")}`;\n      try {\n        response = await cancellableFetchSpecialOk(\n          this.credentialsProvider,\n          url,\n          {},\n          responseArrayBuffer,\n          cancellationToken,\n        );\n      } catch (e) {\n        if (!isNotFoundError(e)) throw e;\n      }\n    } else {\n      const { upperChunkBound } = this.spec;\n      const { chunkGridPosition } = chunk;\n      const chunkIndex = encodeZIndexCompressed(\n        new Uint64(),\n        chunkGridPosition,\n        upperChunkBound,\n      );\n      const result = await getShardedData(\n        minishardIndexSource,\n        chunk,\n        chunkIndex,\n        cancellationToken,\n      );\n      if (result !== undefined) response = result.data;\n    }\n    if (response !== undefined) {\n      chunk.data = parseAnnotations(\n        response,\n        parent.parameters,\n        parent.annotationPropertySerializer,\n      );\n    }\n  }\n}\n\n@registerSharedObject() //\nexport class PrecomputedAnnotationSourceBackend extends WithParameters(\n  WithSharedCredentialsProviderCounterpart<SpecialProtocolCredentials>()(\n    AnnotationSource,\n  ),\n  AnnotationSourceParameters,\n) {\n  private byIdMinishardIndexSource = getMinishardIndexDataSource(\n    this.chunkManager,\n    this.credentialsProvider,\n    this.parameters.byId,\n  );\n  private relationshipIndexSource = this.parameters.relationships.map((x) =>\n    getMinishardIndexDataSource(this.chunkManager, this.credentialsProvider, x),\n  );\n  annotationPropertySerializer = new AnnotationPropertySerializer(\n    this.parameters.rank,\n    annotationTypeHandlers[this.parameters.type].serializedBytes(\n      this.parameters.rank,\n    ),\n    this.parameters.properties,\n  );\n\n  async downloadSegmentFilteredGeometry(\n    chunk: AnnotationSubsetGeometryChunk,\n    relationshipIndex: number,\n    cancellationToken: CancellationToken,\n  ) {\n    const { parameters } = this;\n    const response = await fetchByUint64(\n      this.credentialsProvider,\n      parameters.relationships[relationshipIndex].url,\n      chunk,\n      this.relationshipIndexSource[relationshipIndex],\n      chunk.objectId,\n      cancellationToken,\n    );\n    if (response !== undefined) {\n      chunk.data = parseAnnotations(\n        response,\n        this.parameters,\n        this.annotationPropertySerializer,\n      );\n    }\n  }\n\n  async downloadMetadata(\n    chunk: AnnotationMetadataChunk,\n    cancellationToken: CancellationToken,\n  ) {\n    const { parameters } = this;\n    const id = Uint64.parseString(chunk.key!);\n    const response = await fetchByUint64(\n      this.credentialsProvider,\n      parameters.byId.url,\n      chunk,\n      this.byIdMinishardIndexSource,\n      id,\n      cancellationToken,\n    );\n    if (response === undefined) {\n      chunk.annotation = null;\n    } else {\n      chunk.annotation = parseSingleAnnotation(\n        response,\n        this.parameters,\n        this.annotationPropertySerializer,\n        chunk.key!,\n      );\n    }\n  }\n}\n\n@registerSharedObject()\nexport class PrecomputedIndexedSegmentPropertySourceBackend extends WithParameters(\n  WithSharedCredentialsProviderCounterpart<SpecialProtocolCredentials>()(\n    IndexedSegmentPropertySourceBackend,\n  ),\n  IndexedSegmentPropertySourceParameters,\n) {\n  minishardIndexSource = getMinishardIndexDataSource(\n    this.chunkManager,\n    this.credentialsProvider,\n    this.parameters,\n  );\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debounce } from \"lodash-es\";\nimport {\n  WithParameters,\n  withChunkManager,\n  Chunk,\n  ChunkSource,\n} from \"#src/chunk_manager/backend.js\";\nimport { ChunkPriorityTier, ChunkState } from \"#src/chunk_manager/base.js\";\nimport { WithSharedCredentialsProviderCounterpart } from \"#src/credentials_provider/shared_counterpart.js\";\nimport type { ChunkedGraphChunkSpecification } from \"#src/datasource/graphene/base.js\";\nimport {\n  getGrapheneFragmentKey,\n  GRAPHENE_MESH_NEW_SEGMENT_RPC_ID,\n  responseIdentity,\n  ChunkedGraphSourceParameters,\n  MeshSourceParameters,\n  CHUNKED_GRAPH_LAYER_RPC_ID,\n  CHUNKED_GRAPH_RENDER_LAYER_UPDATE_SOURCES_RPC_ID,\n  RENDER_RATIO_LIMIT,\n  isBaseSegmentId,\n} from \"#src/datasource/graphene/base.js\";\nimport { decodeManifestChunk } from \"#src/datasource/precomputed/backend.js\";\nimport type { FragmentChunk, ManifestChunk } from \"#src/mesh/backend.js\";\nimport { assignMeshFragmentData, MeshSource } from \"#src/mesh/backend.js\";\nimport { decodeDraco } from \"#src/mesh/draco/index.js\";\nimport type { DisplayDimensionRenderInfo } from \"#src/navigation_state.js\";\nimport type {\n  RenderedViewBackend,\n  RenderLayerBackendAttachment,\n} from \"#src/render_layer_backend.js\";\nimport { RenderLayerBackend } from \"#src/render_layer_backend.js\";\nimport { withSegmentationLayerBackendState } from \"#src/segmentation_display_state/backend.js\";\nimport { forEachVisibleSegment } from \"#src/segmentation_display_state/base.js\";\nimport type { SharedWatchableValue } from \"#src/shared_watchable_value.js\";\nimport type { SliceViewChunkSourceBackend } from \"#src/sliceview/backend.js\";\nimport { deserializeTransformedSources } from \"#src/sliceview/backend.js\";\nimport type {\n  TransformedSource,\n  SliceViewProjectionParameters,\n} from \"#src/sliceview/base.js\";\nimport {\n  forEachPlaneIntersectingVolumetricChunk,\n  getNormalizedChunkLayout,\n} from \"#src/sliceview/base.js\";\nimport { computeChunkBounds } from \"#src/sliceview/volume/backend.js\";\nimport { Uint64Set } from \"#src/uint64_set.js\";\nimport { fetchSpecialHttpByteRange } from \"#src/util/byte_range_http_requests.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport { vec3, vec3Key } from \"#src/util/geom.js\";\nimport { responseArrayBuffer, responseJson } from \"#src/util/http_request.js\";\nimport type {\n  SpecialProtocolCredentials,\n  SpecialProtocolCredentialsProvider,\n} from \"#src/util/special_protocol_request.js\";\nimport { cancellableFetchSpecialOk } from \"#src/util/special_protocol_request.js\";\nimport { Uint64 } from \"#src/util/uint64.js\";\nimport {\n  getBasePriority,\n  getPriorityTier,\n  withSharedVisibility,\n} from \"#src/visibility_priority/backend.js\";\nimport type { RPC } from \"#src/worker_rpc.js\";\nimport { registerSharedObject, registerRPC } from \"#src/worker_rpc.js\";\n\nfunction getVerifiedFragmentPromise(\n  credentialsProvider: SpecialProtocolCredentialsProvider,\n  chunk: FragmentChunk,\n  parameters: MeshSourceParameters,\n  cancellationToken: CancellationToken,\n) {\n  if (chunk.fragmentId && chunk.fragmentId.charAt(0) === \"~\") {\n    const parts = chunk.fragmentId.substr(1).split(\":\");\n    const startOffset = Number(parts[1]);\n    const endOffset = startOffset + Number(parts[2]);\n    return fetchSpecialHttpByteRange(\n      credentialsProvider,\n      `${parameters.fragmentUrl}/initial/${parts[0]}`,\n      startOffset,\n      endOffset,\n      cancellationToken,\n    );\n  }\n  return cancellableFetchSpecialOk(\n    credentialsProvider,\n    `${parameters.fragmentUrl}/dynamic/${chunk.fragmentId}`,\n    {},\n    responseArrayBuffer,\n    cancellationToken,\n  );\n}\n\nfunction getFragmentDownloadPromise(\n  credentialsProvider: SpecialProtocolCredentialsProvider,\n  chunk: FragmentChunk,\n  parameters: MeshSourceParameters,\n  cancellationToken: CancellationToken,\n) {\n  let fragmentDownloadPromise;\n  if (parameters.sharding) {\n    fragmentDownloadPromise = getVerifiedFragmentPromise(\n      credentialsProvider,\n      chunk,\n      parameters,\n      cancellationToken,\n    );\n  } else {\n    fragmentDownloadPromise = cancellableFetchSpecialOk(\n      credentialsProvider,\n      `${parameters.fragmentUrl}/${chunk.fragmentId}`,\n      {},\n      responseArrayBuffer,\n      cancellationToken,\n    );\n  }\n  return fragmentDownloadPromise;\n}\n\nasync function decodeDracoFragmentChunk(\n  chunk: FragmentChunk,\n  response: ArrayBuffer,\n) {\n  const rawMesh = await decodeDraco(new Uint8Array(response));\n  assignMeshFragmentData(chunk, rawMesh);\n}\n\n@registerSharedObject()\nexport class GrapheneMeshSource extends WithParameters(\n  WithSharedCredentialsProviderCounterpart<SpecialProtocolCredentials>()(\n    MeshSource,\n  ),\n  MeshSourceParameters,\n) {\n  manifestRequestCount = new Map<string, number>();\n  newSegments = new Uint64Set();\n\n  addNewSegment(segment: Uint64) {\n    const { newSegments } = this;\n    newSegments.add(segment);\n    const TEN_MINUTES = 1000 * 60 * 10;\n    setTimeout(() => {\n      newSegments.delete(segment);\n    }, TEN_MINUTES);\n  }\n\n  async download(chunk: ManifestChunk, cancellationToken: CancellationToken) {\n    const { parameters, newSegments, manifestRequestCount } = this;\n    if (isBaseSegmentId(chunk.objectId, parameters.nBitsForLayerId)) {\n      return decodeManifestChunk(chunk, { fragments: [] });\n    }\n    const url = `${parameters.manifestUrl}/manifest`;\n    const manifestUrl = `${url}/${chunk.objectId}:${parameters.lod}?verify=1&prepend_seg_ids=1`;\n    await cancellableFetchSpecialOk(\n      this.credentialsProvider,\n      manifestUrl,\n      {},\n      responseJson,\n      cancellationToken,\n    ).then((response) => {\n      const chunkIdentifier = manifestUrl;\n      if (newSegments.has(chunk.objectId)) {\n        const requestCount =\n          (manifestRequestCount.get(chunkIdentifier) || 0) + 1;\n        manifestRequestCount.set(chunkIdentifier, requestCount);\n        setTimeout(\n          () => {\n            this.chunkManager.queueManager.updateChunkState(\n              chunk,\n              ChunkState.QUEUED,\n            );\n          },\n          2 ** requestCount * 1000,\n        );\n      } else {\n        manifestRequestCount.delete(chunkIdentifier);\n      }\n      return decodeManifestChunk(chunk, response);\n    });\n  }\n\n  async downloadFragment(\n    chunk: FragmentChunk,\n    cancellationToken: CancellationToken,\n  ) {\n    const { parameters } = this;\n    const response = await getFragmentDownloadPromise(\n      undefined,\n      chunk,\n      parameters,\n      cancellationToken,\n    );\n    await decodeDracoFragmentChunk(chunk, response);\n  }\n\n  getFragmentKey(objectKey: string | null, fragmentId: string) {\n    objectKey;\n    return getGrapheneFragmentKey(fragmentId);\n  }\n}\n\nexport class ChunkedGraphChunk extends Chunk {\n  chunkGridPosition: Float32Array;\n  source: GrapheneChunkedGraphChunkSource | null = null;\n  segment: Uint64;\n  leaves: Uint64[] = [];\n  chunkDataSize: Uint32Array | null;\n\n  initializeVolumeChunk(key: string, chunkGridPosition: Float32Array) {\n    super.initialize(key);\n    this.chunkGridPosition = Float32Array.from(chunkGridPosition);\n  }\n\n  initializeChunkedGraphChunk(\n    key: string,\n    chunkGridPosition: Float32Array,\n    segment: Uint64,\n  ) {\n    this.initializeVolumeChunk(key, chunkGridPosition);\n    this.chunkDataSize = null;\n    this.systemMemoryBytes = 16;\n    this.gpuMemoryBytes = 0;\n    this.segment = segment;\n  }\n\n  downloadSucceeded() {\n    this.systemMemoryBytes = 16; // this.segment\n    this.systemMemoryBytes += 16 * this.leaves.length;\n    this.queueManager.updateChunkState(this, ChunkState.SYSTEM_MEMORY_WORKER);\n    if (this.priorityTier < ChunkPriorityTier.RECENT) {\n      this.source!.chunkManager.scheduleUpdateChunkPriorities();\n    }\n    super.downloadSucceeded();\n  }\n\n  freeSystemMemory() {\n    this.leaves = [];\n  }\n}\n\nfunction decodeChunkedGraphChunk(leaves: string[]) {\n  const final: Uint64[] = new Array(leaves.length);\n  for (let i = 0; i < final.length; ++i) {\n    final[i] = Uint64.parseString(leaves[i]);\n  }\n  return final;\n}\n\n@registerSharedObject()\nexport class GrapheneChunkedGraphChunkSource extends WithParameters(\n  WithSharedCredentialsProviderCounterpart<SpecialProtocolCredentials>()(\n    ChunkSource,\n  ),\n  ChunkedGraphSourceParameters,\n) {\n  spec: ChunkedGraphChunkSpecification;\n  chunks: Map<string, ChunkedGraphChunk>;\n  tempChunkDataSize: Uint32Array;\n  tempChunkPosition: Float32Array;\n\n  constructor(rpc: RPC, options: any) {\n    super(rpc, options);\n    this.spec = options.spec;\n    const rank = this.spec.rank;\n    this.tempChunkDataSize = new Uint32Array(rank);\n    this.tempChunkPosition = new Float32Array(rank);\n  }\n\n  async download(\n    chunk: ChunkedGraphChunk,\n    cancellationToken: CancellationToken,\n  ): Promise<void> {\n    const { parameters } = this;\n    const chunkPosition = this.computeChunkBounds(chunk);\n    const chunkDataSize = chunk.chunkDataSize!;\n    const bounds =\n      `${chunkPosition[0]}-${chunkPosition[0] + chunkDataSize[0]}_` +\n      `${chunkPosition[1]}-${chunkPosition[1] + chunkDataSize[1]}_` +\n      `${chunkPosition[2]}-${chunkPosition[2] + chunkDataSize[2]}`;\n\n    const request = cancellableFetchSpecialOk(\n      this.credentialsProvider,\n      `${parameters.url}/${chunk.segment}/leaves?int64_as_str=1&bounds=${bounds}`,\n      {},\n      responseIdentity,\n      cancellationToken,\n    );\n    await this.withErrorMessage(\n      request,\n      `Fetching leaves of segment ${chunk.segment} in region ${bounds}: `,\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        chunk.leaves = decodeChunkedGraphChunk(res.leaf_ids);\n      })\n      .catch((err) => console.error(err));\n  }\n\n  getChunk(chunkGridPosition: Float32Array, segment: Uint64) {\n    const key = `${vec3Key(chunkGridPosition)}-${segment}`;\n    let chunk = <ChunkedGraphChunk>this.chunks.get(key);\n\n    if (chunk === undefined) {\n      chunk = this.getNewChunk_(ChunkedGraphChunk);\n      chunk.initializeChunkedGraphChunk(key, chunkGridPosition, segment);\n      this.addChunk(chunk);\n    }\n    return chunk;\n  }\n\n  computeChunkBounds(chunk: ChunkedGraphChunk) {\n    return computeChunkBounds(this, chunk);\n  }\n\n  async withErrorMessage(\n    promise: Promise<Response>,\n    errorPrefix: string,\n  ): Promise<Response> {\n    const response = await promise;\n    if (response.ok) {\n      return response;\n    }\n    let msg: string;\n    try {\n      msg = (await response.json()).message;\n    } catch {\n      msg = await response.text();\n    }\n    throw new Error(`[${response.status}] ${errorPrefix}${msg}`);\n  }\n}\n\ninterface ChunkedGraphRenderLayerAttachmentState {\n  displayDimensionRenderInfo: DisplayDimensionRenderInfo;\n  transformedSource?: TransformedSource<\n    ChunkedGraphLayer,\n    GrapheneChunkedGraphChunkSource\n  >;\n}\n\nconst tempChunkPosition = vec3.create();\nconst tempCenter = vec3.create();\nconst tempChunkSize = vec3.create();\n\n@registerSharedObject(CHUNKED_GRAPH_LAYER_RPC_ID)\nexport class ChunkedGraphLayer extends withSegmentationLayerBackendState(\n  withSharedVisibility(withChunkManager(RenderLayerBackend)),\n) {\n  source: GrapheneChunkedGraphChunkSource;\n  localPosition: SharedWatchableValue<Float32Array>;\n  leafRequestsActive: SharedWatchableValue<boolean>;\n  nBitsForLayerId: SharedWatchableValue<number>;\n\n  constructor(rpc: RPC, options: any) {\n    super(rpc, options);\n    this.source = this.registerDisposer(\n      rpc.getRef<GrapheneChunkedGraphChunkSource>(options.source),\n    );\n    this.localPosition = rpc.get(options.localPosition);\n    this.leafRequestsActive = rpc.get(options.leafRequestsActive);\n    this.nBitsForLayerId = rpc.get(options.nBitsForLayerId);\n\n    this.registerDisposer(\n      this.chunkManager.recomputeChunkPriorities.add(() => {\n        this.updateChunkPriorities();\n        this.debouncedupdateDisplayState();\n      }),\n    );\n  }\n\n  attach(\n    attachment: RenderLayerBackendAttachment<\n      RenderedViewBackend,\n      ChunkedGraphRenderLayerAttachmentState\n    >,\n  ): void {\n    const scheduleUpdateChunkPriorities = () =>\n      this.chunkManager.scheduleUpdateChunkPriorities();\n    const { view } = attachment;\n    attachment.registerDisposer(scheduleUpdateChunkPriorities);\n    attachment.registerDisposer(\n      view.projectionParameters.changed.add(scheduleUpdateChunkPriorities),\n    );\n    attachment.registerDisposer(\n      view.visibility.changed.add(scheduleUpdateChunkPriorities),\n    );\n    attachment.state = {\n      displayDimensionRenderInfo:\n        view.projectionParameters.value.displayDimensionRenderInfo,\n    };\n  }\n\n  // Used for the sliceview to set a limit on when to\n  // make get_leaves to the ChunkedGraph\n  get renderRatioLimit() {\n    return RENDER_RATIO_LIMIT;\n  }\n\n  private updateChunkPriorities() {\n    const { source, chunkManager } = this;\n    chunkManager.registerLayer(this);\n    for (const attachment of this.attachments.values()) {\n      const { view } = attachment;\n      const visibility = view.visibility.value;\n      if (visibility === Number.NEGATIVE_INFINITY) {\n        continue;\n      }\n\n      const attachmentState =\n        attachment.state! as ChunkedGraphRenderLayerAttachmentState;\n      const { transformedSource: tsource } = attachmentState;\n      const projectionParameters = view.projectionParameters\n        .value as SliceViewProjectionParameters;\n\n      if (!tsource) {\n        continue;\n      }\n\n      const pixelSize = projectionParameters.pixelSize * 1.1;\n      const smallestVoxelSize = tsource.effectiveVoxelSize;\n      this.leafRequestsActive.value =\n        this.renderRatioLimit >= pixelSize / Math.min(...smallestVoxelSize);\n      if (!this.leafRequestsActive.value) {\n        continue;\n      }\n\n      const priorityTier = getPriorityTier(visibility);\n      const basePriority = getBasePriority(visibility);\n\n      const { chunkLayout } = tsource;\n      const { size, finiteRank } = chunkLayout;\n\n      const chunkSize = tempChunkSize;\n      const localCenter = tempCenter;\n      vec3.copy(chunkSize, size);\n      for (let i = finiteRank; i < 3; ++i) {\n        chunkSize[i] = 0;\n        localCenter[i] = 0;\n      }\n      const { centerDataPosition } = projectionParameters;\n      chunkLayout.globalToLocalSpatial(localCenter, centerDataPosition);\n\n      forEachPlaneIntersectingVolumetricChunk(\n        projectionParameters,\n        this.localPosition.value,\n        tsource,\n        getNormalizedChunkLayout(projectionParameters, chunkLayout),\n        (positionInChunks) => {\n          vec3.multiply(tempChunkPosition, positionInChunks, chunkSize);\n          const priority = -vec3.distance(localCenter, tempChunkPosition);\n          const { curPositionInChunks } = tsource;\n\n          forEachVisibleSegment(this, (segment, _) => {\n            if (isBaseSegmentId(segment, this.nBitsForLayerId.value)) return; // TODO maybe support highBitRepresentation?\n            const chunk = source.getChunk(curPositionInChunks, segment.clone());\n            chunkManager.requestChunk(\n              chunk,\n              priorityTier,\n              basePriority + priority,\n              ChunkState.SYSTEM_MEMORY_WORKER,\n            );\n            ++this.numVisibleChunksNeeded;\n            if (chunk.state === ChunkState.GPU_MEMORY) {\n              ++this.numVisibleChunksAvailable;\n            }\n          });\n        },\n      );\n    }\n  }\n\n  private forEachSelectedRootWithLeaves(\n    callback: (rootObjectKey: string, leaves: Uint64[]) => void,\n  ) {\n    const { source } = this;\n\n    for (const chunk of source.chunks.values()) {\n      if (\n        chunk.state === ChunkState.SYSTEM_MEMORY_WORKER &&\n        chunk.priorityTier < ChunkPriorityTier.RECENT\n      ) {\n        if (this.visibleSegments.has(chunk.segment) && chunk.leaves.length) {\n          callback(chunk.segment.toString(), chunk.leaves);\n        }\n      }\n    }\n  }\n\n  private debouncedupdateDisplayState = debounce(() => {\n    this.updateDisplayState();\n  }, 100);\n\n  private updateDisplayState() {\n    const visibleLeaves = new Map<string, Uint64Set>();\n    const capacities = new Map<string, number>();\n\n    // Reserve\n    this.forEachSelectedRootWithLeaves((rootObjectKey, leaves) => {\n      if (!capacities.has(rootObjectKey)) {\n        capacities.set(rootObjectKey, leaves.length);\n      } else {\n        capacities.set(\n          rootObjectKey,\n          capacities.get(rootObjectKey)! + leaves.length,\n        );\n      }\n    });\n\n    // Collect unique leaves\n    this.forEachSelectedRootWithLeaves((rootObjectKey, leaves) => {\n      if (!visibleLeaves.has(rootObjectKey)) {\n        visibleLeaves.set(rootObjectKey, new Uint64Set());\n        visibleLeaves\n          .get(rootObjectKey)!\n          .reserve(capacities.get(rootObjectKey)!);\n        visibleLeaves\n          .get(rootObjectKey)!\n          .add(Uint64.parseString(rootObjectKey));\n      }\n      visibleLeaves.get(rootObjectKey)!.add(leaves);\n    });\n\n    for (const [root, leaves] of visibleLeaves) {\n      // TODO: Delete segments not visible anymore from segmentEquivalences - requires a faster data\n      // structure, though.\n\n      /*if (this.segmentEquivalences.has(Uint64.parseString(root))) {\n        this.segmentEquivalences.delete([...this.segmentEquivalences.setElements(Uint64.parseString(root))].filter(x\n      => !leaves.has(x) && !this.visibleSegments.has(x)));\n      }*/\n      const filteredLeaves = [...leaves].filter(\n        (x) => !this.segmentEquivalences.has(x),\n      );\n\n      const rootInt = Uint64.parseString(root);\n\n      for (const leaf of filteredLeaves) {\n        this.segmentEquivalences.link(rootInt, leaf);\n      }\n    }\n  }\n}\n\nregisterRPC(CHUNKED_GRAPH_RENDER_LAYER_UPDATE_SOURCES_RPC_ID, function (x) {\n  const view = this.get(x.view) as RenderedViewBackend;\n  const layer = this.get(x.layer) as ChunkedGraphLayer;\n  const attachment = layer.attachments.get(\n    view,\n  )! as RenderLayerBackendAttachment<\n    RenderedViewBackend,\n    ChunkedGraphRenderLayerAttachmentState\n  >;\n  attachment.state!.transformedSource = deserializeTransformedSources<\n    SliceViewChunkSourceBackend,\n    ChunkedGraphLayer\n  >(this, x.sources, layer)[0][0] as unknown as TransformedSource<\n    ChunkedGraphLayer,\n    GrapheneChunkedGraphChunkSource\n  >;\n  attachment.state!.displayDimensionRenderInfo = x.displayDimensionRenderInfo;\n  layer.chunkManager.scheduleUpdateChunkPriorities();\n});\n\nregisterRPC(GRAPHENE_MESH_NEW_SEGMENT_RPC_ID, function (x) {\n  const obj = <GrapheneMeshSource>this.get(x.rpcId);\n  obj.addNewSegment(Uint64.parseString(x.segment));\n});\n","/**\n * @license\n * Copyright 2020 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport const decodeBlosc =\n  asyncComputation<(data: Uint8Array) => Uint8Array>(\"decodeBlosc\");\n","/**\n * @license\n * Copyright 2023 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport const decodeZstd =\n  asyncComputation<(data: Uint8Array) => Uint8Array>(\"decodeZstd\");\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeBlosc } from \"#src/async_computation/decode_blosc_request.js\";\nimport { decodeGzip } from \"#src/async_computation/decode_gzip_request.js\";\nimport { decodeZstd } from \"#src/async_computation/decode_zstd_request.js\";\nimport { requestAsyncComputation } from \"#src/async_computation/request.js\";\nimport { WithParameters } from \"#src/chunk_manager/backend.js\";\nimport { WithSharedCredentialsProviderCounterpart } from \"#src/credentials_provider/shared_counterpart.js\";\nimport {\n  VolumeChunkEncoding,\n  VolumeChunkSourceParameters,\n} from \"#src/datasource/n5/base.js\";\nimport { decodeRawChunk } from \"#src/sliceview/backend_chunk_decoders/raw.js\";\nimport type { VolumeChunk } from \"#src/sliceview/volume/backend.js\";\nimport { VolumeChunkSource } from \"#src/sliceview/volume/backend.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport { Endianness } from \"#src/util/endian.js\";\nimport {\n  isNotFoundError,\n  responseArrayBuffer,\n} from \"#src/util/http_request.js\";\nimport type { SpecialProtocolCredentials } from \"#src/util/special_protocol_request.js\";\nimport { cancellableFetchSpecialOk } from \"#src/util/special_protocol_request.js\";\nimport { registerSharedObject } from \"#src/worker_rpc.js\";\n\nasync function decodeChunk(\n  chunk: VolumeChunk,\n  cancellationToken: CancellationToken,\n  response: ArrayBuffer,\n  encoding: VolumeChunkEncoding,\n) {\n  const dv = new DataView(response);\n  const mode = dv.getUint16(0, /*littleEndian=*/ false);\n  if (mode !== 0) {\n    throw new Error(`Unsupported mode: ${mode}.`);\n  }\n  const numDimensions = dv.getUint16(2, /*littleEndian=*/ false);\n  if (numDimensions !== chunk.source!.spec.rank) {\n    throw new Error(\"Number of dimensions must be 3.\");\n  }\n  let offset = 4;\n  const shape = new Uint32Array(numDimensions);\n  for (let i = 0; i < numDimensions; ++i) {\n    shape[i] = dv.getUint32(offset, /*littleEndian=*/ false);\n    offset += 4;\n  }\n  chunk.chunkDataSize = shape;\n  let buffer = new Uint8Array(response, offset);\n  switch (encoding) {\n    case VolumeChunkEncoding.GZIP:\n      buffer = await requestAsyncComputation(\n        decodeGzip,\n        cancellationToken,\n        [buffer.buffer],\n        buffer,\n      );\n      break;\n    case VolumeChunkEncoding.BLOSC:\n      buffer = await requestAsyncComputation(\n        decodeBlosc,\n        cancellationToken,\n        [buffer.buffer],\n        buffer,\n      );\n      break;\n    case VolumeChunkEncoding.ZSTD:\n      buffer = await requestAsyncComputation(\n        decodeZstd,\n        cancellationToken,\n        [buffer.buffer],\n        buffer,\n      );\n      break;\n  }\n  await decodeRawChunk(\n    chunk,\n    cancellationToken,\n    buffer.buffer,\n    Endianness.BIG,\n    buffer.byteOffset,\n    buffer.byteLength,\n  );\n}\n\n@registerSharedObject()\nexport class PrecomputedVolumeChunkSource extends WithParameters(\n  WithSharedCredentialsProviderCounterpart<SpecialProtocolCredentials>()(\n    VolumeChunkSource,\n  ),\n  VolumeChunkSourceParameters,\n) {\n  async download(chunk: VolumeChunk, cancellationToken: CancellationToken) {\n    const { parameters } = this;\n    const { chunkGridPosition } = chunk;\n    let url = parameters.url;\n    const rank = this.spec.rank;\n    for (let i = 0; i < rank; ++i) {\n      url += `/${chunkGridPosition[i]}`;\n    }\n    try {\n      const response = await cancellableFetchSpecialOk(\n        this.credentialsProvider,\n        url,\n        {},\n        responseArrayBuffer,\n        cancellationToken,\n      );\n      await decodeChunk(\n        chunk,\n        cancellationToken,\n        response,\n        parameters.encoding,\n      );\n    } catch (e) {\n      if (!isNotFoundError(e)) throw e;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  ChunkLayoutOptions,\n  SliceViewChunkSource,\n  SliceViewChunkSpecification,\n  SliceViewChunkSpecificationBaseOptions,\n  SliceViewChunkSpecificationOptions,\n  SliceViewSourceOptions,\n} from \"#src/sliceview/base.js\";\nimport {\n  getChunkDataSizes,\n  getNearIsotropicBlockSize,\n  makeSliceViewChunkSpecification,\n} from \"#src/sliceview/base.js\";\nimport { DATA_TYPE_BYTES, DataType } from \"#src/util/data_type.js\";\nimport type { vec3 } from \"#src/util/geom.js\";\nimport { getDependentTransformInputDimensions } from \"#src/util/geom.js\";\nimport * as matrix from \"#src/util/matrix.js\";\nimport { Uint64 } from \"#src/util/uint64.js\";\nimport * as vector from \"#src/util/vector.js\";\n\nexport { DATA_TYPE_BYTES, DataType };\n\nexport interface RenderLayer {\n  sources: VolumeChunkSource[][] | null;\n}\n\n/**\n * Specifies the interpretation of volumetric data.\n */\nexport enum VolumeType {\n  UNKNOWN = 0,\n  IMAGE = 1,\n  SEGMENTATION = 2,\n}\n\n/**\n * By default, choose a chunk size with at most 2^18 = 262144 voxels.\n */\nexport const DEFAULT_MAX_VOXELS_PER_CHUNK_LOG2 = 18;\n\nexport interface VolumeSourceOptions extends SliceViewSourceOptions {\n  discreteValues?: boolean;\n}\n\n/**\n * Common parameters for the VolumeChunkSpecification constructor and\n * VolumeChunkSpecification.getDefaults.\n */\n/**\n * Specifies constructor parameters for VolumeChunkSpecification.\n */\nexport interface VolumeChunkSpecificationBaseOptions\n  extends SliceViewChunkSpecificationBaseOptions {\n  /**\n   * Specifies offset for use by backend.ts:GenericVolumeChunkSource.computeChunkBounds in\n   * calculating chunk voxel coordinates.  The calculated chunk coordinates will be equal to the\n   * voxel position (in chunkLayout coordinates) plus this value.\n   *\n   * Defaults to kZeroVec if not specified.\n   */\n  baseVoxelOffset?: Float32Array;\n  dataType: DataType;\n  fillValue?: number | Uint64;\n\n  /**\n   * If set, indicates that the chunk is in compressed segmentation format with the specified block\n   * size.\n   */\n  compressedSegmentationBlockSize?: vec3;\n}\n\nexport interface VolumeChunkSpecificationOptions\n  extends VolumeChunkSpecificationBaseOptions,\n    SliceViewChunkSpecificationOptions<Uint32Array> {}\n\nexport interface VolumeChunkSpecificationVolumeSourceOptions {\n  volumeSourceOptions: VolumeSourceOptions;\n}\n\n/**\n * Specifies additional parameters for VolumeChunkSpecification.withDefaultCompression.\n */\nexport interface VolumeChunkSpecificationDefaultCompressionOptions {\n  /**\n   * Volume type.\n   */\n  volumeType: VolumeType;\n  maxCompressedSegmentationBlockSize?: vec3;\n  minBlockSize?: Uint32Array;\n  maxBlockSize?: Uint32Array;\n\n  /**\n   * Transform from chunk space to the multiscale volume space.\n   * Homogeneous `(rank + 1) * (rank + 1)` matrix in column-major order.\n   */\n  chunkToMultiscaleTransform: Float32Array;\n\n  /**\n   * If specified, must be equal to the product of `chunkToMultiscaleTransform` and\n   * `multiscaleToViewTransform`.\n   */\n  chunkToViewTransform?: Float32Array;\n}\n\n/**\n * Specifies parameters for `makeDefaultVolumeChunkSpecifications`.\n */\nexport interface VolumeChunkSpecificationGetDefaultsOptions\n  extends VolumeChunkSpecificationBaseOptions,\n    VolumeChunkSpecificationDefaultCompressionOptions,\n    ChunkLayoutOptions,\n    VolumeChunkSpecificationVolumeSourceOptions {}\n\nexport interface VolumeChunkSpecification\n  extends SliceViewChunkSpecification<Uint32Array> {\n  baseVoxelOffset: Float32Array;\n  dataType: DataType;\n  compressedSegmentationBlockSize: vec3 | undefined;\n  fillValue: number | Uint64;\n}\n\nexport function makeVolumeChunkSpecification(\n  options: VolumeChunkSpecificationOptions,\n): VolumeChunkSpecification {\n  const {\n    rank,\n    dataType,\n    fillValue = dataType === DataType.UINT64 ? Uint64.ZERO : 0,\n    compressedSegmentationBlockSize,\n  } = options;\n  const { baseVoxelOffset = new Float32Array(rank) } = options;\n  return {\n    ...makeSliceViewChunkSpecification(options),\n    compressedSegmentationBlockSize,\n    baseVoxelOffset,\n    dataType,\n    fillValue,\n  };\n}\n\nfunction shouldTranscodeToCompressedSegmentation(\n  options: VolumeChunkSpecificationDefaultCompressionOptions &\n    VolumeChunkSpecificationOptions &\n    VolumeChunkSpecificationVolumeSourceOptions,\n) {\n  if (options.compressedSegmentationBlockSize !== undefined) return false;\n  if (\n    options.volumeType !== VolumeType.SEGMENTATION &&\n    !options.volumeSourceOptions.discreteValues\n  ) {\n    return false;\n  }\n  switch (options.dataType) {\n    case DataType.UINT32:\n    case DataType.UINT64:\n      break;\n    default:\n      return false;\n  }\n  switch (options.rank) {\n    case 3:\n      return true;\n    case 4: {\n      // precomputed format always uses 4-d chunks, even if there is a single channel.  We still\n      // want to allow transcoding in that case.  In fact the compressed_segmentation format\n      // supports transcoding even for arbitrary 4-d chunks, but it is not clear it would be a good\n      // default encoding in that case.\n      const { chunkDataSize } = options;\n      if (chunkDataSize[3] !== 1) return false;\n      return true;\n    }\n    default:\n      return false;\n  }\n}\n\n/**\n * Returns a VolumeChunkSpecification with default compression specified if suitable for the\n * volumeType.\n */\nexport function makeVolumeChunkSpecificationWithDefaultCompression(\n  options: VolumeChunkSpecificationDefaultCompressionOptions &\n    VolumeChunkSpecificationOptions &\n    VolumeChunkSpecificationVolumeSourceOptions,\n) {\n  const { rank, lowerVoxelBound, upperVoxelBound } = options;\n  if (!shouldTranscodeToCompressedSegmentation(options)) {\n    return makeVolumeChunkSpecification(options);\n  }\n  let {\n    volumeSourceOptions: { displayRank, multiscaleToViewTransform },\n    chunkToMultiscaleTransform,\n    chunkToViewTransform,\n  } = options;\n  if (chunkToViewTransform === undefined) {\n    chunkToViewTransform = matrix.multiply(\n      new Float32Array(rank * displayRank),\n      displayRank, //\n      multiscaleToViewTransform,\n      displayRank, //\n      chunkToMultiscaleTransform,\n      rank + 1, //\n      displayRank,\n      rank,\n      rank,\n    );\n  }\n  const { maxCompressedSegmentationBlockSize, chunkDataSize } = options;\n  return makeVolumeChunkSpecification({\n    ...options,\n    compressedSegmentationBlockSize: Float32Array.from(\n      getNearIsotropicBlockSize({\n        rank,\n        chunkToViewTransform,\n        displayRank,\n        lowerVoxelBound,\n        upperVoxelBound,\n        maxVoxelsPerChunkLog2: 9,\n        maxBlockSize:\n          maxCompressedSegmentationBlockSize === undefined\n            ? chunkDataSize\n            : vector.min(\n                new Uint32Array(rank),\n                chunkDataSize,\n                maxCompressedSegmentationBlockSize,\n              ),\n      }),\n    ) as vec3,\n  });\n}\n\nexport function makeDefaultVolumeChunkSpecifications(\n  options: VolumeChunkSpecificationGetDefaultsOptions,\n): VolumeChunkSpecification[] {\n  const { rank } = options;\n  const {\n    volumeSourceOptions: {\n      displayRank,\n      multiscaleToViewTransform,\n      modelChannelDimensionIndices,\n    },\n    chunkToMultiscaleTransform,\n  } = options;\n  const chunkToViewTransform = matrix.multiply(\n    new Float32Array(displayRank * rank),\n    displayRank, //\n    multiscaleToViewTransform,\n    displayRank, //\n    chunkToMultiscaleTransform,\n    rank + 1, //\n    displayRank,\n    rank,\n    rank,\n  );\n  let { minBlockSize } = options;\n  if (minBlockSize === undefined) {\n    minBlockSize = new Uint32Array(rank);\n    minBlockSize.fill(1);\n  } else {\n    minBlockSize = new Uint32Array(minBlockSize);\n  }\n  const { lowerVoxelBound, upperVoxelBound } = options;\n  if (modelChannelDimensionIndices.length !== 0) {\n    for (const chunkDim of getDependentTransformInputDimensions(\n      chunkToMultiscaleTransform,\n      rank,\n      modelChannelDimensionIndices,\n    )) {\n      let size = upperVoxelBound[chunkDim];\n      if (lowerVoxelBound !== undefined) {\n        size -= lowerVoxelBound[chunkDim];\n      }\n      minBlockSize[chunkDim] = size;\n    }\n  }\n  const {\n    chunkDataSizes = getChunkDataSizes({\n      ...options,\n      minBlockSize,\n      chunkToViewTransform,\n      displayRank,\n    }),\n  } = options;\n  return chunkDataSizes.map((chunkDataSize) =>\n    makeVolumeChunkSpecificationWithDefaultCompression({\n      ...options,\n      chunkDataSize: chunkDataSize,\n      chunkToViewTransform,\n    }),\n  );\n}\n\nexport interface VolumeChunkSource extends SliceViewChunkSource {\n  spec: VolumeChunkSpecification;\n}\n\nexport const VOLUME_RPC_ID = \"volume\";\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { NIFTI2 } from \"nifti-reader-js\";\nimport { isCompressed, NIFTI1, readHeader, readImage } from \"nifti-reader-js\";\nimport { decodeGzip } from \"#src/async_computation/decode_gzip_request.js\";\nimport { requestAsyncComputation } from \"#src/async_computation/request.js\";\nimport type { ChunkManager } from \"#src/chunk_manager/backend.js\";\nimport { WithParameters } from \"#src/chunk_manager/backend.js\";\nimport { ChunkPriorityTier } from \"#src/chunk_manager/base.js\";\nimport type { PriorityGetter } from \"#src/chunk_manager/generic_file_source.js\";\nimport { GenericSharedDataSource } from \"#src/chunk_manager/generic_file_source.js\";\nimport type { SharedCredentialsProviderCounterpart } from \"#src/credentials_provider/shared_counterpart.js\";\nimport { WithSharedCredentialsProviderCounterpart } from \"#src/credentials_provider/shared_counterpart.js\";\nimport type { NiftiVolumeInfo } from \"#src/datasource/nifti/base.js\";\nimport {\n  GET_NIFTI_VOLUME_INFO_RPC_ID,\n  VolumeSourceParameters,\n} from \"#src/datasource/nifti/base.js\";\nimport { decodeRawChunk } from \"#src/sliceview/backend_chunk_decoders/raw.js\";\nimport type { VolumeChunk } from \"#src/sliceview/volume/backend.js\";\nimport { VolumeChunkSource } from \"#src/sliceview/volume/backend.js\";\nimport { DataType } from \"#src/sliceview/volume/base.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport type { Borrowed } from \"#src/util/disposable.js\";\nimport { Endianness } from \"#src/util/endian.js\";\nimport {\n  kOneVec,\n  mat4,\n  quat,\n  translationRotationScaleZReflectionToMat4,\n  vec3,\n} from \"#src/util/geom.js\";\nimport * as matrix from \"#src/util/matrix.js\";\nimport type {\n  SpecialProtocolCredentials,\n  SpecialProtocolCredentialsProvider,\n} from \"#src/util/special_protocol_request.js\";\nimport type { RPCPromise } from \"#src/worker_rpc.js\";\nimport { registerPromiseRPC, registerSharedObject } from \"#src/worker_rpc.js\";\n\nexport class NiftiFileData {\n  uncompressedData: ArrayBuffer;\n  header: NIFTI1 | NIFTI2;\n}\n\nasync function decodeNiftiFile(\n  buffer: ArrayBuffer,\n  cancellationToken: CancellationToken,\n) {\n  if (isCompressed(buffer)) {\n    buffer = (\n      await requestAsyncComputation(\n        decodeGzip,\n        cancellationToken,\n        [buffer],\n        new Uint8Array(buffer),\n      )\n    ).buffer;\n  }\n  const data = new NiftiFileData();\n  data.uncompressedData = buffer;\n  const header = readHeader(buffer);\n  if (header === null) {\n    throw new Error(\"Failed to parse NIFTI header.\");\n  }\n  data.header = header;\n  return { data, size: buffer.byteLength };\n}\n\nfunction getNiftiFileData(\n  chunkManager: Borrowed<ChunkManager>,\n  credentialsProvider: SpecialProtocolCredentialsProvider,\n  url: string,\n  getPriority: PriorityGetter,\n  cancellationToken: CancellationToken,\n) {\n  return GenericSharedDataSource.getUrl(\n    chunkManager,\n    credentialsProvider,\n    decodeNiftiFile,\n    url,\n    getPriority,\n    cancellationToken,\n  );\n}\n\nconst NIFTI_HEADER_INFO_PRIORITY = 1000;\n\nasync function getNiftiHeaderInfo(\n  chunkManager: Borrowed<ChunkManager>,\n  credentialsProvider: SpecialProtocolCredentialsProvider,\n  url: string,\n  cancellationToken: CancellationToken,\n) {\n  const data = await getNiftiFileData(\n    chunkManager,\n    credentialsProvider,\n    url,\n    () => ({\n      priorityTier: ChunkPriorityTier.VISIBLE,\n      priority: NIFTI_HEADER_INFO_PRIORITY,\n    }),\n    cancellationToken,\n  );\n  return data.header;\n}\n\nfunction convertAffine(affine: number[][]) {\n  return mat4.fromValues(\n    affine[0][0],\n    affine[1][0],\n    affine[2][0],\n    affine[3][0],\n    affine[0][1],\n    affine[1][1],\n    affine[2][1],\n    affine[3][1],\n    affine[0][2],\n    affine[1][2],\n    affine[2][2],\n    affine[3][2],\n    affine[0][3],\n    affine[1][3],\n    affine[2][3],\n    affine[3][3],\n  );\n}\n\nenum NiftiDataType {\n  NONE = 0,\n  BINARY = 1,\n  UINT8 = 2,\n  INT16 = 4,\n  INT32 = 8,\n  FLOAT32 = 16,\n  COMPLEX64 = 32,\n  FLOAT64 = 64,\n  RGB24 = 128,\n  INT8 = 256,\n  UINT16 = 512,\n  UINT32 = 768,\n  INT64 = 1024,\n  UINT64 = 1280,\n  FLOAT128 = 1536,\n  COMPLEX128 = 1792,\n  COMPLEX256 = 2048,\n}\n\nconst DATA_TYPE_CONVERSIONS = new Map([\n  [NiftiDataType.INT8, { dataType: DataType.INT8 }],\n  [NiftiDataType.UINT8, { dataType: DataType.UINT8 }],\n  [NiftiDataType.INT16, { dataType: DataType.INT16 }],\n  [NiftiDataType.UINT16, { dataType: DataType.UINT16 }],\n  [NiftiDataType.INT32, { dataType: DataType.INT32 }],\n  [NiftiDataType.UINT32, { dataType: DataType.UINT32 }],\n  [NiftiDataType.INT64, { dataType: DataType.UINT64 }],\n  [NiftiDataType.UINT64, { dataType: DataType.UINT64 }],\n  [NiftiDataType.FLOAT32, { dataType: DataType.FLOAT32 }],\n]);\n\nregisterPromiseRPC(\n  GET_NIFTI_VOLUME_INFO_RPC_ID,\n  async function (x, cancellationToken): RPCPromise<NiftiVolumeInfo> {\n    const chunkManager = this.getRef<ChunkManager>(x.chunkManager);\n    const credentialsProvider = this.getOptionalRef<\n      SharedCredentialsProviderCounterpart<\n        Exclude<SpecialProtocolCredentials, undefined>\n      >\n    >(x.credentialsProvider);\n    try {\n      const header = await getNiftiHeaderInfo(\n        chunkManager,\n        credentialsProvider,\n        x.url,\n        cancellationToken,\n      );\n      const dataTypeInfo = DATA_TYPE_CONVERSIONS.get(header.datatypeCode);\n      if (dataTypeInfo === undefined) {\n        throw new Error(\n          \"Unsupported data type: \" +\n            `${NiftiDataType[header.datatypeCode] || header.datatypeCode}.`,\n        );\n      }\n      let spatialInvScale = 1;\n      let spatialUnit = \"\";\n      switch (header.xyzt_units & NIFTI1.SPATIAL_UNITS_MASK) {\n        case NIFTI1.UNITS_METER:\n          spatialInvScale = 1;\n          spatialUnit = \"m\";\n          break;\n        case NIFTI1.UNITS_MM:\n          spatialInvScale = 1e3;\n          spatialUnit = \"m\";\n          break;\n        case NIFTI1.UNITS_MICRON:\n          spatialInvScale = 1e6;\n          spatialUnit = \"m\";\n          break;\n      }\n\n      let timeUnit = \"\";\n      let timeInvScale = 1;\n      switch (header.xyzt_units & NIFTI1.TEMPORAL_UNITS_MASK) {\n        case NIFTI1.UNITS_SEC:\n          timeUnit = \"s\";\n          timeInvScale = 1;\n          break;\n        case NIFTI1.UNITS_MSEC:\n          timeUnit = \"s\";\n          timeInvScale = 1e3;\n          break;\n        case NIFTI1.UNITS_USEC:\n          timeUnit = \"s\";\n          timeInvScale = 1e6;\n          break;\n        case NIFTI1.UNITS_HZ:\n          timeUnit = \"Hz\";\n          timeInvScale = 1;\n          break;\n        case NIFTI1.UNITS_RADS:\n          timeUnit = \"rad/s\";\n          timeInvScale = 1;\n          break;\n      }\n      let units: string[] = [\n        spatialUnit,\n        spatialUnit,\n        spatialUnit,\n        timeUnit,\n        \"\",\n        \"\",\n        \"\",\n      ];\n      let sourceScales = Float64Array.of(\n        header.pixDims[1] / spatialInvScale,\n        header.pixDims[2] / spatialInvScale,\n        header.pixDims[3] / spatialInvScale,\n        header.pixDims[4] / timeInvScale,\n        header.pixDims[5],\n        header.pixDims[6],\n        header.pixDims[7],\n      );\n      let viewScales = Float64Array.of(\n        1 / spatialInvScale,\n        1 / spatialInvScale,\n        1 / spatialInvScale,\n        1 / timeInvScale,\n        1,\n        1,\n        1,\n      );\n      let sourceNames = [\"i\", \"j\", \"k\", \"m\", \"c^\", \"c1^\", \"c2^\"];\n      let viewNames = [\"x\", \"y\", \"z\", \"t\", \"c^\", \"c1^\", \"c2^\"];\n      const rank = header.dims[0];\n      sourceNames = sourceNames.slice(0, rank);\n      viewNames = viewNames.slice(0, rank);\n      units = units.slice(0, rank);\n      sourceScales = sourceScales.slice(0, rank);\n      viewScales = viewScales.slice(0, rank);\n      const { quatern_b, quatern_c, quatern_d } = header;\n      const quatern_a = Math.sqrt(\n        1.0 -\n          quatern_b * quatern_b -\n          quatern_c * quatern_c -\n          quatern_d * quatern_d,\n      );\n      const qfac = header.pixDims[0] === -1 ? -1 : 1;\n      const qoffset = vec3.fromValues(\n        header.qoffset_x,\n        header.qoffset_y,\n        header.qoffset_z,\n      );\n      // https://nifti.nimh.nih.gov/nifti-1/documentation/nifti1fields/nifti1fields_pages/qsform.html\n      const method3Transform = convertAffine(header.affine);\n      method3Transform;\n      const method2Transform = translationRotationScaleZReflectionToMat4(\n        mat4.create(),\n        qoffset,\n        quat.fromValues(quatern_b, quatern_c, quatern_d, quatern_a),\n        kOneVec,\n        qfac,\n      );\n      const transform = matrix.createIdentity(Float64Array, rank + 1);\n      const copyRank = Math.min(3, rank);\n      for (let row = 0; row < copyRank; ++row) {\n        for (let col = 0; col < copyRank; ++col) {\n          transform[col * (rank + 1) + row] = method2Transform[col * 4 + row];\n        }\n        transform[rank * (rank + 1) + row] = method2Transform[12 + row];\n      }\n      const info: NiftiVolumeInfo = {\n        rank,\n        sourceNames,\n        viewNames,\n        units,\n        sourceScales,\n        viewScales,\n        description: header.description,\n        transform,\n        dataType: dataTypeInfo.dataType,\n        volumeSize: Uint32Array.from(header.dims.slice(1, 1 + rank)),\n      };\n      return { value: info };\n    } finally {\n      chunkManager.dispose();\n      credentialsProvider?.dispose();\n    }\n  },\n);\n\n@registerSharedObject()\nexport class NiftiVolumeChunkSource extends WithParameters(\n  WithSharedCredentialsProviderCounterpart<SpecialProtocolCredentials>()(\n    VolumeChunkSource,\n  ),\n  VolumeSourceParameters,\n) {\n  async download(chunk: VolumeChunk, cancellationToken: CancellationToken) {\n    chunk.chunkDataSize = this.spec.chunkDataSize;\n    const data = await getNiftiFileData(\n      this.chunkManager,\n      this.credentialsProvider,\n      this.parameters.url,\n      () => ({ priorityTier: chunk.priorityTier, priority: chunk.priority }),\n      cancellationToken,\n    );\n    const imageBuffer = readImage(data.header, data.uncompressedData);\n    await decodeRawChunk(\n      chunk,\n      cancellationToken,\n      imageBuffer,\n      data.header.littleEndian ? Endianness.LITTLE : Endianness.BIG,\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\nimport type { SingleMesh } from \"#src/single_mesh/backend.js\";\n\nexport const parseOBJFromArrayBuffer = asyncComputation<\n  (buffer: ArrayBuffer) => {\n    data: SingleMesh;\n    size: number;\n  }\n>(\"parseOBJFromArrayBuffer\");\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ChunkManager } from \"#src/chunk_manager/backend.js\";\nimport {\n  Chunk,\n  ChunkSource,\n  withChunkManager,\n  WithParameters,\n} from \"#src/chunk_manager/backend.js\";\nimport { ChunkPriorityTier } from \"#src/chunk_manager/base.js\";\nimport type { PriorityGetter } from \"#src/chunk_manager/generic_file_source.js\";\nimport type { SharedCredentialsProviderCounterpart } from \"#src/credentials_provider/shared_counterpart.js\";\nimport { WithSharedCredentialsProviderCounterpart } from \"#src/credentials_provider/shared_counterpart.js\";\nimport { computeVertexNormals } from \"#src/mesh/backend.js\";\nimport type {\n  SingleMeshData,\n  SingleMeshInfo,\n  SingleMeshSourceParameters,\n  VertexAttributeInfo,\n} from \"#src/single_mesh/base.js\";\nimport {\n  GET_SINGLE_MESH_INFO_RPC_ID,\n  SINGLE_MESH_CHUNK_KEY,\n  SINGLE_MESH_LAYER_RPC_ID,\n  SingleMeshSourceParametersWithInfo,\n} from \"#src/single_mesh/base.js\";\nimport type { TypedArray } from \"#src/util/array.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport { stableStringify } from \"#src/util/json.js\";\nimport type {\n  SpecialProtocolCredentials,\n  SpecialProtocolCredentialsProvider,\n} from \"#src/util/special_protocol_request.js\";\nimport {\n  getBasePriority,\n  getPriorityTier,\n  withSharedVisibility,\n} from \"#src/visibility_priority/backend.js\";\nimport type { RPC, RPCPromise } from \"#src/worker_rpc.js\";\nimport {\n  registerPromiseRPC,\n  registerSharedObject,\n  SharedObjectCounterpart,\n} from \"#src/worker_rpc.js\";\n\nconst SINGLE_MESH_CHUNK_PRIORITY = 50;\n\n/**\n * Chunk that contains the single mesh.\n */\nexport class SingleMeshChunk extends Chunk {\n  data: SingleMeshData | null = null;\n  freeSystemMemory() {\n    this.data = null;\n  }\n  serialize(msg: any, transfers: any[]) {\n    super.serialize(msg, transfers);\n    const { vertexPositions, indices, vertexNormals, vertexAttributes } =\n      this.data!;\n    msg.vertexPositions = vertexPositions;\n    msg.indices = indices;\n    msg.vertexNormals = vertexNormals;\n    msg.vertexAttributes = vertexAttributes;\n    const transferSet = new Set<ArrayBuffer>();\n    transferSet.add(vertexPositions!.buffer);\n    transferSet.add(indices!.buffer);\n    transferSet.add(vertexNormals!.buffer);\n    for (const data of vertexAttributes!) {\n      transferSet.add(data.buffer);\n    }\n    transfers.push(...transferSet);\n    this.data = null;\n  }\n  downloadSucceeded() {\n    const { vertexPositions, indices, vertexNormals, vertexAttributes } =\n      this.data!;\n    let totalBytes = (this.gpuMemoryBytes =\n      vertexPositions.byteLength +\n      indices.byteLength +\n      vertexNormals!.byteLength);\n    for (const data of vertexAttributes) {\n      totalBytes += data.byteLength;\n    }\n    this.systemMemoryBytes = this.gpuMemoryBytes = totalBytes;\n    super.downloadSucceeded();\n  }\n}\n\nexport interface SingleMesh extends SingleMeshData {\n  info: SingleMeshInfo;\n}\n\nexport interface SingleMeshVertexAttributes {\n  numVertices: number;\n  attributeInfo: VertexAttributeInfo[];\n  attributes: Float32Array[];\n}\n\ninterface SingleMeshFactory {\n  description?: string;\n  getMesh: (\n    chunkManager: ChunkManager,\n    credentialsProvider: SpecialProtocolCredentialsProvider,\n    url: string,\n    getPriority: PriorityGetter,\n    cancellationToken: CancellationToken,\n  ) => Promise<SingleMesh>;\n}\n\nconst singleMeshFactories = new Map<string, SingleMeshFactory>();\nexport function registerSingleMeshFactory(\n  name: string,\n  factory: SingleMeshFactory,\n) {\n  singleMeshFactories.set(name, factory);\n}\n\nconst protocolPattern = /^(?:([a-zA-Z-+_]+):\\/\\/)?(.*)$/;\n\nfunction getDataSource<T>(\n  factories: Map<string, T>,\n  url: string,\n): [T, string, string] {\n  const m = url.match(protocolPattern);\n  if (m === null || m[1] === undefined) {\n    throw new Error(\n      `Data source URL must have the form \"<protocol>://<path>\".`,\n    );\n  }\n  const dataSource = m[1];\n  const factory = factories.get(dataSource);\n  if (factory === undefined) {\n    throw new Error(`Unsupported data source: ${JSON.stringify(dataSource)}.`);\n  }\n  return [factory, m[2], dataSource];\n}\n\nexport function getMesh(\n  chunkManager: ChunkManager,\n  credentialsProvider: SpecialProtocolCredentialsProvider,\n  url: string,\n  getPriority: PriorityGetter,\n  cancellationToken: CancellationToken,\n) {\n  const [factory, path] = getDataSource(singleMeshFactories, url);\n  return factory.getMesh(\n    chunkManager,\n    credentialsProvider,\n    path,\n    getPriority,\n    cancellationToken,\n  );\n}\n\nexport function getMinMax(array: TypedArray): [number, number] {\n  let min = Number.POSITIVE_INFINITY;\n  let max = Number.NEGATIVE_INFINITY;\n  for (const value of array) {\n    min = Math.min(min, value);\n    max = Math.max(max, value);\n  }\n  return [min, max];\n}\n\nexport function getCombinedMesh(\n  chunkManager: ChunkManager,\n  credentialsProvider: SpecialProtocolCredentialsProvider,\n  parameters: SingleMeshSourceParameters,\n  getPriority: PriorityGetter,\n  cancellationToken: CancellationToken,\n) {\n  return getMesh(\n    chunkManager,\n    credentialsProvider,\n    parameters.meshSourceUrl,\n    getPriority,\n    cancellationToken,\n  );\n}\n\n@registerSharedObject()\nexport class SingleMeshSource extends WithParameters(\n  WithSharedCredentialsProviderCounterpart<SpecialProtocolCredentials>()(\n    ChunkSource,\n  ),\n  SingleMeshSourceParametersWithInfo,\n) {\n  getChunk() {\n    const key = SINGLE_MESH_CHUNK_KEY;\n    let chunk = <SingleMeshChunk>this.chunks.get(key);\n    if (chunk === undefined) {\n      chunk = this.getNewChunk_(SingleMeshChunk);\n      chunk.initialize(key);\n      this.addChunk(chunk);\n    }\n    return chunk;\n  }\n\n  download(chunk: SingleMeshChunk, cancellationToken: CancellationToken) {\n    const getPriority = () => ({\n      priorityTier: chunk.priorityTier,\n      priority: chunk.priority,\n    });\n    return getCombinedMesh(\n      this.chunkManager,\n      this.credentialsProvider,\n      this.parameters,\n      getPriority,\n      cancellationToken,\n    ).then((data) => {\n      if (\n        stableStringify(data.info) !== stableStringify(this.parameters.info)\n      ) {\n        throw new Error(\"Mesh info has changed.\");\n      }\n      if (data.vertexNormals === undefined) {\n        data.vertexNormals = computeVertexNormals(\n          data.vertexPositions,\n          data.indices,\n        );\n      }\n      chunk.data = data;\n    });\n  }\n}\n\nconst SingleMeshLayerBase = withSharedVisibility(\n  withChunkManager(SharedObjectCounterpart),\n);\n@registerSharedObject(SINGLE_MESH_LAYER_RPC_ID)\nexport class SingleMeshLayer extends SingleMeshLayerBase {\n  source: SingleMeshSource;\n\n  constructor(rpc: RPC, options: any) {\n    super(rpc, options);\n    this.source = this.registerDisposer(\n      rpc.getRef<SingleMeshSource>(options.source),\n    );\n    this.registerDisposer(\n      this.chunkManager.recomputeChunkPriorities.add(() => {\n        this.updateChunkPriorities();\n      }),\n    );\n  }\n\n  private updateChunkPriorities() {\n    const visibility = this.visibility.value;\n    if (visibility === Number.NEGATIVE_INFINITY) {\n      return;\n    }\n    const priorityTier = getPriorityTier(visibility);\n    const basePriority = getBasePriority(visibility);\n    const { source, chunkManager } = this;\n    const chunk = source.getChunk();\n    chunkManager.requestChunk(\n      chunk,\n      priorityTier,\n      basePriority + SINGLE_MESH_CHUNK_PRIORITY,\n    );\n  }\n}\n\nconst INFO_PRIORITY = 1000;\n\nregisterPromiseRPC(\n  GET_SINGLE_MESH_INFO_RPC_ID,\n  async function (x, cancellationToken): RPCPromise<SingleMeshInfo> {\n    const chunkManager = this.getRef<ChunkManager>(x.chunkManager);\n    const credentialsProvider = this.getOptionalRef<\n      SharedCredentialsProviderCounterpart<\n        Exclude<SpecialProtocolCredentials, undefined>\n      >\n    >(x.credentialsProvider);\n    try {\n      const parameters = <SingleMeshSourceParameters>x.parameters;\n      const mesh = await getCombinedMesh(\n        chunkManager,\n        credentialsProvider,\n        parameters,\n        () => ({\n          priorityTier: ChunkPriorityTier.VISIBLE,\n          priority: INFO_PRIORITY,\n        }),\n        cancellationToken,\n      );\n      return { value: mesh.info };\n    } finally {\n      chunkManager.dispose();\n      credentialsProvider?.dispose();\n    }\n  },\n);\n","/**\n * @license\n * Copyright 2020 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { parseOBJFromArrayBuffer } from \"#src/async_computation/obj_mesh_request.js\";\nimport { requestAsyncComputation } from \"#src/async_computation/request.js\";\nimport { GenericSharedDataSource } from \"#src/chunk_manager/generic_file_source.js\";\nimport { registerSingleMeshFactory } from \"#src/single_mesh/backend.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\n\n/**\n * This needs to be a global function, because it identifies the instance of GenericSharedDataSource\n * to use.\n */\nfunction parse(buffer: ArrayBuffer, cancellationToken: CancellationToken) {\n  return requestAsyncComputation(\n    parseOBJFromArrayBuffer,\n    cancellationToken,\n    [buffer],\n    buffer,\n  );\n}\n\nregisterSingleMeshFactory(\"obj\", {\n  description: \"OBJ\",\n  getMesh: (\n    chunkManager,\n    credentialsProvider,\n    url,\n    getPriority,\n    cancellationToken,\n  ) =>\n    GenericSharedDataSource.getUrl(\n      chunkManager,\n      credentialsProvider,\n      parse,\n      url,\n      getPriority,\n      cancellationToken,\n    ),\n});\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeJpeg } from \"#src/async_computation/decode_jpeg_request.js\";\nimport { requestAsyncComputation } from \"#src/async_computation/request.js\";\nimport { WithParameters } from \"#src/chunk_manager/backend.js\";\nimport { TileChunkSourceParameters } from \"#src/datasource/render/base.js\";\nimport type { ChunkDecoder } from \"#src/sliceview/backend_chunk_decoders/index.js\";\nimport { postProcessRawData } from \"#src/sliceview/backend_chunk_decoders/postprocess.js\";\nimport { decodeRawChunk } from \"#src/sliceview/backend_chunk_decoders/raw.js\";\nimport type { VolumeChunk } from \"#src/sliceview/volume/backend.js\";\nimport { VolumeChunkSource } from \"#src/sliceview/volume/backend.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport { Endianness } from \"#src/util/endian.js\";\nimport { vec3 } from \"#src/util/geom.js\";\nimport {\n  cancellableFetchOk,\n  responseArrayBuffer,\n} from \"#src/util/http_request.js\";\nimport { registerSharedObject } from \"#src/worker_rpc.js\";\n\nconst chunkDecoders = new Map<string, ChunkDecoder>();\nchunkDecoders.set(\n  \"jpg\",\n  async (\n    chunk: VolumeChunk,\n    cancellationToken: CancellationToken,\n    response: ArrayBuffer,\n  ) => {\n    const chunkDataSize = chunk.chunkDataSize!;\n    const { uint8Array: decoded } = await requestAsyncComputation(\n      decodeJpeg,\n      cancellationToken,\n      [response],\n      new Uint8Array(response),\n      chunkDataSize[0],\n      chunkDataSize[1] * chunkDataSize[2],\n      3,\n      true,\n    );\n    await postProcessRawData(chunk, cancellationToken, decoded);\n  },\n);\nchunkDecoders.set(\"raw16\", (chunk, cancellationToken, response) => {\n  return decodeRawChunk(chunk, cancellationToken, response, Endianness.BIG);\n});\n\n@registerSharedObject()\nexport class TileChunkSource extends WithParameters(\n  VolumeChunkSource,\n  TileChunkSourceParameters,\n) {\n  chunkDecoder = chunkDecoders.get(this.parameters.encoding)!;\n\n  queryString = (() => {\n    const { parameters } = this;\n    const query_params: string[] = [];\n    if (parameters.channel !== undefined) {\n      query_params.push(\"channels=\" + parameters.channel);\n    }\n    if (parameters.minIntensity !== undefined) {\n      query_params.push(\n        `minIntensity=${JSON.stringify(parameters.minIntensity)}`,\n      );\n    }\n    if (parameters.maxIntensity !== undefined) {\n      query_params.push(\n        `maxIntensity=${JSON.stringify(parameters.maxIntensity)}`,\n      );\n    }\n    if (parameters.maxTileSpecsToRender !== undefined) {\n      query_params.push(\n        `maxTileSpecsToRender=${JSON.stringify(\n          parameters.maxTileSpecsToRender,\n        )}`,\n      );\n    }\n    if (parameters.filter !== undefined) {\n      query_params.push(`filter=${JSON.stringify(parameters.filter)}`);\n    }\n    return query_params.join(\"&\");\n  })();\n\n  async download(chunk: VolumeChunk, cancellationToken: CancellationToken) {\n    const { parameters } = this;\n    const { chunkGridPosition } = chunk;\n\n    // Calculate scale.\n    const scale = 1.0 / 2 ** parameters.level;\n\n    // Needed by JPEG decoder.\n    chunk.chunkDataSize = this.spec.chunkDataSize;\n\n    const xTileSize = chunk.chunkDataSize[0] * 2 ** parameters.level;\n    const yTileSize = chunk.chunkDataSize[1] * 2 ** parameters.level;\n\n    // Convert grid position to global coordinates position.\n    const chunkPosition = vec3.create();\n\n    chunkPosition[0] = chunkGridPosition[0] * xTileSize;\n    chunkPosition[1] = chunkGridPosition[1] * yTileSize;\n    chunkPosition[2] = chunkGridPosition[2];\n\n    // GET\n    // /v1/owner/{owner}/project/{project}/stack/{stack}/z/{z}/box/{x},{y},{width},{height},{scale}/jpeg-image\n    let imageMethod: string;\n    if (parameters.encoding === \"raw16\") {\n      imageMethod = \"raw16-image\";\n    } else {\n      imageMethod = \"jpeg-image\";\n    }\n    const path = `/render-ws/v1/owner/${parameters.owner}/project/${parameters.project}/stack/${parameters.stack}/z/${chunkPosition[2]}/box/${chunkPosition[0]},${chunkPosition[1]},${xTileSize},${yTileSize},${scale}/${imageMethod}`;\n    const response = await cancellableFetchOk(\n      `${parameters.baseUrl}${path}?${this.queryString}`,\n      {},\n      responseArrayBuffer,\n      cancellationToken,\n    );\n    await this.chunkDecoder(chunk, cancellationToken, response);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\nimport type { TriangularMesh } from \"#src/datasource/vtk/parse.js\";\n\nexport const parseVTKFromArrayBuffer = asyncComputation<\n  (buffer: ArrayBuffer) => {\n    data: TriangularMesh;\n    size: number;\n  }\n>(\"parseVTKFromArrayBuffer\");\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { requestAsyncComputation } from \"#src/async_computation/request.js\";\nimport { parseVTKFromArrayBuffer } from \"#src/async_computation/vtk_mesh_request.js\";\nimport { GenericSharedDataSource } from \"#src/chunk_manager/generic_file_source.js\";\nimport type { SingleMesh } from \"#src/single_mesh/backend.js\";\nimport { registerSingleMeshFactory } from \"#src/single_mesh/backend.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport { DataType } from \"#src/util/data_type.js\";\n\n/**\n * This needs to be a global function, because it identifies the instance of GenericSharedDataSource\n * to use.\n */\nfunction parse(buffer: ArrayBuffer, cancellationToken: CancellationToken) {\n  return requestAsyncComputation(\n    parseVTKFromArrayBuffer,\n    cancellationToken,\n    [buffer],\n    buffer,\n  );\n}\n\nregisterSingleMeshFactory(\"vtk\", {\n  description: \"VTK\",\n  getMesh: (\n    chunkManager,\n    credentialsProvider,\n    url,\n    getPriority,\n    cancellationToken,\n  ) =>\n    GenericSharedDataSource.getUrl(\n      chunkManager,\n      credentialsProvider,\n      parse,\n      url,\n      getPriority,\n      cancellationToken,\n    ).then((mesh) => {\n      const result: SingleMesh = {\n        info: {\n          numTriangles: mesh.numTriangles,\n          numVertices: mesh.numVertices,\n          vertexAttributes: [],\n        },\n        indices: mesh.indices,\n        vertexPositions: mesh.vertexPositions,\n        vertexAttributes: [],\n      };\n      for (const attribute of mesh.vertexAttributes) {\n        result.info.vertexAttributes.push({\n          name: attribute.name,\n          dataType: DataType.FLOAT32,\n          numComponents: attribute.numComponents,\n        });\n        result.vertexAttributes.push(attribute.data);\n      }\n      return result;\n    }),\n});\n","/**\n * @license\n * Copyright 2023 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ChunkManager } from \"#src/chunk_manager/backend.js\";\nimport type {\n  CodecArrayInfo,\n  CodecChainSpec,\n} from \"#src/datasource/zarr/codec/index.js\";\nimport { CodecKind } from \"#src/datasource/zarr/codec/index.js\";\nimport type { ReadableKvStore } from \"#src/kvstore/index.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport type { RefCounted } from \"#src/util/disposable.js\";\n\nexport interface Codec {\n  name: string;\n  kind: CodecKind;\n}\n\nexport interface ArrayToArrayCodec<Configuration = unknown> extends Codec {\n  kind: CodecKind.arrayToArray;\n  decode(\n    configuration: Configuration,\n    decodedArrayInfo: CodecArrayInfo,\n    encoded: ArrayBufferView,\n    cancellationToken: CancellationToken,\n  ): Promise<ArrayBufferView>;\n}\n\nexport interface ArrayToBytesCodec<Configuration = unknown> extends Codec {\n  kind: CodecKind.arrayToBytes;\n  decode(\n    configuration: Configuration,\n    decodedArrayInfo: CodecArrayInfo,\n    encoded: Uint8Array,\n    cancellationToken: CancellationToken,\n  ): Promise<ArrayBufferView>;\n}\n\nexport type ShardingKey<BaseKey> = {\n  base: BaseKey;\n  subChunk: number[];\n};\n\nexport interface ShardingCodec<Configuration = unknown> extends Codec {\n  kind: CodecKind.arrayToBytes;\n  getShardedKvStore<BaseKey>(\n    configuration: Configuration,\n    chunkManager: ChunkManager,\n    base: ReadableKvStore<BaseKey>,\n  ): ReadableKvStore<ShardingKey<BaseKey>> & RefCounted;\n}\n\nexport interface BytesToBytesCodec<Configuration = unknown> extends Codec {\n  kind: CodecKind.bytesToBytes;\n  decode(\n    configuration: Configuration,\n    encoded: Uint8Array,\n    cancellationToken: CancellationToken,\n  ): Promise<Uint8Array>;\n}\n\nconst codecRegistry = {\n  [CodecKind.arrayToArray]: new Map<string, ArrayToArrayCodec>(),\n  [CodecKind.arrayToBytes]: new Map<string, ArrayToBytesCodec>(),\n  [CodecKind.bytesToBytes]: new Map<string, BytesToBytesCodec>(),\n  sharding: new Map<string, ShardingCodec>(),\n};\n\nexport function registerCodec<Configuration>(\n  codec:\n    | ArrayToArrayCodec<Configuration>\n    | ArrayToBytesCodec<Configuration>\n    | BytesToBytesCodec<Configuration>\n    | ShardingCodec<Configuration>,\n) {\n  if (codec.kind === CodecKind.arrayToBytes && \"getShardedKvStore\" in codec) {\n    codecRegistry.sharding.set(codec.name, codec as any);\n  } else {\n    codecRegistry[codec.kind].set(codec.name, codec as any);\n  }\n}\n\nexport async function decodeArray(\n  codecs: CodecChainSpec,\n  encoded: Uint8Array,\n  cancellationToken: CancellationToken,\n): Promise<ArrayBufferView> {\n  const bytesToBytes = codecs[CodecKind.bytesToBytes];\n  for (let i = bytesToBytes.length; i--; ) {\n    const codec = bytesToBytes[i];\n    const impl = codecRegistry[CodecKind.bytesToBytes].get(codec.name);\n    if (impl === undefined) {\n      throw new Error(`Unsupported codec: ${JSON.stringify(codec.name)}`);\n    }\n    encoded = await impl.decode(\n      codec.configuration,\n      encoded,\n      cancellationToken,\n    );\n  }\n\n  let decoded: ArrayBufferView;\n  {\n    const codec = codecs[CodecKind.arrayToBytes];\n    const impl = codecRegistry[CodecKind.arrayToBytes].get(codec.name);\n    if (impl === undefined) {\n      throw new Error(`Unsupported codec: ${JSON.stringify(codec.name)}`);\n    }\n    decoded = await impl.decode(\n      codec.configuration,\n      codecs.arrayInfo[codecs.arrayInfo.length - 1],\n      encoded,\n      cancellationToken,\n    );\n  }\n\n  const arrayToArray = codecs[CodecKind.arrayToArray];\n  for (let i = arrayToArray.length; i--; ) {\n    const codec = arrayToArray[i];\n    const impl = codecRegistry[CodecKind.arrayToArray].get(codec.name);\n    if (impl === undefined) {\n      throw new Error(`Unsupported codec: ${JSON.stringify(codec.name)}`);\n    }\n    decoded = await impl.decode(\n      codec.configuration,\n      codecs.arrayInfo[i],\n      decoded,\n      cancellationToken,\n    );\n  }\n\n  return decoded;\n}\n\nexport function applySharding(\n  chunkManager: ChunkManager,\n  codecs: CodecChainSpec,\n  baseKvStore: ReadableKvStore<string>,\n): {\n  kvStore: ReadableKvStore<unknown>;\n  getChunkKey: (\n    chunkGridPosition: ArrayLike<number>,\n    baseKey: string,\n  ) => unknown;\n  decodeCodecs: CodecChainSpec;\n} {\n  let kvStore: ReadableKvStore<unknown> = baseKvStore;\n  let curCodecs = codecs;\n  while (true) {\n    const { shardingInfo } = curCodecs;\n    if (shardingInfo === undefined) break;\n    const codec = curCodecs[CodecKind.arrayToBytes];\n    const impl = codecRegistry.sharding.get(codec.name);\n    if (impl === undefined) {\n      throw new Error(`Unsupported codec: ${JSON.stringify(codec.name)}`);\n    }\n    kvStore = impl.getShardedKvStore(\n      codec.configuration,\n      chunkManager,\n      kvStore,\n    );\n    curCodecs = shardingInfo.subChunkCodecs;\n  }\n\n  const decodeCodecs = curCodecs;\n\n  function getChunkKey(\n    chunkGridPosition: ArrayLike<number>,\n    baseKey: string,\n  ): unknown {\n    let key: unknown = baseKey;\n    const rank = chunkGridPosition.length;\n    let curCodecs = codecs;\n    while (curCodecs.shardingInfo !== undefined) {\n      const layoutInfo = codecs.layoutInfo[codecs.layoutInfo.length - 1];\n      const { physicalToLogicalDimension, readChunkShape } = layoutInfo;\n      const { subChunkShape, subChunkGridShape, subChunkCodecs } =\n        curCodecs.shardingInfo;\n      const subChunk = new Array<number>(rank);\n      for (\n        let fOrderPhysicalDim = 0;\n        fOrderPhysicalDim < rank;\n        ++fOrderPhysicalDim\n      ) {\n        const subChunkDim =\n          physicalToLogicalDimension[rank - 1 - fOrderPhysicalDim];\n        subChunk[subChunkDim] =\n          Math.floor(\n            (chunkGridPosition[fOrderPhysicalDim] *\n              readChunkShape[subChunkDim]) /\n              subChunkShape[subChunkDim],\n          ) % subChunkGridShape[subChunkDim];\n      }\n      key = { base: key, subChunk };\n      curCodecs = subChunkCodecs;\n    }\n    return key;\n  }\n\n  return { kvStore, getChunkKey, decodeCodecs };\n}\n","/**\n * @license\n * Copyright 2023 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeBlosc } from \"#src/async_computation/decode_blosc_request.js\";\nimport { requestAsyncComputation } from \"#src/async_computation/request.js\";\nimport type { Configuration } from \"#src/datasource/zarr/codec/blosc/resolve.js\";\nimport { registerCodec } from \"#src/datasource/zarr/codec/decode.js\";\nimport { CodecKind } from \"#src/datasource/zarr/codec/index.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\n\nregisterCodec({\n  name: \"blosc\",\n  kind: CodecKind.bytesToBytes,\n  decode(\n    configuration: Configuration,\n    encoded: Uint8Array,\n    cancellationToken: CancellationToken,\n  ): Promise<Uint8Array> {\n    configuration;\n    return requestAsyncComputation(\n      decodeBlosc,\n      cancellationToken,\n      [encoded.buffer],\n      encoded,\n    );\n  },\n});\n","/**\n * @license\n * Copyright 2023 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeZstd } from \"#src/async_computation/decode_zstd_request.js\";\nimport { requestAsyncComputation } from \"#src/async_computation/request.js\";\nimport { registerCodec } from \"#src/datasource/zarr/codec/decode.js\";\nimport { CodecKind } from \"#src/datasource/zarr/codec/index.js\";\nimport type { Configuration } from \"#src/datasource/zarr/codec/zstd/resolve.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\n\nregisterCodec({\n  name: \"zstd\",\n  kind: CodecKind.bytesToBytes,\n  decode(\n    configuration: Configuration,\n    encoded: Uint8Array,\n    cancellationToken: CancellationToken,\n  ): Promise<Uint8Array> {\n    configuration;\n    return requestAsyncComputation(\n      decodeZstd,\n      cancellationToken,\n      [encoded.buffer],\n      encoded,\n    );\n  },\n});\n","/**\n * @license\n * Copyright 2023 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Configuration } from \"#src/datasource/zarr/codec/bytes/resolve.js\";\nimport { registerCodec } from \"#src/datasource/zarr/codec/decode.js\";\nimport type { CodecArrayInfo } from \"#src/datasource/zarr/codec/index.js\";\nimport { CodecKind } from \"#src/datasource/zarr/codec/index.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport { DATA_TYPE_BYTES, makeDataTypeArrayView } from \"#src/util/data_type.js\";\nimport { convertEndian } from \"#src/util/endian.js\";\n\nregisterCodec({\n  name: \"bytes\",\n  kind: CodecKind.arrayToBytes,\n  async decode(\n    configuration: Configuration,\n    decodedArrayInfo: CodecArrayInfo,\n    encoded: Uint8Array,\n    cancellationToken: CancellationToken,\n  ): Promise<ArrayBufferView> {\n    cancellationToken;\n    const { dataType, chunkShape } = decodedArrayInfo;\n    const numElements = chunkShape.reduce((a, b) => a * b, 1);\n    const bytesPerElement = DATA_TYPE_BYTES[dataType];\n    const expectedBytes = numElements * bytesPerElement;\n    if (encoded.byteLength !== expectedBytes) {\n      throw new Error(\n        `Raw-format chunk is ${encoded.byteLength} bytes, ` +\n          `but ${numElements} * ${bytesPerElement} = ${expectedBytes} bytes are expected.`,\n      );\n    }\n    const data = makeDataTypeArrayView(\n      dataType,\n      encoded.buffer,\n      encoded.byteOffset,\n      encoded.byteLength,\n    );\n    convertEndian(data, configuration.endian, bytesPerElement);\n    return data;\n  },\n});\n","/**\n * @license\n * Copyright 2023 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Configuration } from \"#src/datasource/zarr/codec/crc32c/resolve.js\";\nimport { registerCodec } from \"#src/datasource/zarr/codec/decode.js\";\nimport { CodecKind } from \"#src/datasource/zarr/codec/index.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\n\nconst checksumSize = 4;\n\nregisterCodec({\n  name: \"crc32c\",\n  kind: CodecKind.bytesToBytes,\n  async decode(\n    configuration: Configuration,\n    encoded: Uint8Array,\n    cancellationToken: CancellationToken,\n  ): Promise<Uint8Array> {\n    configuration;\n    cancellationToken;\n    if (encoded.length < checksumSize) {\n      throw new Error(\n        `Expected buffer of size at least ${checksumSize} bytes but received: ${encoded.length} bytes`,\n      );\n    }\n    // TODO(jbms): Actually verify checksum.\n    return encoded.subarray(0, encoded.length - checksumSize);\n  },\n});\n","/**\n * @license\n * Copyright 2023 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeGzip } from \"#src/async_computation/decode_gzip_request.js\";\nimport { requestAsyncComputation } from \"#src/async_computation/request.js\";\nimport { registerCodec } from \"#src/datasource/zarr/codec/decode.js\";\nimport type { Configuration } from \"#src/datasource/zarr/codec/gzip/resolve.js\";\nimport { CodecKind } from \"#src/datasource/zarr/codec/index.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\n\nregisterCodec({\n  name: \"gzip\",\n  kind: CodecKind.bytesToBytes,\n  decode(\n    configuration: Configuration,\n    encoded: Uint8Array,\n    cancellationToken: CancellationToken,\n  ): Promise<Uint8Array> {\n    configuration;\n    return requestAsyncComputation(\n      decodeGzip,\n      cancellationToken,\n      [encoded.buffer],\n      encoded,\n    );\n  },\n});\n","/**\n * @license\n * Copyright 2023 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  verifyObject,\n  verifyObjectProperty,\n  verifyString,\n} from \"#src/util/json.js\";\n\nexport function parseNameAndConfiguration<Name, Configuration>(\n  obj: unknown,\n  parseName: (name: string) => Name,\n  parseConfiguration: (configuration: unknown, name: Name) => Configuration,\n): { name: Name; configuration: Configuration } {\n  verifyObject(obj);\n  const name = verifyObjectProperty(obj, \"name\", (value) =>\n    parseName(verifyString(value)),\n  );\n  const configuration = verifyObjectProperty(obj, \"configuration\", (value) => {\n    if (value === undefined) {\n      value = {};\n    } else {\n      verifyObject(value);\n    }\n    return parseConfiguration(value, name);\n  });\n  return { name, configuration };\n}\n","/**\n * @license\n * Copyright 2023 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  CodecArrayInfo,\n  CodecArrayLayoutInfo,\n  CodecChainSpec,\n  CodecSpec,\n  ShardingInfo,\n} from \"#src/datasource/zarr/codec/index.js\";\nimport { CodecKind } from \"#src/datasource/zarr/codec/index.js\";\nimport { parseNameAndConfiguration } from \"#src/datasource/zarr/metadata/parse_util.js\";\nimport { parseArray } from \"#src/util/json.js\";\n\nfunction getCodecResolver(obj: unknown): {\n  resolver: CodecResolver;\n  configuration: unknown;\n} {\n  const { name: resolver, configuration } = parseNameAndConfiguration(\n    obj,\n    (name) => {\n      const resolver = codecRegistry.get(name);\n      if (resolver === undefined) {\n        throw new Error(`Unknown codec: ${JSON.stringify(name)}`);\n      }\n      return resolver;\n    },\n    (configuration) => configuration,\n  );\n  return { resolver, configuration };\n}\n\nexport interface CodecResolver {\n  name: string;\n  kind: CodecKind;\n}\n\nexport interface ArrayToArrayCodecResolver<Configuration>\n  extends CodecResolver {\n  kind: CodecKind.arrayToArray;\n  resolve(\n    configuration: unknown,\n    decodedArrayInfo: CodecArrayInfo,\n  ): {\n    configuration: Configuration;\n    encodedArrayInfo: CodecArrayInfo;\n  };\n  getDecodedArrayLayoutInfo(\n    configuration: Configuration,\n    decodedArrayInfo: CodecArrayInfo,\n    encodedLayout: CodecArrayLayoutInfo,\n  ): CodecArrayLayoutInfo;\n}\n\nexport interface ArrayToBytesCodecResolver<Configuration>\n  extends CodecResolver {\n  kind: CodecKind.arrayToBytes;\n  resolve(\n    configuration: unknown,\n    decodedArrayInfo: CodecArrayInfo,\n  ): {\n    configuration: Configuration;\n    shardingInfo?: ShardingInfo;\n    encodedSize?: number;\n  };\n  getDecodedArrayLayoutInfo(\n    configuration: Configuration,\n    decodedArrayInfo: CodecArrayInfo,\n  ): CodecArrayLayoutInfo;\n}\n\nexport interface BytesToBytesCodecResolver<Configuration>\n  extends CodecResolver {\n  kind: CodecKind.bytesToBytes;\n  resolve(\n    configuration: unknown,\n    decodedSize: number | undefined,\n  ): {\n    configuration: Configuration;\n    encodedSize?: number;\n  };\n}\n\nconst codecRegistry = new Map<string, CodecResolver>();\n\nexport function registerCodec<Configuration>(\n  resolver:\n    | ArrayToArrayCodecResolver<Configuration>\n    | ArrayToBytesCodecResolver<Configuration>\n    | BytesToBytesCodecResolver<Configuration>,\n) {\n  codecRegistry.set(resolver.name, resolver);\n}\n\nexport function parseCodecChainSpec(\n  obj: unknown,\n  decodedArrayInfo: CodecArrayInfo,\n): CodecChainSpec {\n  const arrayToArray: CodecSpec<CodecKind.arrayToArray>[] = [];\n  const arrayInfo: CodecArrayInfo[] = [];\n  const layoutInfo: CodecArrayLayoutInfo[] = [];\n  const encodedSize: (number | undefined)[] = [];\n\n  arrayInfo.push(decodedArrayInfo);\n\n  const codecSpecs = parseArray(obj, getCodecResolver);\n  const numCodecs = codecSpecs.length;\n  let i = 0;\n\n  for (; i < numCodecs; ++i) {\n    const { resolver, configuration: initialConfiguration } = codecSpecs[i];\n    if (resolver.kind !== CodecKind.arrayToArray) {\n      break;\n    }\n    const arrayResolver = resolver as ArrayToArrayCodecResolver<unknown>;\n    const { configuration, encodedArrayInfo } = arrayResolver.resolve(\n      initialConfiguration,\n      decodedArrayInfo,\n    );\n    arrayInfo.push(encodedArrayInfo);\n    decodedArrayInfo = encodedArrayInfo;\n    arrayToArray.push({\n      kind: CodecKind.arrayToArray,\n      name: resolver.name,\n      configuration,\n    });\n  }\n\n  if (\n    i === numCodecs ||\n    codecSpecs[i].resolver.kind !== CodecKind.arrayToBytes\n  ) {\n    throw new Error(\"Missing array -> bytes codec\");\n  }\n\n  const {\n    codecSpec: arrayToBytes,\n    layoutInfo: finalLayoutInfo,\n    encodedSize: initialEncodedSize,\n    shardingInfo,\n  } = (() => {\n    const { resolver, configuration: initialConfiguration } = codecSpecs[i];\n    const arrayToBytesResolver = resolver as ArrayToBytesCodecResolver<unknown>;\n    const { configuration, shardingInfo, encodedSize } =\n      arrayToBytesResolver.resolve(initialConfiguration, decodedArrayInfo);\n    if (shardingInfo !== undefined) {\n      if (i + 1 !== numCodecs) {\n        throw new Error(\n          \"bytes -> bytes codecs not supported following sharding codec\",\n        );\n      }\n    }\n    const layoutInfo = arrayToBytesResolver.getDecodedArrayLayoutInfo(\n      configuration,\n      decodedArrayInfo,\n    );\n    const codecSpec: CodecSpec<CodecKind.arrayToBytes> = {\n      name: resolver.name,\n      kind: CodecKind.arrayToBytes,\n      configuration,\n    };\n    return { codecSpec, layoutInfo, encodedSize, shardingInfo };\n  })();\n\n  layoutInfo[i] = finalLayoutInfo;\n  encodedSize.push(initialEncodedSize);\n  const curEncodedSize = initialEncodedSize;\n\n  const bytesToBytes: CodecSpec<CodecKind.bytesToBytes>[] = [];\n\n  ++i;\n\n  while (i < numCodecs) {\n    const { resolver, configuration: initialConfiguration } = codecSpecs[i];\n    if (resolver.kind !== CodecKind.bytesToBytes) {\n      throw new Error(\n        `Expected bytes -> bytes codec, but received ${JSON.stringify(\n          resolver.name,\n        )} of kind ${CodecKind[resolver.kind]}`,\n      );\n    }\n    const bytesResolver = resolver as BytesToBytesCodecResolver<unknown>;\n    const { configuration, encodedSize: newEncodedSize } =\n      bytesResolver.resolve(initialConfiguration, curEncodedSize);\n    bytesToBytes.push({\n      name: resolver.name,\n      kind: resolver.kind,\n      configuration,\n    });\n    encodedSize.push(newEncodedSize);\n    ++i;\n  }\n\n  for (let j = arrayToArray.length - 1; j >= 0; --j) {\n    layoutInfo[j] = (\n      codecSpecs[j].resolver as ArrayToArrayCodecResolver<unknown>\n    ).getDecodedArrayLayoutInfo(\n      arrayToArray[j].configuration,\n      arrayInfo[j],\n      layoutInfo[j + 1],\n    );\n  }\n\n  return {\n    [CodecKind.arrayToArray]: arrayToArray,\n    [CodecKind.arrayToBytes]: arrayToBytes,\n    [CodecKind.bytesToBytes]: bytesToBytes,\n    arrayInfo,\n    layoutInfo,\n    shardingInfo,\n    encodedSize,\n  };\n}\n","/**\n * @license\n * Copyright 2023 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { CodecChainSpec } from \"#src/datasource/zarr/codec/index.js\";\nimport type { DataType } from \"#src/util/data_type.js\";\nimport type { Uint64 } from \"#src/util/uint64.js\";\n\nexport enum ChunkKeyEncoding {\n  DEFAULT = 0,\n  V2 = 1,\n}\n\nexport type DimensionSeparator = \"/\" | \".\";\n\nexport type NodeType = \"array\" | \"group\";\n\nexport interface ArrayMetadata {\n  zarrVersion: 2 | 3;\n  nodeType: \"array\";\n  rank: number;\n  shape: number[];\n  chunkShape: number[];\n  dataType: DataType;\n  fillValue: number | Uint64;\n  dimensionNames: (string | null)[];\n  dimensionUnits: (string | null)[];\n  userAttributes: Record<string, unknown>;\n  dimensionSeparator: DimensionSeparator;\n  chunkKeyEncoding: ChunkKeyEncoding;\n  codecs: CodecChainSpec;\n}\n\nexport interface GroupMetadata {\n  zarrVersion: 2 | 3;\n  nodeType: \"group\";\n  userAttributes: Record<string, unknown>;\n}\n\nexport type Metadata = ArrayMetadata | GroupMetadata;\n","/**\n * @license\n * Copyright 2023 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { parseCodecChainSpec } from \"#src/datasource/zarr/codec/resolve.js\";\nimport type {\n  ArrayMetadata,\n  DimensionSeparator,\n  Metadata,\n  NodeType,\n} from \"#src/datasource/zarr/metadata/index.js\";\nimport { ChunkKeyEncoding } from \"#src/datasource/zarr/metadata/index.js\";\nimport { parseNameAndConfiguration } from \"#src/datasource/zarr/metadata/parse_util.js\";\nimport { DATA_TYPE_BYTES, DataType } from \"#src/util/data_type.js\";\nimport { Endianness } from \"#src/util/endian.js\";\nimport {\n  parseArray,\n  parseFixedLengthArray,\n  verifyConstant,\n  verifyEnumString,\n  verifyInt,\n  verifyObject,\n  verifyObjectProperty,\n  verifyOptionalFixedLengthArrayOfStringOrNull,\n  verifyOptionalObjectProperty,\n  verifyString,\n} from \"#src/util/json.js\";\nimport { parseNumpyDtype } from \"#src/util/numpy_dtype.js\";\nimport { allSiPrefixes } from \"#src/util/si_units.js\";\n\nfunction parseShape(obj: unknown): number[] {\n  return parseArray(obj, (x) => {\n    if (typeof x !== \"number\" || !Number.isInteger(x) || x < 0) {\n      throw new Error(\n        `Expected non-negative integer, but received: ${JSON.stringify(x)}`,\n      );\n    }\n    return x;\n  });\n}\n\nexport function parseChunkShape(obj: unknown, rank: number): number[] {\n  return parseFixedLengthArray(new Array<number>(rank), obj, (x) => {\n    if (typeof x !== \"number\" || !Number.isInteger(x) || x <= 0) {\n      throw new Error(\n        `Expected positive integer, but received: ${JSON.stringify(x)}`,\n      );\n    }\n    return x;\n  });\n}\n\nexport function parseDimensionSeparator(value: unknown): \"/\" | \".\" {\n  if (value !== \".\" && value !== \"/\") {\n    throw new Error(\n      `Expected \".\" or \"/\", but received: ${JSON.stringify(value)}`,\n    );\n  }\n  return value;\n}\n\nconst UNITS = new Map<string, { unit: string; scale: number }>([\n  [\"\", { unit: \"\", scale: 1 }],\n  [\"angstrom\", { unit: \"m\", scale: 1e-10 }],\n  [\"foot\", { unit: \"m\", scale: 0.3048 }],\n  [\"inch\", { unit: \"m\", scale: 0.0254 }],\n  [\"mile\", { unit: \"m\", scale: 1609.34 }],\n  // eslint-disable-next-line @typescript-eslint/no-loss-of-precision\n  [\"parsec\", { unit: \"m\", scale: 3.0856775814913673e16 }],\n  [\"yard\", { unit: \"m\", scale: 0.9144 }],\n  [\"minute\", { unit: \"s\", scale: 60 }],\n  [\"hour\", { unit: \"s\", scale: 60 * 60 }],\n  [\"day\", { unit: \"s\", scale: 60 * 60 * 24 }],\n]);\n\nfor (const unit of [\"meter\", \"second\"]) {\n  for (const siPrefix of allSiPrefixes) {\n    const { longPrefix, prefix } = siPrefix;\n    if (longPrefix === undefined) continue;\n    const unitInfo = { unit: unit[0], scale: 10 ** siPrefix.exponent };\n    UNITS.set(`${longPrefix}${unit}`, unitInfo);\n    UNITS.set(`${prefix}${unit[0]}`, unitInfo);\n  }\n}\n\nexport function parseDimensionUnit(obj: unknown): {\n  scale: number;\n  unit: string;\n} {\n  if (obj === null) {\n    // Default unit\n    return { scale: 1, unit: \"\" };\n  }\n  if (typeof obj !== \"string\") {\n    throw new Error(`Expected string but received: ${JSON.stringify(obj)}`);\n  }\n  const s = obj.trim();\n  const numberPattern =\n    /^([-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)(?:[eE][-+]?\\d+)?)\\s*(.*)/;\n  const m = s.match(numberPattern);\n  let scale: number;\n  let derivedUnit: string;\n  if (m === null) {\n    scale = 1;\n    derivedUnit = s;\n  } else {\n    scale = Number(m[1]);\n    derivedUnit = m[2];\n  }\n  const unitInfo = UNITS.get(derivedUnit);\n  if (unitInfo === undefined) {\n    throw new Error(`Unsupported unit: ${JSON.stringify(derivedUnit)}`);\n  }\n  return { unit: unitInfo.unit, scale: scale * unitInfo.scale };\n}\n\nfunction parseFillValue(dataType: DataType, value: unknown) {\n  switch (dataType) {\n    case DataType.UINT8:\n    case DataType.INT8:\n    case DataType.UINT16:\n    case DataType.INT16:\n    case DataType.UINT32:\n    case DataType.INT32:\n    case DataType.UINT64:\n      if (typeof value !== \"number\" || !Number.isInteger(value)) {\n        throw new Error(\n          `Expected integer but received: ${JSON.stringify(value)}`,\n        );\n      }\n      return value;\n    case DataType.FLOAT32:\n      if (typeof value === \"number\") {\n        return value;\n      }\n      if (typeof value === \"string\") {\n        if (value === \"Infinity\") {\n          return Number.POSITIVE_INFINITY;\n        }\n        if (value === \"-Infinity\") {\n          return Number.NEGATIVE_INFINITY;\n        }\n        if (value === \"NaN\") {\n          return new Float32Array(Uint32Array.of(0x7fc00000).buffer)[0];\n        }\n        if (value.match(/^0x[a-fA-F0-9]+$/)) {\n          return new Float32Array(Uint32Array.of(Number(value)).buffer)[0];\n        }\n      }\n      throw new Error(\n        `Expected number, \"Infinity\", \"-Infinity\", \"NaN\", or hex string but received: ${JSON.stringify(\n          value,\n        )}`,\n      );\n  }\n}\n\nexport function parseV3Metadata(\n  obj: unknown,\n  expectedNodeType: NodeType | undefined,\n): Metadata {\n  try {\n    verifyObject(obj);\n    verifyObjectProperty(obj, \"zarr_format\", (value) => {\n      verifyConstant(value, 3);\n    });\n    const nodeType: NodeType = verifyObjectProperty(\n      obj,\n      \"node_type\",\n      (value) => {\n        if (expectedNodeType !== undefined) {\n          verifyConstant(value, expectedNodeType);\n        }\n        if (value !== \"array\" && value !== \"group\") {\n          throw new Error(\n            `Expected \"array\" or \"group\" but received: ${JSON.stringify(\n              value,\n            )}`,\n          );\n        }\n        return value;\n      },\n    );\n    expectedNodeType = nodeType;\n\n    if (nodeType === \"group\") {\n      return {\n        zarrVersion: 3,\n        nodeType: \"group\",\n        userAttributes: verifyOptionalObjectProperty(\n          obj,\n          \"attributes\",\n          verifyObject,\n          {},\n        ),\n      };\n    }\n\n    const shape = verifyObjectProperty(obj, \"shape\", parseShape);\n    const rank = shape.length;\n\n    const dimensionNames = verifyObjectProperty(\n      obj,\n      \"dimension_names\",\n      (names) =>\n        verifyOptionalFixedLengthArrayOfStringOrNull(names ?? undefined, rank),\n    );\n\n    const dataType = verifyObjectProperty(obj, \"data_type\", (x) =>\n      verifyEnumString(x, DataType, /^[a-z0-9]+$/),\n    );\n\n    const { configuration: chunkShape } = verifyObjectProperty(\n      obj,\n      \"chunk_grid\",\n      (chunkGrid) =>\n        parseNameAndConfiguration(\n          chunkGrid,\n          (name) => verifyConstant(name, \"regular\"),\n          (configuration) =>\n            verifyObjectProperty(configuration, \"chunk_shape\", (chunks) =>\n              parseChunkShape(chunks, rank),\n            ),\n        ),\n    );\n\n    const { userAttributes, dimensionUnits } = verifyObjectProperty(\n      obj,\n      \"attributes\",\n      (x) => {\n        if (x === undefined) {\n          x = {};\n        }\n        verifyObject(x);\n        const dimensionUnits = verifyObjectProperty(\n          x,\n          \"dimension_units\",\n          (units) => verifyOptionalFixedLengthArrayOfStringOrNull(units, rank),\n        );\n        return { userAttributes: x, dimensionUnits };\n      },\n    );\n\n    const { configuration: dimensionSeparator, name: chunkKeyEncoding } =\n      verifyObjectProperty(obj, \"chunk_key_encoding\", (value) =>\n        parseNameAndConfiguration(\n          value,\n          (name) => verifyEnumString(name, ChunkKeyEncoding, /^(v2|default)$/),\n          (configuration, chunkKeyEncoding) =>\n            verifyOptionalObjectProperty(\n              configuration,\n              \"separator\",\n              parseDimensionSeparator,\n              chunkKeyEncoding === ChunkKeyEncoding.DEFAULT ? \"/\" : \".\",\n            ),\n        ),\n      );\n\n    const fillValue = verifyObjectProperty(obj, \"fill_value\", (value) =>\n      parseFillValue(dataType, value),\n    );\n\n    const codecs = verifyObjectProperty(obj, \"codecs\", (value) =>\n      parseCodecChainSpec(value, { dataType, chunkShape }),\n    );\n\n    return {\n      zarrVersion: 3,\n      nodeType,\n      rank,\n      shape,\n      chunkShape,\n      dataType,\n      fillValue,\n      dimensionNames,\n      dimensionUnits,\n      chunkKeyEncoding,\n      dimensionSeparator,\n      userAttributes,\n      codecs,\n    };\n  } catch (e) {\n    const nodeStr =\n      expectedNodeType === undefined ? \"\" : `${expectedNodeType} `;\n    throw new Error(`Error parsing zarr v3 ${nodeStr}metadata: ${e.message}`);\n  }\n}\n\nexport function parseV2Metadata(\n  obj: unknown,\n  attrs: Record<string, unknown>,\n  explicitDimensionSeparator: \".\" | \"/\" | undefined,\n): ArrayMetadata {\n  try {\n    verifyObject(obj);\n    verifyObjectProperty(obj, \"zarr_format\", (value) => {\n      verifyConstant(value, 2);\n    });\n    const shape = verifyObjectProperty(obj, \"shape\", parseShape);\n    const rank = shape.length;\n    const chunkShape = verifyObjectProperty(obj, \"chunks\", (chunks) =>\n      parseChunkShape(chunks, rank),\n    );\n    const order = verifyObjectProperty(obj, \"order\", (order) => {\n      if (order !== \"C\" && order !== \"F\") {\n        throw new Error(\n          `Expected \"C\" or \"F\", but received: ${JSON.stringify(order)}`,\n        );\n      }\n      return order;\n    });\n    const dimensionSeparator: DimensionSeparator = verifyOptionalObjectProperty(\n      obj,\n      \"dimension_separator\",\n      explicitDimensionSeparator === undefined\n        ? parseDimensionSeparator\n        : (value) => verifyConstant(value, explicitDimensionSeparator),\n      explicitDimensionSeparator ?? \".\",\n    );\n    const numpyDtype = verifyObjectProperty(obj, \"dtype\", (dtype) =>\n      parseNumpyDtype(verifyString(dtype)),\n    );\n\n    const dataType = numpyDtype.dataType;\n    const fillValue = verifyObjectProperty(obj, \"fill_value\", (value) => {\n      if (value === null) {\n        return 0;\n      }\n      return parseFillValue(dataType, value);\n    });\n\n    const codecs = [];\n    if (order === \"F\") {\n      codecs.push({\n        name: \"transpose\",\n        configuration: { order: Array.from(shape, (_, i) => rank - i - 1) },\n      });\n    }\n    codecs.push({\n      name: \"bytes\",\n      configuration: {\n        endian: numpyDtype.endianness === Endianness.LITTLE ? \"little\" : \"big\",\n      },\n    });\n    verifyObjectProperty(obj, \"compressor\", (compressor) => {\n      if (compressor === null) return;\n      verifyObject(compressor);\n      const id = verifyObjectProperty(compressor, \"id\", verifyString);\n      switch (id) {\n        case \"blosc\":\n          codecs.push({\n            name: \"blosc\",\n            configuration: {\n              cname: verifyObjectProperty(compressor, \"cname\", verifyString),\n              clevel: verifyObjectProperty(compressor, \"clevel\", verifyInt),\n              typesize: DATA_TYPE_BYTES[dataType],\n              shuffle: verifyObjectProperty(\n                compressor,\n                \"shuffle\",\n                (shuffle) => {\n                  switch (shuffle) {\n                    case -1:\n                      return DATA_TYPE_BYTES[dataType] === 1\n                        ? \"bitshuffle\"\n                        : \"shuffle\";\n                    case 0:\n                      return \"noshuffle\";\n                    case 1:\n                      return \"shuffle\";\n                    case 2:\n                      return \"bitshuffle\";\n                  }\n                  throw new Error(`Invalid value: ${JSON.stringify(shuffle)}`);\n                },\n              ),\n              blocksize: verifyOptionalObjectProperty(\n                compressor,\n                \"blocksize\",\n                verifyInt,\n                0,\n              ),\n            },\n          });\n          break;\n        case \"zlib\":\n        case \"gzip\":\n          codecs.push({\n            name: \"gzip\",\n            configuration: {\n              level: verifyObjectProperty(compressor, \"level\", verifyInt),\n            },\n          });\n          break;\n        case \"zstd\":\n          codecs.push({\n            name: \"zstd\",\n            configuration: {\n              level: verifyObjectProperty(compressor, \"level\", verifyInt),\n            },\n          });\n          break;\n        default:\n          throw new Error(`Unsupported compressor: ${JSON.stringify(id)}`);\n      }\n    });\n\n    const codecChainSpec = parseCodecChainSpec(codecs, {\n      dataType,\n      chunkShape,\n    });\n\n    return {\n      zarrVersion: 2,\n      nodeType: \"array\",\n      rank,\n      shape,\n      chunkShape,\n      dataType,\n      fillValue,\n      dimensionNames: verifyObjectProperty(\n        attrs,\n        \"_ARRAY_DIMENSIONS\",\n        (names) => verifyOptionalFixedLengthArrayOfStringOrNull(names, rank),\n      ),\n      dimensionUnits: verifyObjectProperty(attrs, \"dimension_units\", (units) =>\n        verifyOptionalFixedLengthArrayOfStringOrNull(units, rank),\n      ),\n      userAttributes: attrs,\n      dimensionSeparator,\n      chunkKeyEncoding: ChunkKeyEncoding.V2,\n      codecs: codecChainSpec,\n    };\n  } catch (e) {\n    throw new Error(`Error parsing zarr v2 metadata: ${e.message}`);\n  }\n}\n","/**\n * @license\n * Copyright 2023 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  CodecArrayInfo,\n  CodecArrayLayoutInfo,\n  CodecChainSpec,\n} from \"#src/datasource/zarr/codec/index.js\";\nimport { CodecKind } from \"#src/datasource/zarr/codec/index.js\";\nimport {\n  parseCodecChainSpec,\n  registerCodec,\n} from \"#src/datasource/zarr/codec/resolve.js\";\nimport { parseChunkShape } from \"#src/datasource/zarr/metadata/parse.js\";\nimport { DataType } from \"#src/util/data_type.js\";\nimport {\n  verifyEnumString,\n  verifyObject,\n  verifyObjectProperty,\n  verifyOptionalObjectProperty,\n} from \"#src/util/json.js\";\n\nexport enum ShardIndexLocation {\n  START,\n  END,\n}\n\nexport interface Configuration {\n  indexCodecs: CodecChainSpec;\n  indexLocation: ShardIndexLocation;\n  subChunkCodecs: CodecChainSpec;\n  subChunkShape: number[];\n  subChunkGridShape: number[];\n}\n\nregisterCodec({\n  name: \"sharding_indexed\",\n  kind: CodecKind.arrayToBytes,\n  resolve(configuration: unknown, decodedArrayInfo: CodecArrayInfo) {\n    verifyObject(configuration);\n    const subChunkShape = verifyObjectProperty(\n      configuration,\n      \"chunk_shape\",\n      (value) => parseChunkShape(value, decodedArrayInfo.chunkShape.length),\n    );\n    const indexLocation = verifyOptionalObjectProperty(\n      configuration,\n      \"index_location\",\n      (x) => verifyEnumString(x, ShardIndexLocation, /^[a-z]+$/),\n      ShardIndexLocation.END,\n    );\n    const subChunkGridShape = Array.from(\n      decodedArrayInfo.chunkShape,\n      (outerSize, i) => {\n        const innerSize = subChunkShape[i];\n        if (outerSize % innerSize !== 0) {\n          throw new Error(\n            `sub-chunk shape of ${JSON.stringify(\n              innerSize,\n            )} does not evenly divide outer chunk shape of ${JSON.stringify(\n              decodedArrayInfo.chunkShape,\n            )}`,\n          );\n        }\n        return outerSize / innerSize;\n      },\n    );\n    const indexShape = Array.from(subChunkGridShape);\n    indexShape.push(2);\n    const indexCodecs = verifyObjectProperty(\n      configuration,\n      \"index_codecs\",\n      (value) =>\n        parseCodecChainSpec(value, {\n          dataType: DataType.UINT64,\n          chunkShape: indexShape,\n        }),\n    );\n    if (\n      indexCodecs.encodedSize[indexCodecs.encodedSize.length - 1] === undefined\n    ) {\n      throw new Error(\"index_codecs must specify fixed-size encoding\");\n    }\n    const subChunkCodecs = verifyObjectProperty(\n      configuration,\n      \"codecs\",\n      (value) =>\n        parseCodecChainSpec(value, {\n          dataType: decodedArrayInfo.dataType,\n          chunkShape: subChunkShape,\n        }),\n    );\n    return {\n      configuration: {\n        indexCodecs,\n        subChunkCodecs,\n        subChunkShape,\n        subChunkGridShape,\n        indexLocation,\n      },\n      shardingInfo: { subChunkShape, subChunkGridShape, subChunkCodecs },\n    };\n  },\n  getDecodedArrayLayoutInfo(\n    configuration: Configuration,\n    decodedArrayInfo: CodecArrayInfo,\n  ): CodecArrayLayoutInfo {\n    decodedArrayInfo;\n    return configuration.subChunkCodecs.layoutInfo[0];\n  },\n});\n","/**\n * @license\n * Copyright 2023 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\n\nexport interface ByteRange {\n  offset: number;\n  length: number;\n}\n\nexport function composeByteRangeRequest(\n  outer: ByteRange,\n  inner: ByteRangeRequest | undefined,\n): { outer: ByteRange; inner: ByteRange } {\n  if (inner === undefined) {\n    return { outer, inner: { offset: 0, length: outer.length } };\n  }\n  if (\"suffixLength\" in inner) {\n    const length = Math.min(outer.length, inner.suffixLength);\n    return {\n      outer: { offset: outer.offset + (outer.length - length), length },\n      inner: { offset: outer.length - length, length },\n    };\n  }\n  if (inner.offset + inner.length > outer.length) {\n    throw new Error(\n      `Requested byte range ${JSON.stringify(\n        inner,\n      )} not valid for value of length ${outer.length}`,\n    );\n  }\n  return {\n    outer: { offset: outer.offset + inner.offset, length: inner.length },\n    inner,\n  };\n}\n\nexport type ByteRangeRequest =\n  | ByteRange\n  | {\n      suffixLength: number;\n    };\n\nexport interface ReadResponse {\n  data: Uint8Array;\n  dataRange: ByteRange;\n  totalSize: number | undefined;\n}\n\nexport interface ReadOptions {\n  byteRange?: ByteRangeRequest;\n  cancellationToken?: CancellationToken;\n}\n\nexport interface ListOptions {\n  prefix: string;\n  cancellationToken?: CancellationToken;\n}\n\nexport interface ListEntry {\n  key: string;\n}\n\nexport interface ListResponse {\n  entries: ListEntry[];\n  directories: string[];\n}\n\nexport interface ReadableKvStore<Key = string> {\n  read(key: Key, options: ReadOptions): Promise<ReadResponse | undefined>;\n}\n\nexport interface ListableKvStore {\n  list(options: ListOptions): Promise<ListResponse>;\n}\n\nexport interface KvStore extends ReadableKvStore, ListableKvStore {}\n","/**\n * @license\n * Copyright 2023 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ChunkManager } from \"#src/chunk_manager/backend.js\";\nimport { SimpleAsyncCache } from \"#src/chunk_manager/generic_file_source.js\";\nimport {\n  decodeArray,\n  registerCodec,\n} from \"#src/datasource/zarr/codec/decode.js\";\nimport { CodecKind } from \"#src/datasource/zarr/codec/index.js\";\nimport type { Configuration } from \"#src/datasource/zarr/codec/sharding_indexed/resolve.js\";\nimport { ShardIndexLocation } from \"#src/datasource/zarr/codec/sharding_indexed/resolve.js\";\nimport type {\n  ByteRangeRequest,\n  ReadableKvStore,\n  ReadOptions,\n  ReadResponse,\n} from \"#src/kvstore/index.js\";\nimport { composeByteRangeRequest } from \"#src/kvstore/index.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport { uncancelableToken } from \"#src/util/cancellation.js\";\nimport type { Owned } from \"#src/util/disposable.js\";\nimport { RefCounted } from \"#src/util/disposable.js\";\n\ntype ShardIndex = BigUint64Array | undefined;\n\nconst MISSING_VALUE = BigInt(\"18446744073709551615\");\n\nclass ShardedKvStore<BaseKey>\n  extends RefCounted\n  implements ReadableKvStore<{ base: BaseKey; subChunk: number[] }>\n{\n  private indexCache: Owned<SimpleAsyncCache<BaseKey, ShardIndex>>;\n  private indexStrides: number[];\n  constructor(\n    private configuration: Configuration,\n    chunkManager: ChunkManager,\n    private base: ReadableKvStore<BaseKey>,\n  ) {\n    super();\n    this.indexCache = this.registerDisposer(\n      new SimpleAsyncCache(chunkManager.addRef(), {\n        get: async (key: BaseKey, cancellationToken: CancellationToken) => {\n          const { indexCodecs } = configuration;\n          const encodedSize =\n            indexCodecs.encodedSize[indexCodecs.encodedSize.length - 1];\n          let byteRange: ByteRangeRequest;\n          switch (configuration.indexLocation) {\n            case ShardIndexLocation.START:\n              byteRange = { offset: 0, length: encodedSize! };\n              break;\n            case ShardIndexLocation.END:\n              byteRange = { suffixLength: encodedSize! };\n              break;\n          }\n          const response = await base.read(key, {\n            cancellationToken,\n            byteRange,\n          });\n          if (response === undefined) {\n            return { size: 0, data: undefined };\n          }\n          const index = await decodeArray(\n            configuration.indexCodecs,\n            response.data,\n            cancellationToken,\n          );\n          return {\n            size: index.byteLength,\n            data: new BigUint64Array(\n              index.buffer,\n              index.byteOffset,\n              index.byteLength / 8,\n            ),\n          };\n        },\n      }),\n    );\n    const { subChunkGridShape } = this.configuration;\n    const rank = subChunkGridShape.length;\n    const physicalToLogicalIndexDimension =\n      this.configuration.indexCodecs.layoutInfo[0].physicalToLogicalDimension;\n    const indexStrides = (this.indexStrides = new Array(rank + 1));\n    let stride = 1;\n    for (\n      let physicalIndexDim = rank;\n      physicalIndexDim >= 0;\n      --physicalIndexDim\n    ) {\n      const logicalIndexDim = physicalToLogicalIndexDimension[physicalIndexDim];\n      indexStrides[logicalIndexDim] = stride;\n      stride *=\n        logicalIndexDim === rank ? 2 : subChunkGridShape[logicalIndexDim];\n    }\n  }\n\n  async read(\n    key: { base: BaseKey; subChunk: number[] },\n    options: ReadOptions,\n  ): Promise<ReadResponse | undefined> {\n    const shardIndex = await this.indexCache.get(\n      key.base,\n      options.cancellationToken ?? uncancelableToken,\n    );\n    if (shardIndex === undefined) {\n      // Shard not present.\n      return undefined;\n    }\n    const rank = this.configuration.subChunkShape.length;\n    const { subChunk } = key;\n    const { indexStrides } = this;\n    let indexOffset = 0;\n    for (let logicalIndexDim = 0; logicalIndexDim < rank; ++logicalIndexDim) {\n      const pos = subChunk[logicalIndexDim];\n      indexOffset += pos * indexStrides[logicalIndexDim];\n    }\n    const dataOffset = shardIndex[indexOffset];\n    const dataLength = shardIndex[indexOffset + indexStrides[rank]];\n    if (dataOffset === MISSING_VALUE && dataLength === MISSING_VALUE) {\n      // Sub-chunk not present.\n      return undefined;\n    }\n    const fullByteRange = {\n      offset: Number(dataOffset),\n      length: Number(dataLength),\n    };\n    const { outer: outerByteRange, inner: innerByteRange } =\n      composeByteRangeRequest(fullByteRange, options.byteRange);\n    if (outerByteRange.length === 0) {\n      return {\n        data: new Uint8Array(0),\n        dataRange: innerByteRange,\n        totalSize: fullByteRange.length,\n      };\n    }\n    const response = await this.base.read(key.base, {\n      cancellationToken: options.cancellationToken,\n      byteRange: outerByteRange,\n    });\n    if (response === undefined) {\n      // Shard unexpectedly deleted.\n      return undefined;\n    }\n    if (\n      response.dataRange.offset !== outerByteRange.offset ||\n      response.dataRange.length !== outerByteRange.length\n    ) {\n      throw new Error(\n        `Received truncated response, expected ${JSON.stringify(\n          outerByteRange,\n        )} but received ${JSON.stringify(response.dataRange)}`,\n      );\n    }\n    return {\n      data: response.data,\n      dataRange: innerByteRange,\n      totalSize: fullByteRange.length,\n    };\n  }\n}\n\nregisterCodec({\n  name: \"sharding_indexed\",\n  kind: CodecKind.arrayToBytes,\n  getShardedKvStore<BaseKey>(\n    configuration: Configuration,\n    chunkManager: ChunkManager,\n    base: ReadableKvStore<BaseKey>,\n  ): ReadableKvStore<{ base: BaseKey; subChunk: number[] }> & RefCounted {\n    return new ShardedKvStore(configuration, chunkManager, base);\n  },\n});\n","/**\n * @license\n * Copyright 2023 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCodec } from \"#src/datasource/zarr/codec/decode.js\";\nimport type { CodecArrayInfo } from \"#src/datasource/zarr/codec/index.js\";\nimport { CodecKind } from \"#src/datasource/zarr/codec/index.js\";\nimport type { Configuration } from \"#src/datasource/zarr/codec/transpose/resolve.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\n\nregisterCodec({\n  name: \"transpose\",\n  kind: CodecKind.arrayToArray,\n  async decode(\n    configuration: Configuration,\n    decodedArrayInfo: CodecArrayInfo,\n    encoded: ArrayBufferView,\n    cancellationToken: CancellationToken,\n  ): Promise<ArrayBufferView> {\n    decodedArrayInfo;\n    cancellationToken;\n    configuration;\n    return encoded;\n  },\n});\n","/**\n * @license\n * Copyright 2023 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  ByteRange,\n  ByteRangeRequest,\n  ReadableKvStore,\n  ReadOptions,\n  ReadResponse,\n} from \"#src/kvstore/index.js\";\nimport { composeByteRangeRequest } from \"#src/kvstore/index.js\";\nimport { uncancelableToken } from \"#src/util/cancellation.js\";\nimport { HttpError, isNotFoundError } from \"#src/util/http_request.js\";\nimport type { SpecialProtocolCredentialsProvider } from \"#src/util/special_protocol_request.js\";\nimport { cancellableFetchSpecialOk } from \"#src/util/special_protocol_request.js\";\n\nfunction getRangeHeader(\n  request: ByteRangeRequest | undefined,\n): string | undefined {\n  if (request === undefined) return undefined;\n  if (\"suffixLength\" in request) {\n    return `bytes=-${request.suffixLength}`;\n  }\n  return `bytes=${request.offset}-${request.offset + request.length - 1}`;\n}\n\n/**\n * On Chromium, multiple concurrent byte range requests to the same URL are serialized unless the\n * cache is disabled.  Disabling the cache works around the problem.\n *\n * https://bugs.chromium.org/p/chromium/issues/detail?id=969828\n */\nconst byteRangeCacheMode =\n  navigator.userAgent.indexOf(\"Chrome\") !== -1 ? \"no-store\" : \"default\";\n\nclass SpecialProtocolKvStore implements ReadableKvStore {\n  constructor(\n    public credentialsProvider: SpecialProtocolCredentialsProvider,\n    public baseUrl: string,\n  ) {}\n\n  async getObjectLength(url: string, options: ReadOptions) {\n    // Use a HEAD request to get the length of an object\n    const { cancellationToken = uncancelableToken } = options;\n    const headResponse = await cancellableFetchSpecialOk(\n      this.credentialsProvider,\n      url,\n      { method: \"HEAD\" },\n      async (response) => response,\n      cancellationToken,\n    );\n\n    if (headResponse.status !== 200) {\n      throw new Error(\n        \"Failed to determine total size in order to fetch suffix\",\n      );\n    }\n    const contentLength = headResponse.headers.get(\"content-length\");\n    if (contentLength === undefined) {\n      throw new Error(\n        \"Failed to determine total size in order to fetch suffix\",\n      );\n    }\n    const contentLengthNumber = Number(contentLength);\n    return contentLengthNumber;\n  }\n\n  async read(\n    key: string,\n    options: ReadOptions,\n  ): Promise<ReadResponse | undefined> {\n    const { cancellationToken = uncancelableToken } = options;\n    let { byteRange: byteRangeRequest } = options;\n    const url = this.baseUrl + key;\n    for (let attempt = 0; ; ++attempt) {\n      try {\n        const requestInit: RequestInit = {};\n        const rangeHeader = getRangeHeader(byteRangeRequest);\n        if (rangeHeader !== undefined) {\n          requestInit.headers = { range: rangeHeader };\n          requestInit.cache = byteRangeCacheMode;\n        }\n        const { response, data } = await cancellableFetchSpecialOk(\n          this.credentialsProvider,\n          url,\n          requestInit,\n          async (response) => ({\n            response,\n            data: await response.arrayBuffer(),\n          }),\n          cancellationToken,\n        );\n        let byteRange: ByteRange | undefined;\n        let totalSize: number | undefined;\n        if (response.status === 206) {\n          const contentRange = response.headers.get(\"content-range\");\n          if (contentRange === null) {\n            if (byteRangeRequest !== undefined) {\n              if (\"suffixLength\" in byteRangeRequest) {\n                const objectSize = await this.getObjectLength(url, options);\n                byteRange = {\n                  offset: objectSize - byteRangeRequest.suffixLength,\n                  length: Number(response.headers.get(\"content-length\")),\n                };\n              } else {\n                byteRange = {\n                  offset: byteRangeRequest.offset,\n                  length: data.byteLength,\n                };\n              }\n            } else {\n              throw new Error(\n                \"Unexpected HTTP 206 response when no byte range specified.\",\n              );\n            }\n          }\n          if (contentRange !== null) {\n            const m = contentRange.match(\n              /bytes ([0-9]+)-([0-9]+)\\/([0-9]+|\\*)/,\n            );\n            if (m === null) {\n              throw new Error(\n                `Invalid content-range header: ${JSON.stringify(contentRange)}`,\n              );\n            }\n            const beginPos = parseInt(m[1], 10);\n            const endPos = parseInt(m[2], 10);\n            if (endPos !== beginPos + data.byteLength - 1) {\n              throw new Error(\n                `Length in content-range header ${JSON.stringify(\n                  contentRange,\n                )} does not match content length ${data.byteLength}`,\n              );\n            }\n            totalSize = m[3] === \"*\" ? undefined : parseInt(m[3], 10);\n            byteRange = { offset: beginPos, length: data.byteLength };\n          }\n        }\n        if (byteRange === undefined) {\n          byteRange = { offset: 0, length: data.byteLength };\n          totalSize = data.byteLength;\n        }\n        return { data: new Uint8Array(data), dataRange: byteRange, totalSize };\n      } catch (e) {\n        if (\n          attempt === 0 &&\n          e instanceof HttpError &&\n          e.status === 416 &&\n          options.byteRange !== undefined &&\n          \"suffixLength\" in options.byteRange\n        ) {\n          // Some servers, such as the npm http-server package, do not support suffixLength\n          // byte-range requests.\n          const contentLengthNumber = await this.getObjectLength(url, options);\n          byteRangeRequest = composeByteRangeRequest(\n            { offset: 0, length: contentLengthNumber },\n            byteRangeRequest,\n          ).outer;\n          continue;\n        }\n        if (isNotFoundError(e)) {\n          return undefined;\n        }\n        throw e;\n      }\n    }\n  }\n}\nexport function getSpecialProtocolKvStore(\n  credentialsProvider: SpecialProtocolCredentialsProvider,\n  baseUrl: string,\n): ReadableKvStore {\n  return new SpecialProtocolKvStore(credentialsProvider, baseUrl);\n}\n","/**\n * @license\n * Copyright 2020 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"#src/datasource/zarr/codec/blosc/decode.js\";\nimport \"#src/datasource/zarr/codec/zstd/decode.js\";\nimport \"#src/datasource/zarr/codec/bytes/decode.js\";\nimport \"#src/datasource/zarr/codec/crc32c/decode.js\";\n\nimport { WithParameters } from \"#src/chunk_manager/backend.js\";\nimport { WithSharedCredentialsProviderCounterpart } from \"#src/credentials_provider/shared_counterpart.js\";\nimport { VolumeChunkSourceParameters } from \"#src/datasource/zarr/base.js\";\nimport {\n  applySharding,\n  decodeArray,\n} from \"#src/datasource/zarr/codec/decode.js\";\nimport \"#src/datasource/zarr/codec/gzip/decode.js\";\nimport \"#src/datasource/zarr/codec/sharding_indexed/decode.js\";\nimport \"#src/datasource/zarr/codec/transpose/decode.js\";\nimport { ChunkKeyEncoding } from \"#src/datasource/zarr/metadata/index.js\";\nimport { getSpecialProtocolKvStore } from \"#src/kvstore/special/index.js\";\nimport { postProcessRawData } from \"#src/sliceview/backend_chunk_decoders/postprocess.js\";\nimport type { VolumeChunk } from \"#src/sliceview/volume/backend.js\";\nimport { VolumeChunkSource } from \"#src/sliceview/volume/backend.js\";\nimport type { CancellationToken } from \"#src/util/cancellation.js\";\nimport type { SpecialProtocolCredentials } from \"#src/util/special_protocol_request.js\";\nimport { registerSharedObject } from \"#src/worker_rpc.js\";\n\n@registerSharedObject()\nexport class ZarrVolumeChunkSource extends WithParameters(\n  WithSharedCredentialsProviderCounterpart<SpecialProtocolCredentials>()(\n    VolumeChunkSource,\n  ),\n  VolumeChunkSourceParameters,\n) {\n  private chunkKvStore = applySharding(\n    this.chunkManager,\n    this.parameters.metadata.codecs,\n    getSpecialProtocolKvStore(\n      this.credentialsProvider,\n      this.parameters.url + \"/\",\n    ),\n  );\n\n  async download(chunk: VolumeChunk, cancellationToken: CancellationToken) {\n    chunk.chunkDataSize = this.spec.chunkDataSize;\n    const { parameters } = this;\n    const { chunkGridPosition } = chunk;\n    const { metadata } = parameters;\n    let baseKey = \"\";\n    const rank = this.spec.rank;\n    const { physicalToLogicalDimension } = metadata.codecs.layoutInfo[0];\n    let sep: string;\n    if (metadata.chunkKeyEncoding === ChunkKeyEncoding.DEFAULT) {\n      baseKey += \"c\";\n      sep = metadata.dimensionSeparator;\n    } else {\n      sep = \"\";\n      if (rank === 0) {\n        baseKey += \"0\";\n      }\n    }\n    const keyCoords = new Array<number>(rank);\n    const { readChunkShape } = metadata.codecs.layoutInfo[0];\n    const { chunkShape } = metadata;\n    for (\n      let fOrderPhysicalDim = 0;\n      fOrderPhysicalDim < rank;\n      ++fOrderPhysicalDim\n    ) {\n      const decodedDim =\n        physicalToLogicalDimension[rank - 1 - fOrderPhysicalDim];\n      keyCoords[decodedDim] = Math.floor(\n        (chunkGridPosition[fOrderPhysicalDim] * readChunkShape[decodedDim]) /\n          chunkShape[decodedDim],\n      );\n    }\n    for (let i = 0; i < rank; ++i) {\n      baseKey += `${sep}${keyCoords[i]}`;\n      sep = metadata.dimensionSeparator;\n    }\n    const { chunkKvStore } = this;\n    const response = await chunkKvStore.kvStore.read(\n      chunkKvStore.getChunkKey(chunkGridPosition, baseKey),\n      { cancellationToken },\n    );\n    if (response !== undefined) {\n      const decoded = await decodeArray(\n        chunkKvStore.decodeCodecs,\n        response.data,\n        cancellationToken,\n      );\n      await postProcessRawData(chunk, cancellationToken, decoded);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RPC } from \"#src/worker_rpc.js\";\n\nexport const rpc = new RPC(self, /*waitUntilReady=*/ false);\nrpc.sendReady();\n(globalThis as any).rpc = rpc;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [562,108,367], () => (__webpack_require__(6499)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames not based on template\n\tif (chunkId === 562) return \"562.1d0cecad9cc0725955f0.js\";\n\tif (chunkId === 367) return \"367.ad6071abcab399305157.js\";\n\t// return url for filenames based on template\n\treturn \"\" + (chunkId === 491 ? \"neuroglancer_async_computation\" : chunkId) + \".\" + {\"108\":\"0a5667e8aa66afecd11a\",\"491\":\"0e1ff0b6cf9b1e029679\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (typeof import.meta.url === \"string\") scriptUrl = import.meta.url\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = new URL(\"./\", import.meta.url);\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t717: 0\n};\n\nvar installChunk = (data) => {\n\tvar {ids, modules, runtime} = data;\n\t// add \"modules\" to the modules object,\n\t// then flag all \"ids\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in modules) {\n\t\tif(__webpack_require__.o(modules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = modules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tfor(;i < ids.length; i++) {\n\t\tchunkId = ids[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[ids[i]] = 0;\n\t}\n\t__webpack_require__.O();\n}\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// import() chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[1]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = import(\"./\" + __webpack_require__.u(chunkId)).then(installChunk, (e) => {\n\t\t\t\t\t\tif(installedChunks[chunkId] !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t});\n\t\t\t\t\tvar promise = Promise.race([promise, new Promise((resolve) => (installedChunkData = installedChunks[chunkId] = [resolve]))])\n\t\t\t\t\tpromises.push(installedChunkData[1] = promise);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no external install chunk\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([562,108,367].map(__webpack_require__.e, __webpack_require__)).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["VisibleSegmentEquivalencePolicy","isBaseSegmentId","segmentId","UNKNOWN_NEW_SEGMENT_ID","WatchableValue","value_","newValue","TrackableValue","value","validator","defaultValue","x","DerivedWatchableValue","f","ws","w","makeDerivedWatchableValue","CachedLazyDerivedWatchableValue","generation","makeCachedLazyDerivedWatchableValue","CachedWatchableValue","base","isEqual","a","b","makeCachedDerivedWatchableValue","derived","cached","AggregateWatchableValue","getWatchables","watchables","keys","updateValue","obj","k","watchable","ComputedWatchableValue","signals","signal","WatchableRefCounted","valueHandler","TrackableRefCounted","jsonConverter","WatchableSet","values","registerNested","count","context","result","handleChange","changed","i","signalDisposers","registerNestedSync","constantWatchableValue","observeWatchable","callback","linkWatchableValue","source","target","IndirectWatchableValue","outer","getInner","disposer","inner","IndirectTrackableValue","CancellationError","CANCELED","throwIfCanceled","token","noopFunction","uncancelableToken","CancellationTokenSource","handlers","handler","MultipleConsumerCancellationTokenSource","cancellationToken","consumers","makeCancelablePromise","executor","resolve","reject","scopedToken","unregister","error","DEBUG_REF_COUNTS","invokeDisposer","invokeDisposers","disposers","registerEventListener","type","listener","options","RefCounted","index","cancellable","RefCountedValue","disposableOnce","identityMat4","AXES_NAMES","kAxes","kZeroVec","kZeroVec4","kOneVec","kInfinityVec","kIdentityQuat","prod3","prod4","vec3Key","quatRotateX180","out","y","z","quatRotateY180","quatRotateZ180","transformVectorByMat4","m","transformVectorByMat4Transpose","translationRotationScaleZReflectionToMat4","translation","rotation","scale","zReflection","temp","findClosestParameterizedLinePosition","p","rank","denominator","numerator","aValue","projectPointToLineSegment","t","mat3FromMat4","m00","m01","m02","m10","m11","m12","m20","m21","m22","getFrustrumPlanes","m30","m31","m32","m03","m13","m23","m33","nearA","nearB","nearC","nearD","farA","farB","farC","farD","nearNorm","farNorm","isAABBVisible","xLower","yLower","zLower","xUpper","yUpper","zUpper","clippingPlanes","c","d","isAABBIntersectingPlane","maxSum","minSum","epsilon","getDependentTransformInputDimensions","transform","outputDimensions","transpose","numOutputDimensions","isDependentInputDimension","inputStride","outputStride","outputDim","inputDim","scaleMat3Input","input","scales","j","s","scaleMat3Output","getViewFrustrumVolume","projectionMat","depth","width","height","near","far","getViewFrustrumDepthRange","disableZProjection","mat","tempVec3","getViewFrustrumWorldBounds","invViewProjectionMat","bounds","HttpError","url","status","statusText","response","message","maxAttempts","minDelayMilliseconds","maxDelayMilliseconds","pickDelay","attemptNumber","fetchOk","init","requestAttempt","responseArrayBuffer","responseJson","cancellableFetchOk","transformResponse","abortController","unregisterCancellation","tempUint64","getByteRangeHeader","startOffset","endOffset","endOffsetStr","parseUrl","urlProtocolPattern","match","isNotFoundError","e","verifyFloat","verifyFiniteFloat","verifyFiniteNonNegativeFloat","verifyFinitePositiveFloat","makeVerifyNumberInInterval","minValue","maxValue","parseXYZ","verifyObject","key","parseFiniteVec","length","parseIntVec","val","stableStringify","size","swapQuotes","urlSafeStringifyString","URL_SAFE_COMMA","urlSafeStringify","toJSON","first","valueString","SINGLE_QUOTE_STRING_PATTERN","DOUBLE_QUOTE_STRING_PATTERN","SINGLE_OR_DOUBLE_QUOTE_STRING_PATTERN","DOUBLE_OR_SINGLE_QUOTE_STRING_PATTERN","DOUBLE_QUOTE_PATTERN","SINGLE_QUOTE_PATTERN","convertStringLiteral","quoteInitial","quoteReplace","quoteSearch","normalizeStringLiteral","convertJsonHelper","desiredCommaChar","desiredQuoteChar","commaSearch","stringLiteralPattern","before","replacement","originalString","urlSafeToJSON","jsonToUrlSafe","urlSafeParse","pythonLiteralToJSON","singleQuoteString","pythonLiteralParse","expectArray","parseArray","parseElement","parseFixedLengthArray","verifyInt","verifyPositiveInt","verifyNonnegativeInt","verifyMapKey","map","verifyString","verifyOptionalString","verifyOptionalInt","verifyOptionalBoolean","valueOr","verifyObjectProperty","propertyName","parseError","verifyOptionalObjectProperty","verifyObjectAsMap","verifyFloat01","parseQueryStringParameters","queryString","parts","part","unparseQueryStringParameters","parameters","verifyEnumString","enumType","pattern","objUpperCase","verify3dVec","verify3dScale","verify3dDimensions","verifyStringArray","verifyIntegerArray","verifyFloatArray","verifyBoolean","emptyToUndefined","_","verifyConstant","actual","expected","verifyOptionalFixedLengthArrayOfStringOrNull","array","multiply","ldc","lda","ldb","n","mIndex","kIndex","sum","nIndex","identity","start","createIdentity","rows","cols","createHomogeneousScaleMatrix","square","stride","createHomogeneousTranslationMatrix","isIdentity","copy","col","aOff","bOff","row","extendHomogeneousTransform","bRank","aRank","pivots","inverseInplace","determinant","kColOff","pivotRow","bestPivot","mag","off","tempPivot","pivotValue","pivotInv","factor","jColOff","targetCol","colOff","targetColOff","off1","off2","inverse","equal","offA","offB","transformPoint","matrixStride","vec","transformVector","permuteRows","output","outputToInputRow","outRow","inRow","permuteCols","outputToInputCol","outCol","inCol","Signal","observeSignal","NullarySignal","neverSignal","_handler","IS_WORKER","DEBUG","DEBUG_MESSAGES","PROMISE_RESPONSE_ID","PROMISE_CANCEL_ID","READY_ID","registerRPC","RPCError","name","registerPromiseRPC","id","promise","transfers","request","INITIAL_RPC_ID","RPC","waitUntilReady","data","queue","rpcId","SharedObject","rpc","initializeSharedObjectCounterpart","SharedObjectCounterpart","sharedObjectConstructors","registerSharedObjectOwner","identifier","constructorFunction","registerSharedObject","typeName","CHANGED_RPC_METHOD_ID","SharedWatchableValue","ChunkState","numChunkStates","ChunkPriorityTier","numChunkPriorityTiers","ChunkDownloadStatistics","ChunkMemoryStatistics","numChunkMemoryStatistics","numChunkStatistics","getChunkStateStatisticIndex","state","priorityTier","getChunkDownloadStatisticIndex","statistic","PREFETCH_PRIORITY_MULTIPLIER","CHUNK_QUEUE_MANAGER_RPC_ID","CHUNK_MANAGER_RPC_ID","CHUNK_SOURCE_INVALIDATE_RPC_ID","REQUEST_CHUNK_STATISTICS_RPC_ID","CHUNK_LAYER_STATISTICS_RPC_ID","LayerChunkProgressInfo","head","next","prev","Implementation","compare","aChild","node","cur","curNext","root","newRoot","child","DEBUG_CHUNK_UPDATES","nextMarkGeneration","getNextMarkGeneration","Chunk","msg","_transfers","newState","oldState","bytes","updateChunkStatistics","numSourceQueueLevels","ChunkSourceBase","chunkManager","chunkType","freeChunks","freeChunksLength","chunk","chunks","keyListeners","idx","listeners","sign","statistics","systemMemoryBytes","gpuMemoryBytes","ChunkSource","startChunkDownload","downloadCancellationToken","startTime","endTime","cancelChunkDownload","ChunkPriorityQueue","heapOperations","linkedListOperations","heapRoots","recentHead","tier","makeChunkPriorityQueue0","makeChunkPriorityQueue1","tryToFreeCapacity","capacity","priority","evictionCandidates","evict","evictionCandidate","evictionTier","AvailableCapacity","itemLimit","sizeLimit","items","ChunkQueueManager","getCapacity","add","queueManager","evictFromGPUMemory","promotionCandidates","promotionCandidate","promotionLambda","systemMemoryEvictionCandidates","systemMemoryCapacity","promotionCandidateResult","sourceQueueLevel","gpuMemoryGeneration","ChunkRenderLayerBackend","LAYER_CHUNK_STATISTICS_INTERVAL","ChunkManager","throttle","layer","requestedState","newPriorityTier","tiers","existingTierChunks","newTierChunks","WithParameters","Base","parametersConstructor","C","args","withChunkManager","results","RenderLayerBackendAttachment","view","RenderLayerBackend","attachment","SharedProjectionParametersBackend","oldValue","preferredSiPrefixes","allSiPrefixes","siPrefixesWithAlternatives","supportedUnits","exponentToPrefix","prefix","exponent","unit","pickSiPrefix","numPrefixes","formatScaleWithUnit","precision","elide1","adjustedScale","scaleByExp10","scaleString","eIndex","numString","exponentString","formatScaleWithUnitAsString","formattedScale","formattedUnit","parseScale","subtract","divide","scaleAndAdd","min","max","kEmptyFloat32Vec","kEmptyFloat64Vec","kFloat64Vec3Of1","nextDimensionId","newDimensionId","boundingBoxesEqual","coordinateArraysEqual","normalizeCoordinateArray","coordinates","labels","mergeCoordinateArrays","coordinateArrays","explicit","mergeOptionalCoordinateArrays","transformedBoundingBoxesEqual","coordinateSpacesEqual","unitsFromJson","units","scaleExponents","makeCoordinateSpace","space","names","valid","timestamps","ids","boundingBoxes","computeCombinedBounds","emptyInvalidCoordinateSpace","unitAndScaleFromJson","scaleObj","unitObj","unitString","coordinateSpaceFromJson","allowNumericalDimensions","dimensionNamesFromJson","mem","coordinateSpaceToJson","coordinateSpace","json","coordinateArray","TrackableCoordinateSpace","roundCoordinateToVoxelCenter","dimIndex","coordinate","getDisplayLowerUpperBounds","lower","upper","clampCoordinateToBounds","upperBound","lowerBound","clampAndRoundCoordinateToVoxelCenter","getCenterBound","getBoundingBoxCenter","lowerBounds","upperBounds","makeIdentityTransformedBoundingBox","box","computeCombinedLowerUpperBound","boundingBox","outputDimension","outputRank","baseLowerBounds","baseUpperBounds","inputRank","offset","targetLower","targetUpper","hasCoefficient","halfIntegerBounds","integerBounds","lowerFloor","upperFloor","voxelCenterAtIntegerCoordinates","integerCount","extendTransformedBoundingBox","newOutputRank","newOutputDims","oldTransform","oldOutputRank","newTransform","oldOutputDim","newOutputDim","makeSingletonDimTransformedBoundingBox","extendTransformedBoundingBoxUpToRank","coordinateSpaceTransformsEquivalent","defaultTransform","sourceRank","defaultInputSpace","inputSpace","isTransformDerivableFromDefault","makeIdentityTransform","transformBoundingBox","sourceScales","targetScales","oldBoxTransform","targetRank","newBoxTransform","targetDim","targetScale","sourceDim","sourceScale","getTransformedBoundingBoxes","outputScales","getOutputSpaceWithTransformedBoundingBoxes","oldOutputSpace","newSpace","isValidDimensionName","allowNumericalNames","validateDimensionNames","seenNames","getDimensionNameValidity","isValid","otherIndex","isLocalDimension","isLocalOrChannelDimension","isChannelDimension","isGlobalDimension","convertTransformOutputScales","existingTransform","existingOutputScales","newOutputScales","baseIndex","defaultRank","defaultOutputScales","newRank","bValue","coeff","makeDimensionNameUnique","existingNames","suffix","newName","remapTransformInputSpace","old","oldInputSpace","oldInputDimensionIds","oldRank","newInputDimensionNames","newInputUnits","newInputScales","removedOldInputIndices","addedInputDimensionIndices","newToOldInputDimensionIndices","oldIndex","oldOutputDimensionNames","oldOutputUnits","oldOutputScales","oldOutputDimensionIds","oldOutputTimestamps","oldOutputCoordinateArrays","removedOldOutputIndices","outputDimensionNames","outputUnits","outputDimensionIds","outputDimensionTimestamps","outputCoordinateArrays","newInputDim","oldInputDim","outputSpace","normalizeCoordinateSpaceTransform","WatchableCoordinateSpaceTransform","mutableSourceRank","self","newOutputSpace","newInputSpace","existingValue","defaultTransformMatrix","defaultOutputSpace","inputSpaceSame","transformSame","outputNamesSame","spec","origInputSpace","defaultSourceRank","specInputSpace","specSourceRank","specOutputSpace","specTransformMatrix","specRank","defaultInputNames","specInputNames","newToSpecDimensionIndices","defaultDim","specDim","newInputCoordinateArrays","newDim","specInputOrOutputSpace","newInputNames","newOutputNames","newOutputCoordinateArrays","newOutputUnits","newRow","specRow","newCol","specCol","singleInputDim","coordinateTransformSpecificationToJson","coordinateTransformSpecificationFromJson","expectDimensionName","dimensions","CoordinateSpaceCombiner","combined","includeDimensionPredicate","newNames","validity","binding","bindings","retainExisting","include","existing","mergedNames","mergedUnits","mergedScales","mergedIds","mergedTimestamps","dimensionRefs","bindingCombinedIndices","prevValue","mappedDimensionIds","newMappedDimensionIds","combinedIndices","prevIndex","combinedId","combinedIndex","timestamp","dimensionRefCounts","bindingIndex","hasRefs","mergedBoundingBoxes","allCoordinateArrays","existingRank","newDims","oldBoundingBox","mergedList","mergedCoordinateArrays","newCombined","changedDisposer","arrayConstructor","oldRows","oldCols","oldRow","oldCol","coordinateTransformSpecificationFromLegacyJson","tempMat4","rankObj","inputSpaceObj","permuteTransformedBoundingBox","newToOld","permuteCoordinateSpace","insertDimensionAt","targetIndex","sourceIndex","getInferredOutputScale","transformMatrix","inputDims","getDefaultInputScale","defaultScales","defaultUnits","partitionArray","end","predicate","filterArrayInplace","outIndex","maybePadArray","newSize","newArray","getFortranOrderStrides","baseStride","strides","transposeArray2d","majorSize","minorSize","tile2dArray","majorDimension","minorTiles","majorTiles","minorDimension","minorTileStride","majorTileStride","minorStride","minor","major","inputValue","baseOffset","minorTile","majorTile","binarySearch","haystack","needle","low","high","mid","compareResult","findClosestMatchInSortedArray","bestIndex","bestDistance","distance","begin","step","findMatchingIndices","getIndicesComplement","indices","mask","elementsEqual","oldDim","dest","destIndex","gatherUpdate","transposeNestedArrays","outerIndex","outerLength","innerIndex","innerLength","resultInner","spliceArray","splices","origOffset","numSplices","retainCount","deleteCount","insertCount","origLength","getMergeSplices","oldArray","newIndex","oldCount","newCount","getFixedOrderMergeSplices","mergeSequences","aCount","bCount","aCallback","bCallback","abCallback","optionallyRestoreFromJsonMember","member","restorable","CompoundTrackable","children","subValue","restoreError","PersistentCompoundTrackable","jsonCache","getCachedJson","cacheState","v","NavigationLinkType","NavigationSimpleLinkType","TrackableNavigationLink","TrackableNavigationSimpleLink","tempQuat","makeLinked","peer","link","operations","updatingSelf","updatingPeer","selfMinusPeer","handlePeerUpdate","handleSelfUpdate","previousLinkValue","handleLinkUpdate","linkValue","makeSimpleLinked","Position","curCoordinateSpace","coordinates_","prevCoordinateSpace","newCoordinates","prevCoordinates","newScales","prevDimensionIds","oldScales","newDimId","other","aCoordinates","bCoordinates","sourceCoordinates","VelocityBoundaryBehavior","DEFAULT_PLAYBACK_VELOCITY","DimensionPlaybackVelocity","dimensionVelocitiesEqual","dimensionVelocityFromJson","dimensionVelocityToJson","info","velocity","atBoundary","paused","CoordinateSpacePlaybackVelocity","velocities","owner","updateIndex","getVelocity","setVelocity","newVelocity","prevVelocity","oldInfo","newInfo","enabled","velocities_","newVelocities","prevVelocities","otherVelocities","curVelocity","LinkedCoordinateSpacePlaybackVelocity","positionLink","updateSelf","PlaybackManager","display","position","dimensionStates","positionVector","curTime","unregisterUpdateStartedCallback","positionChanged","velocityChanged","dimensionState","dimensionIndex","timeDelta","velocityValue","delta","newCoordinate","limit","oppositeLimit","deltaSign","restoreLinkedFromJson","LinkedBase","SimpleLinkedBase","LinkedPosition","amount","quaternionIsIdentity","q","OrientationState","orientation","usedAxes","maxComponent","argmaxComponent","peerToSelf","selfToPeer","LinkedOrientationState","TrackableRelativeDisplayScales","nonEmpty","factors","oldDimensionIds","newDimensionIds","oldFactors","newFactors","mapPerDimensionValues","oldCoordinateSpace","newCoordinateSpace","LinkedRelativeDisplayScales","fa","fb","newOffsets","getDisplayDimensionRenderInfo","displayDimensions","relativeDisplayScales","globalRank","globalDimensionNames","displayRank","displayDimensionIndices","canonicalVoxelFactors","voxelPhysicalScales","canonicalVoxelPhysicalSize","displayDimensionUnits","displayDimensionScales","dim","displayDimensionRenderInfosEqual","validateDisplayDimensionRenderInfoProperty","WatchableDisplayDimensionRenderInfo","maybeUpdateValue","curRelativeDisplayScales","curDisplayDimensions","TrackableDisplayDimensions","newDimensionIndices","oldDimensionIndices","displayDimensionNames","dimensionIndices","LinkedDisplayDimensions","DisplayPose","displayDimensionRenderInfo","fun","voxelCoordinates","zoom","adjustment","axis","angle","fixedPoint","fixedPointLocal","diff","invOrientation","nonSpatialDimensionIndex","LinkedZoomState","assign","difference","linkedStateLegacyJsonView","linked","TrackableZoom","curCanonicalVoxelPhysicalSize","scaleInCanonicalVoxels","legacyValue","TrackableCrossSectionZoom","legacyValue_","TrackableProjectionZoom","extent","TrackableDepthRange","prevCanonicalVoxelPhysicalSize","sourceCanonicalVoxelPhysicalSize","LinkedDepthRange","NavigationState","pose","zoomFactor","depthRange","FrameTimingMethod","FramerateMonitor","numStoredTimes","queryPoolSize","gl","ext","query","oldestQuery","deletedQueryIndices","numberOfFrames","DownsamplingBasedOnFrameRateCalculator","numberOfStoredFrameDeltas","maxDownsamplingFactor","desiredFrameTimingMs","downsamplingPersistenceDurationInFrames","frameDelta","sortedFrameDeltas","midpoint","downsampleFactor","maxTrackedDownsamplingRate","downsamplingRate","frameCount","method","calculatedFrameTime","downsampleFactorBasedOnFramerate","frameDeltas","incrementFrameCount","DELAY_AFTER_CONTINUOUS_CAMERA_MOTION_MS","RenderViewport","applyRenderViewportToProjectionMatrix","viewport","projectionMatrix","xScale","yScale","xOffset","yOffset","RenderedPanel","element","visibility","boundsGeneration","clientRect","canvasRect","canvas","canvasPixelWidth","canvasPixelHeight","screenToCanvasPixelScaleX","screenToCanvasPixelScaleY","canvasLeft","canvasTop","logicalLeft","logicalTop","logicalWidth","logicalHeight","logicalRight","logicalBottom","clippedTop","clippedLeft","clippedRight","clippedBottom","parent","rect","clippedWidth","clippedHeight","canvasRelativeClippedTop","canvasRelativeClippedLeft","bottom","glBottom","canvasHeight","IndirectRenderedPanel","renderViewport","canvasRenderingContext","TrackableWindowedViewport","left","top","DisplayContext","container","debounce","resizeObserver","event","elementClientRect","rootRect","marginTop","marginLeft","marginRight","marginBottom","margin","totalWidth","totalHeight","panel","resizeGeneration","orderedPanels","panels","depthArray","panelDepthArray","panelDepthArrayOffset","ProjectionParameters","projectionParametersEqual","updateProjectionParametersFromInverseViewAndProjection","viewMatrix","viewProjectionMat","zeroRankChannelSpace","getChannelSpace","channelCoordinateSpace","shape","numChannels","flatIndex","remainder","scaleTransformSubmatrix","baseInputSpace","inputToBaseDimensions","baseOutputSpace","baseToOutputDimensions","baseInputScales","baseOutputScales","baseOutputRank","baseOutputDim","baseOutputScale","baseInputDim","baseInputScale","getRenderLayerTransform","globalCoordinateSpace","localCoordinateSpace","modelToLayerTransform","subsourceEntry","modelSpace","fullRank","layerSpace","modelDimensionNames","transformOutputDimensions","requiredInputDims","unpaddedRank","requiredOutputDims","subspaceRank","modelSubspaceDimensionNames","layerSubspaceDimensionNames","renderLayerDimensions","localToRenderLayerDimensions","globalToRenderLayerDimensions","channelToRenderLayerDimensions","channelToModelSubspaceDimensions","channelRank","subsourceToModelSubspaceTransform","channelSpaceShape","channelLowerBounds","channelUpperBounds","channelVoxelCenterAtIntegerCoordinates","channelDim","layerDim","correspondingModelSubspaceDim","chunkDim","renderLayerTransformsEqual","getWatchableRenderLayerTransform","layerToDisplayCoordinates","displayPosition","layerPosition","modelTransform","displayDim","globalDim","displayToLayerCoordinates","chunkToDisplayCoordinates","chunkPosition","chunkTransform","layerRank","chunkToLayerTransform","getChunkTransformParameters","chunkToModelTransform","layerToChunkTransform","det","localRank","combinedGlobalLocalRank","combinedGlobalLocalToChunkTransform","localDim","channelToChunkDimensionIndices","chunkChannelDimensionIndices","correspondingChunkDim","chunkChannelRank","chunkChannelCoordinates","channelIndex","chunkChannelDim","getLayerDisplayDimensionMapping","layerDisplayDimensionIndices","displayToLayerDimensionIndices","getChunkDisplayTransformParameters","layerDisplayDimensionMapping","numLayerDisplayDims","chunkDisplayDimensionIndices","layerDimensionNames","displaySubspaceModelMatrix","chunkDisplayDimIndex","displaySubspaceInvModelMatrix","getChunkPositionFromCombinedGlobalLocalPositions","globalPosition","localPosition","getLayerPositionFromCombinedGlobalLocalPositions","get3dModelToDisplaySpaceMatrix","modelToRenderLayerTransform","modelDim","displayDimDesc","DataType","DATA_TYPE_SIGNED","DATA_TYPE_ARRAY_CONSTRUCTOR","DATA_TYPE_JAVASCRIPT_ELEMENTS_PER_ARRAY_ELEMENT","makeDataTypeArrayView","dataType","buffer","byteOffset","byteLength","bytesPerElement","javascriptElementsPerArrayElement","DEBUG_VISIBLE_SOURCES","DEBUG_CHUNK_VISIBILITY","estimateSliceAreaPerChunk","chunkLayout","viewZProjection","chunkVolume","updateFixedCurPositionInChunks","tsource","curPositionInChunks","fixedPositionWithinChunk","nonDisplayLowerClipBound","nonDisplayUpperClipBound","chunkDataSize","chunkSize","pickBestAlternativeSource","alternatives","numAlternatives","bestAlternativeIndex","bestSliceArea","alternativeIndex","alternative","sliceArea","tempChunkLayout","SliceViewProjectionParameters","visibleSourcesInvalidated","oldViewMatrix","newViewMatrix","SliceViewBase","projectionParameters","curDisplayDimensionRenderInfo","visibleLayers","renderLayer","visibleLayerSources","allSources","visibleSources","preferredOrientationIndex","sources","DEFAULT_MAX_VOXELS_PER_CHUNK_LOG2","upperVoxelBound","maxVoxelsPerChunkLog2","chunkToViewTransform","minBlockSize","maxBlockSize","lowerVoxelBound","effectiveVoxelSize","chunkDataSizeUpperBound","bound","findNextDimension","minSize","minDimension","nextDim","getTwoDimensionalBlockSizes","chunkDataSizes","excludedDim","restrictedTransform","ChunkLayoutPreference","getCombinedTransform","bToC","aToB","chunkLayoutPreference","lowerChunkBound","upperChunkBound","filterVisibleSources","sliceView","pixelSize","smallestVoxelSize","renderScaleTarget","canImproveOnVoxelSize","voxelSize","targetSize","improvesOnPrevVoxelSize","prevVoxelSize","prevSize","scaleIndex","transformedSource","SLICEVIEW_RPC_ID","SLICEVIEW_RENDERLAYER_RPC_ID","SLICEVIEW_ADD_VISIBLE_LAYER_RPC_ID","SLICEVIEW_REMOVE_VISIBLE_LAYER_RPC_ID","SLICEVIEW_REQUEST_CHUNK_RPC_ID","tempVisibleVolumetricChunkLower","tempVisibleVolumetricChunkUpper","tempVisibleVolumetricModelViewProjection","tempVisibleVolumetricClippingPlanes","forEachVolumetricChunkWithinFrustrum","lowerChunkDisplayBound","upperChunkDisplayBound","recurse","splitDim","splitSize","volume","prevLower","prevUpper","splitPoint","forEachVisibleVolumetricChunk","modelViewProjection","forEachPlaneIntersectingVolumetricChunk","invModelViewProjection","xCoeff","yCoeff","zCoeff","getNormalizedChunkLayout","finiteRank","invTransform","invViewMatrix","chunkRenderDim","xc","yc","zc","scaleFactor","erf","a1","a2","a3","a4","a5","VELOCITY_HALF_LIFE_MS","MODEL_HALF_LIFE_MS","VelocityEstimator","velocityHalfLifeMilliseconds","modelHalfLifeMilliseconds","time","numSamples","deltaT","velocityAlpha","modelAlpha","prevPosition","mean","variance","curVelocitySample","meanPrev","varPrev","withSharedVisibility","getPriorityTier","getBasePriority","BASE_PRIORITY","SCALE_PRIORITY_MULTIPLIER","tempChunkPosition","tempCenter","tempChunkSize","SliceViewCounterpartBase","disposeTransformedSources","SliceViewIntermediateBase","SliceViewBackend","centerDataPosition","basePriority","localCenter","curVisibleChunks","numVisibleSources","prefetchOffsets","getPrefetchChunkOffsets","sourceBasePriority","curMarkGeneration","positionInChunks","visibleChunk","minChunk","maxChunk","newPriority","jumpOffset","PREFETCH_ENTRY_SIZE","layerInfo","deserializeTransformedSources","serializedSources","serializedSource","SliceViewChunk","chunkGridPosition","SliceViewChunkSourceBackend","SliceViewRenderLayerBackend","PREFETCH_MS","MAX_PREFETCH_VELOCITY","MAX_SINGLE_DIRECTION_PREFETCH_CHUNKS","PREFETCH_PROBABILITY_CUTOFF","velocityEstimator","offsets","chunkRank","meanVec","varianceVec","isDisplayDimension","meanValue","varianceValue","initialFraction","adjustedMean","adjustedStddevTimesSqrt2","cdf","curChunk","groupStart","probability","newGroupStart","disposeRecompute","cancelPromise","_resolve","PerspectiveViewBackend","PerspectiveViewRenderLayerBackend","VOLUME_RENDERING_RENDER_LAYER_RPC_ID","VOLUME_RENDERING_RENDER_LAYER_UPDATE_SOURCES_RPC_ID","DEBUG_CHUNK_LEVEL","tempMat3","getVolumeRenderingNearFarBounds","displayLowerBound","displayUpperBound","volumeMinZ","volumeMaxZ","planeCoeff","adjustedNear","adjustedFar","forEachVisibleVolumeRenderingChunk","volumeRenderingDepthSamples","transformedSources","beginScale","canonicalToPhysicalScale","targetViewVolume","viewDet","histogramInformation","getViewVolume","bestScaleIndex","bestViewVolume","viewVolume","physicalSpacing","optimalSamples","desiredSamples","firstChunk","tempCenterDataPosition","VolumeRenderingRenderLayerBackend","scheduleUpdateChunkPriorities","priorityIndex","ANNOTATION_METADATA_CHUNK_SOURCE_RPC_ID","ANNOTATION_GEOMETRY_CHUNK_SOURCE_RPC_ID","ANNOTATION_SUBSET_GEOMETRY_CHUNK_SOURCE_RPC_ID","ANNOTATION_REFERENCE_ADD_RPC_ID","ANNOTATION_REFERENCE_DELETE_RPC_ID","ANNOTATION_COMMIT_UPDATE_RPC_ID","ANNOTATION_COMMIT_UPDATE_RESULT_RPC_ID","ANNOTATION_SPATIALLY_INDEXED_RENDER_LAYER_RPC_ID","ANNOTATION_PERSPECTIVE_RENDER_LAYER_UPDATE_SOURCES_RPC_ID","ANNOTATION_RENDER_LAYER_RPC_ID","ANNOTATION_RENDER_LAYER_UPDATE_SEGMENTATION_RPC_ID","forEachVisibleAnnotationChunk","viewFrustrumVolume","baseSource","sourceVolume","lowerClipDisplayBound","upperClipDisplayBound","effectiveVolume","viewportArea","physicalDensityTarget","totalPhysicalDensity","physicalVolume","sliceFraction","physicalDensity","newTotalPhysicalDensity","totalPhysicalSpacing","totalPixelSpacing","desiredCount","drawFraction","hexEncodeByte","hexEncode","arr","hexDecode","parseColorSerialization","rgbaPattern","hexPattern","parseRGBAColorSpecification","parseRGBColorSpecification","packColor","srgbGammaExpand","getRelativeLuminance","color","r","g","useWhiteBackground","foregroundColor","TrackableRGB","TrackableOptionalRGB","Endianness","determineEndianness","swapEndian16","swapEndian32","swapEndian64","convertEndian16","convertEndian32","convertEndian64","convertEndian","elementBytes","denormMin","float64Buf","uint32Buf","lowIndex","highIndex","defaultDataTypeRange","computeInvlerp","range","computeLerp","dataTypeRange","scalar","clampToInterval","getClampedInterval","validateDataTypeInterval","interval","dataTypeCompare","normalizeDataTypeInterval","temp2Uint64","getClosestEndpoint","parseUnknownDataTypeValue","num64","num","parseDataTypeInterval","parseUnknownDataTypeInterval","dataTypeIntervalEqual","dataTypeIntervalToJson","defaultRange","dataTypeValueNextAfter","getIntervalBoundsEffectiveOffset","getIntervalBoundsEffectiveFraction","convertDataTypeInterval","getRandomHexString","numBits","numValues","getRandomValues","byteArray","blockSize","getRandomUint32","AnnotationReference","AnnotationType","annotationTypes","propertyTypeDataType","isAnnotationNumericPropertySpec","isAnnotationTagPropertySpec","annotationPropertyTypeHandlers","property","MAX_BUFFER_STRIDE","getPropertyOffsets","firstGroupInitialOffset","propertySpecs","serializedBytes","numProperties","permutation","propertyGroupBytes","getAlignment","propertyGroupIndex","propertyGroupOffset","nextPropertyGroup","outputIndex","propertyIndex","numBytes","alignment","alignmentOffset","newEndOffset","AnnotationPropertySerializer","groupOffsetCode","groupIndex","serializeCode","deserializeCode","group","propId","offsetExpr","makeAnnotationPropertySerializers","serializers","annotationType","annotationTypeHandlers","formatNumericProperty","formattedValue","enumValues","enumLabels","enumIndex","formatAnnotationPropertyValue","parseAnnotationPropertyId","parseAnnotationPropertyType","ensureUniqueAnnotationPropertyIds","properties","parseAnnotationPropertySpec","description","tag","valuesObj","labelsObj","annotationPropertySpecToJson","isNumeric","enum_values","enum_labels","annotationPropertySpecsToJson","specs","parseAnnotationPropertySpecs","serializeFloatVector","isLittleEndian","serializeTwoFloatVectors","vecA","vecB","deserializeFloatVector","deserializeTwoFloatVectors","annotation","pointA","pointB","point","center","radii","annotationToJson","schema","relatedSegments","segments","prop","restoreAnnotation","allowMissingId","makeAnnotationId","relObj","propsObj","propSpecs","AnnotationSource","relationships","commit","reference","pending","annotationMap","LocalAnnotationSource","watchableTransform","curCoordinateTransform","oldSourceRank","newIds","oldIds","newToOldDims","mapVector","newRadii","DATA_BOUNDS_DESCRIPTION","makeDataBoundsBoundingBoxAnnotation","makeDataBoundsBoundingBoxAnnotationSet","annotationSource","serializeAnnotations","allAnnotations","propertySerializers","totalBytes","typeToOffset","serializedPropertiesBytes","typeToIds","typeToIdMaps","dataView","propertySerializer","serializeProperties","annotations","serialize","geometryDataStride","AnnotationSerializer","fixAnnotationAfterStructuredCloning","numRelationships","RPC_TYPE_ID","ADD_METHOD_ID","CLEAR_METHOD_ID","HIGH_BIT_REPRESENTATIVE_CHANGED_ID","DELETE_SET_METHOD_ID","SharedDisjointUint64Sets","highBitRepresentative","updateHighBitRepresentative","tempA","tempB","NUM_ALTERNATIVES","DEFAULT_LOAD_FACTOR","pendingLow","pendingHigh","backupPendingLow","backupPendingHigh","HashTableBase","hashSeeds","initialSize","numHashes","emptySlots","mungedEmptyKey","chooseMungedEmptyKey","h","table","emptyLow","emptyHigh","hashIndex","hash","entryStride","newLow","newHigh","tempLow","tempHigh","attempt","tableIndex","tableSize","oldTable","desiredTableSize","rehashAttempt","HashSetUint64","pendingValueLow","pendingValueHigh","backupPendingValueLow","backupPendingValueHigh","HashMapUint64","Uint64Map","Uint64Set","tmp","VISIBLE_SEGMENTS_STATE_PROPERTIES","onVisibleSegmentsStateChanged","onTemporaryVisibleSegmentsStateChanged","getObjectKey","objectId","isHighBitSegment","getVisibleSegments","getSegmentEquivalences","forEachVisibleSegment","visibleSegments","segmentEquivalences","equivalencePolicy","rootObjectId","rootObjectId2","receiveVisibleSegmentsState","withSegmentationLayerBackendState","IndexedSegmentPropertySourceBackend","ANNOTATION_METADATA_CHUNK_PRIORITY","ANNOTATION_SEGMENT_FILTERED_CHUNK_PRIORITY","AnnotationMetadataChunk","AnnotationGeometryData","GeometryChunkMixin","AnnotationGeometryChunk","AnnotationSubsetGeometryChunk","AnnotationMetadataChunkSource","AnnotationGeometryChunkSourceBackend","AnnotationSubsetGeometryChunkSource","metadataChunkSource","newAnnotation","annotationId","AnnotationSpatiallyIndexedRenderLayerBackend","attachmentState","AnnotationLayerSharedObjectCounterpart","states","segmentFilteredSources","CredentialsProvider","credentials","makeCachedCredentialsGetter","getUncached","cachedCredentials","pendingCredentials","pendingCancellationToken","invalidCredentials","reason","makeCredentialsGetter","getWithoutGeneration","_invalidCredentials","MapBasedCredentialsManager","providerGetter","getter","CachingCredentialsManager","CachingMapBasedCredentialsManager","AnonymousFirstCredentialsProvider","baseProvider","anonymousCredentials","SharedCredentialsProviderCounterpart","WithSharedCredentialsProviderCounterpart","credentialsKey","fetchWithBossCredentials","credentialsProvider","headers","DEBUG_CHUNKS_TO_DRAW","getDesiredMultiscaleMeshChunks","manifest","detailCutoff","viewportWidth","viewportHeight","octree","lodScales","chunkGridSpatialOrigin","chunkShape","maxLod","minWXcoeff","minWYcoeff","minWZcoeff","getPointW","getBoxW","minWClip","objectXLower","objectYLower","objectZLower","objectXUpper","objectYUpper","objectZUpper","zScale","handleChunk","lod","priorLodScale","rowOffset","gridX","gridY","gridZ","childBegin","childEndAndEmpty","lodScale","nextPriorLodScale","childEnd","childRow","getMultiscaleChunksToDraw","hasChunk","stackEntryStride","stack","stackDepth","priorSubChunkIndex","emitChunksUpTo","targetStackIndex","subChunkIndex","stackIndex","entryLod","entryRow","numSubChunks","entrySubChunkIndex","entryRenderScale","endSubChunk","priorMissingLod","renderScale","empty","stackOffset","validateOctree","numNodes","seenNodes","exploreNode","beginChild","endChild","childX","childY","childZ","getMultiscaleFragmentKey","objectKey","chunkIndex","DEBUG_TIMING","normalizeTriangleVertexOrder","maxVertex","collisions","hashTableInsert","numBuckets","emptyValue","hashCode","equals","bucket","probe","hashEdge","nextEdgeTable","getNextEdge","edgeIndexAndFlipped","getBaseIndex","entry","getEdgeIndex","vertexAIndex","edgeIndex","vertexBIndex","vertexCIndex","getEdgeMapSize","numIndices","computeTriangleAdjacencies","triangleAdjacencies","edgeMap","numTriangles","edgeMapSize","emptyEntry","triangle","vertexA0","vertexB0","newEntry","existingEntry","otherBaseIndex","otherEdgeIndex","vertexA1","vertexB1","emitTriangleStrips","invalidVertex","startNewStrip","computeTriangleStrips","subChunkOffsets","adjacenciesElapsed","emitElapsed","midTime","maxVertexIndex","outputBufferSize","maxSubChunkIndices","subChunk","subChunkOffset","subChunkEnd","subIndices","shrunkOutput","decodeZIndexCompressed","zindex","xBits","yBits","zBits","maxCoordBits","inputBit","coordBit","bit","encodeZIndexCompressed3d","maxBits","outputBit","outputNum","isHigh","writeBit","encodeZIndexCompressed","lessMsb","zorder3LessThan","x0","y0","z0","x1","y1","z1","mostSignificant0","mostSignificant1","MESH_OBJECT_MANIFEST_CHUNK_PRIORITY","MESH_OBJECT_FRAGMENT_CHUNK_PRIORITY","CONVERT_TO_TRIANGLE_STRIPS","ManifestChunk","serializeMeshData","vertexPositions","vertexNormals","strips","vertexPositionsBuffer","indicesBuffer","getMeshDataSize","FragmentChunk","manifestChunk","fragmentId","decodeJsonManifestChunk","keysPropertyName","computeVertexNormals","positions","faceNormal","v1v0","v2v1","i0","i1","i2","numVertices","snorm8","signNotZero","encodeNormals32fx3ToOctahedron8x2","normals","invL1Norm","decodeVertexPositionsAndIndices","verticesPerPrimitive","endianness","vertexByteOffset","indexByteOffset","numPrimitives","decodeTriangleVertexPositionsAndIndices","MeshSource","fragmentSource","fragmentKey","parsedFragmentId","FragmentSource","MeshLayer","fragmentChunk","MultiscaleManifestChunk","MultiscaleFragmentChunk","MultiscaleMeshSource","MultiscaleFragmentSource","tempModelMatrix","MultiscaleMeshLayer","maxVisibility","manifestChunks","modelViewProjectionMatrix","_renderScale","convertMeshData","vertexPositionFormat","encodedNormals","encodedIndices","encodedVertexPositions","inputIndex","assignMeshFragmentData","assignMultiscaleMeshFragmentData","generateHigherOctreeLevel","priorStart","priorEnd","curEnd","computeOctreeChildOffsets","childStart","parentEnd","childNode","parentNode","parentX","parentY","parentZ","asyncComputation","decodeGzip","numWorkers","freeWorkers","pendingTasks","tasks","maxWorkers","nextTaskId","returnWorker","worker","task","launchWorker","ready","callbacks","requestAsyncComputation","transfer","cleanup","encodeCompressedSegmentationUint32","encodeCompressedSegmentationUint64","postProcessRawData","supportedDataTypes","endiannessChar","typeChar","typestr","dtype","NumpyArray","fortranOrder","parseNpy","majorVersion","minorVersion","headerLength","header","headerObject","dataOffset","numElements","javascriptElements","decodeBossNpzChunk","parseResult","parsedDataType","decodeJpeg","decodeJpegChunk","decoded","VolumeChunk","computeChunkBounds","tempChunkDataSize","baseVoxelOffset","origChunkDataSize","newChunkDataSize","partial","VolumeChunkSource","chunkDecoders","acceptHeaders","BossSource","BossVolumeChunkSource","decodeManifestChunk","decodeFragmentChunk","BossMeshSource","makeRequest","instance","httpCall","SKELETON_CHUNK_PRIORITY","SkeletonChunk","total","vertexAttributes","vertexData","vertexAttributeOffsets","SkeletonSource","SkeletonLayer","decodeSkeletonVertexPositionsAndIndices","numEdges","meshData","decodeCompressedSegmentationChunk","decodeRawChunk","expectedBytes","CHUNK_DECODERS","applyChangeStack","changeStack","payload","BrainmapsSource","BrainmapsVolumeChunkSource","encoding","path","getFragmentCorner","decodeMultiscaleManifestChunk","fragmentKeys","supervoxelIds","fragmentSupervoxelIds","gridShape","fragmentIdAndCorners","clipLowerBound","clipUpperBound","minNumLods","minCoord","maxCoord","corner","lods","lodIndex","octreeTemp","maxMeshBatchSize","decodeBatchMeshResponse","headerSize","objectIdLow","objectIdHigh","fragmentKeyLength","fragmentKeyLengthHigh","fullKey","numVerticesHigh","numTrianglesHigh","combineBatchMeshFragments","fragments","totalVertices","totalIndices","fragment","vertexBuffer","indexBuffer","vertexOffset","indexOffset","sourceIndices","makeBatchMeshRequest","batches","prevObjectId","batchSize","pendingIds","idData","splitIndex","BrainmapsMultiscaleMeshSource","changeSpec","numBaseChunks","startChunkIndex","endChunkIndex","relativeBlockShape","supervoxelId","prevLod","idArray","meshName","parallelRequests","requestsInProgress","maybeIssueMoreRequests","prevSubChunkIndex","groupFragmentsIntoBatches","decodeManifestChunkWithSupervoxelIds","fragmentIds","BrainmapsMeshSource","decodeSkeletonChunk","dv","BrainmapsSkeletonSource","spatialAnnotationTypes","parseCommaSeparatedPoint","cornerParts","getIdPrefix","parseBrainmapsAnnotationId","idPrefix","fullId","parseObjectLabels","parseAnnotation","expectedId","spatialAnnotationType","parseAnnotationResponse","annotationPropertySerializers","parseAnnotations","responses","serializer","responseIndex","annotationsArray","getSpatialAnnotationTypeFromId","toCommaSeparated","getFullSpatialAnnotationId","annotationToBrainmaps","objectLabels","minPoint","maxPoint","BrainmapsAnnotationGeometryChunkSource","BrainmapsAnnotationSource","_relationshipIndex","brainmapsAnnotation","decodePng","getS3BucketListing","bucketUrl","delimiter","doc","commonPrefixNodes","contents","enteredBucketUrl","paths","cancellableFetchS3Ok","requestInit","getS3PathCompletions","getMiddleAuthCredentialsProvider","credentialsManager","getNgauthCredentialsProvider","serverUrl","bucketPattern","parseSpecialUrl","u","cancellableFetchSpecialOk","DeepzoomImageTileSource","tilesize","overlap","ox","oy","responseBuffer","tilewidth","tileheight","tiledata","pngbitmap","t2","twh","DVIDInstance","baseUrl","nodeKey","dataName","startKey","endKey","appendQueryStringForDvid","user","responseText","requestInfo","makeRequestWithCredentials","fetchWithDVIDCredentials","newInit","decodeSwcSkeletonChunk","swcStr","swcObjects","parseSwc","indexMap","nodeCount","edgeCount","swcObj","glVertices","glIndices","nodeIndex","edgetIndex","swcInputAr","swcObjectsAr","float","PointObj","DVIDSource","DVIDSkeletonSource","bodyid","enc","DVIDMeshSource","meshUrl","DVIDVolumeChunkSource","params","decoder","PYCG_APP_VERSION","GRAPHENE_MESH_NEW_SEGMENT_RPC_ID","VolumeChunkEncoding","VolumeChunkSourceParameters","ChunkedGraphSourceParameters","MeshSourceParameters","MultiscaleMeshMetadata","responseIdentity","nBitsForLayerId","layerId","getGrapheneFragmentKey","CHUNKED_GRAPH_LAYER_RPC_ID","CHUNKED_GRAPH_RENDER_LAYER_UPDATE_SOURCES_RPC_ID","RENDER_RATIO_LIMIT","makeChunkedGraphChunkSpecification","OBJECT_ID_SYMBOL","nextObjectId","getObjectId","GenericSharedDataChunk","requesters","requester","GenericSharedDataSource","encodeKey","getPriority","encodedKey","memoizeKey","decodeFunction","AsyncCacheChunk","SimpleAsyncCache","completed","cancellationSource","makeSimpleAsyncCache","decodeResult","numPartitions","wasmModule","libraryEnv","memoryIndex","numFaces","indicesPointer","vertexPositionsPointer","subchunkOffsetsPointer","memory","code","dracoModulePromise","getDracoModulePromise","decodeDracoPartitioned","vertexQuantizationBits","partition","decodeDraco","vertexPositionsStartOffset","curOffset","attributes","bytesPerVertex","attribute","decodeCompresso","decodeCompressoChunk","image","decodePngChunk","cacheMode","fetchSpecialHttpByteRange","simpleStringHash","murmurHash3_x86_32Mix","murmurHash3_x86_32Finalize","len","murmurHash3_x86_32Hash64Bits","seed","murmurHash3_x86_128Mix","rotl32","murmurHash3_x86_128Hash64Bits","h1","h2","h3","h4","c1","c2","c3","k2","k1","DEBUG_MULTISCALE_INDEX","shardingHashFunctions","_out","getMinishardIndexDataSource","sharding","shardAndMinishard","minishard","shard","shardUrl","shardIndexSize","shardIndexStart","shardIndexEnd","shardIndexResponse","shardIndexDv","minishardStartOffset","minishardEndOffset","minishardIndexResponse","minishardIndex","minishardIndexSize","prevEntryKeyLow","prevEntryKeyHigh","prevStartLow","prevStartHigh","entryKeyLow","entryKeyHigh","startLow","startHigh","sizeLow","sizeHigh","endLow","endHigh","findMinishardEntry","minishardIndexData","keyLow","keyHigh","getShardedData","minishardIndexSource","hashFunction","minishardEntry","getOrNotFoundError","PrecomputedVolumeChunkSource","PrecomputedMeshSource","gridOrigin","numStoredLods","storedLodScales","vertexOffsets","numFragmentsPerLod","totalFragments","fragmentInfo","numLods","fragmentBase","numFragments","upperBoundValue","lowerBoundValue","maxFragments","prevNumFragments","prevLodIndex","offsetsTemp","baseRow","dataSize","lodScaleMultiplier","decodeMultiscaleFragmentChunk","rawMesh","PrecomputedMultiscaleMeshSource","shardInfo","requestUrl","adjustedStartOffset","adjustedEndOffset","fullDataSize","fetchByUint64","PrecomputedSkeletonSource","countLow","idOffset","geometryData","origData","groupOffset","groupBytesPerAnnotation","annotationIndex","origBase","newBase","parseSingleAnnotation","baseNumBytes","minNumBytes","PrecomputedAnnotationSpatialIndexSourceBackend","PrecomputedAnnotationSourceBackend","relationshipIndex","PrecomputedIndexedSegmentPropertySourceBackend","getVerifiedFragmentPromise","getFragmentDownloadPromise","fragmentDownloadPromise","decodeDracoFragmentChunk","GrapheneMeshSource","segment","newSegments","TEN_MINUTES","manifestRequestCount","manifestUrl","chunkIdentifier","requestCount","ChunkedGraphChunk","decodeChunkedGraphChunk","leaves","final","GrapheneChunkedGraphChunkSource","res","err","errorPrefix","ChunkedGraphLayer","visibleLeaves","capacities","rootObjectKey","filteredLeaves","rootInt","leaf","decodeBlosc","decodeZstd","decodeChunk","mode","numDimensions","VolumeType","makeVolumeChunkSpecification","fillValue","compressedSegmentationBlockSize","shouldTranscodeToCompressedSegmentation","makeVolumeChunkSpecificationWithDefaultCompression","multiscaleToViewTransform","chunkToMultiscaleTransform","maxCompressedSegmentationBlockSize","makeDefaultVolumeChunkSpecifications","modelChannelDimensionIndices","VOLUME_RPC_ID","NiftiFileData","decodeNiftiFile","getNiftiFileData","NIFTI_HEADER_INFO_PRIORITY","getNiftiHeaderInfo","convertAffine","affine","NiftiDataType","DATA_TYPE_CONVERSIONS","dataTypeInfo","spatialInvScale","spatialUnit","timeUnit","timeInvScale","viewScales","sourceNames","viewNames","quatern_b","quatern_c","quatern_d","quatern_a","qfac","qoffset","method3Transform","method2Transform","copyRank","NiftiVolumeChunkSource","imageBuffer","parseOBJFromArrayBuffer","SINGLE_MESH_CHUNK_PRIORITY","SingleMeshChunk","transferSet","singleMeshFactories","registerSingleMeshFactory","factory","protocolPattern","getDataSource","factories","dataSource","getMesh","getMinMax","getCombinedMesh","SingleMeshSource","SingleMeshLayerBase","SingleMeshLayer","INFO_PRIORITY","parse","TileChunkSource","query_params","xTileSize","yTileSize","imageMethod","parseVTKFromArrayBuffer","mesh","codecRegistry","registerCodec","codec","decodeArray","codecs","encoded","bytesToBytes","impl","arrayToArray","applySharding","baseKvStore","kvStore","curCodecs","shardingInfo","decodeCodecs","getChunkKey","baseKey","layoutInfo","physicalToLogicalDimension","readChunkShape","subChunkShape","subChunkGridShape","subChunkCodecs","fOrderPhysicalDim","subChunkDim","configuration","decodedArrayInfo","checksumSize","parseName","parseConfiguration","getCodecResolver","resolver","arrayInfo","encodedSize","codecSpecs","numCodecs","initialConfiguration","arrayResolver","encodedArrayInfo","arrayToBytes","finalLayoutInfo","initialEncodedSize","arrayToBytesResolver","curEncodedSize","bytesResolver","newEncodedSize","ChunkKeyEncoding","parseShape","parseChunkShape","parseDimensionSeparator","UNITS","siPrefix","longPrefix","unitInfo","parseDimensionUnit","numberPattern","derivedUnit","parseFillValue","parseV3Metadata","expectedNodeType","nodeType","dimensionNames","chunkGrid","userAttributes","dimensionUnits","dimensionSeparator","chunkKeyEncoding","nodeStr","parseV2Metadata","attrs","explicitDimensionSeparator","order","numpyDtype","compressor","shuffle","codecChainSpec","ShardIndexLocation","indexLocation","outerSize","innerSize","indexShape","indexCodecs","composeByteRangeRequest","MISSING_VALUE","ShardedKvStore","byteRange","physicalToLogicalIndexDimension","indexStrides","physicalIndexDim","logicalIndexDim","shardIndex","pos","dataLength","fullByteRange","outerByteRange","innerByteRange","getRangeHeader","byteRangeCacheMode","SpecialProtocolKvStore","headResponse","contentLength","byteRangeRequest","rangeHeader","totalSize","contentRange","beginPos","contentLengthNumber","getSpecialProtocolKvStore","ZarrVolumeChunkSource","metadata","sep","keyCoords","decodedDim","chunkKvStore","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","__webpack_exports__","deferred","chunkIds","fn","notFulfilled","fulfilled","exports","definition","chunkId","promises","scriptUrl","installedChunks","installChunk","modules","runtime","installedChunkData"],"sourceRoot":""}