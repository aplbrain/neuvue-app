{"version":3,"file":"neuroglancer_async_computation.0e1ff0b6cf9b1e029679.js","mappings":"8IACIA,GAA2B,CAAC,EAGhC,SAASC,GAAoBC,EAAU,CAEtC,IAAIC,EAAeH,GAAyBE,CAAQ,EACpD,GAAIC,IAAiB,OACpB,OAAOA,EAAa,QAGrB,IAAIC,EAASJ,GAAyBE,CAAQ,EAAI,CAGjD,QAAS,CAAC,CACX,EAGA,OAAAG,GAAoBH,CAAQ,EAAEE,EAAQA,EAAO,QAASH,EAAmB,EAGlEG,EAAO,OACf,CAGAH,GAAoB,EAAII,GCxBxBJ,GAAoB,EAAI,CAACK,EAASC,IAAe,CAChD,QAAQC,KAAOD,EACXN,GAAoB,EAAEM,EAAYC,CAAG,GAAK,CAACP,GAAoB,EAAEK,EAASE,CAAG,GAC/E,OAAO,eAAeF,EAASE,EAAK,CAAE,WAAY,GAAM,IAAKD,EAAWC,CAAG,CAAE,CAAC,CAGjF,ECPAP,GAAoB,EAAI,CAAC,EAGzBA,GAAoB,EAAKQ,GACjB,QAAQ,IAAI,OAAO,KAAKR,GAAoB,CAAC,EAAE,OAAO,CAACS,EAAUF,KACvEP,GAAoB,EAAEO,CAAG,EAAEC,EAASC,CAAQ,EACrCA,GACL,CAAC,CAAC,CAAC,ECNPT,GAAoB,EAAKQ,GAEjB,GAAKA,EAAU,IAAM,CAAC,GAAK,uBAAuB,IAAM,uBAAuB,IAAM,sBAAsB,EAAEA,CAAO,EAAI,MCFhIR,GAAoB,SAAYQ,GAAY,CAG5C,ECJAR,GAAoB,EAAI,CAACU,EAAKC,IAAU,OAAO,UAAU,eAAe,KAAKD,EAAKC,CAAI,ECCtFX,GAAoB,EAAKK,GAAY,CACjC,OAAO,OAAW,KAAe,OAAO,aAC1C,OAAO,eAAeA,EAAS,OAAO,YAAa,CAAE,MAAO,QAAS,CAAC,EAEvE,OAAO,eAAeA,EAAS,aAAc,CAAE,MAAO,EAAK,CAAC,CAC7D,G,KCNA,IAAIO,EAIJ,GAHI,OAAO,YAAY,KAAQ,WAAUA,EAAY,YAAY,KAG7D,CAACA,EAAW,MAAM,IAAI,MAAM,uDAAuD,EACvFA,EAAYA,EAAU,QAAQ,OAAQ,EAAE,EAAE,QAAQ,QAAS,EAAE,EAAE,QAAQ,YAAa,GAAG,EACvFZ,GAAoB,EAAIY,C,WCNxBZ,GAAoB,EAAI,IAAI,IAAI,KAAM,YAAY,GAAG,EAKrD,IAAIa,EAAkB,CACrB,IAAK,CACN,EAEIC,EAAgBC,GAAS,CAC5B,GAAI,CAAC,IAAAC,EAAK,QAAAC,EAAS,QAAAC,CAAO,EAAIH,EAG1Bd,EAAUO,EAASW,EAAI,EAC3B,IAAIlB,KAAYgB,EACZjB,GAAoB,EAAEiB,EAAShB,CAAQ,IACzCD,GAAoB,EAAEC,CAAQ,EAAIgB,EAAQhB,CAAQ,GAIpD,IADGiB,GAASA,EAAQlB,EAAmB,EAClCmB,EAAIH,EAAI,OAAQG,IACpBX,EAAUQ,EAAIG,CAAC,EACZnB,GAAoB,EAAEa,EAAiBL,CAAO,GAAKK,EAAgBL,CAAO,GAC5EK,EAAgBL,CAAO,EAAE,CAAC,EAAE,EAE7BK,EAAgBG,EAAIG,CAAC,CAAC,EAAI,CAG5B,EAEAnB,GAAoB,EAAE,EAAI,CAACQ,EAASC,IAAa,CAE/C,IAAIW,EAAqBpB,GAAoB,EAAEa,EAAiBL,CAAO,EAAIK,EAAgBL,CAAO,EAAI,OACtG,GAAGY,IAAuB,EAGzB,GAAGA,EACFX,EAAS,KAAKW,EAAmB,CAAC,CAAC,MAC7B,CAGL,IAAIC,EAAU,OAAO,KAAOrB,GAAoB,EAAEQ,CAAO,GAAG,KAAKM,EAAeQ,GAAM,CACrF,MAAGT,EAAgBL,CAAO,IAAM,IAAGK,EAAgBL,CAAO,EAAI,QACxDc,CACP,CAAC,EACGD,EAAU,QAAQ,KAAK,CAACA,EAAS,IAAI,QAASE,GAAaH,EAAqBP,EAAgBL,CAAO,EAAI,CAACe,CAAO,CAAE,CAAC,CAAC,EAC3Hd,EAAS,KAAKW,EAAmB,CAAC,EAAIC,CAAO,CAE/C,CAEH,C,eClDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA4BO,SAASG,GACdC,EACiC,CACjC,MAAO,CAAE,GAAAA,CAAG,CACd,CChCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAkBO,MAAMC,GAAqCF,GAMhD,oCAAoC,EAEzBG,GAAqCH,GAMhD,oCAAoC,EChCtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAkBA,MAAMI,GAAW,IAAI,IAKrB,SAASC,GAAaC,EAAkC,CACtD,KAAK,UAAaC,GAAa,CAC7B,KAAM,CAAE,EAAAC,EAAG,GAAAP,EAAI,KAAAQ,CAAK,EAAIF,EAAI,KACZH,GAAS,IAAII,CAAC,EACtB,GAAGC,CAAI,EAAE,KACf,CAAC,CAAE,MAAAC,EAAO,SAAAC,CAAS,IAAML,EAAK,YAAY,CAAE,GAAAL,EAAI,MAAAS,CAAM,EAAG,CAAE,SAAAC,CAAS,CAAC,EACpEC,GACCN,EAAK,YAAY,CACf,GAAAL,EACA,MAAOW,aAAiB,MAAQA,EAAM,QAAUA,EAAM,SAAS,CACjE,CAAC,CACL,CACF,EAEA,KAAK,YAAY,IAAI,CACvB,CAEAP,GAAa,IAAkC,EAExC,SAASQ,GAGdC,EACAC,EAGA,CACAX,GAAS,IAAIU,EAAQ,GAAIC,CAAO,CAClC,CCjDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAkBO,MAAMC,GAAoB,EAE1B,SAASC,IAAW,CACzB,OAAO,IAAI,GACb,CAEA,SAASC,GACPC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA,CAEA,GAAID,EAAc,EAChB,OAAQA,EAAa,CACnB,IAAK,GAED,QACME,EAAY,EAAGC,EAAe,EAClCD,EAAYD,EACZ,EAAEC,EACF,CACA,IAAIE,EAAO,EAEXA,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,EAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,EAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,EAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,EAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,EAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,EAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,EAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,EAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,EAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,EAEzDC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DP,EAAWC,EAAeK,CAAS,EAAIE,EACvCD,GAAgB,EAClB,CAEF,MAEF,IAAK,GAED,QACMD,EAAY,EAAGC,EAAe,EAClCD,EAAYD,EACZ,EAAEC,EACF,CACA,IAAIE,EAAO,EAEXA,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,EAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,EAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,EAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,EAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,EAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,GAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,GAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,GAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,GAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,GAEzDC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DC,GAAQL,EAAYD,EAAeK,EAAe,EAAE,CAAC,GAAK,GAE1DP,EAAWC,EAAeK,CAAS,EAAIE,EACvCD,GAAgB,EAClB,CAEF,MAEF,IAAK,GAED,QACMD,EAAY,EAAGC,EAAe,EAClCD,EAAYD,EACZ,EAAEC,EACF,CACA,IAAIE,EAAO,EAEXA,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,EAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,EAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,EAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,GAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,GAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,GAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,GAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,GAEzDP,EAAWC,EAAeK,CAAS,EAAIE,EACvCD,GAAgB,CAClB,CAEF,MAEF,IAAK,GAED,QACMD,EAAY,EAAGC,EAAe,EAClCD,EAAYD,EACZ,EAAEC,EACF,CACA,IAAIE,EAAO,EAEXA,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,EAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,EAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,GAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,GAEzDP,EAAWC,EAAeK,CAAS,EAAIE,EACvCD,GAAgB,CAClB,CAEF,MAEF,IAAK,IAED,QACMD,EAAY,EAAGC,EAAe,EAClCD,EAAYD,EACZ,EAAEC,EACF,CACA,IAAIE,EAAO,EAEXA,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,EAEzDC,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,GAEzDP,EAAWC,EAAeK,CAAS,EAAIE,EACvCD,GAAgB,CAClB,CAEF,MAEF,IAAK,IAED,QACMD,EAAY,EAAGC,EAAe,EAClCD,EAAYD,EACZ,EAAEC,EACF,CACA,IAAIE,EAAO,EAEXA,GAAQL,EAAYD,EAAeK,EAAe,CAAC,CAAC,GAAK,EAEzDP,EAAWC,EAAeK,CAAS,EAAIE,EACvCD,GAAgB,CAClB,CAEF,KACJ,CAEJ,CAIO,SAASE,GACdC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAb,EACAc,EACAC,EACkB,CAClB,IAAIb,EACJ,GAAIU,IAAoB,EACtBV,EAAc,MAGd,KADAA,EAAc,EACP,GAAKA,EAAcU,GACxBV,GAAe,EAInB,MAAMc,EAAoB,KAAK,KAAMd,EAAcS,EAAoB,EAAE,EAEnEM,GAAyBT,EAAO,OACtC,IAAIU,GAAkBF,EAElBG,GAAa,GACjB,MAAMzD,GAAM,MAAM,UAAU,KAAK,KAC/BmD,EAAc,SAAS,EAAGD,EAAkBG,CAAiB,EAC7D,GACF,EACA,IAAIK,EAAcV,EAAM,IAAIhD,EAAG,EAE3B0D,IAAgB,SAClBD,GAAa,GACbD,IAAmBN,EAAkBG,EACrCK,EAAcH,GAAyBD,EAAoBP,EAC3DC,EAAM,IAAIhD,GAAK0D,CAAW,GAG5BZ,EAAO,OAAOS,GAAyBC,EAAe,EACtD,MAAMpB,GAAaU,EAAO,KAY1B,GAVAX,GACEC,GACAmB,GACAjB,EACAc,EACAZ,EACAc,CACF,EAGIG,GAAY,CACd,IAAIE,EAAeJ,GAAyBD,EAC5C,QACM1C,EAAI,EAAGgD,EAASV,EAAkBG,EACtCzC,EAAIgD,EACJ,EAAEhD,EAEFwB,GAAWuB,GAAc,EAAIR,EAAcvC,CAAC,CAEhD,CACA,MAAO,CAAC4B,EAAakB,CAAW,CAClC,CAaO,SAASG,GACdf,EACAgB,EACAC,EACAC,EACAC,EACAC,EACAC,EACA,CAGA,MAAMnB,EAAQd,GAAS,EACjBkC,EAAW,IAAI,MAAc,CAAC,EACpC,IAAIC,EAAiBpC,GACrB,QAASrB,GAAI,EAAGA,GAAI,EAAG,EAAEA,GAAG,CAC1B,MAAM0D,GAAeF,EAASxD,EAAC,EAAI,KAAK,KAAKoD,EAAWpD,EAAC,EAAIkD,EAAUlD,EAAC,CAAC,EACzEyD,GAAkBC,EACpB,CACA,MAAMC,EAAKH,EAAS,CAAC,EACfI,GAAKJ,EAAS,CAAC,EACfK,GAAKL,EAAS,CAAC,EACfM,GAAQV,EAAW,CAAC,EACpBW,GAAQX,EAAW,CAAC,EACpBY,EAAQZ,EAAW,CAAC,EACpBa,GAAaf,EAAU,CAAC,EACxBgB,EAAahB,EAAU,CAAC,EACxBiB,EAAajB,EAAU,CAAC,EACxBf,EAAaD,EAAO,OAC1B,IAAIkC,GAAejC,EACnB,MAAMkC,GAAa,CAAC,EAAG,EAAG,CAAC,EAC3BnC,EAAO,OAAOC,EAAasB,CAAc,EACzC,MAAMa,GAAKhB,EAAa,CAAC,EACnBiB,GAAKjB,EAAa,CAAC,EACnBkB,GAAKlB,EAAa,CAAC,EACzB,QAASmB,GAAK,EAAGA,GAAKZ,GAAI,EAAEY,GAAI,CAC9BJ,GAAW,CAAC,EAAI,KAAK,IAAIF,EAAYH,EAAQS,GAAKN,CAAU,EAC5D,QAASO,GAAK,EAAGA,GAAKd,GAAI,EAAEc,GAAI,CAC9BL,GAAW,CAAC,EAAI,KAAK,IAAIH,EAAYH,GAAQW,GAAKR,CAAU,EAC5D,QAASS,GAAK,EAAGA,GAAKhB,EAAI,EAAEgB,GAAI,CAC9BN,GAAW,CAAC,EAAI,KAAK,IAAIJ,GAAYH,GAAQa,GAAKV,EAAU,EAC5D,MAAMW,GACJH,GAAKN,EAAaK,GAAKE,GAAKR,EAAaK,GAAKI,GAAKV,GAAaK,GAC5D3B,GAAyBT,EAAO,OAASC,EACzC,CAACP,GAAakB,CAAW,EAAIS,EACjCJ,EACAE,EAAkBuB,GAClBtB,EACAJ,EACAmB,GACAlC,EACAC,EACAF,CACF,EACMV,EAAaU,EAAO,KAC1BV,EAAW4C,IAAc,EAAItB,EAAelB,IAAe,GAC3DJ,EAAW4C,IAAc,EAAIzB,EAC/B,CACF,CACF,CACF,CAEO,SAASkC,GACd3C,EACAgB,EACAC,EACAC,EACAC,EACAC,EACAC,EACA,CACA,MAAMuB,EAA0B5C,EAAO,OACjC6C,EAAc3B,EAAW,CAAC,EAChClB,EAAO,OAAO4C,EAA0BC,CAAW,EACnD,QAASC,EAAU,EAAGA,EAAUD,EAAa,EAAEC,EAC7C9C,EAAO,KAAK4C,EAA0BE,CAAO,EAAI9C,EAAO,OACxDe,GACEf,EACAgB,EACAC,EACAC,EACAC,EAAkBC,EAAa,CAAC,EAAI0B,EACpC1B,EACAC,CACF,CAEJ,CCpaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA+BO,SAAS0B,GACdC,EACAC,EACAC,EACAC,EACQ,CACR,KAAOF,EAAQC,GAAK,CAClB,MAAME,EAAIJ,EAAMC,CAAK,EACrB,GAAIE,EAAUC,CAAC,EAAG,CAChB,EAAEH,EACF,QACF,CACA,EAAEC,EACFF,EAAMC,CAAK,EAAID,EAAME,CAAG,EACxBF,EAAME,CAAG,EAAIE,CACf,CACA,OAAOF,CACT,CAEO,SAASG,GACdL,EACAG,EACA,CACA,MAAMrC,EAASkC,EAAM,OACrB,IAAIM,EAAW,EACf,QAASxF,EAAI,EAAGA,EAAIgD,EAAQ,EAAEhD,EACxBqF,EAAUH,EAAMlF,CAAC,EAAGA,EAAGkF,CAAK,IAC9BA,EAAMM,CAAQ,EAAIN,EAAMlF,CAAC,EACzB,EAAEwF,GAGNN,EAAM,OAASM,CACjB,CA2BO,SAASC,GACdP,EACAQ,EACG,CACH,GAAIR,EAAM,SAAWQ,EACnB,OAAOR,EAET,MAAMS,EAAW,IAAUT,EAAM,YAAaQ,CAAO,EACrD,OAAAC,EAAS,IAAIT,CAAK,EACXS,CACT,CAEO,SAAS,GACdC,EACAC,EAAa,EACb,CACA,MAAM7C,EAAS4C,EAAK,OACdE,EAAU,IAAI,MAAc9C,CAAM,EACxC,IAAI+C,EAAUD,EAAQ,CAAC,EAAID,EAC3B,QAAS7F,EAAI,EAAGA,EAAIgD,EAAQ,EAAEhD,EAC5B+F,GAAUH,EAAK5F,EAAI,CAAC,EACpB8F,EAAQ9F,CAAC,EAAI+F,EAEf,OAAOD,CACT,CAMO,SAASE,GACdd,EACAe,EACAC,EACG,CACH,MAAMC,EAAY,IAAUjB,EAAM,YAAaA,EAAM,MAAM,EAC3D,QAASlF,EAAI,EAAGA,EAAIiG,EAAYC,EAAWlG,GAAKkG,EAC9C,QAASE,EAAI,EAAGA,EAAIF,EAAWE,IAAK,CAClC,MAAMC,EAAgBrG,EAAIkG,EAC1BC,EAAUC,EAAIH,EAAYI,CAAK,EAAInB,EAAMlF,EAAIoG,CAAC,CAChD,CAEF,OAAOD,CACT,CAEO,SAASG,GACdpB,EACAqB,EACAC,EACAC,EACA,CACA,MAAMC,EAAiBxB,EAAM,OAASqB,EAChCvD,EAASkC,EAAM,OAASsB,EAAaC,EACrCE,EAAY,IAAUzB,EAAM,YAAalC,CAAM,EAC/C4D,EAAkB1B,EAAM,OAASuB,EACjCI,EAAkBN,EAClBO,EAAcP,EAAiBE,EACrC,QAASM,EAAQ,EAAGA,EAAQL,EAAgB,EAAEK,EAC5C,QAASC,GAAQ,EAAGA,GAAQT,EAAgB,EAAES,GAAO,CACnD,MAAMC,GAAa/B,EAAM6B,EAAQR,EAAiBS,EAAK,EACjD7E,GAAa4E,EAAQD,EAAcE,GACzC,QAASE,GAAY,EAAGA,GAAYV,EAAY,EAAEU,GAChD,QAASC,EAAY,EAAGA,EAAYV,EAAY,EAAEU,EAChDR,EACEO,GAAYN,EACVO,EAAYN,EACZ1E,EACJ,EAAI8E,EAGV,CAEF,OAAON,CACT,CAEO,SAASS,GACdC,EACAC,EACAC,EACAC,EAAM,EACNC,EAAOJ,EAAS,OAChB,CACA,KAAOG,EAAMC,GAAM,CACjB,MAAMC,EAAOF,EAAMC,EAAO,GAAM,EAC1BE,EAAgBJ,EAAQD,EAAQD,EAASK,CAAG,CAAC,EACnD,GAAIC,EAAgB,EAClBH,EAAME,EAAM,UACHC,EAAgB,EACzBF,EAAOC,MAEP,QAAOA,CAEX,CACA,MAAO,CAACF,CACV,CAOO,SAASI,GACdP,EACAC,EACAC,EACAC,EAAM,EACNC,EAAOJ,EAAS,OACR,CACR,IAAIQ,EAAY,GACZC,EAAe,IACnB,KAAON,EAAMC,GAAM,CACjB,MAAMC,EAAOF,EAAMC,EAAO,GAAM,EAC1BE,EAAgBJ,EAAQD,EAAQD,EAASK,CAAG,CAAC,EACnD,GAAIC,EAAgB,EAClBH,EAAME,EAAM,UACHC,EAAgB,EACzBF,EAAOC,MAEP,QAAOA,EAET,MAAMK,EAAW,KAAK,IAAIJ,CAAa,EACnCI,EAAWD,IACbA,EAAeC,EACfF,EAAYH,EAEhB,CACA,OAAOG,CACT,CAQO,SAASG,GACdC,EACA7C,EACAC,EACQ,CACR,IAAI6C,EAAQ9C,EAAM6C,EAClB,KAAOC,EAAQ,GAAG,CAChB,MAAMC,EAAO,KAAK,MAAMD,EAAQ,CAAC,EAC3BlI,EAAIiI,EAAQE,EACd9C,EAAUrF,CAAC,EACbkI,EAAQC,GAERF,EAAQjI,EAAI,EACZkI,GAASC,EAAO,EAEpB,CACA,OAAOF,CACT,CAKO,SAASG,GAAuBC,EAAYtH,EAAU,CAC3D,MAAMuH,EAAgB,CAAC,EACvB,QAAStI,EAAI,EAAGgD,EAASqF,EAAM,OAAQrI,EAAIgD,EAAQ,EAAEhD,EAC/CqI,EAAMrI,CAAC,IAAMe,GACfuH,EAAI,KAAKtI,CAAC,EAGd,OAAOsI,CACT,CAKO,SAASC,GAAqBC,EAAmBC,EAAa,CACnE,MAAMC,EAAkB,CAAC,EACzBA,EAAK,OAASD,EACd,UAAWzI,KAAKwI,EACdE,EAAK1I,CAAC,EAAI,GAEZ,OAAOoI,GAAoBM,EAAM,MAAS,CAC5C,CAEO,SAASC,GAAe,EAAiBC,EAAiB,CAC/D,MAAM5F,EAAS,EAAE,OACjB,GAAI4F,EAAE,SAAW5F,EAAQ,MAAO,GAChC,QAAShD,EAAI,EAAGA,EAAIgD,EAAQ,EAAEhD,EAC5B,GAAI,EAAEA,CAAC,IAAM4I,EAAE5I,CAAC,EAAG,MAAO,GAE5B,MAAO,EACT,CAEO,SAAS6I,GACd,EACAD,EACAE,EAAyC,CAACC,EAAGH,IAAMG,IAAMH,EACzD,CACA,MAAM5F,EAAS,EAAE,OACjB,GAAI4F,EAAE,SAAW5F,EAAQ,MAAO,GAChC,QAAShD,EAAI,EAAGA,EAAIgD,EAAQ,EAAEhD,EAC5B,GAAI,CAAC8I,EAAc,EAAE9I,CAAC,EAAG4I,EAAE5I,CAAC,CAAC,EAAG,MAAO,GAEzC,MAAO,EACT,CAEO,SAASgJ,GACdC,EACAC,EACAC,EACA,CACA,MAAMC,EAAqB,CAAC,EAC5B,GAAID,IAAgBD,EAAa,CAC/B,QAASlJ,EAAI,EAAGA,EAAIiJ,EAAG,EAAEjJ,EACvBoJ,EAASpJ,CAAC,EAAIA,EAEhB,OAAOoJ,CACT,CACAA,EAASD,CAAW,EAAID,EACxB,QAASG,EAAS,EAAGC,EAAS,EAAGD,EAASJ,GAAK,CAC7C,GAAII,IAAWH,EAAa,CAC1B,EAAEG,EACF,QACF,CACIC,IAAWH,GACb,EAAEG,EAEJF,EAASE,GAAQ,EAAID,GACvB,CACA,OAAOD,CACT,CAEO,SAASG,GAIdC,EAAYC,EAAgBjB,EAAkC,CAC9D,QACMU,EAAc,EAAGlG,EAASwF,EAAQ,OACtCU,EAAclG,EACd,EAAEkG,EACF,CACA,MAAMQ,EAAYlB,EAAQU,CAAW,EACjCQ,IAAc,KAClBF,EAAKE,CAAS,EAAID,EAAOP,CAAW,EACtC,CACA,OAAOM,CACT,CAEO,SAASG,GAIdH,EAAYC,EAAgBjB,EAAkC,CAC9D,QACMkB,EAAY,EAAG1G,EAASwF,EAAQ,OACpCkB,EAAY1G,EACZ,EAAE0G,EACF,CACA,MAAMR,EAAcV,EAAQkB,CAAS,EACjCR,IAAgB,KACpBM,EAAKE,CAAS,EAAID,EAAOP,CAAW,EACtC,CACA,OAAOM,CACT,CAEO,SAASI,GAAyBtE,EAAU,CACjD,MAAMqB,EAAgB,CAAC,EACvB,QACMkD,EAAa,EAAGC,EAAcxE,EAAE,OACpCuE,EAAaC,EACb,EAAED,EACF,CACA,MAAME,EAAQzE,EAAEuE,CAAU,EAC1B,QACMG,EAAa,EAAGC,EAAcF,EAAM,OACxCC,EAAaC,EACb,EAAED,EACF,CACA,IAAIE,EAAcvD,EAAOqD,CAAU,EAC/BE,IAAgB,SAClBA,EAAcvD,EAAOqD,CAAU,EAAI,CAAC,GAEtCE,EAAY,KAAKH,EAAMC,CAAU,CAAC,CACpC,CACF,CACA,OAAOrD,CACT,CAQO,SAASwD,GACdjF,EACAkF,EACA,CACA,MAAMC,EAAe,CAAC,EACtB,IAAIC,EAAa,EACjB,QAAStK,EAAI,EAAGuK,EAAaH,EAAQ,OAAQpK,EAAIuK,EAAY,EAAEvK,EAAG,CAChE,KAAM,CAAE,YAAAwK,EAAa,YAAAC,EAAa,YAAAC,CAAY,EAAIN,EAAQpK,CAAC,EACvDwK,IAAgB,IAClBH,EAAM,KAAKnF,EAAM,MAAMoF,EAAYA,EAAaE,CAAW,CAAC,EAC5DF,GAAcE,GAEhBF,GAAcG,EACVC,IAAgB,GAClBL,EAAM,KAAK,IAAI,MAASK,CAAW,CAAC,CAExC,CACA,MAAMC,EAAazF,EAAM,OACzB,OAAIoF,IAAeK,GACjBN,EAAM,KAAKnF,EAAM,MAAMoF,CAAU,CAAC,EAE7B,IAAI,MAAM,CAAC,EAAE,OAAO,GAAGD,CAAK,CACrC,CAEO,SAASO,GACdC,EACAlF,EACA4B,EACiB,CACjB,MAAM6C,EAA2B,CAAC,EAClC,IAAIU,EAAW,EACXC,EAAW,EACf,MAAMC,EAAWH,EAAS,OACpBI,EAAWtF,EAAS,OAC1B,KAAOmF,EAAWE,GAAYD,EAAWE,GAAU,CACjD,IAAIC,EACJ,MAAMC,EAAWN,EAASC,CAAQ,EAC5BM,EAAWzF,EAASoF,CAAQ,EAElC,GADAG,EAAI3D,EAAQ4D,EAAUC,CAAQ,EAC1BF,IAAM,EAAG,CACX,IAAIV,GAAc,EAGlB,IAFA,EAAEM,EACF,EAAEC,EAEAD,EAAWE,GACXD,EAAWE,IACVC,EAAI3D,EAAQsD,EAASC,CAAQ,EAAGnF,EAASoF,CAAQ,CAAC,KAAO,GAE1D,EAAEP,GACF,EAAEM,EACF,EAAEC,EAEJX,EAAQ,KAAK,CAAE,YAAAI,GAAa,YAAa,EAAG,YAAa,CAAE,CAAC,EAC5D,QACF,CACA,GAAIU,EAAI,EAAG,CACT,IAAIT,GAAc,EAClB,KACE,EAAEK,EAAWE,IACZE,EAAI3D,EAAQsD,EAASC,CAAQ,EAAGM,CAAQ,GAAK,GAE9C,EAAEX,GAEJL,EAAQ,KAAK,CAAE,YAAa,EAAG,YAAAK,GAAa,YAAa,CAAE,CAAC,EAC5D,QACF,CACA,GAAIS,EAAI,EAAG,CACT,IAAIR,GAAc,EAClB,KACE,EAAEK,EAAWE,IACZC,EAAI3D,EAAQ4D,EAAUxF,EAASoF,CAAQ,CAAC,GAAK,GAE9C,EAAEL,GAEJN,EAAQ,KAAK,CAAE,YAAa,EAAG,YAAa,EAAG,YAAAM,EAAY,CAAC,CAC9D,CACF,CACA,OAAII,EAAWE,GAAYD,EAAWE,IACpCb,EAAQ,KAAK,CACX,YAAa,EACb,YAAaY,EAAWF,EACxB,YAAaG,EAAWF,CAC1B,CAAC,EAEIX,CACT,CAEO,SAASiB,GACdR,EACAlF,EACA2F,EACiB,CACjB,MAAMlB,EAA2B,CAAC,EAClC,IAAIU,EAAW,EACXC,EAAW,EACf,MAAMC,EAAWH,EAAS,OACpBI,EAAWtF,EAAS,OAC1B,KAAOmF,EAAWE,GAAU,CAC1B,IAAIR,EAAc,EAClB,KACEM,EAAWE,GACXD,EAAWE,GACXK,EAAMT,EAASC,CAAQ,EAAGnF,EAASoF,CAAQ,CAAC,GAE5C,EAAEP,EACF,EAAEM,EACF,EAAEC,EAEAP,IAAgB,GAClBJ,EAAQ,KAAK,CAAE,YAAAI,EAAa,YAAa,EAAG,YAAa,CAAE,CAAC,EAE9D,IAAIC,EAAc,EAClB,KACEK,EAAWE,IACVD,IAAaE,GAAY,CAACK,EAAMT,EAASC,CAAQ,EAAGnF,EAASoF,CAAQ,CAAC,IAEvE,EAAEN,EACF,EAAEK,EAEAL,IAAgB,GAClBL,EAAQ,KAAK,CAAE,YAAa,EAAG,YAAAK,EAAa,YAAa,CAAE,CAAC,CAEhE,CACA,OAAIM,IAAaE,GACfb,EAAQ,KAAK,CACX,YAAa,EACb,YAAa,EACb,YAAaa,EAAWF,CAC1B,CAAC,EAEIX,CACT,CAEO,SAASmB,GACdC,EACAC,EACAlE,EACAmE,EACAC,EACAC,EACA,CACA,IAAI7C,EAAI,EACJH,EAAI,EACR,GAAI4C,IAAW,GAAKC,IAAW,EAC7B,OAAa,CACX,MAAMnG,EAAIiC,EAAQwB,EAAGH,CAAC,EACtB,GAAItD,EAAI,GAEN,GADAoG,EAAU3C,CAAC,EACP,EAAEA,IAAMyC,EAAQ,cACXlG,EAAI,GAEb,GADAqG,EAAU/C,CAAC,EACP,EAAEA,IAAM6C,EAAQ,cAEpBG,EAAW7C,EAAGH,CAAC,EACf,EAAEG,EACF,EAAEH,EACEG,IAAMyC,GAAU5C,IAAM6C,EAAQ,KAEtC,CAEF,KAAO1C,EAAIyC,GACTE,EAAU3C,CAAC,EACX,EAAEA,EAEJ,KAAOH,EAAI6C,GACTE,EAAU/C,CAAC,EACX,EAAEA,CAEN,CCliBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA+BA,IAAIiD,GACAC,GACAC,GACAC,GACAC,GAEJ,MAAMxJ,GAAoB,EAEnB,SAASc,GACdJ,EACAyB,EACAtB,EACAJ,EACAmB,EACAlC,EACAC,EACAF,EACkB,CAClB,MAAMgK,EAAK7H,EAAW,CAAC,EACjB8H,EAAK9H,EAAW,CAAC,EACjB+H,EAAK/H,EAAW,CAAC,EACjBM,GAAKzB,EAAU,CAAC,EAChBwB,GAAKxB,EAAU,CAAC,EAChBuB,GAAKvB,EAAU,CAAC,EAChBoB,GAAKhB,EAAa,CAAC,EACzB,IAAIiB,EAAKjB,EAAa,CAAC,EACnBkB,GAAKlB,EAAa,CAAC,EAGvB,GAFAkB,IAAMD,EAAK4H,EACX5H,GAAMD,GAAK4H,EACPA,EAAKC,EAAKC,IAAO,EACnB,MAAO,CAAC,EAAG,CAAC,EAGd,MAAM/J,EAAmBsC,GAAKD,GAAKD,GAAK,IAEtCoH,KAAuB,QACvBA,GAAmB,OAASxJ,KAE5BwJ,GAAqB,IAAI,YAAYxJ,CAAgB,EACrDyJ,GAAoB,IAAI,YAAYzJ,EAAmBI,EAAiB,EACxEsJ,GAAoB,IAAI,YAAY1J,EAAmBI,EAAiB,EACxEuJ,GAAmB,IAAI,YAAY3J,CAAgB,EACnD4J,GAAmB,IAAI,YAAY5J,CAAgB,GAGrD,MAAMX,EAAiBmK,GAAmB,SAAS,EAAGxJ,CAAgB,EACtEX,EAAe,KAAK,CAAC,EACrB,MAAM2K,EAAgBP,GAChBvJ,GAAgBwJ,GAChBO,GAAeN,GACfxJ,GAAeyJ,GAErB,IAAIM,GAA2B,EAC/B,CACE,IAAIC,GAAWrJ,EAAQyB,CAAW,EAAI,IAAO,EAEzC6H,GAAc7H,EACd8H,GAAoB,EACxB,MAAMC,GAAMhI,GAAKuH,EACXU,GAAMjI,GAAKD,GAAKC,GAAKwH,EAC3B,QAASU,GAAI,EAAGA,GAAIT,EAAI,EAAES,GAAGJ,IAAejI,GAAIkI,IAAqBE,GACnE,QACME,EAAI,EACRA,EAAIX,EACJ,EAAEW,EAAGL,IAAelI,EAAImI,IAAqBC,GAE7C,QAASrH,EAAI,EAAGA,EAAI4G,EAAI,EAAE5G,EAAGmH,IAAenI,GAAI,CAC9C,MAAMyI,EAAW5J,EAAQsJ,EAAW,EAEhCM,IAAaP,KACfA,GAAUH,EAAcE,GAA2B,CAAC,EAAIQ,EAExDT,GAAaC,EAAwB,EAAIA,MAE3C7K,EAAegL,IAAmB,EAAIH,EACxC,CAGN,CAEAD,GAAa,SAAS,EAAGC,EAAwB,EAAE,KAAK,CAACxD,GAAGH,KACnDyD,EAActD,EAAC,EAAIsD,EAAczD,EAAC,CAC1C,EAED,IAAItG,GAAkB,GACtB,CACE,IAAIkK,GACDH,EAAcC,GAAa,CAAC,EAAI7J,EAAiB,EAAI,IAAO,EAE/D,QAASzC,GAAI,EAAGA,GAAIuM,GAA0B,EAAEvM,GAAG,CACjD,MAAMqG,GAAQiG,GAAatM,EAAC,EACtBgN,GAAa3G,GAAQ5D,GACrBsK,GAAWV,EAAcW,EAAU,EAEzC,GAAID,KAAaP,GAAS,CACxB,EAAElK,GACF,MAAM2K,GAAe3K,GAAkBG,GACvC+J,GAAUjK,GAAc0K,EAAY,EAAIF,EAC1C,CACAvK,GAAa6D,GAAQ,CAAC,EAAI/D,EAC5B,CACA,EAAEA,EACJ,CAEA,OAAOL,GACLC,EACAC,EACAC,EACAuC,GAAKD,GAAKD,GACVnC,GACAC,GACAb,EACAc,GACAC,EACF,CACF,CAEO,SAAS,GACdP,EACAgB,EACAC,EACAC,EACAC,EAAkB,EAClBC,EAAe,uBAAuBF,EAAY,CAAC,EACnD,CACA,OAAO,oBACLlB,EACAgB,EACAC,EACAC,EACAC,EACAC,EACAC,EACF,CACF,CAEO,SAAS,GACdrB,EACAgB,EACAC,EACAC,EACAC,EAAkB,EAClBC,EAAe,GAAuBF,EAAY,CAAC,EACnD,CACA,OAAOyB,GACL3C,EACAgB,EACAC,EACAC,EACAC,EACAC,EACAC,EACF,CACF,CCxLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GA+BA,IAAI,GACA,GACA,GACA,GACA,GAEJ,MAAM,GAAoB,EAEnB,SAAS,GACdJ,EACAyB,EACAtB,EACAJ,EACAmB,EACAlC,EACAC,EACAF,EACkB,CAClB,MAAMgK,EAAK7H,EAAW,CAAC,EACjB8H,EAAK9H,EAAW,CAAC,EACjB+H,EAAK/H,EAAW,CAAC,EACjBM,GAAKzB,EAAU,CAAC,EAChBwB,GAAKxB,EAAU,CAAC,EAChBuB,GAAKvB,EAAU,CAAC,EAChBoB,GAAKhB,EAAa,CAAC,EACzB,IAAIiB,EAAKjB,EAAa,CAAC,EACnBkB,GAAKlB,EAAa,CAAC,EAGvB,GAFAkB,IAAMD,EAAK4H,EACX5H,GAAMD,GAAK4H,EACPA,EAAKC,EAAKC,IAAO,EACnB,MAAO,CAAC,EAAG,CAAC,EAGd,MAAM/J,EAAmBsC,GAAKD,GAAKD,GAAK,IAEtC,KAAuB,QACvB,GAAmB,OAASpC,KAE5B,GAAqB,IAAI,YAAYA,CAAgB,EACrD,GAAoB,IAAI,YAAYA,EAAmB,EAAiB,EACxE,GAAoB,IAAI,YAAYA,EAAmB,EAAiB,EACxE,GAAmB,IAAI,YAAYA,CAAgB,EACnD,GAAmB,IAAI,YAAYA,CAAgB,GAGrD,MAAMX,EAAiB,GAAmB,SAAS,EAAGW,CAAgB,EACtEX,EAAe,KAAK,CAAC,EACrB,MAAM2K,EAAgB,GAChB9J,GAAgB,GAChB+J,GAAe,GACf9J,GAAe,GAErB,IAAI+J,GAA2B,EAC/B,CACE,IAAIC,GAAWrJ,EAAQyB,CAAW,EAAI,IAAO,EAEzCsI,GAAW,EAEXT,GAAc7H,EACd8H,GAAoB,EACxB,MAAMC,GAAMhI,GAAKuH,EACXU,GAAMjI,GAAKD,GAAKC,GAAKwH,EAC3B,QAASU,EAAI,EAAGA,EAAIT,EAAI,EAAES,EAAGJ,IAAejI,GAAIkI,IAAqBE,GACnE,QACME,EAAI,EACRA,EAAIX,EACJ,EAAEW,EAAGL,IAAelI,EAAImI,IAAqBC,GAE7C,QAASrH,EAAI,EAAGA,EAAI4G,EAAI,EAAE5G,EAAGmH,IAAenI,GAAI,CAC9C,MAAMyI,EAAW5J,EAAQsJ,EAAW,EAE9BU,EAAYhK,EAAQsJ,GAAc,CAAC,GAErCM,IAAaP,IAAWW,IAAcD,MACxCV,GAAUH,EAAcE,GAA2B,CAAC,EAAIQ,EAExDG,GAAWb,EAAcE,GAA2B,EAAI,CAAC,EACvDY,EAEFb,GAAaC,EAAwB,EAAIA,MAE3C7K,EAAegL,IAAmB,EAAIH,EACxC,CAGN,CAEAD,GAAa,SAAS,EAAGC,EAAwB,EAAE,KAAK,CAACxD,GAAGH,KAAM,CAChE,MAAMwE,GAAQf,EAAc,EAAItD,GAAI,CAAC,EAC/BsE,GAAQhB,EAAc,EAAIzD,GAAI,CAAC,EAC/B0E,GAAOjB,EAAc,EAAItD,EAAC,EAC1BwE,GAAOlB,EAAc,EAAIzD,EAAC,EAChC,OAAOwE,GAAQC,IAASC,GAAOC,EACjC,CAAC,EAED,IAAIjL,GAAkB,GACtB,CACE,IAAIkK,GACDH,EAAcC,GAAa,CAAC,EAAI,EAAiB,EAAI,IAAO,EAE3DY,GAAW,EAEf,QAASlN,GAAI,EAAGA,GAAIuM,GAA0B,EAAEvM,GAAG,CACjD,MAAMqG,GAAQiG,GAAatM,EAAC,EACtBgN,GAAa3G,GAAQ,GACrB0G,GAAWV,EAAcW,EAAU,EAEnCG,EAAYd,EAAcW,GAAa,CAAC,EAE9C,GAAID,KAAaP,IAAWW,IAAcD,GAAU,CAClD,EAAE5K,GACF,MAAM2K,EAAe3K,GAAkB,GACvCkK,GAAUjK,GAAc0K,CAAY,EAAIF,GAExCG,GAAW3K,GAAc0K,EAAe,CAAC,EAAIE,CAC/C,CACA3K,GAAa6D,GAAQ,CAAC,EAAI/D,EAC5B,CACA,EAAEA,EACJ,CAEA,OAAOL,GACLC,EACAC,EACAC,EACAuC,GAAKD,GAAKD,GACVnC,GACAC,GACAb,EACAc,GACA,EACF,CACF,CAEO,SAAS,GACdN,EACAgB,EACAC,EACAC,EACAC,EAAkB,EAClBC,EAAe,uBAAuBF,EAAY,CAAC,EACnD,CACA,OAAO,oBACLlB,EACAgB,EACAC,EACAC,EACAC,EACAC,EACA,EACF,CACF,CAEO,SAAS,GACdpB,EACAgB,EACAC,EACAC,EACAC,EAAkB,EAClBC,EAAe,GAAuBF,EAAY,CAAC,EACnD,CACA,OAAOyB,GACL3C,EACAgB,EACAC,EACAC,EACAC,EACAC,EACA,EACF,CACF,CC1MA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAgBO,MAAMkK,EAAmB,CAI9B,YAAYC,EAAkB,GAAI,CAHlC,YAAS,EAIP,KAAK,KAAO,IAAI,YAAYA,CAAe,CAC7C,CAEA,OAAOC,EAAmB,CACxB,KAAM,CAAE,KAAA9N,CAAK,EAAI,KACjB,GAAI8N,EAAY9N,EAAK,OAAQ,CAC3B,MAAM+N,EAAU,IAAI,YAAY,KAAK,IAAID,EAAW9N,EAAK,OAAS,CAAC,CAAC,EACpE+N,EAAQ,IAAI/N,EAAK,SAAS,EAAG,KAAK,MAAM,CAAC,EACzC,KAAK,KAAO+N,CACd,CACA,KAAK,OAASD,CAChB,CAEA,IAAI,MAAO,CACT,KAAM,CAAE,KAAA9N,CAAK,EAAI,KACjB,OAAO,IAAI,YAAYA,EAAK,OAAQA,EAAK,WAAY,KAAK,MAAM,CAClE,CAEA,aAAc,CACZ,KAAK,KAAO,IAAI,YAAY,KAAK,IAAI,CACvC,CAEA,OAAQ,CACN,KAAK,OAAS,CAChB,CAEA,YAAYgO,EAA0B,CACpC,KAAM,CAAE,OAAA5K,CAAO,EAAI,KACnB,KAAK,OAAOA,EAAS4K,EAAM,MAAM,EACjC,KAAK,KAAK,IAAIA,EAAO5K,CAAM,CAC7B,CAEA,WAAWmC,EAAeC,EAAa,CACrC,KAAK,KAAK,WAAWD,EAAOC,EAAK,KAAK,MAAM,EAC5C,KAAK,QAAUA,EAAMD,CACvB,CACF,CC1DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAyBA,MAAM0I,GAAa,IAAIL,GAAmB,GAAK,EAE/CtM,GACEX,GACA,MAAO4C,EAAS2K,EAAO5K,KACrB2K,GAAW,MAAM,EACjB,GAAqBA,GAAY3K,EAAWC,EAAS2K,CAAK,EACnD,CAAE,MAAOD,GAAW,IAAK,EAEpC,EAEA3M,GACEV,GACA,MAAO2C,EAAS2K,EAAO5K,KACrB2K,GAAW,MAAM,EACjB,GAAqBA,GAAY3K,EAAWC,EAAS2K,CAAK,EACnD,CAAE,MAAOD,GAAW,IAAK,EAEpC,EC3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAkBO,MAAME,GACX1N,GAQE,YAAY,EC3BhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAgBA,SAAS2N,GAAqBC,EAAMC,EAAU,CAC5C,GAAID,EAAK,QAAQ,OAAO,IAAM,EAAG,CAI/B,QAHIE,EAASF,EAAK,QAAQ,SAAS,EAAI,EACnCrO,EAAO,KAAKqO,EAAK,UAAUE,CAAM,CAAC,EAClCC,EAAM,IAAI,WAAWxO,EAAK,MAAM,EAC3BI,EAAIJ,EAAK,OAAS,EAAGI,GAAK,EAAGA,IACpCoO,EAAIpO,CAAC,EAAIJ,EAAK,WAAWI,CAAC,EAE5BkO,EAASE,EAAI,MAAM,EACnB,MACF,CACA,IAAIC,EAAM,IAAI,eACdA,EAAI,KAAK,MAAOJ,EAAM,EAAI,EAC1BI,EAAI,aAAe,cACnBA,EAAI,OAAS,UAAY,CACvBH,EAASG,EAAI,QAAQ,CACvB,EACAA,EAAI,KAAK,IAAI,CACf,CAEA,IAAIC,GAAa,UAAqB,CACpC,SAASA,GAAY,CACnB,KAAK,KAAO,KACZ,KAAK,QAAU,IAAIC,GAAM,UACzB,KAAK,OAAS,IAChB,CACA,OAAAD,EAAU,UAAY,CACpB,IAAI,KAAM,CACR,OAAO,KAAK,IACd,EACA,IAAI,IAAIvN,EAAO,CACb,KAAK,KAAKA,CAAK,CACjB,EACA,IAAI,OAAQ,CACV,OAAO,KAAK,QAAQ,KACtB,EACA,IAAI,QAAS,CACX,OAAO,KAAK,QAAQ,MACtB,EACA,KAAM,SAAckN,EAAM,CACxB,KAAK,KAAOA,EACZD,GACEC,EACA,SAAUO,EAAQ,CAChB,KAAK,MAAM,IAAI,WAAWA,CAAM,CAAC,EAC7B,KAAK,QACP,KAAK,OAAO,CAEhB,EAAE,KAAK,IAAI,CACb,CACF,EACA,MAAO,SAAU5O,EAAM,CACrB,KAAK,QAAQ,MAAMA,CAAI,CACzB,EACA,QAAS,SAAU6O,EAAOC,EAAQ,CAChC,OAAO,KAAK,QAAQ,QAAQD,EAAOC,EAAQ,EAAK,CAClD,EACA,gBAAiB,SAAyBC,EAAW,CACnD,GAAI,KAAK,QAAQ,gBAAkB,GAAK,KAAK,QAAQ,cAAgB,EACnE,MAAM,IAAI,MAAM,kCAAkC,EAEpD,IAAIF,EAAQE,EAAU,MACpBD,EAASC,EAAU,OACjBC,EAAiBH,EAAQC,EAAS,EAClCG,EAAiBF,EAAU,KAC3B3O,EAAGoG,EACP,GAAI,KAAK,QAAQ,gBAAkB,EAAG,CACpC,IAAI0I,EAAS,KAAK,QAAQ,QAAQL,EAAOC,EAAQ,EAAK,EACtD,IAAK1O,EAAI,EAAGoG,EAAI,EAAGpG,EAAI4O,GAAkB,CACvC,IAAI7N,GAAQ+N,EAAO1I,GAAG,EACtByI,EAAe7O,GAAG,EAAIe,GACtB8N,EAAe7O,GAAG,EAAIe,GACtB8N,EAAe7O,GAAG,EAAIe,GACtB8N,EAAe7O,GAAG,EAAI,GACxB,CACA,MACF,CACA,IAAI+O,GAAM,KAAK,QAAQ,QAAQN,EAAOC,EAAQ,EAAI,EAClD,IAAK1O,EAAI,EAAGoG,EAAI,EAAGpG,EAAI4O,GACrBC,EAAe7O,GAAG,EAAI+O,GAAI3I,GAAG,EAC7ByI,EAAe7O,GAAG,EAAI+O,GAAI3I,GAAG,EAC7ByI,EAAe7O,GAAG,EAAI+O,GAAI3I,GAAG,EAC7ByI,EAAe7O,GAAG,EAAI,GAE1B,CACF,EACOsO,CACT,EAAG,EAECC,IAEH,SAAUA,EAAO,CAChB,aACA,IAAID,EAAa,UAAqB,CACpC,IAAIU,GAAY,IAAI,WAAW,CAC7B,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GACpE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACtE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAC1B,CAAC,EACGC,EAAU,KACVC,GAAU,IACVC,EAAU,KACVC,EAAU,KACVC,EAAU,KACVC,GAAU,KACVC,GAAW,KACXC,GAAa,KACjB,SAASC,IAAc,CAAC,CACxB,SAASC,GAAkBC,GAAab,EAAQ,CAM9C,QALIc,EAAI,EACNC,EAAO,CAAC,EACR7P,EACAoG,EACApD,GAAS,GACJA,GAAS,GAAK,CAAC2M,GAAY3M,GAAS,CAAC,GAC1CA,KAEF6M,EAAK,KAAK,CACR,SAAU,CAAC,EACX,MAAO,CACT,CAAC,EACD,IAAIC,EAAID,EAAK,CAAC,EACZE,EACF,IAAK/P,EAAI,EAAGA,EAAIgD,GAAQhD,IAAK,CAC3B,IAAKoG,EAAI,EAAGA,EAAIuJ,GAAY3P,CAAC,EAAGoG,IAAK,CAGnC,IAFA0J,EAAID,EAAK,IAAI,EACbC,EAAE,SAASA,EAAE,KAAK,EAAIhB,EAAOc,CAAC,EACvBE,EAAE,MAAQ,GACfA,EAAID,EAAK,IAAI,EAIf,IAFAC,EAAE,QACFD,EAAK,KAAKC,CAAC,EACJD,EAAK,QAAU7P,GACpB6P,EAAK,KACFE,EAAI,CACH,SAAU,CAAC,EACX,MAAO,CACT,CACF,EACAD,EAAE,SAASA,EAAE,KAAK,EAAIC,EAAE,SACxBD,EAAIC,EAENH,GACF,CACI5P,EAAI,EAAIgD,KACV6M,EAAK,KACFE,EAAI,CACH,SAAU,CAAC,EACX,MAAO,CACT,CACF,EACAD,EAAE,SAASA,EAAE,KAAK,EAAIC,EAAE,SACxBD,EAAIC,EAER,CACA,OAAOF,EAAK,CAAC,EAAE,QACjB,CACA,SAASG,GAAqBC,GAAWC,EAAKC,EAAK,CACjD,MAAO,MAAOF,GAAU,cAAgB,GAAKC,EAAMC,EACrD,CACA,SAASC,GACPxQ,GACAuO,EACAkC,EACAC,EACAC,EACAC,EACAC,GACAC,EACAC,EACA,CACA,IAAIC,EAAYP,EAAM,UAClBQ,EAAiBR,EAAM,eACvBS,EAAYT,EAAM,UAClBU,EAAcV,EAAM,YACpBW,EAAcX,EAAM,YACpBY,EAAOZ,EAAM,KACfa,EAAOb,EAAM,KACXc,EAAchD,EAChBiD,EAAW,EACXC,EAAY,EACd,SAASC,GAAU,CACjB,GAAID,EAAY,EACd,OAAAA,IACQD,GAAYC,EAAa,EAGnC,GADAD,EAAWxR,GAAKuO,GAAQ,EACpBiD,IAAa,IAAK,CACpB,IAAIG,EAAW3R,GAAKuO,GAAQ,EAC5B,GAAIoD,EACF,KACE,uBAA0BH,GAAY,EAAKG,GAAU,SAAS,EAAE,CAGtE,CACA,OAAAF,EAAY,EACLD,IAAa,CACtB,CACA,SAASI,EAAcC,EAAM,CAE3B,QADIC,GAAOD,IACE,CAEX,GADAC,GAAOA,GAAKJ,EAAQ,CAAC,EACjB,OAAOI,IAAS,SAClB,OAAOA,GAET,GAAI,OAAOA,IAAS,SAClB,KAAM,0BAEV,CACF,CACA,SAASC,EAAQ3O,EAAQ,CAEvB,QADIiG,GAAI,EACDjG,EAAS,GACdiG,GAAKA,IAAK,EAAKqI,EAAQ,EACvBtO,IAEF,OAAOiG,EACT,CACA,SAAS2I,EAAiB5O,EAAQ,CAChC,GAAIA,IAAW,EACb,OAAOsO,EAAQ,IAAM,EAAI,EAAI,GAE/B,IAAIrI,GAAI0I,EAAQ3O,CAAM,EACtB,OAAIiG,IAAK,GAAMjG,EAAS,EACfiG,GAEFA,IAAK,IAAMjG,GAAU,CAC9B,CACA,SAAS6O,EAAe5B,EAAW9B,GAAQ,CACzC,IAAItN,EAAI2Q,EAAcvB,EAAU,cAAc,EAC1C6B,GAAOjR,IAAM,EAAI,EAAI+Q,EAAiB/Q,CAAC,EAC3CoP,EAAU,UAAU9B,EAAM,EAAI8B,EAAU,MAAQ6B,GAEhD,QADIlC,GAAI,EACDA,GAAI,IAAI,CACb,IAAImC,GAAKP,EAAcvB,EAAU,cAAc,EAC3C+B,GAAID,GAAK,GACXE,GAAIF,IAAM,EACZ,GAAIC,KAAM,EAAG,CACX,GAAIC,GAAI,GACN,MAEFrC,IAAK,GACL,QACF,CACAA,IAAKqC,GACL,IAAIpF,GAAImC,GAAUY,EAAC,EACnBK,EAAU,UAAU9B,GAAStB,EAAC,EAAI+E,EAAiBI,EAAC,EACpDpC,IACF,CACF,CACA,SAASsC,EAAcjC,EAAW9B,GAAQ,CACxC,IAAItN,EAAI2Q,EAAcvB,EAAU,cAAc,EAC1C6B,GAAOjR,IAAM,EAAI,EAAI+Q,EAAiB/Q,CAAC,GAAK8P,EAChDV,EAAU,UAAU9B,EAAM,EAAI8B,EAAU,MAAQ6B,EAClD,CACA,SAASK,EAAmBlC,EAAW9B,GAAQ,CAC7C8B,EAAU,UAAU9B,EAAM,GAAKmD,EAAQ,GAAKX,CAC9C,CACA,IAAIyB,EAAS,EACb,SAASC,EAAcpC,EAAW9B,GAAQ,CACxC,GAAIiE,EAAS,EAAG,CACdA,IACA,MACF,CAGA,QAFIxC,EAAIY,EACNrQ,GAAIsQ,GACCb,GAAKzP,IAAG,CACb,IAAI4R,GAAKP,EAAcvB,EAAU,cAAc,EAC3C+B,GAAID,GAAK,GACXE,GAAIF,IAAM,EACZ,GAAIC,KAAM,EAAG,CACX,GAAIC,GAAI,GAAI,CACVG,EAAST,EAAQM,EAAC,GAAK,GAAKA,IAAK,EACjC,KACF,CACArC,GAAK,GACL,QACF,CACAA,GAAKqC,GACL,IAAIpF,GAAImC,GAAUY,CAAC,EACnBK,EAAU,UAAU9B,GAAStB,EAAC,EAC5B+E,EAAiBI,EAAC,GAAK,GAAKrB,GAC9Bf,GACF,CACF,CACA,IAAI0C,EAAoB,EACtBC,EACF,SAASC,EAAmBvC,EAAW9B,GAAQ,CAM7C,QALIyB,EAAIY,EACJrQ,GAAIsQ,GACJwB,GAAI,EACJD,GACAD,GACGnC,GAAKzP,IAAG,CACb,IAAI0M,GAAImC,GAAUY,CAAC,EACnB,OAAQ0C,EAAmB,CACzB,IAAK,GAIH,GAHAP,GAAKP,EAAcvB,EAAU,cAAc,EAC3C+B,GAAID,GAAK,GACTE,GAAIF,IAAM,EACNC,KAAM,EACJC,GAAI,IACNG,EAAST,EAAQM,EAAC,GAAK,GAAKA,IAC5BK,EAAoB,IAEpBL,GAAI,GACJK,EAAoB,OAEjB,CACL,GAAIN,KAAM,EACR,KAAM,uBAERO,EAAwBX,EAAiBI,EAAC,EAC1CM,EAAoBL,GAAI,EAAI,CAC9B,CACA,SAEF,IAAK,GACL,IAAK,GACChC,EAAU,UAAU9B,GAAStB,EAAC,EAChCoD,EAAU,UAAU9B,GAAStB,EAAC,GAAKyE,EAAQ,GAAKX,GAEhDsB,KACIA,KAAM,IACRK,EAAoBA,IAAsB,EAAI,EAAI,IAGtD,MAEF,IAAK,GACCrC,EAAU,UAAU9B,GAAStB,EAAC,EAChCoD,EAAU,UAAU9B,GAAStB,EAAC,GAAKyE,EAAQ,GAAKX,GAEhDV,EAAU,UAAU9B,GAAStB,EAAC,EAC5B0F,GAAyB5B,EAC3B2B,EAAoB,GAEtB,MAEF,IAAK,GACCrC,EAAU,UAAU9B,GAAStB,EAAC,IAChCoD,EAAU,UAAU9B,GAAStB,EAAC,GAAKyE,EAAQ,GAAKX,GAElD,KACJ,CACAf,GACF,CACI0C,IAAsB,IACxBF,IACIA,IAAW,IACbE,EAAoB,GAG1B,CACA,SAASG,EAAUxC,EAAWyC,GAAQC,EAAKzC,GAAKC,GAAK,CACnD,IAAIyC,GAAUD,EAAM5B,EAAe,EAC/B8B,GAASF,EAAM5B,EACf+B,GAAWF,GAAS3C,EAAU,EAAIC,GAClC6C,GAAWF,GAAS5C,EAAU,EAAIE,GAClChC,GAAS6B,GAAqBC,EAAW6C,GAAUC,EAAQ,EAC/DL,GAAOzC,EAAW9B,EAAM,CAC1B,CACA,SAAS6E,EAAY/C,EAAWyC,GAAQC,EAAK,CAC3C,IAAIG,GAAYH,EAAM1C,EAAU,cAAiB,EAC7C8C,GAAWJ,EAAM1C,EAAU,cAC3B9B,GAAS6B,GAAqBC,EAAW6C,GAAUC,EAAQ,EAC/DL,GAAOzC,EAAW9B,EAAM,CAC1B,CACA,IAAI8E,EAAmB3C,EAAW,OAC9BL,EAAWjQ,EAAGoG,EAAGwJ,GAAG3G,GACpBiK,EACAlC,EACER,IAAkB,EACpB0C,EAAWxC,IAAmB,EAAIwB,EAAgBC,EAElDe,EAAWxC,IAAmB,EAAI2B,EAAgBG,EAGpDU,EAAWrB,EAEb,IAAIc,EAAM,EACRQ,GACEC,GACAH,IAAqB,EACvBG,GACE9C,EAAW,CAAC,EAAE,cAAgBA,EAAW,CAAC,EAAE,gBAE9C8C,GAAcrC,EAAcV,EAAM,cAE/BE,IACHA,EAAgB6C,IAGlB,QADIC,GAAGC,GACAX,EAAMS,IAAa,CACxB,IAAKpT,EAAI,EAAGA,EAAIiT,EAAkBjT,IAChCsQ,EAAWtQ,CAAC,EAAE,KAAO,EAGvB,GADAoS,EAAS,EACLa,IAAqB,EAEvB,IADAhD,EAAYK,EAAW,CAAC,EACnBrH,GAAI,EAAGA,GAAIsH,EAAetH,KAC7B+J,EAAY/C,EAAWiD,EAAUP,CAAG,EACpCA,QAGF,KAAK1J,GAAI,EAAGA,GAAIsH,EAAetH,KAAK,CAClC,IAAKjJ,EAAI,EAAGA,EAAIiT,EAAkBjT,IAIhC,IAHAiQ,EAAYK,EAAWtQ,CAAC,EACxBqT,GAAIpD,EAAU,EACdqD,GAAIrD,EAAU,EACT7J,EAAI,EAAGA,EAAIkN,GAAGlN,IACjB,IAAKwJ,GAAI,EAAGA,GAAIyD,GAAGzD,KACjB6C,EAAUxC,EAAWiD,EAAUP,EAAKvM,EAAGwJ,EAAC,EAI9C+C,GACF,CAIF,GAFAtB,EAAY,EACZ8B,GAAUvT,GAAKuO,CAAM,GAAK,EAAKvO,GAAKuO,EAAS,CAAC,EAC1CgF,IAAU,MACZ,KAAM,uBAER,GAAIA,IAAU,OAASA,IAAU,MAC/BhF,GAAU,MAEV,MAEJ,CACA,OAAOA,EAASgD,CAClB,CACA,SAASoC,GAAmBtD,GAAWuD,EAAmB1D,EAAG,CAM3D,QALI2D,EAAKxD,GAAU,kBACjByD,EAAYzD,GAAU,UACpB0D,EAAIC,GAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAC5BC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAC5B7T,EACKqP,EAAM,EAAGA,EAAM,GAAIA,GAAO,EAAG,CAUpC,GATAiE,EAAKT,EAAUF,EAAoBtD,CAAG,EACtCkE,EAAKV,EAAUF,EAAoBtD,EAAM,CAAC,EAC1CmE,EAAKX,EAAUF,EAAoBtD,EAAM,CAAC,EAC1CoE,EAAKZ,EAAUF,EAAoBtD,EAAM,CAAC,EAC1CqE,EAAKb,EAAUF,EAAoBtD,EAAM,CAAC,EAC1CsE,EAAKd,EAAUF,EAAoBtD,EAAM,CAAC,EAC1CuE,EAAKf,EAAUF,EAAoBtD,EAAM,CAAC,EAC1CwE,EAAKhB,EAAUF,EAAoBtD,EAAM,CAAC,EAC1CiE,GAAMV,EAAGvD,CAAG,EACP,EAAAkE,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAAW,CAC5C7T,EAAK0O,GAAW4E,EAAK,KAAQ,GAC7BrE,EAAEI,CAAG,EAAIrP,EACTiP,EAAEI,EAAM,CAAC,EAAIrP,EACbiP,EAAEI,EAAM,CAAC,EAAIrP,EACbiP,EAAEI,EAAM,CAAC,EAAIrP,EACbiP,EAAEI,EAAM,CAAC,EAAIrP,EACbiP,EAAEI,EAAM,CAAC,EAAIrP,EACbiP,EAAEI,EAAM,CAAC,EAAIrP,EACbiP,EAAEI,EAAM,CAAC,EAAIrP,EACb,QACF,CACAuT,GAAMX,EAAGvD,EAAM,CAAC,EAChBmE,GAAMZ,EAAGvD,EAAM,CAAC,EAChBoE,GAAMb,EAAGvD,EAAM,CAAC,EAChBqE,GAAMd,EAAGvD,EAAM,CAAC,EAChBsE,GAAMf,EAAGvD,EAAM,CAAC,EAChBuE,GAAMhB,EAAGvD,EAAM,CAAC,EAChBwE,GAAMjB,EAAGvD,EAAM,CAAC,EAChByD,EAAMpE,GAAW4E,EAAK,KAAQ,EAC9BP,GAAMrE,GAAWgF,EAAK,KAAQ,EAC9BV,EAAKQ,EACLP,EAAKW,EACLV,EAAMvE,IAAc4E,EAAKM,GAAM,KAAQ,EACvCR,EAAM1E,IAAc4E,EAAKM,GAAM,KAAQ,EACvCV,EAAKM,GAAM,EACXL,EAAKO,GAAM,EACXb,EAAMA,EAAKC,GAAK,GAAM,EACtBA,GAAKD,EAAKC,GACV/S,EAAKgT,EAAKvE,GAAUwE,EAAKzE,EAAU,KAAQ,EAC3CwE,EAAMA,EAAKxE,EAAUyE,EAAKxE,GAAU,KAAQ,EAC5CwE,EAAKjT,EACLkT,EAAMA,EAAKE,EAAK,GAAM,EACtBA,EAAKF,EAAKE,EACVC,EAAMA,EAAKF,EAAK,GAAM,EACtBA,EAAKE,EAAKF,EACVL,EAAMA,EAAKG,EAAK,GAAM,EACtBA,EAAKH,EAAKG,EACVF,GAAMA,GAAKC,EAAK,GAAM,EACtBA,EAAKD,GAAKC,EACVhT,EAAKkT,EAAK3E,EAAU8E,EAAK/E,EAAU,MAAS,GAC5C4E,EAAMA,EAAK5E,EAAU+E,EAAK9E,EAAU,MAAS,GAC7C8E,EAAKrT,EACLA,EAAKmT,EAAK9E,GAAU+E,EAAKhF,EAAU,MAAS,GAC5C+E,EAAMA,EAAK/E,EAAUgF,EAAK/E,GAAU,MAAS,GAC7C+E,EAAKpT,EACLiP,EAAEI,CAAG,EAAIyD,EAAKO,EACdpE,EAAEI,EAAM,CAAC,EAAIyD,EAAKO,EAClBpE,EAAEI,EAAM,CAAC,EAAI0D,GAAKK,EAClBnE,EAAEI,EAAM,CAAC,EAAI0D,GAAKK,EAClBnE,EAAEI,EAAM,CAAC,EAAI2D,EAAKG,EAClBlE,EAAEI,EAAM,CAAC,EAAI2D,EAAKG,EAClBlE,EAAEI,EAAM,CAAC,EAAI4D,EAAKC,EAClBjE,EAAEI,EAAM,CAAC,EAAI4D,EAAKC,CACpB,CACA,QAAS5D,EAAM,EAAGA,EAAM,EAAG,EAAEA,EAAK,CAShC,GARAgE,EAAKrE,EAAEK,CAAG,EACViE,EAAKtE,EAAEK,EAAM,CAAC,EACdkE,EAAKvE,EAAEK,EAAM,EAAE,EACfmE,EAAKxE,EAAEK,EAAM,EAAE,EACfoE,EAAKzE,EAAEK,EAAM,EAAE,EACfqE,EAAK1E,EAAEK,EAAM,EAAE,EACfsE,EAAK3E,EAAEK,EAAM,EAAE,EACfuE,EAAK5E,EAAEK,EAAM,EAAE,EACV,EAAAiE,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAAW,CAC5C7T,EAAK0O,GAAW4E,EAAK,MAAS,GAC9BtT,EAAIA,EAAI,MAAQ,EAAIA,GAAK,KAAO,IAAOA,EAAI,MAAS,EACpD6S,EAAUF,EAAoBrD,CAAG,EAAItP,EACrC6S,EAAUF,EAAoBrD,EAAM,CAAC,EAAItP,EACzC6S,EAAUF,EAAoBrD,EAAM,EAAE,EAAItP,EAC1C6S,EAAUF,EAAoBrD,EAAM,EAAE,EAAItP,EAC1C6S,EAAUF,EAAoBrD,EAAM,EAAE,EAAItP,EAC1C6S,EAAUF,EAAoBrD,EAAM,EAAE,EAAItP,EAC1C6S,EAAUF,EAAoBrD,EAAM,EAAE,EAAItP,EAC1C6S,EAAUF,EAAoBrD,EAAM,EAAE,EAAItP,EAC1C,QACF,CACA8S,EAAMpE,GAAW4E,EAAK,MAAS,GAC/BP,GAAMrE,GAAWgF,EAAK,MAAS,GAC/BV,EAAKQ,EACLP,EAAKW,EACLV,EAAMvE,IAAc4E,EAAKM,GAAM,MAAS,GACxCR,EAAM1E,IAAc4E,EAAKM,GAAM,MAAS,GACxCV,EAAKM,EACLL,EAAKO,EACLb,GAAOA,EAAKC,GAAK,GAAM,GAAK,KAC5BA,GAAKD,EAAKC,GACV/S,EAAKgT,EAAKvE,GAAUwE,EAAKzE,EAAU,MAAS,GAC5CwE,EAAMA,EAAKxE,EAAUyE,EAAKxE,GAAU,MAAS,GAC7CwE,EAAKjT,EACLkT,EAAMA,EAAKE,EAAK,GAAM,EACtBA,EAAKF,EAAKE,EACVC,EAAMA,EAAKF,EAAK,GAAM,EACtBA,EAAKE,EAAKF,EACVL,EAAMA,EAAKG,EAAK,GAAM,EACtBA,EAAKH,EAAKG,EACVF,GAAMA,GAAKC,EAAK,GAAM,EACtBA,EAAKD,GAAKC,EACVhT,EAAKkT,EAAK3E,EAAU8E,EAAK/E,EAAU,MAAS,GAC5C4E,EAAMA,EAAK5E,EAAU+E,EAAK9E,EAAU,MAAS,GAC7C8E,EAAKrT,EACLA,EAAKmT,EAAK9E,GAAU+E,EAAKhF,EAAU,MAAS,GAC5C+E,EAAMA,EAAK/E,EAAUgF,EAAK/E,GAAU,MAAS,GAC7C+E,EAAKpT,EACLsT,EAAKR,EAAKO,EACVQ,EAAKf,EAAKO,EACVE,EAAKR,GAAKK,EACVQ,EAAKb,GAAKK,EACVI,EAAKR,EAAKG,EACVQ,EAAKX,EAAKG,EACVM,EAAKR,EAAKC,EACVQ,EAAKT,EAAKC,EACVI,EAAKA,EAAK,GAAK,EAAIA,GAAM,KAAO,IAAMA,GAAM,EAC5CC,EAAKA,EAAK,GAAK,EAAIA,GAAM,KAAO,IAAMA,GAAM,EAC5CC,EAAKA,EAAK,GAAK,EAAIA,GAAM,KAAO,IAAMA,GAAM,EAC5CC,EAAKA,EAAK,GAAK,EAAIA,GAAM,KAAO,IAAMA,GAAM,EAC5CC,EAAKA,EAAK,GAAK,EAAIA,GAAM,KAAO,IAAMA,GAAM,EAC5CC,EAAKA,EAAK,GAAK,EAAIA,GAAM,KAAO,IAAMA,GAAM,EAC5CC,EAAKA,EAAK,GAAK,EAAIA,GAAM,KAAO,IAAMA,GAAM,EAC5CC,EAAKA,EAAK,GAAK,EAAIA,GAAM,KAAO,IAAMA,GAAM,EAC5ChB,EAAUF,EAAoBrD,CAAG,EAAIgE,EACrCT,EAAUF,EAAoBrD,EAAM,CAAC,EAAIiE,EACzCV,EAAUF,EAAoBrD,EAAM,EAAE,EAAIkE,EAC1CX,EAAUF,EAAoBrD,EAAM,EAAE,EAAImE,EAC1CZ,EAAUF,EAAoBrD,EAAM,EAAE,EAAIoE,EAC1Cb,EAAUF,EAAoBrD,EAAM,EAAE,EAAIqE,EAC1Cd,EAAUF,EAAoBrD,EAAM,EAAE,EAAIsE,EAC1Cf,EAAUF,EAAoBrD,EAAM,EAAE,EAAIuE,CAC5C,CACF,CACA,SAASC,GAAmBtE,GAAOJ,EAAW,CAI5C,QAHI2E,EAAgB3E,EAAU,cAC1B4E,EAAkB5E,EAAU,gBAC5B6E,EAAoB,IAAI,WAAW,EAAE,EAChChC,EAAW,EAAGA,EAAW+B,EAAiB/B,IACjD,QAASC,GAAW,EAAGA,GAAW6B,EAAe7B,KAAY,CAC3D,IAAI5E,EAAS6B,GAAqBC,EAAW6C,EAAUC,EAAQ,EAC/DQ,GAAmBtD,EAAW9B,EAAQ2G,CAAiB,CACzD,CAEF,OAAO7E,EAAU,SACnB,CACA,SAAS8E,GAAYhM,GAAG,CACtB,OAAOA,IAAK,EAAI,EAAIA,IAAK,IAAM,IAAMA,EACvC,CACA,OAAA0G,GAAY,UAAY,CACtB,MAAO,SAAe7P,EAAM,CAC1B,SAASoV,GAAa,CACpB,IAAIjU,EAASnB,EAAKuO,CAAM,GAAK,EAAKvO,EAAKuO,EAAS,CAAC,EACjD,OAAAA,GAAU,EACHpN,CACT,CACA,SAASkU,GAAgB,CACvB,IAAIjS,EAASgS,EAAW,EACpB9P,GAAQtF,EAAK,SAASuO,EAAQA,EAASnL,EAAS,CAAC,EACrD,OAAAmL,GAAUjJ,GAAM,OACTA,EACT,CACA,SAASgQ,EAAkB7E,EAAO,CAGhC,QAFIU,GAAc,KAAK,KAAKV,EAAM,eAAiB,EAAIA,EAAM,IAAI,EAC7D8E,GAAgB,KAAK,KAAK9E,EAAM,UAAY,EAAIA,EAAM,IAAI,EACrDrQ,GAAI,EAAGA,GAAIqQ,EAAM,WAAW,OAAQrQ,KAAK,CAChDiQ,EAAYI,EAAM,WAAWrQ,EAAC,EAC9B,IAAI4U,GAAgB,KAAK,KACtB,KAAK,KAAKvE,EAAM,eAAiB,CAAC,EAAIJ,EAAU,EAAKI,EAAM,IAC9D,EACIwE,GAAkB,KAAK,KACxB,KAAK,KAAKxE,EAAM,UAAY,CAAC,EAAIJ,EAAU,EAAKI,EAAM,IACzD,EACI+E,GAAsBrE,GAAcd,EAAU,EAC9CoF,GAAwBF,GAAgBlF,EAAU,EAClDqF,GACF,GAAKD,IAAyBD,GAAsB,GACtDnF,EAAU,UAAY,IAAI,WAAWqF,EAAgB,EACrDrF,EAAU,cAAgB2E,GAC1B3E,EAAU,gBAAkB4E,EAC9B,CACAxE,EAAM,YAAcU,GACpBV,EAAM,cAAgB8E,EACxB,CACA,IAAIhH,EAAS,EACXnL,GAASpD,EAAK,OACZ2V,EAAO,KACPC,EAAQ,KACRC,EAAS,KACTpF,EAAOE,EACPmF,EAAqB,CAAC,EACtBC,EAAkB,CAAC,EACrBC,EAAkB,CAAC,EACjBC,EAAab,EAAW,EAC5B,GAAIa,IAAe,MACjB,KAAM,gBAGR,IADAA,EAAab,EAAW,EACjBa,IAAe,OAAO,CAC3B,IAAI7V,EAAGoG,EAAG0P,EACV,OAAQD,EAAY,CAClB,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACL,IAAK,OACH,IAAIE,EAAUd,EAAc,EACxBY,IAAe,OAEfE,EAAQ,CAAC,IAAM,IACfA,EAAQ,CAAC,IAAM,IACfA,EAAQ,CAAC,IAAM,IACfA,EAAQ,CAAC,IAAM,IACfA,EAAQ,CAAC,IAAM,IAEfR,EAAO,CACL,QAAS,CACP,MAAOQ,EAAQ,CAAC,EAChB,MAAOA,EAAQ,CAAC,CAClB,EACA,aAAcA,EAAQ,CAAC,EACvB,SAAWA,EAAQ,CAAC,GAAK,EAAKA,EAAQ,CAAC,EACvC,SAAWA,EAAQ,EAAE,GAAK,EAAKA,EAAQ,EAAE,EACzC,WAAYA,EAAQ,EAAE,EACtB,YAAaA,EAAQ,EAAE,EACvB,UAAWA,EAAQ,SACjB,GACA,GAAK,EAAIA,EAAQ,EAAE,EAAIA,EAAQ,EAAE,CACnC,CACF,GAGAF,IAAe,OAEfE,EAAQ,CAAC,IAAM,IACfA,EAAQ,CAAC,IAAM,KACfA,EAAQ,CAAC,IAAM,KACfA,EAAQ,CAAC,IAAM,IACfA,EAAQ,CAAC,IAAM,KACfA,EAAQ,CAAC,IAAM,IAEfP,EAAQ,CACN,QAASO,EAAQ,CAAC,EAClB,OAASA,EAAQ,CAAC,GAAK,EAAKA,EAAQ,CAAC,EACrC,OAASA,EAAQ,CAAC,GAAK,EAAKA,EAAQ,EAAE,EACtC,cAAeA,EAAQ,EAAE,CAC3B,GAGJ,MAEF,IAAK,OAIH,QAHIC,EAA2BhB,EAAW,EACtCiB,EAAwBD,EAA2B7H,EAAS,EAC5DtB,EACGsB,EAAS8H,GAAuB,CACrC,IAAIC,EAAwBtW,EAAKuO,GAAQ,EACrCgI,EAAY,IAAI,YAAY,EAAE,EAClC,GAAID,GAAyB,EAKtB,GAAIA,GAAyB,IAAM,EACxC,IAAK9P,EAAI,EAAGA,EAAI,GAAIA,IAClByG,EAAImC,GAAU5I,CAAC,EACf+P,EAAUtJ,CAAC,EAAImI,EAAW,MAG5B,MAAM,8BAVN,KAAK5O,EAAI,EAAGA,EAAI,GAAIA,IAClByG,EAAImC,GAAU5I,CAAC,EACf+P,EAAUtJ,CAAC,EAAIjN,EAAKuO,GAAQ,EAUhCuH,EAAmBQ,EAAwB,EAAE,EAAIC,CACnD,CACA,MAEF,IAAK,OACL,IAAK,OACL,IAAK,OACH,GAAI9F,EACF,KAAM,oCAER2E,EAAW,EACX3E,EAAQ,CAAC,EACTA,EAAM,SAAWwF,IAAe,MAChCxF,EAAM,YAAcwF,IAAe,MACnCxF,EAAM,UAAYzQ,EAAKuO,GAAQ,EAC/BkC,EAAM,UAAY2E,EAAW,EAC7B3E,EAAM,eAAiB2E,EAAW,EAClC3E,EAAM,WAAa,CAAC,EACpBA,EAAM,aAAe,CAAC,EACtB,IAAI+F,EAAkBxW,EAAKuO,GAAQ,EACjCkI,EACEpF,EAAO,EACTC,EAAO,EACT,IAAKlR,EAAI,EAAGA,EAAIoW,EAAiBpW,IAAK,CACpCqW,EAAczW,EAAKuO,CAAM,EACzB,IAAIkF,EAAIzT,EAAKuO,EAAS,CAAC,GAAK,EACxBmF,EAAI1T,EAAKuO,EAAS,CAAC,EAAI,GACvB8C,EAAOoC,IACTpC,EAAOoC,GAELnC,EAAOoC,IACTpC,EAAOoC,GAET,IAAIgD,EAAM1W,EAAKuO,EAAS,CAAC,EACzB2H,EAAIzF,EAAM,WAAW,KAAK,CACxB,EAAGgD,EACH,EAAGC,EACH,kBAAmBoC,EAAmBY,CAAG,CAC3C,CAAC,EACDjG,EAAM,aAAagG,CAAW,EAAIP,EAAI,EACtC3H,GAAU,CACZ,CACAkC,EAAM,KAAOY,EACbZ,EAAM,KAAOa,EACbgE,EAAkB7E,CAAK,EACvB,MAEF,IAAK,OACH,IAAIkG,EAAgBvB,EAAW,EAC/B,IAAKhV,EAAI,EAAGA,EAAIuW,GAAiB,CAC/B,IAAIC,EAAmB5W,EAAKuO,GAAQ,EAChCwB,EAAc,IAAI,WAAW,EAAE,EAC/B8G,EAAgB,EACpB,IAAKrQ,EAAI,EAAGA,EAAI,GAAIA,IAAK+H,IACvBsI,GAAiB9G,EAAYvJ,CAAC,EAAIxG,EAAKuO,CAAM,EAE/C,IAAIuI,EAAgB,IAAI,WAAWD,CAAa,EAChD,IAAKrQ,EAAI,EAAGA,EAAIqQ,EAAerQ,IAAK+H,IAClCuI,EAActQ,CAAC,EAAIxG,EAAKuO,CAAM,EAEhCnO,GAAK,GAAKyW,GACTD,GAAoB,EAEjBb,EADAC,GACiBY,EAAmB,EAAE,EAAI9G,GAC5CC,EACA+G,CACF,CACF,CACA,MAEF,IAAK,OACH1B,EAAW,EACXzE,EAAgByE,EAAW,EAC3B,MAEF,IAAK,OACH,IAAI2B,GAAa3B,EAAW,EACxB4B,GAAiBhX,EAAKuO,GAAQ,EAC9BmC,EAAa,CAAC,EAChBL,EACF,IAAKjQ,EAAI,EAAGA,EAAI4W,GAAgB5W,IAAK,CACnC,IAAI6W,GAAiBxG,EAAM,aAAazQ,EAAKuO,GAAQ,CAAC,EACtD8B,EAAYI,EAAM,WAAWwG,EAAc,EAC3C,IAAIC,GAAYlX,EAAKuO,GAAQ,EAC7B8B,EAAU,eAAiB2F,EAAgBkB,IAAa,CAAC,EACzD7G,EAAU,eAAiB0F,EAAgBmB,GAAY,EAAE,EACzDxG,EAAW,KAAKL,CAAS,CAC3B,CACA,IAAIO,GAAgB5Q,EAAKuO,GAAQ,EAC7BsC,GAAc7Q,EAAKuO,GAAQ,EAC3B4I,EAA0BnX,EAAKuO,GAAQ,EACvC6I,GAAY5G,GACdxQ,EACAuO,EACAkC,EACAC,EACAC,EACAC,GACAC,GACAsG,GAA2B,EAC3BA,EAA0B,EAC5B,EACA5I,GAAU6I,GACV,MAEF,IAAK,OACCpX,EAAKuO,CAAM,IAAM,KACnBA,IAEF,MAEF,QACE,GACEvO,EAAKuO,EAAS,CAAC,IAAM,KACrBvO,EAAKuO,EAAS,CAAC,GAAK,KACpBvO,EAAKuO,EAAS,CAAC,GAAK,IACpB,CACAA,GAAU,EACV,KACF,CACA,KAAM,uBAAyB0H,EAAW,SAAS,EAAE,CACzD,CACAA,EAAab,EAAW,CAC1B,CAMA,IALA,KAAK,MAAQ3E,EAAM,eACnB,KAAK,OAASA,EAAM,UACpB,KAAK,KAAOkF,EACZ,KAAK,MAAQC,EACb,KAAK,WAAa,CAAC,EACdxV,EAAI,EAAGA,EAAIqQ,EAAM,WAAW,OAAQrQ,IACvCiQ,EAAYI,EAAM,WAAWrQ,CAAC,EAC9B,KAAK,WAAW,KAAK,CACnB,OAAQ2U,GAAmBtE,EAAOJ,CAAS,EAC3C,OAAQA,EAAU,EAAII,EAAM,KAC5B,OAAQJ,EAAU,EAAII,EAAM,KAC5B,cAAeJ,EAAU,cACzB,gBAAiBA,EAAU,eAC7B,CAAC,EAEH,KAAK,cAAgB,KAAK,WAAW,MACvC,EACA,wBAAyB,SAAgCxB,EAAOC,EAAQ,CACtE,IAAIuI,EAAS,KAAK,MAAQxI,EACxByI,EAAS,KAAK,OAASxI,EACrBuB,EAAWkH,GAAiBC,EAAiBC,EAC7C/R,EAAGwH,EAAG9M,EAAGoG,EAAGwJ,EACZvJ,EACA8H,EAAS,EACTjM,EACAoV,EAAgB,KAAK,WAAW,OAChCC,EAAa9I,EAAQC,EAAS4I,EAC9B1X,EAAO,IAAI,WAAW2X,CAAU,EAChCC,EAAoB,IAAI,YAAY/I,CAAK,EACzCgJ,EAAW,WACf,IAAKzX,EAAI,EAAGA,EAAIsX,EAAetX,IAAK,CAOlC,IANAiQ,EAAY,KAAK,WAAWjQ,CAAC,EAC7BmX,GAAkBlH,EAAU,OAASgH,EACrCG,EAAkBnH,EAAU,OAASiH,EACrC/I,EAASnO,EACTkC,EAAS+N,EAAU,OACnBoH,EAAqBpH,EAAU,cAAgB,GAAM,EAChD3K,EAAI,EAAGA,EAAImJ,EAAOnJ,IACrBc,EAAI,EAAKd,EAAI6R,GACbK,EAAkBlS,CAAC,GAAMc,EAAIqR,IAAa,EAAMrR,EAAI,EAEtD,IAAK0G,EAAI,EAAGA,EAAI4B,EAAQ5B,IAGtB,IAFA1G,EAAI,EAAK0G,EAAIsK,EACb/Q,EAASgR,GAAqBjR,EAAIqR,IAAerR,EAAI,IAAM,EACtDd,EAAI,EAAGA,EAAImJ,EAAOnJ,IACrB1F,EAAKuO,CAAM,EAAIjM,EAAOmE,EAAQmR,EAAkBlS,CAAC,CAAC,EAClD6I,GAAUmJ,CAGhB,CACA,IAAII,EAAY,KAAK,gBACrB,GAAIA,EACF,IAAK1X,EAAI,EAAGA,EAAIuX,GACd,IAAKnR,EAAI,EAAGwJ,EAAI,EAAGxJ,EAAIkR,EAAelR,IAAKpG,IAAK4P,GAAK,EACnDhQ,EAAKI,CAAC,GAAMJ,EAAKI,CAAC,EAAI0X,EAAU9H,CAAC,GAAM,GAAK8H,EAAU9H,EAAI,CAAC,EAIjE,OAAOhQ,CACT,EACA,yBAA0B,UAAmC,CAC3D,OAAI,KAAK,OAAS,KAAK,MAAM,cACpB,GACE,KAAK,gBAAkB,CAKpC,EACA,iBAAkB,SAAyBA,EAAM,CAE/C,QADI+X,EAAGC,EAAIC,EACF7X,EAAI,EAAGgD,GAASpD,EAAK,OAAQI,EAAIgD,GAAQhD,GAAK,EACrD2X,EAAI/X,EAAKI,CAAC,EACV4X,EAAKhY,EAAKI,EAAI,CAAC,EACf6X,EAAKjY,EAAKI,EAAI,CAAC,EACfJ,EAAKI,CAAC,EAAI+U,GAAY4C,EAAI,QAAU,MAAQE,CAAE,EAC9CjY,EAAKI,EAAI,CAAC,EAAI+U,GAAY4C,EAAI,QAAU,KAAQC,EAAK,KAAQC,CAAE,EAC/DjY,EAAKI,EAAI,CAAC,EAAI+U,GAAY4C,EAAI,QAAU,MAAQC,CAAE,EAEpD,OAAOhY,CACT,EACA,kBAAmB,SAA0BA,EAAM,CAGjD,QAFI+X,EAAGC,EAAIC,EAAIjI,EACXzB,GAAS,EACJnO,EAAI,EAAGgD,EAASpD,EAAK,OAAQI,EAAIgD,EAAQhD,GAAK,EAAG,CACxD2X,EAAI/X,EAAKI,CAAC,EACV4X,EAAKhY,EAAKI,EAAI,CAAC,EACf6X,EAAKjY,EAAKI,EAAI,CAAC,EACf4P,EAAIhQ,EAAKI,EAAI,CAAC,EACd,IAAIiS,EACF,iBACA2F,GACG,qBAAuBA,EACtB,oBAAuBC,EACvB,mBAAqBF,EACrB,mBAAsB/H,EACtB,kBACJiI,GACG,qBAAwBA,EACvB,oBAAuBF,EACvB,mBAAsB/H,EACtB,kBACJ+H,GACG,oBAAuBA,EACtB,mBAAsB/H,EACtB,iBACJA,GAAK,qBAAwBA,EAAI,kBAC/BkI,EACF,iBACAF,GACG,oBAAsBA,EACrB,oBAAuBC,EACvB,oBAAuBF,EACvB,oBAAuB/H,EACvB,kBACJiI,GACG,qBAAwBA,EACvB,mBAAsBF,EACtB,oBAAuB/H,EACvB,kBACJ+H,GACG,mBAAsBA,EACrB,mBAAsB/H,EACtB,iBACJA,GAAK,qBAAwBA,EAAI,kBAC/BhH,EACF,iBACAgP,GACG,qBAAwBA,EACvB,oBAAsBC,EACtB,kBAAqBF,EACrB,mBAAsB/H,EACtB,kBACJiI,GACG,qBAAuBA,EACtB,oBAAuBF,EACvB,oBAAuB/H,EACvB,kBACJ+H,GACG,mBAAsBA,EACrB,mBAAsB/H,EACtB,kBACJA,GAAK,qBAAwBA,EAAI,iBACnChQ,EAAKuO,IAAQ,EAAI4G,GAAY9C,CAAC,EAC9BrS,EAAKuO,IAAQ,EAAI4G,GAAY+C,CAAC,EAC9BlY,EAAKuO,IAAQ,EAAI4G,GAAYnM,CAAC,CAChC,CACA,OAAOhJ,CACT,EACA,mBAAoB,SAA2BA,EAAM,CAEnD,QADI+X,EAAGC,EAAIC,EACF7X,EAAI,EAAGgD,GAASpD,EAAK,OAAQI,EAAIgD,GAAQhD,GAAK,EACrD2X,EAAI/X,EAAKI,CAAC,EACV4X,EAAKhY,EAAKI,EAAI,CAAC,EACf6X,EAAKjY,EAAKI,EAAI,CAAC,EACfJ,EAAKI,CAAC,EAAI+U,GAAY,QAAU4C,EAAI,MAAQE,CAAE,EAC9CjY,EAAKI,EAAI,CAAC,EAAI+U,GAAY,QAAU4C,EAAI,KAAQC,EAAK,KAAQC,CAAE,EAC/DjY,EAAKI,EAAI,CAAC,EAAI+U,GAAY,QAAU4C,EAAI,MAAQC,CAAE,EAEpD,OAAOhY,CACT,EACA,kBAAmB,SAA0BA,EAAM,CAKjD,QAJIsL,EAAG6M,EAAGjL,EAAG8C,EACTzB,GAAS,EACT6J,EAAM,KAAO,IAAM,IACnBC,EAAQ,EAAI,IAAM,IACbjY,EAAI,EAAGgD,EAASpD,EAAK,OAAQI,EAAIgD,EAAQhD,GAAK,EAAG,CACxDkL,EAAItL,EAAKI,CAAC,EACV+X,EAAInY,EAAKI,EAAI,CAAC,EACd8M,EAAIlN,EAAKI,EAAI,CAAC,EACd4P,EAAIhQ,EAAKI,EAAI,CAAC,EACd,IAAIiS,EACF/G,GACG,mBAAqBA,EACpB,kBAAoB6M,EACpB,kBAAoBjL,EACpB,mBAAqB8C,EACrB,kBACJmI,GACG,mBAAqBA,EACpB,mBAAqBjL,EACrB,mBAAqB8C,EACrB,oBACJ9C,GACG,oBAAsBA,EACrB,mBAAqB8C,EACrB,mBACJA,GAAK,kBAAoBA,EAAI,mBAC3BkI,EACF5M,GACG,kBAAoBA,EACnB,mBAAqB6M,EACrB,kBAAoBjL,EACpB,mBAAqB8C,EACrB,oBACJmI,GACG,oBAAsBA,EACrB,mBAAqBjL,EACrB,mBAAqB8C,EACrB,mBACJ9C,GACG,kBAAoBA,EACnB,gBAAkB8C,EAClB,mBACJA,GAAK,mBAAqBA,EAAI,mBAC5BhH,EACFsC,GACG,kBAAqBA,EACpB,kBAAoB6M,EACpB,kBAAoBjL,EACpB,mBAAsB8C,EACtB,mBACJmI,GACG,kBAAoBA,EACnB,kBAAoBjL,EACpB,mBAAqB8C,EACrB,mBACJ9C,GACG,mBAAsBA,EACrB,mBAAqB8C,EACrB,mBACJA,GAAK,kBAAoBA,EAAI,mBAC/BhQ,EAAKuO,IAAQ,EAAI8D,GAAK,EAAI,IAAMA,GAAK+F,EAAM,EAAK,IAAM/F,EAAIgG,EAAS,EACnErY,EAAKuO,IAAQ,EAAI2J,GAAK,EAAI,IAAMA,GAAKE,EAAM,EAAK,IAAMF,EAAIG,EAAS,EACnErY,EAAKuO,IAAQ,EAAIvF,GAAK,EAAI,IAAMA,GAAKoP,EAAM,EAAK,IAAMpP,EAAIqP,EAAS,CACrE,CACA,OAAOrY,CACT,EACA,QAAS,SAAiB6O,EAAOC,EAAQwJ,EAAgB,CACvD,GAAI,KAAK,cAAgB,EACvB,KAAM,yBAER,IAAItY,EAAO,KAAK,wBAAwB6O,EAAOC,CAAM,EACrD,GAAI,KAAK,gBAAkB,EACzB,OAAO,KAAK,iBAAiB9O,CAAI,EAC5B,GAAI,KAAK,gBAAkB,EAAG,CACnC,GAAI,KAAK,yBAAyB,EAChC,OAAIsY,EACK,KAAK,kBAAkBtY,CAAI,EAE3B,KAAK,mBAAmBA,CAAI,EAEhC,GAAIsY,EACT,OAAO,KAAK,kBAAkBtY,CAAI,CAEtC,CACA,OAAOA,CACT,CACF,EACO6P,EACT,EAAG,EAEC0I,EAAqB,UAAoC,CAC3D,IAAIC,GAAU,CACZ,CACE,GAAI,MACJ,KAAM,EACN,KAAM,EACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,EACN,KAAM,EACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,EACN,KAAM,EACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,EACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,EACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,IACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,EACN,KAAM,EACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,EACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,EACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY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,KACA,mCACA,2CACA,KACA,KACA,KACA,KACA,kBACA,YACA,cACA,YACA,WACA,SACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,WACF,EACIC,EAAkB,CACpB,CACE,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,CACF,EACA,CACE,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,CACF,EACA,CACE,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,CACF,EACA,CACE,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,CACF,CACF,EACIC,GAAsB,CACxB,CACE,OAAQ,CACN,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,CACL,CACF,EACA,UAAW,CACT,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,EACH,EAAG,CACL,EACA,CACE,EAAG,EACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,EACH,EAAG,CACL,EACA,CACE,EAAG,EACH,EAAG,CACL,CACF,CACF,EACA,CACE,OAAQ,CACN,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,CACL,CACF,EACA,UAAW,CACT,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,EACH,EAAG,CACL,EACA,CACE,EAAG,EACH,EAAG,CACL,EACA,CACE,EAAG,EACH,EAAG,CACL,EACA,CACE,EAAG,EACH,EAAG,CACL,CACF,CACF,CACF,EACIC,GAAiB,CAAC,MAAO,KAAM,IAAK,GAAG,EACvCC,GAA2B,CAAC,GAAI,CAAC,EACrC,SAASC,GAAsBhd,EAAOC,EAAQgd,EAAiB,CAC7D,IAAI3H,EAAU2H,EAAgB,QAC1BnT,EAAWmT,EAAgB,aAAa,YAAY,IAAI,EACxD9D,EACF5nB,EACAoG,EACAulB,EACAzb,EACA0b,EACAC,EACAC,EAAS,CAAC,EACRC,E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","sources":["webpack://neuroglancer/webpack/bootstrap","webpack://neuroglancer/webpack/runtime/define property getters","webpack://neuroglancer/webpack/runtime/ensure chunk","webpack://neuroglancer/webpack/runtime/get javascript chunk filename","webpack://neuroglancer/webpack/runtime/get mini-css chunk filename","webpack://neuroglancer/webpack/runtime/hasOwnProperty shorthand","webpack://neuroglancer/webpack/runtime/make namespace object","webpack://neuroglancer/webpack/runtime/publicPath","webpack://neuroglancer/webpack/runtime/import chunk loading","webpack://neuroglancer/./src/async_computation/index.ts","webpack://neuroglancer/./src/async_computation/encode_compressed_segmentation_request.ts","webpack://neuroglancer/./src/async_computation/handler.ts","webpack://neuroglancer/./src/sliceview/compressed_segmentation/encode_common.ts","webpack://neuroglancer/./src/util/array.ts","webpack://neuroglancer/./src/sliceview/compressed_segmentation/encode_uint32.ts","webpack://neuroglancer/./src/sliceview/compressed_segmentation/encode_uint64.ts","webpack://neuroglancer/./src/util/uint32array_builder.ts","webpack://neuroglancer/./src/async_computation/encode_compressed_segmentation.ts","webpack://neuroglancer/./src/async_computation/decode_jpeg_request.ts","webpack://neuroglancer/./src/third_party/jpgjs/jpg.js","webpack://neuroglancer/./src/async_computation/decode_jpeg.ts","webpack://neuroglancer/./src/async_computation/decode_gzip_request.ts","webpack://neuroglancer/./src/async_computation/decode_gzip.ts","webpack://neuroglancer/./src/async_computation/decode_png_request.ts","webpack://neuroglancer/./src/sliceview/png/index.ts","webpack://neuroglancer/./src/async_computation/decode_png.ts","webpack://neuroglancer/./src/async_computation/decode_blosc_request.ts","webpack://neuroglancer/./src/async_computation/decode_blosc.ts","webpack://neuroglancer/./src/async_computation/decode_zstd_request.ts","webpack://neuroglancer/./src/async_computation/decode_zstd.ts","webpack://neuroglancer/./src/async_computation/obj_mesh_request.ts","webpack://neuroglancer/./src/util/float32array_builder.ts","webpack://neuroglancer/./src/util/gzip.ts","webpack://neuroglancer/./src/async_computation/obj_mesh.ts","webpack://neuroglancer/./src/async_computation/decode_compresso_request.ts","webpack://neuroglancer/./src/sliceview/compresso/index.ts","webpack://neuroglancer/./src/async_computation/decode_compresso.ts","webpack://neuroglancer/./src/async_computation/vtk_mesh_request.ts","webpack://neuroglancer/./src/datasource/vtk/parse.ts","webpack://neuroglancer/./src/async_computation/vtk_mesh.ts"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + {\"75\":\"341b092d9d141aac7d7b\",\"121\":\"c6004b15e0939feb3a91\",\"505\":\"8e29ab74b52def8d63dd\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (typeof import.meta.url === \"string\") scriptUrl = import.meta.url\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = new URL(\"./\", import.meta.url);\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t491: 0\n};\n\nvar installChunk = (data) => {\n\tvar {ids, modules, runtime} = data;\n\t// add \"modules\" to the modules object,\n\t// then flag all \"ids\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in modules) {\n\t\tif(__webpack_require__.o(modules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = modules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tfor(;i < ids.length; i++) {\n\t\tchunkId = ids[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[ids[i]] = 0;\n\t}\n\n}\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// import() chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[1]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = import(\"./\" + __webpack_require__.u(chunkId)).then(installChunk, (e) => {\n\t\t\t\t\t\tif(installedChunks[chunkId] !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t});\n\t\t\t\t\tvar promise = Promise.race([promise, new Promise((resolve) => (installedChunkData = installedChunks[chunkId] = [resolve]))])\n\t\t\t\t\tpromises.push(installedChunkData[1] = promise);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no external install chunk\n\n// no on chunks loaded","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Interface for defining transcode operations.\n */\n\nexport interface AsyncComputationSpec<Signature extends (...args: any) => any> {\n  id: string;\n  t?: Signature;\n}\n\n/**\n * Declares an asynchronous operation.\n */\nexport function asyncComputation<Signature extends (...args: any) => any>(\n  id: string,\n): AsyncComputationSpec<Signature> {\n  return { id };\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport const encodeCompressedSegmentationUint32 = asyncComputation<\n  (\n    rawData: Uint32Array,\n    shape: ArrayLike<number>,\n    blockSize: ArrayLike<number>,\n  ) => Uint32Array\n>(\"encodeCompressedSegmentationUint32\");\n\nexport const encodeCompressedSegmentationUint64 = asyncComputation<\n  (\n    rawData: Uint32Array,\n    shape: ArrayLike<number>,\n    blockSize: ArrayLike<number>,\n  ) => Uint32Array\n>(\"encodeCompressedSegmentationUint64\");\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { AsyncComputationSpec } from \"#src/async_computation/index.js\";\n\nconst handlers = new Map<\n  string,\n  (...args: any[]) => Promise<{ value: any; transfer?: Transferable[] }>\n>();\n\nfunction setupChannel(port: DedicatedWorkerGlobalScope) {\n  self.onmessage = (msg: any) => {\n    const { t, id, args } = msg.data as { t: string; id: number; args: any[] };\n    const handler = handlers.get(t)!;\n    handler(...args).then(\n      ({ value, transfer }) => port.postMessage({ id, value }, { transfer }),\n      (error) =>\n        port.postMessage({\n          id,\n          error: error instanceof Error ? error.message : error.toString(),\n        }),\n    );\n  };\n  // Notify that the worker is ready to receive messages.\n  self.postMessage(null);\n}\n\nsetupChannel(self as DedicatedWorkerGlobalScope);\n\nexport function registerAsyncComputation<\n  Signature extends (...args: any) => any,\n>(\n  request: AsyncComputationSpec<Signature>,\n  handler: (\n    ...args: Parameters<Signature>\n  ) => Promise<{ value: ReturnType<Signature>; transfer?: Transferable[] }>,\n) {\n  handlers.set(request.id, handler);\n}\n","// DO NOT EDIT.  Generated from\n// templates/neuroglancer/sliceview/compressed_segmentation/encode_common.template.ts.\n/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Uint32ArrayBuilder } from \"#src/util/uint32array_builder.js\";\n\nexport const BLOCK_HEADER_SIZE = 2;\n\nexport function newCache() {\n  return new Map<string, number>();\n}\n\nfunction writeEncodedRepresentation(\n  outputData: Uint32Array,\n  outputOffset: number,\n  encodingBuffer: Uint32Array,\n  indexBuffer: Uint32Array,\n  encodedBits: number,\n  encodedSize32Bits: number,\n) {\n  // Write encoded representation.\n  if (encodedBits > 0) {\n    switch (encodedBits) {\n      case 1:\n        {\n          for (\n            let wordIndex = 0, elementIndex = 0;\n            wordIndex < encodedSize32Bits;\n            ++wordIndex\n          ) {\n            let word = 0;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 0]] << 0;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 1]] << 1;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 2]] << 2;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 3]] << 3;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 4]] << 4;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 5]] << 5;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 6]] << 6;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 7]] << 7;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 8]] << 8;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 9]] << 9;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 10]] << 10;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 11]] << 11;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 12]] << 12;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 13]] << 13;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 14]] << 14;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 15]] << 15;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 16]] << 16;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 17]] << 17;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 18]] << 18;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 19]] << 19;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 20]] << 20;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 21]] << 21;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 22]] << 22;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 23]] << 23;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 24]] << 24;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 25]] << 25;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 26]] << 26;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 27]] << 27;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 28]] << 28;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 29]] << 29;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 30]] << 30;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 31]] << 31;\n\n            outputData[outputOffset + wordIndex] = word;\n            elementIndex += 32;\n          }\n        }\n        break;\n\n      case 2:\n        {\n          for (\n            let wordIndex = 0, elementIndex = 0;\n            wordIndex < encodedSize32Bits;\n            ++wordIndex\n          ) {\n            let word = 0;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 0]] << 0;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 1]] << 2;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 2]] << 4;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 3]] << 6;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 4]] << 8;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 5]] << 10;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 6]] << 12;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 7]] << 14;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 8]] << 16;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 9]] << 18;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 10]] << 20;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 11]] << 22;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 12]] << 24;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 13]] << 26;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 14]] << 28;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 15]] << 30;\n\n            outputData[outputOffset + wordIndex] = word;\n            elementIndex += 16;\n          }\n        }\n        break;\n\n      case 4:\n        {\n          for (\n            let wordIndex = 0, elementIndex = 0;\n            wordIndex < encodedSize32Bits;\n            ++wordIndex\n          ) {\n            let word = 0;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 0]] << 0;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 1]] << 4;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 2]] << 8;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 3]] << 12;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 4]] << 16;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 5]] << 20;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 6]] << 24;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 7]] << 28;\n\n            outputData[outputOffset + wordIndex] = word;\n            elementIndex += 8;\n          }\n        }\n        break;\n\n      case 8:\n        {\n          for (\n            let wordIndex = 0, elementIndex = 0;\n            wordIndex < encodedSize32Bits;\n            ++wordIndex\n          ) {\n            let word = 0;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 0]] << 0;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 1]] << 8;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 2]] << 16;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 3]] << 24;\n\n            outputData[outputOffset + wordIndex] = word;\n            elementIndex += 4;\n          }\n        }\n        break;\n\n      case 16:\n        {\n          for (\n            let wordIndex = 0, elementIndex = 0;\n            wordIndex < encodedSize32Bits;\n            ++wordIndex\n          ) {\n            let word = 0;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 0]] << 0;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 1]] << 16;\n\n            outputData[outputOffset + wordIndex] = word;\n            elementIndex += 2;\n          }\n        }\n        break;\n\n      case 32:\n        {\n          for (\n            let wordIndex = 0, elementIndex = 0;\n            wordIndex < encodedSize32Bits;\n            ++wordIndex\n          ) {\n            let word = 0;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 0]] << 0;\n\n            outputData[outputOffset + wordIndex] = word;\n            elementIndex += 1;\n          }\n        }\n        break;\n    }\n  }\n}\n\ntype ValueTableCache = Map<string, number>;\n\nexport function writeBlock(\n  output: Uint32ArrayBuilder,\n  baseOffset: number,\n  cache: ValueTableCache,\n  numBlockElements: number,\n  numUniqueValues: number,\n  valuesBuffer2: Uint32Array,\n  encodingBuffer: Uint32Array,\n  indexBuffer2: Uint32Array,\n  uint32sPerElement: number,\n): [number, number] {\n  let encodedBits: number;\n  if (numUniqueValues === 1) {\n    encodedBits = 0;\n  } else {\n    encodedBits = 1;\n    while (1 << encodedBits < numUniqueValues) {\n      encodedBits *= 2;\n    }\n  }\n\n  const encodedSize32bits = Math.ceil((encodedBits * numBlockElements) / 32);\n\n  const encodedValueBaseOffset = output.length;\n  let elementsToWrite = encodedSize32bits;\n\n  let writeTable = false;\n  const key = Array.prototype.join.call(\n    valuesBuffer2.subarray(0, numUniqueValues * uint32sPerElement),\n    \",\",\n  );\n  let tableOffset = cache.get(key);\n\n  if (tableOffset === undefined) {\n    writeTable = true;\n    elementsToWrite += numUniqueValues * uint32sPerElement;\n    tableOffset = encodedValueBaseOffset + encodedSize32bits - baseOffset;\n    cache.set(key, tableOffset);\n  }\n\n  output.resize(encodedValueBaseOffset + elementsToWrite);\n  const outputData = output.data;\n\n  writeEncodedRepresentation(\n    outputData,\n    encodedValueBaseOffset,\n    encodingBuffer,\n    indexBuffer2,\n    encodedBits,\n    encodedSize32bits,\n  );\n\n  // Write table\n  if (writeTable) {\n    let curOutputOff = encodedValueBaseOffset + encodedSize32bits;\n    for (\n      let i = 0, length = numUniqueValues * uint32sPerElement;\n      i < length;\n      ++i\n    ) {\n      outputData[curOutputOff++] = valuesBuffer2[i];\n    }\n  }\n  return [encodedBits, tableOffset];\n}\n\ntype EncodeBlockFunction = (\n  rawData: Uint32Array,\n  inputOffset: number,\n  inputStrides: ArrayLike<number>,\n  blockSize: ArrayLike<number>,\n  actualSize: ArrayLike<number>,\n  baseOffset: number,\n  cache: ValueTableCache,\n  output: Uint32ArrayBuilder,\n) => [number, number];\n\nexport function encodeChannel(\n  output: Uint32ArrayBuilder,\n  blockSize: ArrayLike<number>,\n  rawData: Uint32Array,\n  volumeSize: ArrayLike<number>,\n  baseInputOffset: number,\n  inputStrides: ArrayLike<number>,\n  encodeBlock: EncodeBlockFunction,\n) {\n  // Maps a sorted list of table entries in the form <low>,<high>,<low>,<high>,... to the table\n  // offset relative to baseOffset.\n  const cache = newCache();\n  const gridSize = new Array<number>(3);\n  let blockIndexSize = BLOCK_HEADER_SIZE;\n  for (let i = 0; i < 3; ++i) {\n    const curGridSize = (gridSize[i] = Math.ceil(volumeSize[i] / blockSize[i]));\n    blockIndexSize *= curGridSize;\n  }\n  const gx = gridSize[0];\n  const gy = gridSize[1];\n  const gz = gridSize[2];\n  const xSize = volumeSize[0];\n  const ySize = volumeSize[1];\n  const zSize = volumeSize[2];\n  const xBlockSize = blockSize[0];\n  const yBlockSize = blockSize[1];\n  const zBlockSize = blockSize[2];\n  const baseOffset = output.length;\n  let headerOffset = baseOffset;\n  const actualSize = [0, 0, 0];\n  output.resize(baseOffset + blockIndexSize);\n  const sx = inputStrides[0];\n  const sy = inputStrides[1];\n  const sz = inputStrides[2];\n  for (let bz = 0; bz < gz; ++bz) {\n    actualSize[2] = Math.min(zBlockSize, zSize - bz * zBlockSize);\n    for (let by = 0; by < gy; ++by) {\n      actualSize[1] = Math.min(yBlockSize, ySize - by * yBlockSize);\n      for (let bx = 0; bx < gx; ++bx) {\n        actualSize[0] = Math.min(xBlockSize, xSize - bx * xBlockSize);\n        const inputOffset =\n          bz * zBlockSize * sz + by * yBlockSize * sy + bx * xBlockSize * sx;\n        const encodedValueBaseOffset = output.length - baseOffset;\n        const [encodedBits, tableOffset] = encodeBlock(\n          rawData,\n          baseInputOffset + inputOffset,\n          inputStrides,\n          blockSize,\n          actualSize,\n          baseOffset,\n          cache,\n          output,\n        );\n        const outputData = output.data;\n        outputData[headerOffset++] = tableOffset | (encodedBits << 24);\n        outputData[headerOffset++] = encodedValueBaseOffset;\n      }\n    }\n  }\n}\n\nexport function encodeChannels(\n  output: Uint32ArrayBuilder,\n  blockSize: ArrayLike<number>,\n  rawData: Uint32Array,\n  volumeSize: ArrayLike<number>,\n  baseInputOffset: number,\n  inputStrides: ArrayLike<number>,\n  encodeBlock: EncodeBlockFunction,\n) {\n  const channelOffsetOutputBase = output.length;\n  const numChannels = volumeSize[3];\n  output.resize(channelOffsetOutputBase + numChannels);\n  for (let channel = 0; channel < numChannels; ++channel) {\n    output.data[channelOffsetOutputBase + channel] = output.length;\n    encodeChannel(\n      output,\n      blockSize,\n      rawData,\n      volumeSize,\n      baseInputOffset + inputStrides[3] * channel,\n      inputStrides,\n      encodeBlock,\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface WritableArrayLike<T> {\n  length: number;\n  [n: number]: T;\n}\n\n/**\n * Partitions array[start:end] such that all elements for which predicate\n * returns true are before the elements for which predicate returns false.\n *\n * predicate will be called exactly once for each element in array[start:end],\n * in order.\n *\n * @returns {number} The index of the first element for which predicate returns\n * false, or end if there is no such element.\n */\nexport function partitionArray<T>(\n  array: T[],\n  start: number,\n  end: number,\n  predicate: (x: T) => boolean,\n): number {\n  while (start < end) {\n    const x = array[start];\n    if (predicate(x)) {\n      ++start;\n      continue;\n    }\n    --end;\n    array[start] = array[end];\n    array[end] = x;\n  }\n  return end;\n}\n\nexport function filterArrayInplace<T>(\n  array: T[],\n  predicate: (x: T, index: number, array: T[]) => boolean,\n) {\n  const length = array.length;\n  let outIndex = 0;\n  for (let i = 0; i < length; ++i) {\n    if (predicate(array[i], i, array)) {\n      array[outIndex] = array[i];\n      ++outIndex;\n    }\n  }\n  array.length = outIndex;\n}\n\nexport type TypedArrayConstructor =\n  | typeof Int8Array\n  | typeof Uint8Array\n  | typeof Int16Array\n  | typeof Uint16Array\n  | typeof Int32Array\n  | typeof Uint32Array\n  | typeof Float32Array\n  | typeof Float64Array;\n\nexport type TypedArray =\n  | Int8Array\n  | Uint8Array\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Float32Array\n  | Float64Array;\n\n/**\n * Returns an array of size newSize that starts with the contents of array.\n * Either returns array if it has the correct size, or a new array with zero\n * padding at the end.\n */\nexport function maybePadArray<T extends TypedArray>(\n  array: T,\n  newSize: number,\n): T {\n  if (array.length === newSize) {\n    return array;\n  }\n  const newArray = new (<any>array.constructor)(newSize);\n  newArray.set(array);\n  return newArray;\n}\n\nexport function getFortranOrderStrides(\n  size: ArrayLike<number>,\n  baseStride = 1,\n) {\n  const length = size.length;\n  const strides = new Array<number>(length);\n  let stride = (strides[0] = baseStride);\n  for (let i = 1; i < length; ++i) {\n    stride *= size[i - 1];\n    strides[i] = stride;\n  }\n  return strides;\n}\n\n/**\n * Converts an array of shape [majorSize, minorSize] to\n * [minorSize, majorSize].\n */\nexport function transposeArray2d<T extends TypedArray>(\n  array: T,\n  majorSize: number,\n  minorSize: number,\n): T {\n  const transpose = new (<any>array.constructor)(array.length);\n  for (let i = 0; i < majorSize * minorSize; i += minorSize) {\n    for (let j = 0; j < minorSize; j++) {\n      const index: number = i / minorSize;\n      transpose[j * majorSize + index] = array[i + j];\n    }\n  }\n  return transpose;\n}\n\nexport function tile2dArray<T extends TypedArray>(\n  array: T,\n  majorDimension: number,\n  minorTiles: number,\n  majorTiles: number,\n) {\n  const minorDimension = array.length / majorDimension;\n  const length = array.length * minorTiles * majorTiles;\n  const result: T = new (<any>array.constructor)(length);\n  const minorTileStride = array.length * majorTiles;\n  const majorTileStride = majorDimension;\n  const minorStride = majorDimension * majorTiles;\n  for (let minor = 0; minor < minorDimension; ++minor) {\n    for (let major = 0; major < majorDimension; ++major) {\n      const inputValue = array[minor * majorDimension + major];\n      const baseOffset = minor * minorStride + major;\n      for (let minorTile = 0; minorTile < minorTiles; ++minorTile) {\n        for (let majorTile = 0; majorTile < majorTiles; ++majorTile) {\n          result[\n            minorTile * minorTileStride +\n              majorTile * majorTileStride +\n              baseOffset\n          ] = inputValue;\n        }\n      }\n    }\n  }\n  return result;\n}\n\nexport function binarySearch<T>(\n  haystack: ArrayLike<T>,\n  needle: T,\n  compare: (a: T, b: T) => number,\n  low = 0,\n  high = haystack.length,\n) {\n  while (low < high) {\n    const mid = (low + high - 1) >> 1;\n    const compareResult = compare(needle, haystack[mid]);\n    if (compareResult > 0) {\n      low = mid + 1;\n    } else if (compareResult < 0) {\n      high = mid;\n    } else {\n      return mid;\n    }\n  }\n  return ~low;\n}\n\n/**\n * Returns the index of the element in `haystack` that is closest to `needle`, according to\n * `compare`.  If there are multiple elements that are equally close, the index of the first such\n * element encountered is returned.  If `haystack` is empty, returns -1.\n */\nexport function findClosestMatchInSortedArray<T>(\n  haystack: ArrayLike<T>,\n  needle: T,\n  compare: (a: T, b: T) => number,\n  low = 0,\n  high = haystack.length,\n): number {\n  let bestIndex = -1;\n  let bestDistance = Infinity;\n  while (low < high) {\n    const mid = (low + high - 1) >> 1;\n    const compareResult = compare(needle, haystack[mid]);\n    if (compareResult > 0) {\n      low = mid + 1;\n    } else if (compareResult < 0) {\n      high = mid;\n    } else {\n      return mid;\n    }\n    const distance = Math.abs(compareResult);\n    if (distance < bestDistance) {\n      bestDistance = distance;\n      bestIndex = mid;\n    }\n  }\n  return bestIndex;\n}\n\n/**\n * Returns the first index in `[begin, end)` for which `predicate` is `true`, or returns `end` if no\n * such index exists.\n *\n * For any index `i` in `(begin, end)`, it must be the case that `predicate(i) >= predicate(i - 1)`.\n */\nexport function binarySearchLowerBound(\n  begin: number,\n  end: number,\n  predicate: (index: number) => boolean,\n): number {\n  let count = end - begin;\n  while (count > 0) {\n    const step = Math.floor(count / 2);\n    const i = begin + step;\n    if (predicate(i)) {\n      count = step;\n    } else {\n      begin = i + 1;\n      count -= step + 1;\n    }\n  }\n  return begin;\n}\n\n/**\n * Returns an array of indices into `input` that equal (under `===`) `value`.\n */\nexport function findMatchingIndices<T>(input: T[], value: T) {\n  const out: number[] = [];\n  for (let i = 0, length = input.length; i < length; ++i) {\n    if (input[i] === value) {\n      out.push(i);\n    }\n  }\n  return out;\n}\n\n/**\n * Returns an array of the indices in `[0, ..., max)` not in `indices`.\n */\nexport function getIndicesComplement(indices: number[], max: number) {\n  const mask: boolean[] = [];\n  mask.length = max;\n  for (const i of indices) {\n    mask[i] = true;\n  }\n  return findMatchingIndices(mask, undefined);\n}\n\nexport function arraysEqual<T>(a: ArrayLike<T>, b: ArrayLike<T>) {\n  const length = a.length;\n  if (b.length !== length) return false;\n  for (let i = 0; i < length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n\nexport function arraysEqualWithPredicate<T>(\n  a: ArrayLike<T>,\n  b: ArrayLike<T>,\n  elementsEqual: (a: T, b: T) => boolean = (a, b) => a === b,\n) {\n  const length = a.length;\n  if (b.length !== length) return false;\n  for (let i = 0; i < length; ++i) {\n    if (!elementsEqual(a[i], b[i])) return false;\n  }\n  return true;\n}\n\nexport function getInsertPermutation(\n  n: number,\n  sourceIndex: number,\n  targetIndex: number,\n) {\n  const newToOld: number[] = [];\n  if (targetIndex === sourceIndex) {\n    for (let i = 0; i < n; ++i) {\n      newToOld[i] = i;\n    }\n    return newToOld;\n  }\n  newToOld[targetIndex] = sourceIndex;\n  for (let oldDim = 0, newDim = 0; oldDim < n; ) {\n    if (oldDim === sourceIndex) {\n      ++oldDim;\n      continue;\n    }\n    if (newDim === targetIndex) {\n      ++newDim;\n    }\n    newToOld[newDim++] = oldDim++;\n  }\n  return newToOld;\n}\n\nexport function scatterUpdate<\n  T,\n  Dest extends { [index: number]: T },\n  Source extends { readonly [index: number]: T },\n>(dest: Dest, source: Source, indices: ArrayLike<number>): Dest {\n  for (\n    let sourceIndex = 0, length = indices.length;\n    sourceIndex < length;\n    ++sourceIndex\n  ) {\n    const destIndex = indices[sourceIndex];\n    if (destIndex === -1) continue;\n    dest[destIndex] = source[sourceIndex];\n  }\n  return dest;\n}\n\nexport function gatherUpdate<\n  T,\n  Dest extends { [index: number]: T },\n  Source extends { readonly [index: number]: T },\n>(dest: Dest, source: Source, indices: ArrayLike<number>): Dest {\n  for (\n    let destIndex = 0, length = indices.length;\n    destIndex < length;\n    ++destIndex\n  ) {\n    const sourceIndex = indices[destIndex];\n    if (sourceIndex === -1) continue;\n    dest[destIndex] = source[sourceIndex];\n  }\n  return dest;\n}\n\nexport function transposeNestedArrays<T>(x: T[][]) {\n  const result: T[][] = [];\n  for (\n    let outerIndex = 0, outerLength = x.length;\n    outerIndex < outerLength;\n    ++outerIndex\n  ) {\n    const inner = x[outerIndex];\n    for (\n      let innerIndex = 0, innerLength = inner.length;\n      innerIndex < innerLength;\n      ++innerIndex\n    ) {\n      let resultInner = result[innerIndex];\n      if (resultInner === undefined) {\n        resultInner = result[innerIndex] = [];\n      }\n      resultInner.push(inner[innerIndex]);\n    }\n  }\n  return result;\n}\n\nexport interface ArraySpliceOp {\n  retainCount: number;\n  deleteCount: number;\n  insertCount: number;\n}\n\nexport function spliceArray<T>(\n  array: T[],\n  splices: readonly Readonly<ArraySpliceOp>[],\n) {\n  const parts: T[][] = [];\n  let origOffset = 0;\n  for (let i = 0, numSplices = splices.length; i < numSplices; ++i) {\n    const { retainCount, deleteCount, insertCount } = splices[i];\n    if (retainCount !== 0) {\n      parts.push(array.slice(origOffset, origOffset + retainCount));\n      origOffset += retainCount;\n    }\n    origOffset += deleteCount;\n    if (insertCount !== 0) {\n      parts.push(new Array<T>(insertCount));\n    }\n  }\n  const origLength = array.length;\n  if (origOffset !== origLength) {\n    parts.push(array.slice(origOffset));\n  }\n  return new Array(0).concat(...parts);\n}\n\nexport function getMergeSplices<T>(\n  oldArray: readonly T[],\n  newArray: readonly T[],\n  compare: (a: T, b: T) => number,\n): ArraySpliceOp[] {\n  const splices: ArraySpliceOp[] = [];\n  let oldIndex = 0;\n  let newIndex = 0;\n  const oldCount = oldArray.length;\n  const newCount = newArray.length;\n  while (oldIndex < oldCount && newIndex < newCount) {\n    let c: number;\n    const oldValue = oldArray[oldIndex];\n    const newValue = newArray[newIndex];\n    c = compare(oldValue, newValue);\n    if (c === 0) {\n      let retainCount = 1;\n      ++oldIndex;\n      ++newIndex;\n      while (\n        oldIndex < oldCount &&\n        newIndex < newCount &&\n        (c = compare(oldArray[oldIndex], newArray[newIndex])) === 0\n      ) {\n        ++retainCount;\n        ++oldIndex;\n        ++newIndex;\n      }\n      splices.push({ retainCount, deleteCount: 0, insertCount: 0 });\n      continue;\n    }\n    if (c < 0) {\n      let deleteCount = 1;\n      while (\n        ++oldIndex < oldCount &&\n        (c = compare(oldArray[oldIndex], newValue)) < 0\n      ) {\n        ++deleteCount;\n      }\n      splices.push({ retainCount: 0, deleteCount, insertCount: 0 });\n      continue;\n    }\n    if (c > 0) {\n      let insertCount = 1;\n      while (\n        ++newIndex < newCount &&\n        (c = compare(oldValue, newArray[newIndex])) > 0\n      ) {\n        ++insertCount;\n      }\n      splices.push({ retainCount: 0, deleteCount: 0, insertCount });\n    }\n  }\n  if (oldIndex < oldCount || newIndex < newCount) {\n    splices.push({\n      retainCount: 0,\n      deleteCount: oldCount - oldIndex,\n      insertCount: newCount - newIndex,\n    });\n  }\n  return splices;\n}\n\nexport function getFixedOrderMergeSplices<T>(\n  oldArray: readonly T[],\n  newArray: readonly T[],\n  equal: (a: T, b: T) => boolean,\n): ArraySpliceOp[] {\n  const splices: ArraySpliceOp[] = [];\n  let oldIndex = 0;\n  let newIndex = 0;\n  const oldCount = oldArray.length;\n  const newCount = newArray.length;\n  while (oldIndex < oldCount) {\n    let retainCount = 0;\n    while (\n      oldIndex < oldCount &&\n      newIndex < newCount &&\n      equal(oldArray[oldIndex], newArray[newIndex])\n    ) {\n      ++retainCount;\n      ++oldIndex;\n      ++newIndex;\n    }\n    if (retainCount !== 0) {\n      splices.push({ retainCount, deleteCount: 0, insertCount: 0 });\n    }\n    let deleteCount = 0;\n    while (\n      oldIndex < oldCount &&\n      (newIndex === newCount || !equal(oldArray[oldIndex], newArray[newIndex]))\n    ) {\n      ++deleteCount;\n      ++oldIndex;\n    }\n    if (deleteCount !== 0) {\n      splices.push({ retainCount: 0, deleteCount, insertCount: 0 });\n    }\n  }\n  if (newIndex !== newCount) {\n    splices.push({\n      retainCount: 0,\n      deleteCount: 0,\n      insertCount: newCount - newIndex,\n    });\n  }\n  return splices;\n}\n\nexport function mergeSequences(\n  aCount: number,\n  bCount: number,\n  compare: (a: number, b: number) => number,\n  aCallback: (a: number) => void,\n  bCallback: (b: number) => void,\n  abCallback: (a: number, b: number) => void,\n) {\n  let a = 0;\n  let b = 0;\n  if (aCount !== 0 && bCount !== 0) {\n    while (true) {\n      const x = compare(a, b);\n      if (x < 0) {\n        aCallback(a);\n        if (++a === aCount) break;\n      } else if (x > 0) {\n        bCallback(b);\n        if (++b === bCount) break;\n      } else {\n        abCallback(a, b);\n        ++a;\n        ++b;\n        if (a === aCount || b === bCount) break;\n      }\n    }\n  }\n  while (a < aCount) {\n    aCallback(a);\n    ++a;\n  }\n  while (b < bCount) {\n    bCallback(b);\n    ++b;\n  }\n}\n","// DO NOT EDIT.  Generated from\n// templates/neuroglancer/sliceview/compressed_segmentation/encode.template.ts.\n/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file\n * Support for compressing uint32/uint64 segment label chunks.\n */\n\nimport {\n  encodeChannel as encodeChannelCommon,\n  encodeChannels as encodeChannelsCommon,\n  writeBlock,\n} from \"#src/sliceview/compressed_segmentation/encode_common.js\";\nimport { getFortranOrderStrides } from \"#src/util/array.js\";\nimport type { Uint32ArrayBuilder } from \"#src/util/uint32array_builder.js\";\n\nexport { newCache } from \"#src/sliceview/compressed_segmentation/encode_common.js\";\n\nlet tempEncodingBuffer: Uint32Array;\nlet tempValuesBuffer1: Uint32Array;\nlet tempValuesBuffer2: Uint32Array;\nlet tempIndexBuffer1: Uint32Array;\nlet tempIndexBuffer2: Uint32Array;\n\nconst uint32sPerElement = 1;\n\nexport function encodeBlock(\n  rawData: Uint32Array,\n  inputOffset: number,\n  inputStrides: ArrayLike<number>,\n  blockSize: ArrayLike<number>,\n  actualSize: ArrayLike<number>,\n  baseOffset: number,\n  cache: Map<string, number>,\n  output: Uint32ArrayBuilder,\n): [number, number] {\n  const ax = actualSize[0];\n  const ay = actualSize[1];\n  const az = actualSize[2];\n  const bx = blockSize[0];\n  const by = blockSize[1];\n  const bz = blockSize[2];\n  const sx = inputStrides[0];\n  let sy = inputStrides[1];\n  let sz = inputStrides[2];\n  sz -= sy * ay;\n  sy -= sx * ax;\n  if (ax * ay * az === 0) {\n    return [0, 0];\n  }\n\n  const numBlockElements = bx * by * bz + 31; // Add padding elements.\n  if (\n    tempEncodingBuffer === undefined ||\n    tempEncodingBuffer.length < numBlockElements\n  ) {\n    tempEncodingBuffer = new Uint32Array(numBlockElements);\n    tempValuesBuffer1 = new Uint32Array(numBlockElements * uint32sPerElement);\n    tempValuesBuffer2 = new Uint32Array(numBlockElements * uint32sPerElement);\n    tempIndexBuffer1 = new Uint32Array(numBlockElements);\n    tempIndexBuffer2 = new Uint32Array(numBlockElements);\n  }\n\n  const encodingBuffer = tempEncodingBuffer.subarray(0, numBlockElements);\n  encodingBuffer.fill(0);\n  const valuesBuffer1 = tempValuesBuffer1;\n  const valuesBuffer2 = tempValuesBuffer2;\n  const indexBuffer1 = tempIndexBuffer1;\n  const indexBuffer2 = tempIndexBuffer2;\n\n  let noAdjacentDuplicateIndex = 0;\n  {\n    let prevLow = (rawData[inputOffset] + 1) >>> 0;\n\n    let curInputOff = inputOffset;\n    let blockElementIndex = 0;\n    const bsy = bx - ax;\n    const bsz = bx * by - bx * ay;\n    for (let z = 0; z < az; ++z, curInputOff += sz, blockElementIndex += bsz) {\n      for (\n        let y = 0;\n        y < ay;\n        ++y, curInputOff += sy, blockElementIndex += bsy\n      ) {\n        for (let x = 0; x < ax; ++x, curInputOff += sx) {\n          const valueLow = rawData[curInputOff];\n\n          if (valueLow !== prevLow) {\n            prevLow = valuesBuffer1[noAdjacentDuplicateIndex * 1] = valueLow;\n\n            indexBuffer1[noAdjacentDuplicateIndex] = noAdjacentDuplicateIndex++;\n          }\n          encodingBuffer[blockElementIndex++] = noAdjacentDuplicateIndex;\n        }\n      }\n    }\n  }\n\n  indexBuffer1.subarray(0, noAdjacentDuplicateIndex).sort((a, b) => {\n    return valuesBuffer1[a] - valuesBuffer1[b];\n  });\n\n  let numUniqueValues = -1;\n  {\n    let prevLow =\n      (valuesBuffer1[indexBuffer1[0] * uint32sPerElement] + 1) >>> 0;\n\n    for (let i = 0; i < noAdjacentDuplicateIndex; ++i) {\n      const index = indexBuffer1[i];\n      const valueIndex = index * uint32sPerElement;\n      const valueLow = valuesBuffer1[valueIndex];\n\n      if (valueLow !== prevLow) {\n        ++numUniqueValues;\n        const outputIndex2 = numUniqueValues * uint32sPerElement;\n        prevLow = valuesBuffer2[outputIndex2] = valueLow;\n      }\n      indexBuffer2[index + 1] = numUniqueValues;\n    }\n    ++numUniqueValues;\n  }\n\n  return writeBlock(\n    output,\n    baseOffset,\n    cache,\n    bx * by * bz,\n    numUniqueValues,\n    valuesBuffer2,\n    encodingBuffer,\n    indexBuffer2,\n    uint32sPerElement,\n  );\n}\n\nexport function encodeChannel(\n  output: Uint32ArrayBuilder,\n  blockSize: ArrayLike<number>,\n  rawData: Uint32Array,\n  volumeSize: ArrayLike<number>,\n  baseInputOffset = 0,\n  inputStrides = getFortranOrderStrides(volumeSize, 1),\n) {\n  return encodeChannelCommon(\n    output,\n    blockSize,\n    rawData,\n    volumeSize,\n    baseInputOffset,\n    inputStrides,\n    encodeBlock,\n  );\n}\n\nexport function encodeChannels(\n  output: Uint32ArrayBuilder,\n  blockSize: ArrayLike<number>,\n  rawData: Uint32Array,\n  volumeSize: ArrayLike<number>,\n  baseInputOffset = 0,\n  inputStrides = getFortranOrderStrides(volumeSize, 1),\n) {\n  return encodeChannelsCommon(\n    output,\n    blockSize,\n    rawData,\n    volumeSize,\n    baseInputOffset,\n    inputStrides,\n    encodeBlock,\n  );\n}\n","// DO NOT EDIT.  Generated from\n// templates/neuroglancer/sliceview/compressed_segmentation/encode.template.ts.\n/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file\n * Support for compressing uint32/uint64 segment label chunks.\n */\n\nimport {\n  encodeChannel as encodeChannelCommon,\n  encodeChannels as encodeChannelsCommon,\n  writeBlock,\n} from \"#src/sliceview/compressed_segmentation/encode_common.js\";\nimport { getFortranOrderStrides } from \"#src/util/array.js\";\nimport type { Uint32ArrayBuilder } from \"#src/util/uint32array_builder.js\";\n\nexport { newCache } from \"#src/sliceview/compressed_segmentation/encode_common.js\";\n\nlet tempEncodingBuffer: Uint32Array;\nlet tempValuesBuffer1: Uint32Array;\nlet tempValuesBuffer2: Uint32Array;\nlet tempIndexBuffer1: Uint32Array;\nlet tempIndexBuffer2: Uint32Array;\n\nconst uint32sPerElement = 2;\n\nexport function encodeBlock(\n  rawData: Uint32Array,\n  inputOffset: number,\n  inputStrides: ArrayLike<number>,\n  blockSize: ArrayLike<number>,\n  actualSize: ArrayLike<number>,\n  baseOffset: number,\n  cache: Map<string, number>,\n  output: Uint32ArrayBuilder,\n): [number, number] {\n  const ax = actualSize[0];\n  const ay = actualSize[1];\n  const az = actualSize[2];\n  const bx = blockSize[0];\n  const by = blockSize[1];\n  const bz = blockSize[2];\n  const sx = inputStrides[0];\n  let sy = inputStrides[1];\n  let sz = inputStrides[2];\n  sz -= sy * ay;\n  sy -= sx * ax;\n  if (ax * ay * az === 0) {\n    return [0, 0];\n  }\n\n  const numBlockElements = bx * by * bz + 31; // Add padding elements.\n  if (\n    tempEncodingBuffer === undefined ||\n    tempEncodingBuffer.length < numBlockElements\n  ) {\n    tempEncodingBuffer = new Uint32Array(numBlockElements);\n    tempValuesBuffer1 = new Uint32Array(numBlockElements * uint32sPerElement);\n    tempValuesBuffer2 = new Uint32Array(numBlockElements * uint32sPerElement);\n    tempIndexBuffer1 = new Uint32Array(numBlockElements);\n    tempIndexBuffer2 = new Uint32Array(numBlockElements);\n  }\n\n  const encodingBuffer = tempEncodingBuffer.subarray(0, numBlockElements);\n  encodingBuffer.fill(0);\n  const valuesBuffer1 = tempValuesBuffer1;\n  const valuesBuffer2 = tempValuesBuffer2;\n  const indexBuffer1 = tempIndexBuffer1;\n  const indexBuffer2 = tempIndexBuffer2;\n\n  let noAdjacentDuplicateIndex = 0;\n  {\n    let prevLow = (rawData[inputOffset] + 1) >>> 0;\n\n    let prevHigh = 0;\n\n    let curInputOff = inputOffset;\n    let blockElementIndex = 0;\n    const bsy = bx - ax;\n    const bsz = bx * by - bx * ay;\n    for (let z = 0; z < az; ++z, curInputOff += sz, blockElementIndex += bsz) {\n      for (\n        let y = 0;\n        y < ay;\n        ++y, curInputOff += sy, blockElementIndex += bsy\n      ) {\n        for (let x = 0; x < ax; ++x, curInputOff += sx) {\n          const valueLow = rawData[curInputOff];\n\n          const valueHigh = rawData[curInputOff + 1];\n\n          if (valueLow !== prevLow || valueHigh !== prevHigh) {\n            prevLow = valuesBuffer1[noAdjacentDuplicateIndex * 2] = valueLow;\n\n            prevHigh = valuesBuffer1[noAdjacentDuplicateIndex * 2 + 1] =\n              valueHigh;\n\n            indexBuffer1[noAdjacentDuplicateIndex] = noAdjacentDuplicateIndex++;\n          }\n          encodingBuffer[blockElementIndex++] = noAdjacentDuplicateIndex;\n        }\n      }\n    }\n  }\n\n  indexBuffer1.subarray(0, noAdjacentDuplicateIndex).sort((a, b) => {\n    const aHigh = valuesBuffer1[2 * a + 1];\n    const bHigh = valuesBuffer1[2 * b + 1];\n    const aLow = valuesBuffer1[2 * a];\n    const bLow = valuesBuffer1[2 * b];\n    return aHigh - bHigh || aLow - bLow;\n  });\n\n  let numUniqueValues = -1;\n  {\n    let prevLow =\n      (valuesBuffer1[indexBuffer1[0] * uint32sPerElement] + 1) >>> 0;\n\n    let prevHigh = 0;\n\n    for (let i = 0; i < noAdjacentDuplicateIndex; ++i) {\n      const index = indexBuffer1[i];\n      const valueIndex = index * uint32sPerElement;\n      const valueLow = valuesBuffer1[valueIndex];\n\n      const valueHigh = valuesBuffer1[valueIndex + 1];\n\n      if (valueLow !== prevLow || valueHigh !== prevHigh) {\n        ++numUniqueValues;\n        const outputIndex2 = numUniqueValues * uint32sPerElement;\n        prevLow = valuesBuffer2[outputIndex2] = valueLow;\n\n        prevHigh = valuesBuffer2[outputIndex2 + 1] = valueHigh;\n      }\n      indexBuffer2[index + 1] = numUniqueValues;\n    }\n    ++numUniqueValues;\n  }\n\n  return writeBlock(\n    output,\n    baseOffset,\n    cache,\n    bx * by * bz,\n    numUniqueValues,\n    valuesBuffer2,\n    encodingBuffer,\n    indexBuffer2,\n    uint32sPerElement,\n  );\n}\n\nexport function encodeChannel(\n  output: Uint32ArrayBuilder,\n  blockSize: ArrayLike<number>,\n  rawData: Uint32Array,\n  volumeSize: ArrayLike<number>,\n  baseInputOffset = 0,\n  inputStrides = getFortranOrderStrides(volumeSize, 2),\n) {\n  return encodeChannelCommon(\n    output,\n    blockSize,\n    rawData,\n    volumeSize,\n    baseInputOffset,\n    inputStrides,\n    encodeBlock,\n  );\n}\n\nexport function encodeChannels(\n  output: Uint32ArrayBuilder,\n  blockSize: ArrayLike<number>,\n  rawData: Uint32Array,\n  volumeSize: ArrayLike<number>,\n  baseInputOffset = 0,\n  inputStrides = getFortranOrderStrides(volumeSize, 2),\n) {\n  return encodeChannelsCommon(\n    output,\n    blockSize,\n    rawData,\n    volumeSize,\n    baseInputOffset,\n    inputStrides,\n    encodeBlock,\n  );\n}\n","// DO NOT EDIT.  Generated from templates/neuroglancer/util/typedarray_builder.template.ts.\n/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Uint32ArrayBuilder {\n  length = 0;\n  data: Uint32Array;\n\n  constructor(initialCapacity = 16) {\n    this.data = new Uint32Array(initialCapacity);\n  }\n\n  resize(newLength: number) {\n    const { data } = this;\n    if (newLength > data.length) {\n      const newData = new Uint32Array(Math.max(newLength, data.length * 2));\n      newData.set(data.subarray(0, this.length));\n      this.data = newData;\n    }\n    this.length = newLength;\n  }\n\n  get view() {\n    const { data } = this;\n    return new Uint32Array(data.buffer, data.byteOffset, this.length);\n  }\n\n  shrinkToFit() {\n    this.data = new Uint32Array(this.view);\n  }\n\n  clear() {\n    this.length = 0;\n  }\n\n  appendArray(other: ArrayLike<number>) {\n    const { length } = this;\n    this.resize(length + other.length);\n    this.data.set(other, length);\n  }\n\n  eraseRange(start: number, end: number) {\n    this.data.copyWithin(start, end, this.length);\n    this.length -= end - start;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  encodeCompressedSegmentationUint32,\n  encodeCompressedSegmentationUint64,\n} from \"#src/async_computation/encode_compressed_segmentation_request.js\";\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\nimport { encodeChannels as encodeChannelsUint32 } from \"#src/sliceview/compressed_segmentation/encode_uint32.js\";\nimport { encodeChannels as encodeChannelsUint64 } from \"#src/sliceview/compressed_segmentation/encode_uint64.js\";\nimport { Uint32ArrayBuilder } from \"#src/util/uint32array_builder.js\";\n\nconst tempBuffer = new Uint32ArrayBuilder(20000);\n\nregisterAsyncComputation(\n  encodeCompressedSegmentationUint32,\n  async (rawData, shape, blockSize) => {\n    tempBuffer.clear();\n    encodeChannelsUint32(tempBuffer, blockSize, rawData, shape);\n    return { value: tempBuffer.view };\n  },\n);\n\nregisterAsyncComputation(\n  encodeCompressedSegmentationUint64,\n  async (rawData, shape, blockSize) => {\n    tempBuffer.clear();\n    encodeChannelsUint64(tempBuffer, blockSize, rawData, shape);\n    return { value: tempBuffer.view };\n  },\n);\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { DecodedImage } from \"#src/async_computation/decode_png_request.js\";\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport const decodeJpeg =\n  asyncComputation<\n    (\n      data: Uint8Array,\n      width: number | undefined,\n      height: number | undefined,\n      numComponents: number | undefined,\n      convertToGrayscale: boolean,\n    ) => DecodedImage\n  >(\"decodeJpeg\");\n","/**\n * @license\n * Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction loadURLasArrayBuffer(path, callback) {\n  if (path.indexOf(\"data:\") === 0) {\n    var offset = path.indexOf(\"base64,\") + 7;\n    var data = atob(path.substring(offset));\n    var arr = new Uint8Array(data.length);\n    for (var i = data.length - 1; i >= 0; i--) {\n      arr[i] = data.charCodeAt(i);\n    }\n    callback(arr.buffer);\n    return;\n  }\n  var xhr = new XMLHttpRequest();\n  xhr.open(\"GET\", path, true);\n  xhr.responseType = \"arraybuffer\";\n  xhr.onload = function () {\n    callback(xhr.response);\n  };\n  xhr.send(null);\n}\n\nvar JpegImage = (function jpegImage() {\n  function JpegImage() {\n    this._src = null;\n    this._parser = new PDFJS.JpegImage();\n    this.onload = null;\n  }\n  JpegImage.prototype = {\n    get src() {\n      return this._src;\n    },\n    set src(value) {\n      this.load(value);\n    },\n    get width() {\n      return this._parser.width;\n    },\n    get height() {\n      return this._parser.height;\n    },\n    load: function load(path) {\n      this._src = path;\n      loadURLasArrayBuffer(\n        path,\n        function (buffer) {\n          this.parse(new Uint8Array(buffer));\n          if (this.onload) {\n            this.onload();\n          }\n        }.bind(this),\n      );\n    },\n    parse: function (data) {\n      this._parser.parse(data);\n    },\n    getData: function (width, height) {\n      return this._parser.getData(width, height, false);\n    },\n    copyToImageData: function copyToImageData(imageData) {\n      if (this._parser.numComponents === 2 || this._parser.numComponents > 4) {\n        throw new Error(\"Unsupported amount of components\");\n      }\n      var width = imageData.width,\n        height = imageData.height;\n      var imageDataBytes = width * height * 4;\n      var imageDataArray = imageData.data;\n      var i, j;\n      if (this._parser.numComponents === 1) {\n        var values = this._parser.getData(width, height, false);\n        for (i = 0, j = 0; i < imageDataBytes; ) {\n          var value = values[j++];\n          imageDataArray[i++] = value;\n          imageDataArray[i++] = value;\n          imageDataArray[i++] = value;\n          imageDataArray[i++] = 255;\n        }\n        return;\n      }\n      var rgb = this._parser.getData(width, height, true);\n      for (i = 0, j = 0; i < imageDataBytes; ) {\n        imageDataArray[i++] = rgb[j++];\n        imageDataArray[i++] = rgb[j++];\n        imageDataArray[i++] = rgb[j++];\n        imageDataArray[i++] = 255;\n      }\n    },\n  };\n  return JpegImage;\n})();\n\nvar PDFJS;\n\n(function (PDFJS) {\n  \"use strict\";\n  var JpegImage = (function jpegImage() {\n    var dctZigZag = new Uint8Array([\n      0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33,\n      40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43,\n      36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53,\n      60, 61, 54, 47, 55, 62, 63,\n    ]);\n    var dctCos1 = 4017;\n    var dctSin1 = 799;\n    var dctCos3 = 3406;\n    var dctSin3 = 2276;\n    var dctCos6 = 1567;\n    var dctSin6 = 3784;\n    var dctSqrt2 = 5793;\n    var dctSqrt1d2 = 2896;\n    function constructor() {}\n    function buildHuffmanTable(codeLengths, values) {\n      var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n      while (length > 0 && !codeLengths[length - 1]) {\n        length--;\n      }\n      code.push({\n        children: [],\n        index: 0,\n      });\n      var p = code[0],\n        q;\n      for (i = 0; i < length; i++) {\n        for (j = 0; j < codeLengths[i]; j++) {\n          p = code.pop();\n          p.children[p.index] = values[k];\n          while (p.index > 0) {\n            p = code.pop();\n          }\n          p.index++;\n          code.push(p);\n          while (code.length <= i) {\n            code.push(\n              (q = {\n                children: [],\n                index: 0,\n              }),\n            );\n            p.children[p.index] = q.children;\n            p = q;\n          }\n          k++;\n        }\n        if (i + 1 < length) {\n          code.push(\n            (q = {\n              children: [],\n              index: 0,\n            }),\n          );\n          p.children[p.index] = q.children;\n          p = q;\n        }\n      }\n      return code[0].children;\n    }\n    function getBlockBufferOffset(component, row, col) {\n      return 64 * ((component.blocksPerLine + 1) * row + col);\n    }\n    function decodeScan(\n      data,\n      offset,\n      frame,\n      components,\n      resetInterval,\n      spectralStart,\n      spectralEnd,\n      successivePrev,\n      successive,\n    ) {\n      var precision = frame.precision;\n      var samplesPerLine = frame.samplesPerLine;\n      var scanLines = frame.scanLines;\n      var mcusPerLine = frame.mcusPerLine;\n      var progressive = frame.progressive;\n      var maxH = frame.maxH,\n        maxV = frame.maxV;\n      var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n      function readBit() {\n        if (bitsCount > 0) {\n          bitsCount--;\n          return (bitsData >> bitsCount) & 1;\n        }\n        bitsData = data[offset++];\n        if (bitsData === 255) {\n          var nextByte = data[offset++];\n          if (nextByte) {\n            throw (\n              \"unexpected marker: \" + ((bitsData << 8) | nextByte).toString(16)\n            );\n          }\n        }\n        bitsCount = 7;\n        return bitsData >>> 7;\n      }\n      function decodeHuffman(tree) {\n        var node = tree;\n        while (true) {\n          node = node[readBit()];\n          if (typeof node === \"number\") {\n            return node;\n          }\n          if (typeof node !== \"object\") {\n            throw \"invalid huffman sequence\";\n          }\n        }\n      }\n      function receive(length) {\n        var n = 0;\n        while (length > 0) {\n          n = (n << 1) | readBit();\n          length--;\n        }\n        return n;\n      }\n      function receiveAndExtend(length) {\n        if (length === 1) {\n          return readBit() === 1 ? 1 : -1;\n        }\n        var n = receive(length);\n        if (n >= 1 << (length - 1)) {\n          return n;\n        }\n        return n + (-1 << length) + 1;\n      }\n      function decodeBaseline(component, offset) {\n        var t = decodeHuffman(component.huffmanTableDC);\n        var diff = t === 0 ? 0 : receiveAndExtend(t);\n        component.blockData[offset] = component.pred += diff;\n        var k = 1;\n        while (k < 64) {\n          var rs = decodeHuffman(component.huffmanTableAC);\n          var s = rs & 15,\n            r = rs >> 4;\n          if (s === 0) {\n            if (r < 15) {\n              break;\n            }\n            k += 16;\n            continue;\n          }\n          k += r;\n          var z = dctZigZag[k];\n          component.blockData[offset + z] = receiveAndExtend(s);\n          k++;\n        }\n      }\n      function decodeDCFirst(component, offset) {\n        var t = decodeHuffman(component.huffmanTableDC);\n        var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n        component.blockData[offset] = component.pred += diff;\n      }\n      function decodeDCSuccessive(component, offset) {\n        component.blockData[offset] |= readBit() << successive;\n      }\n      var eobrun = 0;\n      function decodeACFirst(component, offset) {\n        if (eobrun > 0) {\n          eobrun--;\n          return;\n        }\n        var k = spectralStart,\n          e = spectralEnd;\n        while (k <= e) {\n          var rs = decodeHuffman(component.huffmanTableAC);\n          var s = rs & 15,\n            r = rs >> 4;\n          if (s === 0) {\n            if (r < 15) {\n              eobrun = receive(r) + (1 << r) - 1;\n              break;\n            }\n            k += 16;\n            continue;\n          }\n          k += r;\n          var z = dctZigZag[k];\n          component.blockData[offset + z] =\n            receiveAndExtend(s) * (1 << successive);\n          k++;\n        }\n      }\n      var successiveACState = 0,\n        successiveACNextValue;\n      function decodeACSuccessive(component, offset) {\n        var k = spectralStart;\n        var e = spectralEnd;\n        var r = 0;\n        var s;\n        var rs;\n        while (k <= e) {\n          var z = dctZigZag[k];\n          switch (successiveACState) {\n            case 0:\n              rs = decodeHuffman(component.huffmanTableAC);\n              s = rs & 15;\n              r = rs >> 4;\n              if (s === 0) {\n                if (r < 15) {\n                  eobrun = receive(r) + (1 << r);\n                  successiveACState = 4;\n                } else {\n                  r = 16;\n                  successiveACState = 1;\n                }\n              } else {\n                if (s !== 1) {\n                  throw \"invalid ACn encoding\";\n                }\n                successiveACNextValue = receiveAndExtend(s);\n                successiveACState = r ? 2 : 3;\n              }\n              continue;\n\n            case 1:\n            case 2:\n              if (component.blockData[offset + z]) {\n                component.blockData[offset + z] += readBit() << successive;\n              } else {\n                r--;\n                if (r === 0) {\n                  successiveACState = successiveACState === 2 ? 3 : 0;\n                }\n              }\n              break;\n\n            case 3:\n              if (component.blockData[offset + z]) {\n                component.blockData[offset + z] += readBit() << successive;\n              } else {\n                component.blockData[offset + z] =\n                  successiveACNextValue << successive;\n                successiveACState = 0;\n              }\n              break;\n\n            case 4:\n              if (component.blockData[offset + z]) {\n                component.blockData[offset + z] += readBit() << successive;\n              }\n              break;\n          }\n          k++;\n        }\n        if (successiveACState === 4) {\n          eobrun--;\n          if (eobrun === 0) {\n            successiveACState = 0;\n          }\n        }\n      }\n      function decodeMcu(component, decode, mcu, row, col) {\n        var mcuRow = (mcu / mcusPerLine) | 0;\n        var mcuCol = mcu % mcusPerLine;\n        var blockRow = mcuRow * component.v + row;\n        var blockCol = mcuCol * component.h + col;\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        decode(component, offset);\n      }\n      function decodeBlock(component, decode, mcu) {\n        var blockRow = (mcu / component.blocksPerLine) | 0;\n        var blockCol = mcu % component.blocksPerLine;\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        decode(component, offset);\n      }\n      var componentsLength = components.length;\n      var component, i, j, k, n;\n      var decodeFn;\n      if (progressive) {\n        if (spectralStart === 0) {\n          decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n        } else {\n          decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n        }\n      } else {\n        decodeFn = decodeBaseline;\n      }\n      var mcu = 0,\n        marker;\n      var mcuExpected;\n      if (componentsLength === 1) {\n        mcuExpected =\n          components[0].blocksPerLine * components[0].blocksPerColumn;\n      } else {\n        mcuExpected = mcusPerLine * frame.mcusPerColumn;\n      }\n      if (!resetInterval) {\n        resetInterval = mcuExpected;\n      }\n      var h, v;\n      while (mcu < mcuExpected) {\n        for (i = 0; i < componentsLength; i++) {\n          components[i].pred = 0;\n        }\n        eobrun = 0;\n        if (componentsLength === 1) {\n          component = components[0];\n          for (n = 0; n < resetInterval; n++) {\n            decodeBlock(component, decodeFn, mcu);\n            mcu++;\n          }\n        } else {\n          for (n = 0; n < resetInterval; n++) {\n            for (i = 0; i < componentsLength; i++) {\n              component = components[i];\n              h = component.h;\n              v = component.v;\n              for (j = 0; j < v; j++) {\n                for (k = 0; k < h; k++) {\n                  decodeMcu(component, decodeFn, mcu, j, k);\n                }\n              }\n            }\n            mcu++;\n          }\n        }\n        bitsCount = 0;\n        marker = (data[offset] << 8) | data[offset + 1];\n        if (marker <= 65280) {\n          throw \"marker was not found\";\n        }\n        if (marker >= 65488 && marker <= 65495) {\n          offset += 2;\n        } else {\n          break;\n        }\n      }\n      return offset - startOffset;\n    }\n    function quantizeAndInverse(component, blockBufferOffset, p) {\n      var qt = component.quantizationTable,\n        blockData = component.blockData;\n      var v0, v1, v2, v3, v4, v5, v6, v7;\n      var p0, p1, p2, p3, p4, p5, p6, p7;\n      var t;\n      for (var row = 0; row < 64; row += 8) {\n        p0 = blockData[blockBufferOffset + row];\n        p1 = blockData[blockBufferOffset + row + 1];\n        p2 = blockData[blockBufferOffset + row + 2];\n        p3 = blockData[blockBufferOffset + row + 3];\n        p4 = blockData[blockBufferOffset + row + 4];\n        p5 = blockData[blockBufferOffset + row + 5];\n        p6 = blockData[blockBufferOffset + row + 6];\n        p7 = blockData[blockBufferOffset + row + 7];\n        p0 *= qt[row];\n        if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n          t = (dctSqrt2 * p0 + 512) >> 10;\n          p[row] = t;\n          p[row + 1] = t;\n          p[row + 2] = t;\n          p[row + 3] = t;\n          p[row + 4] = t;\n          p[row + 5] = t;\n          p[row + 6] = t;\n          p[row + 7] = t;\n          continue;\n        }\n        p1 *= qt[row + 1];\n        p2 *= qt[row + 2];\n        p3 *= qt[row + 3];\n        p4 *= qt[row + 4];\n        p5 *= qt[row + 5];\n        p6 *= qt[row + 6];\n        p7 *= qt[row + 7];\n        v0 = (dctSqrt2 * p0 + 128) >> 8;\n        v1 = (dctSqrt2 * p4 + 128) >> 8;\n        v2 = p2;\n        v3 = p6;\n        v4 = (dctSqrt1d2 * (p1 - p7) + 128) >> 8;\n        v7 = (dctSqrt1d2 * (p1 + p7) + 128) >> 8;\n        v5 = p3 << 4;\n        v6 = p5 << 4;\n        v0 = (v0 + v1 + 1) >> 1;\n        v1 = v0 - v1;\n        t = (v2 * dctSin6 + v3 * dctCos6 + 128) >> 8;\n        v2 = (v2 * dctCos6 - v3 * dctSin6 + 128) >> 8;\n        v3 = t;\n        v4 = (v4 + v6 + 1) >> 1;\n        v6 = v4 - v6;\n        v7 = (v7 + v5 + 1) >> 1;\n        v5 = v7 - v5;\n        v0 = (v0 + v3 + 1) >> 1;\n        v3 = v0 - v3;\n        v1 = (v1 + v2 + 1) >> 1;\n        v2 = v1 - v2;\n        t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n        v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n        v7 = t;\n        t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n        v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n        v6 = t;\n        p[row] = v0 + v7;\n        p[row + 7] = v0 - v7;\n        p[row + 1] = v1 + v6;\n        p[row + 6] = v1 - v6;\n        p[row + 2] = v2 + v5;\n        p[row + 5] = v2 - v5;\n        p[row + 3] = v3 + v4;\n        p[row + 4] = v3 - v4;\n      }\n      for (var col = 0; col < 8; ++col) {\n        p0 = p[col];\n        p1 = p[col + 8];\n        p2 = p[col + 16];\n        p3 = p[col + 24];\n        p4 = p[col + 32];\n        p5 = p[col + 40];\n        p6 = p[col + 48];\n        p7 = p[col + 56];\n        if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n          t = (dctSqrt2 * p0 + 8192) >> 14;\n          t = t < -2040 ? 0 : t >= 2024 ? 255 : (t + 2056) >> 4;\n          blockData[blockBufferOffset + col] = t;\n          blockData[blockBufferOffset + col + 8] = t;\n          blockData[blockBufferOffset + col + 16] = t;\n          blockData[blockBufferOffset + col + 24] = t;\n          blockData[blockBufferOffset + col + 32] = t;\n          blockData[blockBufferOffset + col + 40] = t;\n          blockData[blockBufferOffset + col + 48] = t;\n          blockData[blockBufferOffset + col + 56] = t;\n          continue;\n        }\n        v0 = (dctSqrt2 * p0 + 2048) >> 12;\n        v1 = (dctSqrt2 * p4 + 2048) >> 12;\n        v2 = p2;\n        v3 = p6;\n        v4 = (dctSqrt1d2 * (p1 - p7) + 2048) >> 12;\n        v7 = (dctSqrt1d2 * (p1 + p7) + 2048) >> 12;\n        v5 = p3;\n        v6 = p5;\n        v0 = ((v0 + v1 + 1) >> 1) + 4112;\n        v1 = v0 - v1;\n        t = (v2 * dctSin6 + v3 * dctCos6 + 2048) >> 12;\n        v2 = (v2 * dctCos6 - v3 * dctSin6 + 2048) >> 12;\n        v3 = t;\n        v4 = (v4 + v6 + 1) >> 1;\n        v6 = v4 - v6;\n        v7 = (v7 + v5 + 1) >> 1;\n        v5 = v7 - v5;\n        v0 = (v0 + v3 + 1) >> 1;\n        v3 = v0 - v3;\n        v1 = (v1 + v2 + 1) >> 1;\n        v2 = v1 - v2;\n        t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n        v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n        v7 = t;\n        t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n        v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n        v6 = t;\n        p0 = v0 + v7;\n        p7 = v0 - v7;\n        p1 = v1 + v6;\n        p6 = v1 - v6;\n        p2 = v2 + v5;\n        p5 = v2 - v5;\n        p3 = v3 + v4;\n        p4 = v3 - v4;\n        p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n        p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n        p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n        p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n        p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n        p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n        p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n        p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n        blockData[blockBufferOffset + col] = p0;\n        blockData[blockBufferOffset + col + 8] = p1;\n        blockData[blockBufferOffset + col + 16] = p2;\n        blockData[blockBufferOffset + col + 24] = p3;\n        blockData[blockBufferOffset + col + 32] = p4;\n        blockData[blockBufferOffset + col + 40] = p5;\n        blockData[blockBufferOffset + col + 48] = p6;\n        blockData[blockBufferOffset + col + 56] = p7;\n      }\n    }\n    function buildComponentData(frame, component) {\n      var blocksPerLine = component.blocksPerLine;\n      var blocksPerColumn = component.blocksPerColumn;\n      var computationBuffer = new Int16Array(64);\n      for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n        for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n          var offset = getBlockBufferOffset(component, blockRow, blockCol);\n          quantizeAndInverse(component, offset, computationBuffer);\n        }\n      }\n      return component.blockData;\n    }\n    function clamp0to255(a) {\n      return a <= 0 ? 0 : a >= 255 ? 255 : a;\n    }\n    constructor.prototype = {\n      parse: function parse(data) {\n        function readUint16() {\n          var value = (data[offset] << 8) | data[offset + 1];\n          offset += 2;\n          return value;\n        }\n        function readDataBlock() {\n          var length = readUint16();\n          var array = data.subarray(offset, offset + length - 2);\n          offset += array.length;\n          return array;\n        }\n        function prepareComponents(frame) {\n          var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n          var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n          for (var i = 0; i < frame.components.length; i++) {\n            component = frame.components[i];\n            var blocksPerLine = Math.ceil(\n              (Math.ceil(frame.samplesPerLine / 8) * component.h) / frame.maxH,\n            );\n            var blocksPerColumn = Math.ceil(\n              (Math.ceil(frame.scanLines / 8) * component.v) / frame.maxV,\n            );\n            var blocksPerLineForMcu = mcusPerLine * component.h;\n            var blocksPerColumnForMcu = mcusPerColumn * component.v;\n            var blocksBufferSize =\n              64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n            component.blockData = new Int16Array(blocksBufferSize);\n            component.blocksPerLine = blocksPerLine;\n            component.blocksPerColumn = blocksPerColumn;\n          }\n          frame.mcusPerLine = mcusPerLine;\n          frame.mcusPerColumn = mcusPerColumn;\n        }\n        var offset = 0,\n          length = data.length;\n        var jfif = null;\n        var adobe = null;\n        var pixels = null;\n        var frame, resetInterval;\n        var quantizationTables = [];\n        var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n        var fileMarker = readUint16();\n        if (fileMarker !== 65496) {\n          throw \"SOI not found\";\n        }\n        fileMarker = readUint16();\n        while (fileMarker !== 65497) {\n          var i, j, l;\n          switch (fileMarker) {\n            case 65504:\n            case 65505:\n            case 65506:\n            case 65507:\n            case 65508:\n            case 65509:\n            case 65510:\n            case 65511:\n            case 65512:\n            case 65513:\n            case 65514:\n            case 65515:\n            case 65516:\n            case 65517:\n            case 65518:\n            case 65519:\n            case 65534:\n              var appData = readDataBlock();\n              if (fileMarker === 65504) {\n                if (\n                  appData[0] === 74 &&\n                  appData[1] === 70 &&\n                  appData[2] === 73 &&\n                  appData[3] === 70 &&\n                  appData[4] === 0\n                ) {\n                  jfif = {\n                    version: {\n                      major: appData[5],\n                      minor: appData[6],\n                    },\n                    densityUnits: appData[7],\n                    xDensity: (appData[8] << 8) | appData[9],\n                    yDensity: (appData[10] << 8) | appData[11],\n                    thumbWidth: appData[12],\n                    thumbHeight: appData[13],\n                    thumbData: appData.subarray(\n                      14,\n                      14 + 3 * appData[12] * appData[13],\n                    ),\n                  };\n                }\n              }\n              if (fileMarker === 65518) {\n                if (\n                  appData[0] === 65 &&\n                  appData[1] === 100 &&\n                  appData[2] === 111 &&\n                  appData[3] === 98 &&\n                  appData[4] === 101 &&\n                  appData[5] === 0\n                ) {\n                  adobe = {\n                    version: appData[6],\n                    flags0: (appData[7] << 8) | appData[8],\n                    flags1: (appData[9] << 8) | appData[10],\n                    transformCode: appData[11],\n                  };\n                }\n              }\n              break;\n\n            case 65499:\n              var quantizationTablesLength = readUint16();\n              var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n              var z;\n              while (offset < quantizationTablesEnd) {\n                var quantizationTableSpec = data[offset++];\n                var tableData = new Uint16Array(64);\n                if (quantizationTableSpec >> 4 === 0) {\n                  for (j = 0; j < 64; j++) {\n                    z = dctZigZag[j];\n                    tableData[z] = data[offset++];\n                  }\n                } else if (quantizationTableSpec >> 4 === 1) {\n                  for (j = 0; j < 64; j++) {\n                    z = dctZigZag[j];\n                    tableData[z] = readUint16();\n                  }\n                } else {\n                  throw \"DQT: invalid table spec\";\n                }\n                quantizationTables[quantizationTableSpec & 15] = tableData;\n              }\n              break;\n\n            case 65472:\n            case 65473:\n            case 65474:\n              if (frame) {\n                throw \"Only single frame JPEGs supported\";\n              }\n              readUint16();\n              frame = {};\n              frame.extended = fileMarker === 65473;\n              frame.progressive = fileMarker === 65474;\n              frame.precision = data[offset++];\n              frame.scanLines = readUint16();\n              frame.samplesPerLine = readUint16();\n              frame.components = [];\n              frame.componentIds = {};\n              var componentsCount = data[offset++],\n                componentId;\n              var maxH = 0,\n                maxV = 0;\n              for (i = 0; i < componentsCount; i++) {\n                componentId = data[offset];\n                var h = data[offset + 1] >> 4;\n                var v = data[offset + 1] & 15;\n                if (maxH < h) {\n                  maxH = h;\n                }\n                if (maxV < v) {\n                  maxV = v;\n                }\n                var qId = data[offset + 2];\n                l = frame.components.push({\n                  h: h,\n                  v: v,\n                  quantizationTable: quantizationTables[qId],\n                });\n                frame.componentIds[componentId] = l - 1;\n                offset += 3;\n              }\n              frame.maxH = maxH;\n              frame.maxV = maxV;\n              prepareComponents(frame);\n              break;\n\n            case 65476:\n              var huffmanLength = readUint16();\n              for (i = 2; i < huffmanLength; ) {\n                var huffmanTableSpec = data[offset++];\n                var codeLengths = new Uint8Array(16);\n                var codeLengthSum = 0;\n                for (j = 0; j < 16; j++, offset++) {\n                  codeLengthSum += codeLengths[j] = data[offset];\n                }\n                var huffmanValues = new Uint8Array(codeLengthSum);\n                for (j = 0; j < codeLengthSum; j++, offset++) {\n                  huffmanValues[j] = data[offset];\n                }\n                i += 17 + codeLengthSum;\n                (huffmanTableSpec >> 4 === 0\n                  ? huffmanTablesDC\n                  : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(\n                  codeLengths,\n                  huffmanValues,\n                );\n              }\n              break;\n\n            case 65501:\n              readUint16();\n              resetInterval = readUint16();\n              break;\n\n            case 65498:\n              var scanLength = readUint16();\n              var selectorsCount = data[offset++];\n              var components = [],\n                component;\n              for (i = 0; i < selectorsCount; i++) {\n                var componentIndex = frame.componentIds[data[offset++]];\n                component = frame.components[componentIndex];\n                var tableSpec = data[offset++];\n                component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n                component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n                components.push(component);\n              }\n              var spectralStart = data[offset++];\n              var spectralEnd = data[offset++];\n              var successiveApproximation = data[offset++];\n              var processed = decodeScan(\n                data,\n                offset,\n                frame,\n                components,\n                resetInterval,\n                spectralStart,\n                spectralEnd,\n                successiveApproximation >> 4,\n                successiveApproximation & 15,\n              );\n              offset += processed;\n              break;\n\n            case 65535:\n              if (data[offset] !== 255) {\n                offset--;\n              }\n              break;\n\n            default:\n              if (\n                data[offset - 3] === 255 &&\n                data[offset - 2] >= 192 &&\n                data[offset - 2] <= 254\n              ) {\n                offset -= 3;\n                break;\n              }\n              throw \"unknown JPEG marker \" + fileMarker.toString(16);\n          }\n          fileMarker = readUint16();\n        }\n        this.width = frame.samplesPerLine;\n        this.height = frame.scanLines;\n        this.jfif = jfif;\n        this.adobe = adobe;\n        this.components = [];\n        for (i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          this.components.push({\n            output: buildComponentData(frame, component),\n            scaleX: component.h / frame.maxH,\n            scaleY: component.v / frame.maxV,\n            blocksPerLine: component.blocksPerLine,\n            blocksPerColumn: component.blocksPerColumn,\n          });\n        }\n        this.numComponents = this.components.length;\n      },\n      _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n        var scaleX = this.width / width,\n          scaleY = this.height / height;\n        var component, componentScaleX, componentScaleY, blocksPerScanline;\n        var x, y, i, j, k;\n        var index;\n        var offset = 0;\n        var output;\n        var numComponents = this.components.length;\n        var dataLength = width * height * numComponents;\n        var data = new Uint8Array(dataLength);\n        var xScaleBlockOffset = new Uint32Array(width);\n        var mask3LSB = 4294967288;\n        for (i = 0; i < numComponents; i++) {\n          component = this.components[i];\n          componentScaleX = component.scaleX * scaleX;\n          componentScaleY = component.scaleY * scaleY;\n          offset = i;\n          output = component.output;\n          blocksPerScanline = (component.blocksPerLine + 1) << 3;\n          for (x = 0; x < width; x++) {\n            j = 0 | (x * componentScaleX);\n            xScaleBlockOffset[x] = ((j & mask3LSB) << 3) | (j & 7);\n          }\n          for (y = 0; y < height; y++) {\n            j = 0 | (y * componentScaleY);\n            index = (blocksPerScanline * (j & mask3LSB)) | ((j & 7) << 3);\n            for (x = 0; x < width; x++) {\n              data[offset] = output[index + xScaleBlockOffset[x]];\n              offset += numComponents;\n            }\n          }\n        }\n        var transform = this.decodeTransform;\n        if (transform) {\n          for (i = 0; i < dataLength; ) {\n            for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n              data[i] = ((data[i] * transform[k]) >> 8) + transform[k + 1];\n            }\n          }\n        }\n        return data;\n      },\n      _isColorConversionNeeded: function isColorConversionNeeded() {\n        if (this.adobe && this.adobe.transformCode) {\n          return true;\n        } else if (this.numComponents === 3) {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      _convertYccToRgb: function convertYccToRgb(data) {\n        var Y, Cb, Cr;\n        for (var i = 0, length = data.length; i < length; i += 3) {\n          Y = data[i];\n          Cb = data[i + 1];\n          Cr = data[i + 2];\n          data[i] = clamp0to255(Y - 179.456 + 1.402 * Cr);\n          data[i + 1] = clamp0to255(Y + 135.459 - 0.344 * Cb - 0.714 * Cr);\n          data[i + 2] = clamp0to255(Y - 226.816 + 1.772 * Cb);\n        }\n        return data;\n      },\n      _convertYcckToRgb: function convertYcckToRgb(data) {\n        var Y, Cb, Cr, k;\n        var offset = 0;\n        for (var i = 0, length = data.length; i < length; i += 4) {\n          Y = data[i];\n          Cb = data[i + 1];\n          Cr = data[i + 2];\n          k = data[i + 3];\n          var r =\n            -122.67195406894 +\n            Cb *\n              (-660635669420364e-19 * Cb +\n                0.000437130475926232 * Cr -\n                54080610064599e-18 * Y +\n                0.00048449797120281 * k -\n                0.154362151871126) +\n            Cr *\n              (-0.000957964378445773 * Cr +\n                0.000817076911346625 * Y -\n                0.00477271405408747 * k +\n                1.53380253221734) +\n            Y *\n              (0.000961250184130688 * Y -\n                0.00266257332283933 * k +\n                0.48357088451265) +\n            k * (-0.000336197177618394 * k + 0.484791561490776);\n          var g =\n            107.268039397724 +\n            Cb *\n              (219927104525741e-19 * Cb -\n                0.000640992018297945 * Cr +\n                0.000659397001245577 * Y +\n                0.000426105652938837 * k -\n                0.176491792462875) +\n            Cr *\n              (-0.000778269941513683 * Cr +\n                0.00130872261408275 * Y +\n                0.000770482631801132 * k -\n                0.151051492775562) +\n            Y *\n              (0.00126935368114843 * Y -\n                0.00265090189010898 * k +\n                0.25802910206845) +\n            k * (-0.000318913117588328 * k - 0.213742400323665);\n          var b =\n            -20.810012546947 +\n            Cb *\n              (-0.000570115196973677 * Cb -\n                263409051004589e-19 * Cr +\n                0.0020741088115012 * Y -\n                0.00288260236853442 * k +\n                0.814272968359295) +\n            Cr *\n              (-153496057440975e-19 * Cr -\n                0.000132689043961446 * Y +\n                0.000560833691242812 * k -\n                0.195152027534049) +\n            Y *\n              (0.00174418132927582 * Y -\n                0.00255243321439347 * k +\n                0.116935020465145) +\n            k * (-0.000343531996510555 * k + 0.24165260232407);\n          data[offset++] = clamp0to255(r);\n          data[offset++] = clamp0to255(g);\n          data[offset++] = clamp0to255(b);\n        }\n        return data;\n      },\n      _convertYcckToCmyk: function convertYcckToCmyk(data) {\n        var Y, Cb, Cr;\n        for (var i = 0, length = data.length; i < length; i += 4) {\n          Y = data[i];\n          Cb = data[i + 1];\n          Cr = data[i + 2];\n          data[i] = clamp0to255(434.456 - Y - 1.402 * Cr);\n          data[i + 1] = clamp0to255(119.541 - Y + 0.344 * Cb + 0.714 * Cr);\n          data[i + 2] = clamp0to255(481.816 - Y - 1.772 * Cb);\n        }\n        return data;\n      },\n      _convertCmykToRgb: function convertCmykToRgb(data) {\n        var c, m, y, k;\n        var offset = 0;\n        var min = -255 * 255 * 255;\n        var scale = 1 / 255 / 255;\n        for (var i = 0, length = data.length; i < length; i += 4) {\n          c = data[i];\n          m = data[i + 1];\n          y = data[i + 2];\n          k = data[i + 3];\n          var r =\n            c *\n              (-4.387332384609988 * c +\n                54.48615194189176 * m +\n                18.82290502165302 * y +\n                212.25662451639585 * k -\n                72734.4411664936) +\n            m *\n              (1.7149763477362134 * m -\n                5.6096736904047315 * y -\n                17.873870861415444 * k -\n                1401.7366389350734) +\n            y *\n              (-2.5217340131683033 * y -\n                21.248923337353073 * k +\n                4465.541406466231) -\n            k * (21.86122147463605 * k + 48317.86113160301);\n          var g =\n            c *\n              (8.841041422036149 * c +\n                60.118027045597366 * m +\n                6.871425592049007 * y +\n                31.159100130055922 * k -\n                20220.756542821975) +\n            m *\n              (-15.310361306967817 * m +\n                17.575251261109482 * y +\n                131.35250912493976 * k -\n                48691.05921601825) +\n            y *\n              (4.444339102852739 * y +\n                9.8632861493405 * k -\n                6341.191035517494) -\n            k * (20.737325471181034 * k + 47890.15695978492);\n          var b =\n            c *\n              (0.8842522430003296 * c +\n                8.078677503112928 * m +\n                30.89978309703729 * y -\n                0.23883238689178934 * k -\n                3616.812083916688) +\n            m *\n              (10.49593273432072 * m +\n                63.02378494754052 * y +\n                50.606957656360734 * k -\n                28620.90484698408) +\n            y *\n              (0.03296041114873217 * y +\n                115.60384449646641 * k -\n                49363.43385999684) -\n            k * (22.33816807309886 * k + 45932.16563550634);\n          data[offset++] = r >= 0 ? 255 : r <= min ? 0 : (255 + r * scale) | 0;\n          data[offset++] = g >= 0 ? 255 : g <= min ? 0 : (255 + g * scale) | 0;\n          data[offset++] = b >= 0 ? 255 : b <= min ? 0 : (255 + b * scale) | 0;\n        }\n        return data;\n      },\n      getData: function getData(width, height, forceRGBoutput) {\n        if (this.numComponents > 4) {\n          throw \"Unsupported color mode\";\n        }\n        var data = this._getLinearizedBlockData(width, height);\n        if (this.numComponents === 3) {\n          return this._convertYccToRgb(data);\n        } else if (this.numComponents === 4) {\n          if (this._isColorConversionNeeded()) {\n            if (forceRGBoutput) {\n              return this._convertYcckToRgb(data);\n            } else {\n              return this._convertYcckToCmyk(data);\n            }\n          } else if (forceRGBoutput) {\n            return this._convertCmykToRgb(data);\n          }\n        }\n        return data;\n      },\n    };\n    return constructor;\n  })();\n  (\"use strict\");\n  var ArithmeticDecoder = (function ArithmeticDecoderClosure() {\n    var QeTable = [\n      {\n        qe: 22017,\n        nmps: 1,\n        nlps: 1,\n        switchFlag: 1,\n      },\n      {\n        qe: 13313,\n        nmps: 2,\n        nlps: 6,\n        switchFlag: 0,\n      },\n      {\n        qe: 6145,\n        nmps: 3,\n        nlps: 9,\n        switchFlag: 0,\n      },\n      {\n        qe: 2753,\n        nmps: 4,\n        nlps: 12,\n        switchFlag: 0,\n      },\n      {\n        qe: 1313,\n        nmps: 5,\n        nlps: 29,\n        switchFlag: 0,\n      },\n      {\n        qe: 545,\n        nmps: 38,\n        nlps: 33,\n        switchFlag: 0,\n      },\n      {\n        qe: 22017,\n        nmps: 7,\n        nlps: 6,\n        switchFlag: 1,\n      },\n      {\n        qe: 21505,\n        nmps: 8,\n        nlps: 14,\n        switchFlag: 0,\n      },\n      {\n        qe: 18433,\n        nmps: 9,\n        nlps: 14,\n        switchFlag: 0,\n      },\n      {\n        qe: 14337,\n        nmps: 10,\n        nlps: 14,\n        switchFlag: 0,\n      },\n      {\n        qe: 12289,\n        nmps: 11,\n        nlps: 17,\n        switchFlag: 0,\n      },\n      {\n        qe: 9217,\n        nmps: 12,\n        nlps: 18,\n        switchFlag: 0,\n      },\n      {\n        qe: 7169,\n        nmps: 13,\n        nlps: 20,\n        switchFlag: 0,\n      },\n      {\n        qe: 5633,\n        nmps: 29,\n        nlps: 21,\n        switchFlag: 0,\n      },\n      {\n        qe: 22017,\n        nmps: 15,\n        nlps: 14,\n        switchFlag: 1,\n      },\n      {\n        qe: 21505,\n        nmps: 16,\n        nlps: 14,\n        switchFlag: 0,\n      },\n      {\n        qe: 20737,\n        nmps: 17,\n        nlps: 15,\n        switchFlag: 0,\n      },\n      {\n        qe: 18433,\n        nmps: 18,\n        nlps: 16,\n        switchFlag: 0,\n      },\n      {\n        qe: 14337,\n        nmps: 19,\n        nlps: 17,\n        switchFlag: 0,\n      },\n      {\n        qe: 13313,\n        nmps: 20,\n        nlps: 18,\n        switchFlag: 0,\n      },\n      {\n        qe: 12289,\n        nmps: 21,\n        nlps: 19,\n        switchFlag: 0,\n      },\n      {\n        qe: 10241,\n        nmps: 22,\n        nlps: 19,\n        switchFlag: 0,\n      },\n      {\n        qe: 9217,\n        nmps: 23,\n        nlps: 20,\n        switchFlag: 0,\n      },\n      {\n        qe: 8705,\n        nmps: 24,\n        nlps: 21,\n        switchFlag: 0,\n      },\n      {\n        qe: 7169,\n        nmps: 25,\n        nlps: 22,\n        switchFlag: 0,\n      },\n      {\n        qe: 6145,\n        nmps: 26,\n        nlps: 23,\n        switchFlag: 0,\n      },\n      {\n        qe: 5633,\n        nmps: 27,\n        nlps: 24,\n        switchFlag: 0,\n      },\n      {\n        qe: 5121,\n        nmps: 28,\n        nlps: 25,\n        switchFlag: 0,\n      },\n      {\n        qe: 4609,\n        nmps: 29,\n        nlps: 26,\n        switchFlag: 0,\n      },\n      {\n        qe: 4353,\n        nmps: 30,\n        nlps: 27,\n        switchFlag: 0,\n      },\n      {\n        qe: 2753,\n        nmps: 31,\n        nlps: 28,\n        switchFlag: 0,\n      },\n      {\n        qe: 2497,\n        nmps: 32,\n        nlps: 29,\n        switchFlag: 0,\n      },\n      {\n        qe: 2209,\n        nmps: 33,\n        nlps: 30,\n        switchFlag: 0,\n      },\n      {\n        qe: 1313,\n        nmps: 34,\n        nlps: 31,\n        switchFlag: 0,\n      },\n      {\n        qe: 1089,\n        nmps: 35,\n        nlps: 32,\n        switchFlag: 0,\n      },\n      {\n        qe: 673,\n        nmps: 36,\n        nlps: 33,\n        switchFlag: 0,\n      },\n      {\n        qe: 545,\n        nmps: 37,\n        nlps: 34,\n        switchFlag: 0,\n      },\n      {\n        qe: 321,\n        nmps: 38,\n        nlps: 35,\n        switchFlag: 0,\n      },\n      {\n        qe: 273,\n        nmps: 39,\n        nlps: 36,\n        switchFlag: 0,\n      },\n      {\n        qe: 133,\n        nmps: 40,\n        nlps: 37,\n        switchFlag: 0,\n      },\n      {\n        qe: 73,\n        nmps: 41,\n        nlps: 38,\n        switchFlag: 0,\n      },\n      {\n        qe: 37,\n        nmps: 42,\n        nlps: 39,\n        switchFlag: 0,\n      },\n      {\n        qe: 21,\n        nmps: 43,\n        nlps: 40,\n        switchFlag: 0,\n      },\n      {\n        qe: 9,\n        nmps: 44,\n        nlps: 41,\n        switchFlag: 0,\n      },\n      {\n        qe: 5,\n        nmps: 45,\n        nlps: 42,\n        switchFlag: 0,\n      },\n      {\n        qe: 1,\n        nmps: 45,\n        nlps: 43,\n        switchFlag: 0,\n      },\n      {\n        qe: 22017,\n        nmps: 46,\n        nlps: 46,\n        switchFlag: 0,\n      },\n    ];\n    function ArithmeticDecoder(data, start, end) {\n      this.data = data;\n      this.bp = start;\n      this.dataEnd = end;\n      this.chigh = data[start];\n      this.clow = 0;\n      this.byteIn();\n      this.chigh = ((this.chigh << 7) & 65535) | ((this.clow >> 9) & 127);\n      this.clow = (this.clow << 7) & 65535;\n      this.ct -= 7;\n      this.a = 32768;\n    }\n    ArithmeticDecoder.prototype = {\n      byteIn: function ArithmeticDecoder_byteIn() {\n        var data = this.data;\n        var bp = this.bp;\n        if (data[bp] === 255) {\n          var b1 = data[bp + 1];\n          if (b1 > 143) {\n            this.clow += 65280;\n            this.ct = 8;\n          } else {\n            bp++;\n            this.clow += data[bp] << 9;\n            this.ct = 7;\n            this.bp = bp;\n          }\n        } else {\n          bp++;\n          this.clow += bp < this.dataEnd ? data[bp] << 8 : 65280;\n          this.ct = 8;\n          this.bp = bp;\n        }\n        if (this.clow > 65535) {\n          this.chigh += this.clow >> 16;\n          this.clow &= 65535;\n        }\n      },\n      readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n        var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n        var qeTableIcx = QeTable[cx_index];\n        var qeIcx = qeTableIcx.qe;\n        var d;\n        var a = this.a - qeIcx;\n        if (this.chigh < qeIcx) {\n          if (a < qeIcx) {\n            a = qeIcx;\n            d = cx_mps;\n            cx_index = qeTableIcx.nmps;\n          } else {\n            a = qeIcx;\n            d = 1 ^ cx_mps;\n            if (qeTableIcx.switchFlag === 1) {\n              cx_mps = d;\n            }\n            cx_index = qeTableIcx.nlps;\n          }\n        } else {\n          this.chigh -= qeIcx;\n          if ((a & 32768) !== 0) {\n            this.a = a;\n            return cx_mps;\n          }\n          if (a < qeIcx) {\n            d = 1 ^ cx_mps;\n            if (qeTableIcx.switchFlag === 1) {\n              cx_mps = d;\n            }\n            cx_index = qeTableIcx.nlps;\n          } else {\n            d = cx_mps;\n            cx_index = qeTableIcx.nmps;\n          }\n        }\n        do {\n          if (this.ct === 0) {\n            this.byteIn();\n          }\n          a <<= 1;\n          this.chigh = ((this.chigh << 1) & 65535) | ((this.clow >> 15) & 1);\n          this.clow = (this.clow << 1) & 65535;\n          this.ct--;\n        } while ((a & 32768) === 0);\n        this.a = a;\n        contexts[pos] = (cx_index << 1) | cx_mps;\n        return d;\n      },\n    };\n    return ArithmeticDecoder;\n  })();\n  (\"use strict\");\n  var JpxImage = (function JpxImageClosure() {\n    var SubbandsGainLog2 = {\n      LL: 0,\n      LH: 1,\n      HL: 1,\n      HH: 2,\n    };\n    function JpxImage() {\n      this.failOnCorruptedImage = false;\n    }\n    JpxImage.prototype = {\n      parse: function JpxImage_parse(data) {\n        var head = readUint16(data, 0);\n        if (head === 65359) {\n          this.parseCodestream(data, 0, data.length);\n          return;\n        }\n        var position = 0,\n          length = data.length;\n        while (position < length) {\n          var headerSize = 8;\n          var lbox = readUint32(data, position);\n          var tbox = readUint32(data, position + 4);\n          position += headerSize;\n          if (lbox === 1) {\n            lbox =\n              readUint32(data, position) * 4294967296 +\n              readUint32(data, position + 4);\n            position += 8;\n            headerSize += 8;\n          }\n          if (lbox === 0) {\n            lbox = length - position + headerSize;\n          }\n          if (lbox < headerSize) {\n            throw new Error(\"JPX Error: Invalid box field size\");\n          }\n          var dataLength = lbox - headerSize;\n          var jumpDataLength = true;\n          switch (tbox) {\n            case 1785737832:\n              jumpDataLength = false;\n              break;\n\n            case 1668246642:\n              var method = data[position];\n              var precedence = data[position + 1];\n              var approximation = data[position + 2];\n              if (method === 1) {\n                var colorspace = readUint32(data, position + 3);\n                switch (colorspace) {\n                  case 16:\n                  case 17:\n                  case 18:\n                    break;\n\n                  default:\n                    warn(\"Unknown colorspace \" + colorspace);\n                    break;\n                }\n              } else if (method === 2) {\n                info(\"ICC profile not supported\");\n              }\n              break;\n\n            case 1785737827:\n              this.parseCodestream(data, position, position + dataLength);\n              break;\n\n            case 1783636e3:\n              if (218793738 !== readUint32(data, position)) {\n                warn(\"Invalid JP2 signature\");\n              }\n              break;\n\n            case 1783634458:\n            case 1718909296:\n            case 1920099697:\n            case 1919251232:\n            case 1768449138:\n              break;\n\n            default:\n              var headerType = String.fromCharCode(\n                (tbox >> 24) & 255,\n                (tbox >> 16) & 255,\n                (tbox >> 8) & 255,\n                tbox & 255,\n              );\n              warn(\"Unsupported header type \" + tbox + \" (\" + headerType + \")\");\n              break;\n          }\n          if (jumpDataLength) {\n            position += dataLength;\n          }\n        }\n      },\n      parseImageProperties: function JpxImage_parseImageProperties(stream) {\n        var newByte = stream.getByte();\n        while (newByte >= 0) {\n          var oldByte = newByte;\n          newByte = stream.getByte();\n          var code = (oldByte << 8) | newByte;\n          if (code === 65361) {\n            stream.skip(4);\n            var Xsiz = stream.getInt32() >>> 0;\n            var Ysiz = stream.getInt32() >>> 0;\n            var XOsiz = stream.getInt32() >>> 0;\n            var YOsiz = stream.getInt32() >>> 0;\n            stream.skip(16);\n            var Csiz = stream.getUint16();\n            this.width = Xsiz - XOsiz;\n            this.height = Ysiz - YOsiz;\n            this.componentsCount = Csiz;\n            this.bitsPerComponent = 8;\n            return;\n          }\n        }\n        throw new Error(\"JPX Error: No size marker found in JPX stream\");\n      },\n      parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n        var context = {};\n        try {\n          var doNotRecover = false;\n          var position = start;\n          while (position + 1 < end) {\n            var code = readUint16(data, position);\n            position += 2;\n            var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n            switch (code) {\n              case 65359:\n                context.mainHeader = true;\n                break;\n\n              case 65497:\n                break;\n\n              case 65361:\n                length = readUint16(data, position);\n                var siz = {};\n                siz.Xsiz = readUint32(data, position + 4);\n                siz.Ysiz = readUint32(data, position + 8);\n                siz.XOsiz = readUint32(data, position + 12);\n                siz.YOsiz = readUint32(data, position + 16);\n                siz.XTsiz = readUint32(data, position + 20);\n                siz.YTsiz = readUint32(data, position + 24);\n                siz.XTOsiz = readUint32(data, position + 28);\n                siz.YTOsiz = readUint32(data, position + 32);\n                var componentsCount = readUint16(data, position + 36);\n                siz.Csiz = componentsCount;\n                var components = [];\n                j = position + 38;\n                for (var i = 0; i < componentsCount; i++) {\n                  var component = {\n                    precision: (data[j] & 127) + 1,\n                    isSigned: !!(data[j] & 128),\n                    XRsiz: data[j + 1],\n                    YRsiz: data[j + 1],\n                  };\n                  calculateComponentDimensions(component, siz);\n                  components.push(component);\n                }\n                context.SIZ = siz;\n                context.components = components;\n                calculateTileGrids(context, components);\n                context.QCC = [];\n                context.COC = [];\n                break;\n\n              case 65372:\n                length = readUint16(data, position);\n                var qcd = {};\n                j = position + 2;\n                sqcd = data[j++];\n                switch (sqcd & 31) {\n                  case 0:\n                    spqcdSize = 8;\n                    scalarExpounded = true;\n                    break;\n\n                  case 1:\n                    spqcdSize = 16;\n                    scalarExpounded = false;\n                    break;\n\n                  case 2:\n                    spqcdSize = 16;\n                    scalarExpounded = true;\n                    break;\n\n                  default:\n                    throw new Error(\"JPX Error: Invalid SQcd value \" + sqcd);\n                }\n                qcd.noQuantization = spqcdSize === 8;\n                qcd.scalarExpounded = scalarExpounded;\n                qcd.guardBits = sqcd >> 5;\n                spqcds = [];\n                while (j < length + position) {\n                  var spqcd = {};\n                  if (spqcdSize === 8) {\n                    spqcd.epsilon = data[j++] >> 3;\n                    spqcd.mu = 0;\n                  } else {\n                    spqcd.epsilon = data[j] >> 3;\n                    spqcd.mu = ((data[j] & 7) << 8) | data[j + 1];\n                    j += 2;\n                  }\n                  spqcds.push(spqcd);\n                }\n                qcd.SPqcds = spqcds;\n                if (context.mainHeader) {\n                  context.QCD = qcd;\n                } else {\n                  context.currentTile.QCD = qcd;\n                  context.currentTile.QCC = [];\n                }\n                break;\n\n              case 65373:\n                length = readUint16(data, position);\n                var qcc = {};\n                j = position + 2;\n                var cqcc;\n                if (context.SIZ.Csiz < 257) {\n                  cqcc = data[j++];\n                } else {\n                  cqcc = readUint16(data, j);\n                  j += 2;\n                }\n                sqcd = data[j++];\n                switch (sqcd & 31) {\n                  case 0:\n                    spqcdSize = 8;\n                    scalarExpounded = true;\n                    break;\n\n                  case 1:\n                    spqcdSize = 16;\n                    scalarExpounded = false;\n                    break;\n\n                  case 2:\n                    spqcdSize = 16;\n                    scalarExpounded = true;\n                    break;\n\n                  default:\n                    throw new Error(\"JPX Error: Invalid SQcd value \" + sqcd);\n                }\n                qcc.noQuantization = spqcdSize === 8;\n                qcc.scalarExpounded = scalarExpounded;\n                qcc.guardBits = sqcd >> 5;\n                spqcds = [];\n                while (j < length + position) {\n                  spqcd = {};\n                  if (spqcdSize === 8) {\n                    spqcd.epsilon = data[j++] >> 3;\n                    spqcd.mu = 0;\n                  } else {\n                    spqcd.epsilon = data[j] >> 3;\n                    spqcd.mu = ((data[j] & 7) << 8) | data[j + 1];\n                    j += 2;\n                  }\n                  spqcds.push(spqcd);\n                }\n                qcc.SPqcds = spqcds;\n                if (context.mainHeader) {\n                  context.QCC[cqcc] = qcc;\n                } else {\n                  context.currentTile.QCC[cqcc] = qcc;\n                }\n                break;\n\n              case 65362:\n                length = readUint16(data, position);\n                var cod = {};\n                j = position + 2;\n                var scod = data[j++];\n                cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n                cod.sopMarkerUsed = !!(scod & 2);\n                cod.ephMarkerUsed = !!(scod & 4);\n                cod.progressionOrder = data[j++];\n                cod.layersCount = readUint16(data, j);\n                j += 2;\n                cod.multipleComponentTransform = data[j++];\n                cod.decompositionLevelsCount = data[j++];\n                cod.xcb = (data[j++] & 15) + 2;\n                cod.ycb = (data[j++] & 15) + 2;\n                var blockStyle = data[j++];\n                cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n                cod.resetContextProbabilities = !!(blockStyle & 2);\n                cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n                cod.verticalyStripe = !!(blockStyle & 8);\n                cod.predictableTermination = !!(blockStyle & 16);\n                cod.segmentationSymbolUsed = !!(blockStyle & 32);\n                cod.reversibleTransformation = data[j++];\n                if (cod.entropyCoderWithCustomPrecincts) {\n                  var precinctsSizes = [];\n                  while (j < length + position) {\n                    var precinctsSize = data[j++];\n                    precinctsSizes.push({\n                      PPx: precinctsSize & 15,\n                      PPy: precinctsSize >> 4,\n                    });\n                  }\n                  cod.precinctsSizes = precinctsSizes;\n                }\n                var unsupported = [];\n                if (cod.selectiveArithmeticCodingBypass) {\n                  unsupported.push(\"selectiveArithmeticCodingBypass\");\n                }\n                if (cod.resetContextProbabilities) {\n                  unsupported.push(\"resetContextProbabilities\");\n                }\n                if (cod.terminationOnEachCodingPass) {\n                  unsupported.push(\"terminationOnEachCodingPass\");\n                }\n                if (cod.verticalyStripe) {\n                  unsupported.push(\"verticalyStripe\");\n                }\n                if (cod.predictableTermination) {\n                  unsupported.push(\"predictableTermination\");\n                }\n                if (unsupported.length > 0) {\n                  doNotRecover = true;\n                  throw new Error(\n                    \"JPX Error: Unsupported COD options (\" +\n                      unsupported.join(\", \") +\n                      \")\",\n                  );\n                }\n                if (context.mainHeader) {\n                  context.COD = cod;\n                } else {\n                  context.currentTile.COD = cod;\n                  context.currentTile.COC = [];\n                }\n                break;\n\n              case 65424:\n                length = readUint16(data, position);\n                tile = {};\n                tile.index = readUint16(data, position + 2);\n                tile.length = readUint32(data, position + 4);\n                tile.dataEnd = tile.length + position - 2;\n                tile.partIndex = data[position + 8];\n                tile.partsCount = data[position + 9];\n                context.mainHeader = false;\n                if (tile.partIndex === 0) {\n                  tile.COD = context.COD;\n                  tile.COC = context.COC.slice(0);\n                  tile.QCD = context.QCD;\n                  tile.QCC = context.QCC.slice(0);\n                }\n                context.currentTile = tile;\n                break;\n\n              case 65427:\n                tile = context.currentTile;\n                if (tile.partIndex === 0) {\n                  initializeTile(context, tile.index);\n                  buildPackets(context);\n                }\n                length = tile.dataEnd - position;\n                parseTilePackets(context, data, position, length);\n                break;\n\n              case 65365:\n              case 65367:\n              case 65368:\n              case 65380:\n                length = readUint16(data, position);\n                break;\n\n              case 65363:\n                throw new Error(\n                  \"JPX Error: Codestream code 0xFF53 (COC) is \" +\n                    \"not implemented\",\n                );\n\n              default:\n                throw new Error(\n                  \"JPX Error: Unknown codestream code: \" + code.toString(16),\n                );\n            }\n            position += length;\n          }\n        } catch (e) {\n          if (doNotRecover || this.failOnCorruptedImage) {\n            throw e;\n          } else {\n            warn(\"Trying to recover from \" + e.message);\n          }\n        }\n        this.tiles = transformComponents(context);\n        this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n        this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n        this.componentsCount = context.SIZ.Csiz;\n      },\n    };\n    function calculateComponentDimensions(component, siz) {\n      component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n      component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n      component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n      component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n      component.width = component.x1 - component.x0;\n      component.height = component.y1 - component.y0;\n    }\n    function calculateTileGrids(context, components) {\n      var siz = context.SIZ;\n      var tile,\n        tiles = [];\n      var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n      var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n      for (var q = 0; q < numYtiles; q++) {\n        for (var p = 0; p < numXtiles; p++) {\n          tile = {};\n          tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n          tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n          tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n          tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n          tile.width = tile.tx1 - tile.tx0;\n          tile.height = tile.ty1 - tile.ty0;\n          tile.components = [];\n          tiles.push(tile);\n        }\n      }\n      context.tiles = tiles;\n      var componentsCount = siz.Csiz;\n      for (var i = 0, ii = componentsCount; i < ii; i++) {\n        var component = components[i];\n        for (var j = 0, jj = tiles.length; j < jj; j++) {\n          var tileComponent = {};\n          tile = tiles[j];\n          tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n          tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n          tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n          tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n          tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n          tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n          tile.components[i] = tileComponent;\n        }\n      }\n    }\n    function getBlocksDimensions(context, component, r) {\n      var codOrCoc = component.codingStyleParameters;\n      var result = {};\n      if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n        result.PPx = 15;\n        result.PPy = 15;\n      } else {\n        result.PPx = codOrCoc.precinctsSizes[r].PPx;\n        result.PPy = codOrCoc.precinctsSizes[r].PPy;\n      }\n      result.xcb_ =\n        r > 0\n          ? Math.min(codOrCoc.xcb, result.PPx - 1)\n          : Math.min(codOrCoc.xcb, result.PPx);\n      result.ycb_ =\n        r > 0\n          ? Math.min(codOrCoc.ycb, result.PPy - 1)\n          : Math.min(codOrCoc.ycb, result.PPy);\n      return result;\n    }\n    function buildPrecincts(context, resolution, dimensions) {\n      var precinctWidth = 1 << dimensions.PPx;\n      var precinctHeight = 1 << dimensions.PPy;\n      var isZeroRes = resolution.resLevel === 0;\n      var precinctWidthInSubband = 1 << (dimensions.PPx + (isZeroRes ? 0 : -1));\n      var precinctHeightInSubband =\n        1 << (dimensions.PPy + (isZeroRes ? 0 : -1));\n      var numprecinctswide =\n        resolution.trx1 > resolution.trx0\n          ? Math.ceil(resolution.trx1 / precinctWidth) -\n            Math.floor(resolution.trx0 / precinctWidth)\n          : 0;\n      var numprecinctshigh =\n        resolution.try1 > resolution.try0\n          ? Math.ceil(resolution.try1 / precinctHeight) -\n            Math.floor(resolution.try0 / precinctHeight)\n          : 0;\n      var numprecincts = numprecinctswide * numprecinctshigh;\n      resolution.precinctParameters = {\n        precinctWidth: precinctWidth,\n        precinctHeight: precinctHeight,\n        numprecinctswide: numprecinctswide,\n        numprecinctshigh: numprecinctshigh,\n        numprecincts: numprecincts,\n        precinctWidthInSubband: precinctWidthInSubband,\n        precinctHeightInSubband: precinctHeightInSubband,\n      };\n    }\n    function buildCodeblocks(context, subband, dimensions) {\n      var xcb_ = dimensions.xcb_;\n      var ycb_ = dimensions.ycb_;\n      var codeblockWidth = 1 << xcb_;\n      var codeblockHeight = 1 << ycb_;\n      var cbx0 = subband.tbx0 >> xcb_;\n      var cby0 = subband.tby0 >> ycb_;\n      var cbx1 = (subband.tbx1 + codeblockWidth - 1) >> xcb_;\n      var cby1 = (subband.tby1 + codeblockHeight - 1) >> ycb_;\n      var precinctParameters = subband.resolution.precinctParameters;\n      var codeblocks = [];\n      var precincts = [];\n      var i, j, codeblock, precinctNumber;\n      for (j = cby0; j < cby1; j++) {\n        for (i = cbx0; i < cbx1; i++) {\n          codeblock = {\n            cbx: i,\n            cby: j,\n            tbx0: codeblockWidth * i,\n            tby0: codeblockHeight * j,\n            tbx1: codeblockWidth * (i + 1),\n            tby1: codeblockHeight * (j + 1),\n          };\n          codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n          codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n          codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n          codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n          var pi = Math.floor(\n            (codeblock.tbx0_ - subband.tbx0) /\n              precinctParameters.precinctWidthInSubband,\n          );\n          var pj = Math.floor(\n            (codeblock.tby0_ - subband.tby0) /\n              precinctParameters.precinctHeightInSubband,\n          );\n          precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n          codeblock.precinctNumber = precinctNumber;\n          codeblock.subbandType = subband.type;\n          codeblock.Lblock = 3;\n          if (\n            codeblock.tbx1_ <= codeblock.tbx0_ ||\n            codeblock.tby1_ <= codeblock.tby0_\n          ) {\n            continue;\n          }\n          codeblocks.push(codeblock);\n          var precinct = precincts[precinctNumber];\n          if (precinct !== undefined) {\n            if (i < precinct.cbxMin) {\n              precinct.cbxMin = i;\n            } else if (i > precinct.cbxMax) {\n              precinct.cbxMax = i;\n            }\n            if (j < precinct.cbyMin) {\n              precinct.cbxMin = j;\n            } else if (j > precinct.cbyMax) {\n              precinct.cbyMax = j;\n            }\n          } else {\n            precincts[precinctNumber] = precinct = {\n              cbxMin: i,\n              cbyMin: j,\n              cbxMax: i,\n              cbyMax: j,\n            };\n          }\n          codeblock.precinct = precinct;\n        }\n      }\n      subband.codeblockParameters = {\n        codeblockWidth: xcb_,\n        codeblockHeight: ycb_,\n        numcodeblockwide: cbx1 - cbx0 + 1,\n        numcodeblockhigh: cby1 - cby0 + 1,\n      };\n      subband.codeblocks = codeblocks;\n      subband.precincts = precincts;\n    }\n    function createPacket(resolution, precinctNumber, layerNumber) {\n      var precinctCodeblocks = [];\n      var subbands = resolution.subbands;\n      for (var i = 0, ii = subbands.length; i < ii; i++) {\n        var subband = subbands[i];\n        var codeblocks = subband.codeblocks;\n        for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n          var codeblock = codeblocks[j];\n          if (codeblock.precinctNumber !== precinctNumber) {\n            continue;\n          }\n          precinctCodeblocks.push(codeblock);\n        }\n      }\n      return {\n        layerNumber: layerNumber,\n        codeblocks: precinctCodeblocks,\n      };\n    }\n    function LayerResolutionComponentPositionIterator(context) {\n      var siz = context.SIZ;\n      var tileIndex = context.currentTile.index;\n      var tile = context.tiles[tileIndex];\n      var layersCount = tile.codingStyleDefaultParameters.layersCount;\n      var componentsCount = siz.Csiz;\n      var maxDecompositionLevelsCount = 0;\n      for (var q = 0; q < componentsCount; q++) {\n        maxDecompositionLevelsCount = Math.max(\n          maxDecompositionLevelsCount,\n          tile.components[q].codingStyleParameters.decompositionLevelsCount,\n        );\n      }\n      var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n      this.nextPacket = function JpxImage_nextPacket() {\n        for (; l < layersCount; l++) {\n          for (; r <= maxDecompositionLevelsCount; r++) {\n            for (; i < componentsCount; i++) {\n              var component = tile.components[i];\n              if (\n                r > component.codingStyleParameters.decompositionLevelsCount\n              ) {\n                continue;\n              }\n              var resolution = component.resolutions[r];\n              var numprecincts = resolution.precinctParameters.numprecincts;\n              for (; k < numprecincts; ) {\n                var packet = createPacket(resolution, k, l);\n                k++;\n                return packet;\n              }\n              k = 0;\n            }\n            i = 0;\n          }\n          r = 0;\n        }\n        throw new Error(\"JPX Error: Out of packets\");\n      };\n    }\n    function ResolutionLayerComponentPositionIterator(context) {\n      var siz = context.SIZ;\n      var tileIndex = context.currentTile.index;\n      var tile = context.tiles[tileIndex];\n      var layersCount = tile.codingStyleDefaultParameters.layersCount;\n      var componentsCount = siz.Csiz;\n      var maxDecompositionLevelsCount = 0;\n      for (var q = 0; q < componentsCount; q++) {\n        maxDecompositionLevelsCount = Math.max(\n          maxDecompositionLevelsCount,\n          tile.components[q].codingStyleParameters.decompositionLevelsCount,\n        );\n      }\n      var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n      this.nextPacket = function JpxImage_nextPacket() {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; l < layersCount; l++) {\n            for (; i < componentsCount; i++) {\n              var component = tile.components[i];\n              if (\n                r > component.codingStyleParameters.decompositionLevelsCount\n              ) {\n                continue;\n              }\n              var resolution = component.resolutions[r];\n              var numprecincts = resolution.precinctParameters.numprecincts;\n              for (; k < numprecincts; ) {\n                var packet = createPacket(resolution, k, l);\n                k++;\n                return packet;\n              }\n              k = 0;\n            }\n            i = 0;\n          }\n          l = 0;\n        }\n        throw new Error(\"JPX Error: Out of packets\");\n      };\n    }\n    function ResolutionPositionComponentLayerIterator(context) {\n      var siz = context.SIZ;\n      var tileIndex = context.currentTile.index;\n      var tile = context.tiles[tileIndex];\n      var layersCount = tile.codingStyleDefaultParameters.layersCount;\n      var componentsCount = siz.Csiz;\n      var l, r, c, p;\n      var maxDecompositionLevelsCount = 0;\n      for (c = 0; c < componentsCount; c++) {\n        var component = tile.components[c];\n        maxDecompositionLevelsCount = Math.max(\n          maxDecompositionLevelsCount,\n          component.codingStyleParameters.decompositionLevelsCount,\n        );\n      }\n      var maxNumPrecinctsInLevel = new Int32Array(\n        maxDecompositionLevelsCount + 1,\n      );\n      for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n        var maxNumPrecincts = 0;\n        for (c = 0; c < componentsCount; ++c) {\n          var resolutions = tile.components[c].resolutions;\n          if (r < resolutions.length) {\n            maxNumPrecincts = Math.max(\n              maxNumPrecincts,\n              resolutions[r].precinctParameters.numprecincts,\n            );\n          }\n        }\n        maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n      }\n      l = 0;\n      r = 0;\n      c = 0;\n      p = 0;\n      this.nextPacket = function JpxImage_nextPacket() {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; p < maxNumPrecinctsInLevel[r]; p++) {\n            for (; c < componentsCount; c++) {\n              var component = tile.components[c];\n              if (\n                r > component.codingStyleParameters.decompositionLevelsCount\n              ) {\n                continue;\n              }\n              var resolution = component.resolutions[r];\n              var numprecincts = resolution.precinctParameters.numprecincts;\n              if (p >= numprecincts) {\n                continue;\n              }\n              for (; l < layersCount; ) {\n                var packet = createPacket(resolution, p, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            c = 0;\n          }\n          p = 0;\n        }\n        throw new Error(\"JPX Error: Out of packets\");\n      };\n    }\n    function PositionComponentResolutionLayerIterator(context) {\n      var siz = context.SIZ;\n      var tileIndex = context.currentTile.index;\n      var tile = context.tiles[tileIndex];\n      var layersCount = tile.codingStyleDefaultParameters.layersCount;\n      var componentsCount = siz.Csiz;\n      var precinctsSizes = getPrecinctSizesInImageScale(tile);\n      var precinctsIterationSizes = precinctsSizes;\n      var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n      this.nextPacket = function JpxImage_nextPacket() {\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; c < componentsCount; c++) {\n              var component = tile.components[c];\n              var decompositionLevelsCount =\n                component.codingStyleParameters.decompositionLevelsCount;\n              for (; r <= decompositionLevelsCount; r++) {\n                var resolution = component.resolutions[r];\n                var sizeInImageScale =\n                  precinctsSizes.components[c].resolutions[r];\n                var k = getPrecinctIndexIfExist(\n                  px,\n                  py,\n                  sizeInImageScale,\n                  precinctsIterationSizes,\n                  resolution,\n                );\n                if (k === null) {\n                  continue;\n                }\n                for (; l < layersCount; ) {\n                  var packet = createPacket(resolution, k, l);\n                  l++;\n                  return packet;\n                }\n                l = 0;\n              }\n              r = 0;\n            }\n            c = 0;\n          }\n          px = 0;\n        }\n        throw new Error(\"JPX Error: Out of packets\");\n      };\n    }\n    function ComponentPositionResolutionLayerIterator(context) {\n      var siz = context.SIZ;\n      var tileIndex = context.currentTile.index;\n      var tile = context.tiles[tileIndex];\n      var layersCount = tile.codingStyleDefaultParameters.layersCount;\n      var componentsCount = siz.Csiz;\n      var precinctsSizes = getPrecinctSizesInImageScale(tile);\n      var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n      this.nextPacket = function JpxImage_nextPacket() {\n        for (; c < componentsCount; ++c) {\n          var component = tile.components[c];\n          var precinctsIterationSizes = precinctsSizes.components[c];\n          var decompositionLevelsCount =\n            component.codingStyleParameters.decompositionLevelsCount;\n          for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n            for (; px < precinctsIterationSizes.maxNumWide; px++) {\n              for (; r <= decompositionLevelsCount; r++) {\n                var resolution = component.resolutions[r];\n                var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n                var k = getPrecinctIndexIfExist(\n                  px,\n                  py,\n                  sizeInImageScale,\n                  precinctsIterationSizes,\n                  resolution,\n                );\n                if (k === null) {\n                  continue;\n                }\n                for (; l < layersCount; ) {\n                  var packet = createPacket(resolution, k, l);\n                  l++;\n                  return packet;\n                }\n                l = 0;\n              }\n              r = 0;\n            }\n            px = 0;\n          }\n          py = 0;\n        }\n        throw new Error(\"JPX Error: Out of packets\");\n      };\n    }\n    function getPrecinctIndexIfExist(\n      pxIndex,\n      pyIndex,\n      sizeInImageScale,\n      precinctIterationSizes,\n      resolution,\n    ) {\n      var posX = pxIndex * precinctIterationSizes.minWidth;\n      var posY = pyIndex * precinctIterationSizes.minHeight;\n      if (\n        posX % sizeInImageScale.width !== 0 ||\n        posY % sizeInImageScale.height !== 0\n      ) {\n        return null;\n      }\n      var startPrecinctRowIndex =\n        (posY / sizeInImageScale.width) *\n        resolution.precinctParameters.numprecinctswide;\n      return posX / sizeInImageScale.height + startPrecinctRowIndex;\n    }\n    function getPrecinctSizesInImageScale(tile) {\n      var componentsCount = tile.components.length;\n      var minWidth = Number.MAX_VALUE;\n      var minHeight = Number.MAX_VALUE;\n      var maxNumWide = 0;\n      var maxNumHigh = 0;\n      var sizePerComponent = new Array(componentsCount);\n      for (var c = 0; c < componentsCount; c++) {\n        var component = tile.components[c];\n        var decompositionLevelsCount =\n          component.codingStyleParameters.decompositionLevelsCount;\n        var sizePerResolution = new Array(decompositionLevelsCount + 1);\n        var minWidthCurrentComponent = Number.MAX_VALUE;\n        var minHeightCurrentComponent = Number.MAX_VALUE;\n        var maxNumWideCurrentComponent = 0;\n        var maxNumHighCurrentComponent = 0;\n        var scale = 1;\n        for (var r = decompositionLevelsCount; r >= 0; --r) {\n          var resolution = component.resolutions[r];\n          var widthCurrentResolution =\n            scale * resolution.precinctParameters.precinctWidth;\n          var heightCurrentResolution =\n            scale * resolution.precinctParameters.precinctHeight;\n          minWidthCurrentComponent = Math.min(\n            minWidthCurrentComponent,\n            widthCurrentResolution,\n          );\n          minHeightCurrentComponent = Math.min(\n            minHeightCurrentComponent,\n            heightCurrentResolution,\n          );\n          maxNumWideCurrentComponent = Math.max(\n            maxNumWideCurrentComponent,\n            resolution.precinctParameters.numprecinctswide,\n          );\n          maxNumHighCurrentComponent = Math.max(\n            maxNumHighCurrentComponent,\n            resolution.precinctParameters.numprecinctshigh,\n          );\n          sizePerResolution[r] = {\n            width: widthCurrentResolution,\n            height: heightCurrentResolution,\n          };\n          scale <<= 1;\n        }\n        minWidth = Math.min(minWidth, minWidthCurrentComponent);\n        minHeight = Math.min(minHeight, minHeightCurrentComponent);\n        maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n        maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n        sizePerComponent[c] = {\n          resolutions: sizePerResolution,\n          minWidth: minWidthCurrentComponent,\n          minHeight: minHeightCurrentComponent,\n          maxNumWide: maxNumWideCurrentComponent,\n          maxNumHigh: maxNumHighCurrentComponent,\n        };\n      }\n      return {\n        components: sizePerComponent,\n        minWidth: minWidth,\n        minHeight: minHeight,\n        maxNumWide: maxNumWide,\n        maxNumHigh: maxNumHigh,\n      };\n    }\n    function buildPackets(context) {\n      var siz = context.SIZ;\n      var tileIndex = context.currentTile.index;\n      var tile = context.tiles[tileIndex];\n      var componentsCount = siz.Csiz;\n      for (var c = 0; c < componentsCount; c++) {\n        var component = tile.components[c];\n        var decompositionLevelsCount =\n          component.codingStyleParameters.decompositionLevelsCount;\n        var resolutions = [];\n        var subbands = [];\n        for (var r = 0; r <= decompositionLevelsCount; r++) {\n          var blocksDimensions = getBlocksDimensions(context, component, r);\n          var resolution = {};\n          var scale = 1 << (decompositionLevelsCount - r);\n          resolution.trx0 = Math.ceil(component.tcx0 / scale);\n          resolution.try0 = Math.ceil(component.tcy0 / scale);\n          resolution.trx1 = Math.ceil(component.tcx1 / scale);\n          resolution.try1 = Math.ceil(component.tcy1 / scale);\n          resolution.resLevel = r;\n          buildPrecincts(context, resolution, blocksDimensions);\n          resolutions.push(resolution);\n          var subband;\n          if (r === 0) {\n            subband = {};\n            subband.type = \"LL\";\n            subband.tbx0 = Math.ceil(component.tcx0 / scale);\n            subband.tby0 = Math.ceil(component.tcy0 / scale);\n            subband.tbx1 = Math.ceil(component.tcx1 / scale);\n            subband.tby1 = Math.ceil(component.tcy1 / scale);\n            subband.resolution = resolution;\n            buildCodeblocks(context, subband, blocksDimensions);\n            subbands.push(subband);\n            resolution.subbands = [subband];\n          } else {\n            var bscale = 1 << (decompositionLevelsCount - r + 1);\n            var resolutionSubbands = [];\n            subband = {};\n            subband.type = \"HL\";\n            subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n            subband.tby0 = Math.ceil(component.tcy0 / bscale);\n            subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n            subband.tby1 = Math.ceil(component.tcy1 / bscale);\n            subband.resolution = resolution;\n            buildCodeblocks(context, subband, blocksDimensions);\n            subbands.push(subband);\n            resolutionSubbands.push(subband);\n            subband = {};\n            subband.type = \"LH\";\n            subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n            subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n            subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n            subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n            subband.resolution = resolution;\n            buildCodeblocks(context, subband, blocksDimensions);\n            subbands.push(subband);\n            resolutionSubbands.push(subband);\n            subband = {};\n            subband.type = \"HH\";\n            subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n            subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n            subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n            subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n            subband.resolution = resolution;\n            buildCodeblocks(context, subband, blocksDimensions);\n            subbands.push(subband);\n            resolutionSubbands.push(subband);\n            resolution.subbands = resolutionSubbands;\n          }\n        }\n        component.resolutions = resolutions;\n        component.subbands = subbands;\n      }\n      var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n      switch (progressionOrder) {\n        case 0:\n          tile.packetsIterator = new LayerResolutionComponentPositionIterator(\n            context,\n          );\n          break;\n\n        case 1:\n          tile.packetsIterator = new ResolutionLayerComponentPositionIterator(\n            context,\n          );\n          break;\n\n        case 2:\n          tile.packetsIterator = new ResolutionPositionComponentLayerIterator(\n            context,\n          );\n          break;\n\n        case 3:\n          tile.packetsIterator = new PositionComponentResolutionLayerIterator(\n            context,\n          );\n          break;\n\n        case 4:\n          tile.packetsIterator = new ComponentPositionResolutionLayerIterator(\n            context,\n          );\n          break;\n\n        default:\n          throw new Error(\n            \"JPX Error: Unsupported progression order \" + progressionOrder,\n          );\n      }\n    }\n    function parseTilePackets(context, data, offset, dataLength) {\n      var position = 0;\n      var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n      function readBits(count) {\n        while (bufferSize < count) {\n          var b = data[offset + position];\n          position++;\n          if (skipNextBit) {\n            buffer = (buffer << 7) | b;\n            bufferSize += 7;\n            skipNextBit = false;\n          } else {\n            buffer = (buffer << 8) | b;\n            bufferSize += 8;\n          }\n          if (b === 255) {\n            skipNextBit = true;\n          }\n        }\n        bufferSize -= count;\n        return (buffer >>> bufferSize) & ((1 << count) - 1);\n      }\n      function skipMarkerIfEqual(value) {\n        if (\n          data[offset + position - 1] === 255 &&\n          data[offset + position] === value\n        ) {\n          skipBytes(1);\n          return true;\n        } else if (\n          data[offset + position] === 255 &&\n          data[offset + position + 1] === value\n        ) {\n          skipBytes(2);\n          return true;\n        }\n        return false;\n      }\n      function skipBytes(count) {\n        position += count;\n      }\n      function alignToByte() {\n        bufferSize = 0;\n        if (skipNextBit) {\n          position++;\n          skipNextBit = false;\n        }\n      }\n      function readCodingpasses() {\n        if (readBits(1) === 0) {\n          return 1;\n        }\n        if (readBits(1) === 0) {\n          return 2;\n        }\n        var value = readBits(2);\n        if (value < 3) {\n          return value + 3;\n        }\n        value = readBits(5);\n        if (value < 31) {\n          return value + 6;\n        }\n        value = readBits(7);\n        return value + 37;\n      }\n      var tileIndex = context.currentTile.index;\n      var tile = context.tiles[tileIndex];\n      var sopMarkerUsed = context.COD.sopMarkerUsed;\n      var ephMarkerUsed = context.COD.ephMarkerUsed;\n      var packetsIterator = tile.packetsIterator;\n      while (position < dataLength) {\n        alignToByte();\n        if (sopMarkerUsed && skipMarkerIfEqual(145)) {\n          skipBytes(4);\n        }\n        var packet = packetsIterator.nextPacket();\n        if (!readBits(1)) {\n          continue;\n        }\n        var layerNumber = packet.layerNumber;\n        var queue = [],\n          codeblock;\n        for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n          codeblock = packet.codeblocks[i];\n          var precinct = codeblock.precinct;\n          var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n          var codeblockRow = codeblock.cby - precinct.cbyMin;\n          var codeblockIncluded = false;\n          var firstTimeInclusion = false;\n          var valueReady;\n          if (codeblock[\"included\"] !== undefined) {\n            codeblockIncluded = !!readBits(1);\n          } else {\n            precinct = codeblock.precinct;\n            var inclusionTree, zeroBitPlanesTree;\n            if (precinct[\"inclusionTree\"] !== undefined) {\n              inclusionTree = precinct.inclusionTree;\n            } else {\n              var width = precinct.cbxMax - precinct.cbxMin + 1;\n              var height = precinct.cbyMax - precinct.cbyMin + 1;\n              inclusionTree = new InclusionTree(width, height, layerNumber);\n              zeroBitPlanesTree = new TagTree(width, height);\n              precinct.inclusionTree = inclusionTree;\n              precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n            }\n            if (\n              inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)\n            ) {\n              while (true) {\n                if (readBits(1)) {\n                  valueReady = !inclusionTree.nextLevel();\n                  if (valueReady) {\n                    codeblock.included = true;\n                    codeblockIncluded = firstTimeInclusion = true;\n                    break;\n                  }\n                } else {\n                  inclusionTree.incrementValue(layerNumber);\n                  break;\n                }\n              }\n            }\n          }\n          if (!codeblockIncluded) {\n            continue;\n          }\n          if (firstTimeInclusion) {\n            zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n            zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !zeroBitPlanesTree.nextLevel();\n                if (valueReady) {\n                  break;\n                }\n              } else {\n                zeroBitPlanesTree.incrementValue();\n              }\n            }\n            codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n          }\n          var codingpasses = readCodingpasses();\n          while (readBits(1)) {\n            codeblock.Lblock++;\n          }\n          var codingpassesLog2 = log2(codingpasses);\n          var bits =\n            (codingpasses < 1 << codingpassesLog2\n              ? codingpassesLog2 - 1\n              : codingpassesLog2) + codeblock.Lblock;\n          var codedDataLength = readBits(bits);\n          queue.push({\n            codeblock: codeblock,\n            codingpasses: codingpasses,\n            dataLength: codedDataLength,\n          });\n        }\n        alignToByte();\n        if (ephMarkerUsed) {\n          skipMarkerIfEqual(146);\n        }\n        while (queue.length > 0) {\n          var packetItem = queue.shift();\n          codeblock = packetItem.codeblock;\n          if (codeblock[\"data\"] === undefined) {\n            codeblock.data = [];\n          }\n          codeblock.data.push({\n            data: data,\n            start: offset + position,\n            end: offset + position + packetItem.dataLength,\n            codingpasses: packetItem.codingpasses,\n          });\n          position += packetItem.dataLength;\n        }\n      }\n      return position;\n    }\n    function copyCoefficients(\n      coefficients,\n      levelWidth,\n      levelHeight,\n      subband,\n      delta,\n      mb,\n      reversible,\n      segmentationSymbolUsed,\n    ) {\n      var x0 = subband.tbx0;\n      var y0 = subband.tby0;\n      var width = subband.tbx1 - subband.tbx0;\n      var codeblocks = subband.codeblocks;\n      var right = subband.type.charAt(0) === \"H\" ? 1 : 0;\n      var bottom = subband.type.charAt(1) === \"H\" ? levelWidth : 0;\n      for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n        var codeblock = codeblocks[i];\n        var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n        var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n        if (blockWidth === 0 || blockHeight === 0) {\n          continue;\n        }\n        if (codeblock[\"data\"] === undefined) {\n          continue;\n        }\n        var bitModel, currentCodingpassType;\n        bitModel = new BitModel(\n          blockWidth,\n          blockHeight,\n          codeblock.subbandType,\n          codeblock.zeroBitPlanes,\n          mb,\n        );\n        currentCodingpassType = 2;\n        var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n        var j, jj, dataItem;\n        for (j = 0, jj = data.length; j < jj; j++) {\n          dataItem = data[j];\n          totalLength += dataItem.end - dataItem.start;\n          codingpasses += dataItem.codingpasses;\n        }\n        var encodedData = new Uint8Array(totalLength);\n        var position = 0;\n        for (j = 0, jj = data.length; j < jj; j++) {\n          dataItem = data[j];\n          var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n          encodedData.set(chunk, position);\n          position += chunk.length;\n        }\n        var decoder = new ArithmeticDecoder(encodedData, 0, totalLength);\n        bitModel.setDecoder(decoder);\n        for (j = 0; j < codingpasses; j++) {\n          switch (currentCodingpassType) {\n            case 0:\n              bitModel.runSignificancePropogationPass();\n              break;\n\n            case 1:\n              bitModel.runMagnitudeRefinementPass();\n              break;\n\n            case 2:\n              bitModel.runCleanupPass();\n              if (segmentationSymbolUsed) {\n                bitModel.checkSegmentationSymbol();\n              }\n              break;\n          }\n          currentCodingpassType = (currentCodingpassType + 1) % 3;\n        }\n        var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n        var sign = bitModel.coefficentsSign;\n        var magnitude = bitModel.coefficentsMagnitude;\n        var bitsDecoded = bitModel.bitsDecoded;\n        var magnitudeCorrection = reversible ? 0 : 0.5;\n        var k, n, nb;\n        position = 0;\n        var interleave = subband.type !== \"LL\";\n        for (j = 0; j < blockHeight; j++) {\n          var row = (offset / width) | 0;\n          var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n          for (k = 0; k < blockWidth; k++) {\n            n = magnitude[position];\n            if (n !== 0) {\n              n = (n + magnitudeCorrection) * delta;\n              if (sign[position] !== 0) {\n                n = -n;\n              }\n              nb = bitsDecoded[position];\n              var pos = interleave ? levelOffset + (offset << 1) : offset;\n              if (reversible && nb >= mb) {\n                coefficients[pos] = n;\n              } else {\n                coefficients[pos] = n * (1 << (mb - nb));\n              }\n            }\n            offset++;\n            position++;\n          }\n          offset += width - blockWidth;\n        }\n      }\n    }\n    function transformTile(context, tile, c) {\n      var component = tile.components[c];\n      var codingStyleParameters = component.codingStyleParameters;\n      var quantizationParameters = component.quantizationParameters;\n      var decompositionLevelsCount =\n        codingStyleParameters.decompositionLevelsCount;\n      var spqcds = quantizationParameters.SPqcds;\n      var scalarExpounded = quantizationParameters.scalarExpounded;\n      var guardBits = quantizationParameters.guardBits;\n      var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n      var precision = context.components[c].precision;\n      var reversible = codingStyleParameters.reversibleTransformation;\n      var transform = reversible\n        ? new ReversibleTransform()\n        : new IrreversibleTransform();\n      var subbandCoefficients = [];\n      var b = 0;\n      for (var i = 0; i <= decompositionLevelsCount; i++) {\n        var resolution = component.resolutions[i];\n        var width = resolution.trx1 - resolution.trx0;\n        var height = resolution.try1 - resolution.try0;\n        var coefficients = new Float32Array(width * height);\n        for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n          var mu, epsilon;\n          if (!scalarExpounded) {\n            mu = spqcds[0].mu;\n            epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n          } else {\n            mu = spqcds[b].mu;\n            epsilon = spqcds[b].epsilon;\n            b++;\n          }\n          var subband = resolution.subbands[j];\n          var gainLog2 = SubbandsGainLog2[subband.type];\n          var delta = reversible\n            ? 1\n            : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n          var mb = guardBits + epsilon - 1;\n          copyCoefficients(\n            coefficients,\n            width,\n            height,\n            subband,\n            delta,\n            mb,\n            reversible,\n            segmentationSymbolUsed,\n          );\n        }\n        subbandCoefficients.push({\n          width: width,\n          height: height,\n          items: coefficients,\n        });\n      }\n      var result = transform.calculate(\n        subbandCoefficients,\n        component.tcx0,\n        component.tcy0,\n      );\n      return {\n        left: component.tcx0,\n        top: component.tcy0,\n        width: result.width,\n        height: result.height,\n        items: result.items,\n      };\n    }\n    function transformComponents(context) {\n      var siz = context.SIZ;\n      var components = context.components;\n      var componentsCount = siz.Csiz;\n      var resultImages = [];\n      for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n        var tile = context.tiles[i];\n        var transformedTiles = [];\n        var c;\n        for (c = 0; c < componentsCount; c++) {\n          transformedTiles[c] = transformTile(context, tile, c);\n        }\n        var tile0 = transformedTiles[0];\n        var out = new Uint8Array(tile0.items.length * componentsCount);\n        var result = {\n          left: tile0.left,\n          top: tile0.top,\n          width: tile0.width,\n          height: tile0.height,\n          items: out,\n        };\n        var shift, offset, max, min, maxK;\n        var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2,\n          r,\n          g,\n          b,\n          k,\n          val;\n        if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n          var fourComponents = componentsCount === 4;\n          var y0items = transformedTiles[0].items;\n          var y1items = transformedTiles[1].items;\n          var y2items = transformedTiles[2].items;\n          var y3items = fourComponents ? transformedTiles[3].items : null;\n          shift = components[0].precision - 8;\n          offset = (128 << shift) + 0.5;\n          max = 255 * (1 << shift);\n          maxK = max * 0.5;\n          min = -maxK;\n          var component0 = tile.components[0];\n          var alpha01 = componentsCount - 3;\n          jj = y0items.length;\n          if (!component0.codingStyleParameters.reversibleTransformation) {\n            for (j = 0; j < jj; j++, pos += alpha01) {\n              y0 = y0items[j] + offset;\n              y1 = y1items[j];\n              y2 = y2items[j];\n              r = y0 + 1.402 * y2;\n              g = y0 - 0.34413 * y1 - 0.71414 * y2;\n              b = y0 + 1.772 * y1;\n              out[pos++] = r <= 0 ? 0 : r >= max ? 255 : r >> shift;\n              out[pos++] = g <= 0 ? 0 : g >= max ? 255 : g >> shift;\n              out[pos++] = b <= 0 ? 0 : b >= max ? 255 : b >> shift;\n            }\n          } else {\n            for (j = 0; j < jj; j++, pos += alpha01) {\n              y0 = y0items[j] + offset;\n              y1 = y1items[j];\n              y2 = y2items[j];\n              g = y0 - ((y2 + y1) >> 2);\n              r = g + y2;\n              b = g + y1;\n              out[pos++] = r <= 0 ? 0 : r >= max ? 255 : r >> shift;\n              out[pos++] = g <= 0 ? 0 : g >= max ? 255 : g >> shift;\n              out[pos++] = b <= 0 ? 0 : b >= max ? 255 : b >> shift;\n            }\n          }\n          if (fourComponents) {\n            for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n              k = y3items[j];\n              out[pos] = k <= min ? 0 : k >= maxK ? 255 : (k + offset) >> shift;\n            }\n          }\n        } else {\n          for (c = 0; c < componentsCount; c++) {\n            var items = transformedTiles[c].items;\n            shift = components[c].precision - 8;\n            offset = (128 << shift) + 0.5;\n            max = 127.5 * (1 << shift);\n            min = -max;\n            for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n              val = items[j];\n              out[pos] =\n                val <= min ? 0 : val >= max ? 255 : (val + offset) >> shift;\n              pos += componentsCount;\n            }\n          }\n        }\n        resultImages.push(result);\n      }\n      return resultImages;\n    }\n    function initializeTile(context, tileIndex) {\n      var siz = context.SIZ;\n      var componentsCount = siz.Csiz;\n      var tile = context.tiles[tileIndex];\n      for (var c = 0; c < componentsCount; c++) {\n        var component = tile.components[c];\n        var qcdOrQcc =\n          context.currentTile.QCC[c] !== undefined\n            ? context.currentTile.QCC[c]\n            : context.currentTile.QCD;\n        component.quantizationParameters = qcdOrQcc;\n        var codOrCoc =\n          context.currentTile.COC[c] !== undefined\n            ? context.currentTile.COC[c]\n            : context.currentTile.COD;\n        component.codingStyleParameters = codOrCoc;\n      }\n      tile.codingStyleDefaultParameters = context.currentTile.COD;\n    }\n    var TagTree = (function TagTreeClosure() {\n      function TagTree(width, height) {\n        var levelsLength = log2(Math.max(width, height)) + 1;\n        this.levels = [];\n        for (var i = 0; i < levelsLength; i++) {\n          var level = {\n            width: width,\n            height: height,\n            items: [],\n          };\n          this.levels.push(level);\n          width = Math.ceil(width / 2);\n          height = Math.ceil(height / 2);\n        }\n      }\n      TagTree.prototype = {\n        reset: function TagTree_reset(i, j) {\n          var currentLevel = 0,\n            value = 0,\n            level;\n          while (currentLevel < this.levels.length) {\n            level = this.levels[currentLevel];\n            var index = i + j * level.width;\n            if (level.items[index] !== undefined) {\n              value = level.items[index];\n              break;\n            }\n            level.index = index;\n            i >>= 1;\n            j >>= 1;\n            currentLevel++;\n          }\n          currentLevel--;\n          level = this.levels[currentLevel];\n          level.items[level.index] = value;\n          this.currentLevel = currentLevel;\n          delete this.value;\n        },\n        incrementValue: function TagTree_incrementValue() {\n          var level = this.levels[this.currentLevel];\n          level.items[level.index]++;\n        },\n        nextLevel: function TagTree_nextLevel() {\n          var currentLevel = this.currentLevel;\n          var level = this.levels[currentLevel];\n          var value = level.items[level.index];\n          currentLevel--;\n          if (currentLevel < 0) {\n            this.value = value;\n            return false;\n          }\n          this.currentLevel = currentLevel;\n          level = this.levels[currentLevel];\n          level.items[level.index] = value;\n          return true;\n        },\n      };\n      return TagTree;\n    })();\n    var InclusionTree = (function InclusionTreeClosure() {\n      function InclusionTree(width, height, defaultValue) {\n        var levelsLength = log2(Math.max(width, height)) + 1;\n        this.levels = [];\n        for (var i = 0; i < levelsLength; i++) {\n          var items = new Uint8Array(width * height);\n          for (var j = 0, jj = items.length; j < jj; j++) {\n            items[j] = defaultValue;\n          }\n          var level = {\n            width: width,\n            height: height,\n            items: items,\n          };\n          this.levels.push(level);\n          width = Math.ceil(width / 2);\n          height = Math.ceil(height / 2);\n        }\n      }\n      InclusionTree.prototype = {\n        reset: function InclusionTree_reset(i, j, stopValue) {\n          var currentLevel = 0;\n          while (currentLevel < this.levels.length) {\n            var level = this.levels[currentLevel];\n            var index = i + j * level.width;\n            level.index = index;\n            var value = level.items[index];\n            if (value === 255) {\n              break;\n            }\n            if (value > stopValue) {\n              this.currentLevel = currentLevel;\n              this.propagateValues();\n              return false;\n            }\n            i >>= 1;\n            j >>= 1;\n            currentLevel++;\n          }\n          this.currentLevel = currentLevel - 1;\n          return true;\n        },\n        incrementValue: function InclusionTree_incrementValue(stopValue) {\n          var level = this.levels[this.currentLevel];\n          level.items[level.index] = stopValue + 1;\n          this.propagateValues();\n        },\n        propagateValues: function InclusionTree_propagateValues() {\n          var levelIndex = this.currentLevel;\n          var level = this.levels[levelIndex];\n          var currentValue = level.items[level.index];\n          while (--levelIndex >= 0) {\n            level = this.levels[levelIndex];\n            level.items[level.index] = currentValue;\n          }\n        },\n        nextLevel: function InclusionTree_nextLevel() {\n          var currentLevel = this.currentLevel;\n          var level = this.levels[currentLevel];\n          var value = level.items[level.index];\n          level.items[level.index] = 255;\n          currentLevel--;\n          if (currentLevel < 0) {\n            return false;\n          }\n          this.currentLevel = currentLevel;\n          level = this.levels[currentLevel];\n          level.items[level.index] = value;\n          return true;\n        },\n      };\n      return InclusionTree;\n    })();\n    var BitModel = (function BitModelClosure() {\n      var UNIFORM_CONTEXT = 17;\n      var RUNLENGTH_CONTEXT = 18;\n      var LLAndLHContextsLabel = new Uint8Array([\n        0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0,\n        4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0,\n        2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0,\n        4, 7, 8,\n      ]);\n      var HLContextLabel = new Uint8Array([\n        0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0,\n        8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0,\n        2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0,\n        8, 8, 8,\n      ]);\n      var HHContextLabel = new Uint8Array([\n        0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0,\n        5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0,\n        8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0,\n        8, 8, 8,\n      ]);\n      function BitModel(width, height, subband, zeroBitPlanes, mb) {\n        this.width = width;\n        this.height = height;\n        this.contextLabelTable =\n          subband === \"HH\"\n            ? HHContextLabel\n            : subband === \"HL\"\n              ? HLContextLabel\n              : LLAndLHContextsLabel;\n        var coefficientCount = width * height;\n        this.neighborsSignificance = new Uint8Array(coefficientCount);\n        this.coefficentsSign = new Uint8Array(coefficientCount);\n        this.coefficentsMagnitude =\n          mb > 14\n            ? new Uint32Array(coefficientCount)\n            : mb > 6\n              ? new Uint16Array(coefficientCount)\n              : new Uint8Array(coefficientCount);\n        this.processingFlags = new Uint8Array(coefficientCount);\n        var bitsDecoded = new Uint8Array(coefficientCount);\n        if (zeroBitPlanes !== 0) {\n          for (var i = 0; i < coefficientCount; i++) {\n            bitsDecoded[i] = zeroBitPlanes;\n          }\n        }\n        this.bitsDecoded = bitsDecoded;\n        this.reset();\n      }\n      BitModel.prototype = {\n        setDecoder: function BitModel_setDecoder(decoder) {\n          this.decoder = decoder;\n        },\n        reset: function BitModel_reset() {\n          this.contexts = new Int8Array(19);\n          this.contexts[0] = (4 << 1) | 0;\n          this.contexts[UNIFORM_CONTEXT] = (46 << 1) | 0;\n          this.contexts[RUNLENGTH_CONTEXT] = (3 << 1) | 0;\n        },\n        setNeighborsSignificance: function BitModel_setNeighborsSignificance(\n          row,\n          column,\n          index,\n        ) {\n          var neighborsSignificance = this.neighborsSignificance;\n          var width = this.width,\n            height = this.height;\n          var left = column > 0;\n          var right = column + 1 < width;\n          var i;\n          if (row > 0) {\n            i = index - width;\n            if (left) {\n              neighborsSignificance[i - 1] += 16;\n            }\n            if (right) {\n              neighborsSignificance[i + 1] += 16;\n            }\n            neighborsSignificance[i] += 4;\n          }\n          if (row + 1 < height) {\n            i = index + width;\n            if (left) {\n              neighborsSignificance[i - 1] += 16;\n            }\n            if (right) {\n              neighborsSignificance[i + 1] += 16;\n            }\n            neighborsSignificance[i] += 4;\n          }\n          if (left) {\n            neighborsSignificance[index - 1] += 1;\n          }\n          if (right) {\n            neighborsSignificance[index + 1] += 1;\n          }\n          neighborsSignificance[index] |= 128;\n        },\n        runSignificancePropogationPass:\n          function BitModel_runSignificancePropogationPass() {\n            var decoder = this.decoder;\n            var width = this.width,\n              height = this.height;\n            var coefficentsMagnitude = this.coefficentsMagnitude;\n            var coefficentsSign = this.coefficentsSign;\n            var neighborsSignificance = this.neighborsSignificance;\n            var processingFlags = this.processingFlags;\n            var contexts = this.contexts;\n            var labels = this.contextLabelTable;\n            var bitsDecoded = this.bitsDecoded;\n            var processedInverseMask = ~1;\n            var processedMask = 1;\n            var firstMagnitudeBitMask = 2;\n            for (var i0 = 0; i0 < height; i0 += 4) {\n              for (var j = 0; j < width; j++) {\n                var index = i0 * width + j;\n                for (var i1 = 0; i1 < 4; i1++, index += width) {\n                  var i = i0 + i1;\n                  if (i >= height) {\n                    break;\n                  }\n                  processingFlags[index] &= processedInverseMask;\n                  if (\n                    coefficentsMagnitude[index] ||\n                    !neighborsSignificance[index]\n                  ) {\n                    continue;\n                  }\n                  var contextLabel = labels[neighborsSignificance[index]];\n                  var decision = decoder.readBit(contexts, contextLabel);\n                  if (decision) {\n                    var sign = this.decodeSignBit(i, j, index);\n                    coefficentsSign[index] = sign;\n                    coefficentsMagnitude[index] = 1;\n                    this.setNeighborsSignificance(i, j, index);\n                    processingFlags[index] |= firstMagnitudeBitMask;\n                  }\n                  bitsDecoded[index]++;\n                  processingFlags[index] |= processedMask;\n                }\n              }\n            }\n          },\n        decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n          var width = this.width,\n            height = this.height;\n          var coefficentsMagnitude = this.coefficentsMagnitude;\n          var coefficentsSign = this.coefficentsSign;\n          var contribution, sign0, sign1, significance1;\n          var contextLabel, decoded;\n          significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n          if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n            sign1 = coefficentsSign[index + 1];\n            if (significance1) {\n              sign0 = coefficentsSign[index - 1];\n              contribution = 1 - sign1 - sign0;\n            } else {\n              contribution = 1 - sign1 - sign1;\n            }\n          } else if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign0 - sign0;\n          } else {\n            contribution = 0;\n          }\n          var horizontalContribution = 3 * contribution;\n          significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n          if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n            sign1 = coefficentsSign[index + width];\n            if (significance1) {\n              sign0 = coefficentsSign[index - width];\n              contribution = 1 - sign1 - sign0 + horizontalContribution;\n            } else {\n              contribution = 1 - sign1 - sign1 + horizontalContribution;\n            }\n          } else if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign0 - sign0 + horizontalContribution;\n          } else {\n            contribution = horizontalContribution;\n          }\n          if (contribution >= 0) {\n            contextLabel = 9 + contribution;\n            decoded = this.decoder.readBit(this.contexts, contextLabel);\n          } else {\n            contextLabel = 9 - contribution;\n            decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n          }\n          return decoded;\n        },\n        runMagnitudeRefinementPass:\n          function BitModel_runMagnitudeRefinementPass() {\n            var decoder = this.decoder;\n            var width = this.width,\n              height = this.height;\n            var coefficentsMagnitude = this.coefficentsMagnitude;\n            var neighborsSignificance = this.neighborsSignificance;\n            var contexts = this.contexts;\n            var bitsDecoded = this.bitsDecoded;\n            var processingFlags = this.processingFlags;\n            var processedMask = 1;\n            var firstMagnitudeBitMask = 2;\n            var length = width * height;\n            var width4 = width * 4;\n            for (\n              var index0 = 0, indexNext;\n              index0 < length;\n              index0 = indexNext\n            ) {\n              indexNext = Math.min(length, index0 + width4);\n              for (var j = 0; j < width; j++) {\n                for (\n                  var index = index0 + j;\n                  index < indexNext;\n                  index += width\n                ) {\n                  if (\n                    !coefficentsMagnitude[index] ||\n                    (processingFlags[index] & processedMask) !== 0\n                  ) {\n                    continue;\n                  }\n                  var contextLabel = 16;\n                  if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                    processingFlags[index] ^= firstMagnitudeBitMask;\n                    var significance = neighborsSignificance[index] & 127;\n                    contextLabel = significance === 0 ? 15 : 14;\n                  }\n                  var bit = decoder.readBit(contexts, contextLabel);\n                  coefficentsMagnitude[index] =\n                    (coefficentsMagnitude[index] << 1) | bit;\n                  bitsDecoded[index]++;\n                  processingFlags[index] |= processedMask;\n                }\n              }\n            }\n          },\n        runCleanupPass: function BitModel_runCleanupPass() {\n          var decoder = this.decoder;\n          var width = this.width,\n            height = this.height;\n          var neighborsSignificance = this.neighborsSignificance;\n          var coefficentsMagnitude = this.coefficentsMagnitude;\n          var coefficentsSign = this.coefficentsSign;\n          var contexts = this.contexts;\n          var labels = this.contextLabelTable;\n          var bitsDecoded = this.bitsDecoded;\n          var processingFlags = this.processingFlags;\n          var processedMask = 1;\n          var firstMagnitudeBitMask = 2;\n          var oneRowDown = width;\n          var twoRowsDown = width * 2;\n          var threeRowsDown = width * 3;\n          var iNext;\n          for (var i0 = 0; i0 < height; i0 = iNext) {\n            iNext = Math.min(i0 + 4, height);\n            var indexBase = i0 * width;\n            var checkAllEmpty = i0 + 3 < height;\n            for (var j = 0; j < width; j++) {\n              var index0 = indexBase + j;\n              var allEmpty =\n                checkAllEmpty &&\n                processingFlags[index0] === 0 &&\n                processingFlags[index0 + oneRowDown] === 0 &&\n                processingFlags[index0 + twoRowsDown] === 0 &&\n                processingFlags[index0 + threeRowsDown] === 0 &&\n                neighborsSignificance[index0] === 0 &&\n                neighborsSignificance[index0 + oneRowDown] === 0 &&\n                neighborsSignificance[index0 + twoRowsDown] === 0 &&\n                neighborsSignificance[index0 + threeRowsDown] === 0;\n              var i1 = 0,\n                index = index0;\n              var i = i0,\n                sign;\n              if (allEmpty) {\n                var hasSignificantCoefficent = decoder.readBit(\n                  contexts,\n                  RUNLENGTH_CONTEXT,\n                );\n                if (!hasSignificantCoefficent) {\n                  bitsDecoded[index0]++;\n                  bitsDecoded[index0 + oneRowDown]++;\n                  bitsDecoded[index0 + twoRowsDown]++;\n                  bitsDecoded[index0 + threeRowsDown]++;\n                  continue;\n                }\n                i1 =\n                  (decoder.readBit(contexts, UNIFORM_CONTEXT) << 1) |\n                  decoder.readBit(contexts, UNIFORM_CONTEXT);\n                if (i1 !== 0) {\n                  i = i0 + i1;\n                  index += i1 * width;\n                }\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n                index = index0;\n                for (var i2 = i0; i2 <= i; i2++, index += width) {\n                  bitsDecoded[index]++;\n                }\n                i1++;\n              }\n              for (i = i0 + i1; i < iNext; i++, index += width) {\n                if (\n                  coefficentsMagnitude[index] ||\n                  (processingFlags[index] & processedMask) !== 0\n                ) {\n                  continue;\n                }\n                var contextLabel = labels[neighborsSignificance[index]];\n                var decision = decoder.readBit(contexts, contextLabel);\n                if (decision === 1) {\n                  sign = this.decodeSignBit(i, j, index);\n                  coefficentsSign[index] = sign;\n                  coefficentsMagnitude[index] = 1;\n                  this.setNeighborsSignificance(i, j, index);\n                  processingFlags[index] |= firstMagnitudeBitMask;\n                }\n                bitsDecoded[index]++;\n              }\n            }\n          }\n        },\n        checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n          var decoder = this.decoder;\n          var contexts = this.contexts;\n          var symbol =\n            (decoder.readBit(contexts, UNIFORM_CONTEXT) << 3) |\n            (decoder.readBit(contexts, UNIFORM_CONTEXT) << 2) |\n            (decoder.readBit(contexts, UNIFORM_CONTEXT) << 1) |\n            decoder.readBit(contexts, UNIFORM_CONTEXT);\n          if (symbol !== 10) {\n            throw new Error(\"JPX Error: Invalid segmentation symbol\");\n          }\n        },\n      };\n      return BitModel;\n    })();\n    var Transform = (function TransformClosure() {\n      function Transform() {}\n      Transform.prototype.calculate = function transformCalculate(\n        subbands,\n        u0,\n        v0,\n      ) {\n        var ll = subbands[0];\n        for (var i = 1, ii = subbands.length; i < ii; i++) {\n          ll = this.iterate(ll, subbands[i], u0, v0);\n        }\n        return ll;\n      };\n      Transform.prototype.extend = function extend(buffer, offset, size) {\n        var i1 = offset - 1,\n          j1 = offset + 1;\n        var i2 = offset + size - 2,\n          j2 = offset + size;\n        buffer[i1--] = buffer[j1++];\n        buffer[j2++] = buffer[i2--];\n        buffer[i1--] = buffer[j1++];\n        buffer[j2++] = buffer[i2--];\n        buffer[i1--] = buffer[j1++];\n        buffer[j2++] = buffer[i2--];\n        buffer[i1] = buffer[j1];\n        buffer[j2] = buffer[i2];\n      };\n      Transform.prototype.iterate = function Transform_iterate(\n        ll,\n        hl_lh_hh,\n        u0,\n        v0,\n      ) {\n        var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n        var width = hl_lh_hh.width;\n        var height = hl_lh_hh.height;\n        var items = hl_lh_hh.items;\n        var i, j, k, l, u, v;\n        for (k = 0, i = 0; i < llHeight; i++) {\n          l = i * 2 * width;\n          for (j = 0; j < llWidth; j++, k++, l += 2) {\n            items[l] = llItems[k];\n          }\n        }\n        llItems = ll.items = null;\n        var bufferPadding = 4;\n        var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n        if (width === 1) {\n          if ((u0 & 1) !== 0) {\n            for (v = 0, k = 0; v < height; v++, k += width) {\n              items[k] *= 0.5;\n            }\n          }\n        } else {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n            this.extend(rowBuffer, bufferPadding, width);\n            this.filter(rowBuffer, bufferPadding, width);\n            items.set(\n              rowBuffer.subarray(bufferPadding, bufferPadding + width),\n              k,\n            );\n          }\n        }\n        var numBuffers = 16;\n        var colBuffers = [];\n        for (i = 0; i < numBuffers; i++) {\n          colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n        }\n        var b,\n          currentBuffer = 0;\n        ll = bufferPadding + height;\n        if (height === 1) {\n          if ((v0 & 1) !== 0) {\n            for (u = 0; u < width; u++) {\n              items[u] *= 0.5;\n            }\n          }\n        } else {\n          for (u = 0; u < width; u++) {\n            if (currentBuffer === 0) {\n              numBuffers = Math.min(width - u, numBuffers);\n              for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n                for (b = 0; b < numBuffers; b++) {\n                  colBuffers[b][l] = items[k + b];\n                }\n              }\n              currentBuffer = numBuffers;\n            }\n            currentBuffer--;\n            var buffer = colBuffers[currentBuffer];\n            this.extend(buffer, bufferPadding, height);\n            this.filter(buffer, bufferPadding, height);\n            if (currentBuffer === 0) {\n              k = u - numBuffers + 1;\n              for (l = bufferPadding; l < ll; k += width, l++) {\n                for (b = 0; b < numBuffers; b++) {\n                  items[k + b] = colBuffers[b][l];\n                }\n              }\n            }\n          }\n        }\n        return {\n          width: width,\n          height: height,\n          items: items,\n        };\n      };\n      return Transform;\n    })();\n    var IrreversibleTransform = (function IrreversibleTransformClosure() {\n      function IrreversibleTransform() {\n        Transform.call(this);\n      }\n      IrreversibleTransform.prototype = Object.create(Transform.prototype);\n      IrreversibleTransform.prototype.filter =\n        function irreversibleTransformFilter(x, offset, length) {\n          var len = length >> 1;\n          offset = offset | 0;\n          var j, n, current, next;\n          var alpha = -1.586134342059924;\n          var beta = -0.052980118572961;\n          var gamma = 0.882911075530934;\n          var delta = 0.443506852043971;\n          var K = 1.230174104914001;\n          var K_ = 1 / K;\n          j = offset - 3;\n          for (n = len + 4; n--; j += 2) {\n            x[j] *= K_;\n          }\n          j = offset - 2;\n          current = delta * x[j - 1];\n          for (n = len + 3; n--; j += 2) {\n            next = delta * x[j + 1];\n            x[j] = K * x[j] - current - next;\n            if (n--) {\n              j += 2;\n              current = delta * x[j + 1];\n              x[j] = K * x[j] - current - next;\n            } else {\n              break;\n            }\n          }\n          j = offset - 1;\n          current = gamma * x[j - 1];\n          for (n = len + 2; n--; j += 2) {\n            next = gamma * x[j + 1];\n            x[j] -= current + next;\n            if (n--) {\n              j += 2;\n              current = gamma * x[j + 1];\n              x[j] -= current + next;\n            } else {\n              break;\n            }\n          }\n          j = offset;\n          current = beta * x[j - 1];\n          for (n = len + 1; n--; j += 2) {\n            next = beta * x[j + 1];\n            x[j] -= current + next;\n            if (n--) {\n              j += 2;\n              current = beta * x[j + 1];\n              x[j] -= current + next;\n            } else {\n              break;\n            }\n          }\n          if (len !== 0) {\n            j = offset + 1;\n            current = alpha * x[j - 1];\n            for (n = len; n--; j += 2) {\n              next = alpha * x[j + 1];\n              x[j] -= current + next;\n              if (n--) {\n                j += 2;\n                current = alpha * x[j + 1];\n                x[j] -= current + next;\n              } else {\n                break;\n              }\n            }\n          }\n        };\n      return IrreversibleTransform;\n    })();\n    var ReversibleTransform = (function ReversibleTransformClosure() {\n      function ReversibleTransform() {\n        Transform.call(this);\n      }\n      ReversibleTransform.prototype = Object.create(Transform.prototype);\n      ReversibleTransform.prototype.filter = function reversibleTransformFilter(\n        x,\n        offset,\n        length,\n      ) {\n        var len = length >> 1;\n        offset = offset | 0;\n        var j, n;\n        for (j = offset, n = len + 1; n--; j += 2) {\n          x[j] -= (x[j - 1] + x[j + 1] + 2) >> 2;\n        }\n        for (j = offset + 1, n = len; n--; j += 2) {\n          x[j] += (x[j - 1] + x[j + 1]) >> 1;\n        }\n      };\n      return ReversibleTransform;\n    })();\n    return JpxImage;\n  })();\n  (\"use strict\");\n  var Jbig2Image = (function Jbig2ImageClosure() {\n    function ContextCache() {}\n    ContextCache.prototype = {\n      getContexts: function (id) {\n        if (id in this) {\n          return this[id];\n        }\n        return (this[id] = new Int8Array(1 << 16));\n      },\n    };\n    function DecodingContext(data, start, end) {\n      this.data = data;\n      this.start = start;\n      this.end = end;\n    }\n    DecodingContext.prototype = {\n      get decoder() {\n        var decoder = new ArithmeticDecoder(this.data, this.start, this.end);\n        return shadow(this, \"decoder\", decoder);\n      },\n      get contextCache() {\n        var cache = new ContextCache();\n        return shadow(this, \"contextCache\", cache);\n      },\n    };\n    function decodeInteger(contextCache, procedure, decoder) {\n      var contexts = contextCache.getContexts(procedure);\n      var prev = 1;\n      function readBits(length) {\n        var v = 0;\n        for (var i = 0; i < length; i++) {\n          var bit = decoder.readBit(contexts, prev);\n          prev =\n            prev < 256 ? (prev << 1) | bit : (((prev << 1) | bit) & 511) | 256;\n          v = (v << 1) | bit;\n        }\n        return v >>> 0;\n      }\n      var sign = readBits(1);\n      var value = readBits(1)\n        ? readBits(1)\n          ? readBits(1)\n            ? readBits(1)\n              ? readBits(1)\n                ? readBits(32) + 4436\n                : readBits(12) + 340\n              : readBits(8) + 84\n            : readBits(6) + 20\n          : readBits(4) + 4\n        : readBits(2);\n      return sign === 0 ? value : value > 0 ? -value : null;\n    }\n    function decodeIAID(contextCache, decoder, codeLength) {\n      var contexts = contextCache.getContexts(\"IAID\");\n      var prev = 1;\n      for (var i = 0; i < codeLength; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = (prev << 1) | bit;\n      }\n      if (codeLength < 31) {\n        return prev & ((1 << codeLength) - 1);\n      }\n      return prev & 2147483647;\n    }\n    var SegmentTypes = [\n      \"SymbolDictionary\",\n      null,\n      null,\n      null,\n      \"IntermediateTextRegion\",\n      null,\n      \"ImmediateTextRegion\",\n      \"ImmediateLosslessTextRegion\",\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      \"patternDictionary\",\n      null,\n      null,\n      null,\n      \"IntermediateHalftoneRegion\",\n      null,\n      \"ImmediateHalftoneRegion\",\n      \"ImmediateLosslessHalftoneRegion\",\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      \"IntermediateGenericRegion\",\n      null,\n      \"ImmediateGenericRegion\",\n      \"ImmediateLosslessGenericRegion\",\n      \"IntermediateGenericRefinementRegion\",\n      null,\n      \"ImmediateGenericRefinementRegion\",\n      \"ImmediateLosslessGenericRefinementRegion\",\n      null,\n      null,\n      null,\n      null,\n      \"PageInformation\",\n      \"EndOfPage\",\n      \"EndOfStripe\",\n      \"EndOfFile\",\n      \"Profiles\",\n      \"Tables\",\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      \"Extension\",\n    ];\n    var CodingTemplates = [\n      [\n        {\n          x: -1,\n          y: -2,\n        },\n        {\n          x: 0,\n          y: -2,\n        },\n        {\n          x: 1,\n          y: -2,\n        },\n        {\n          x: -2,\n          y: -1,\n        },\n        {\n          x: -1,\n          y: -1,\n        },\n        {\n          x: 0,\n          y: -1,\n        },\n        {\n          x: 1,\n          y: -1,\n        },\n        {\n          x: 2,\n          y: -1,\n        },\n        {\n          x: -4,\n          y: 0,\n        },\n        {\n          x: -3,\n          y: 0,\n        },\n        {\n          x: -2,\n          y: 0,\n        },\n        {\n          x: -1,\n          y: 0,\n        },\n      ],\n      [\n        {\n          x: -1,\n          y: -2,\n        },\n        {\n          x: 0,\n          y: -2,\n        },\n        {\n          x: 1,\n          y: -2,\n        },\n        {\n          x: 2,\n          y: -2,\n        },\n        {\n          x: -2,\n          y: -1,\n        },\n        {\n          x: -1,\n          y: -1,\n        },\n        {\n          x: 0,\n          y: -1,\n        },\n        {\n          x: 1,\n          y: -1,\n        },\n        {\n          x: 2,\n          y: -1,\n        },\n        {\n          x: -3,\n          y: 0,\n        },\n        {\n          x: -2,\n          y: 0,\n        },\n        {\n          x: -1,\n          y: 0,\n        },\n      ],\n      [\n        {\n          x: -1,\n          y: -2,\n        },\n        {\n          x: 0,\n          y: -2,\n        },\n        {\n          x: 1,\n          y: -2,\n        },\n        {\n          x: -2,\n          y: -1,\n        },\n        {\n          x: -1,\n          y: -1,\n        },\n        {\n          x: 0,\n          y: -1,\n        },\n        {\n          x: 1,\n          y: -1,\n        },\n        {\n          x: -2,\n          y: 0,\n        },\n        {\n          x: -1,\n          y: 0,\n        },\n      ],\n      [\n        {\n          x: -3,\n          y: -1,\n        },\n        {\n          x: -2,\n          y: -1,\n        },\n        {\n          x: -1,\n          y: -1,\n        },\n        {\n          x: 0,\n          y: -1,\n        },\n        {\n          x: 1,\n          y: -1,\n        },\n        {\n          x: -4,\n          y: 0,\n        },\n        {\n          x: -3,\n          y: 0,\n        },\n        {\n          x: -2,\n          y: 0,\n        },\n        {\n          x: -1,\n          y: 0,\n        },\n      ],\n    ];\n    var RefinementTemplates = [\n      {\n        coding: [\n          {\n            x: 0,\n            y: -1,\n          },\n          {\n            x: 1,\n            y: -1,\n          },\n          {\n            x: -1,\n            y: 0,\n          },\n        ],\n        reference: [\n          {\n            x: 0,\n            y: -1,\n          },\n          {\n            x: 1,\n            y: -1,\n          },\n          {\n            x: -1,\n            y: 0,\n          },\n          {\n            x: 0,\n            y: 0,\n          },\n          {\n            x: 1,\n            y: 0,\n          },\n          {\n            x: -1,\n            y: 1,\n          },\n          {\n            x: 0,\n            y: 1,\n          },\n          {\n            x: 1,\n            y: 1,\n          },\n        ],\n      },\n      {\n        coding: [\n          {\n            x: -1,\n            y: -1,\n          },\n          {\n            x: 0,\n            y: -1,\n          },\n          {\n            x: 1,\n            y: -1,\n          },\n          {\n            x: -1,\n            y: 0,\n          },\n        ],\n        reference: [\n          {\n            x: 0,\n            y: -1,\n          },\n          {\n            x: -1,\n            y: 0,\n          },\n          {\n            x: 0,\n            y: 0,\n          },\n          {\n            x: 1,\n            y: 0,\n          },\n          {\n            x: 0,\n            y: 1,\n          },\n          {\n            x: 1,\n            y: 1,\n          },\n        ],\n      },\n    ];\n    var ReusedContexts = [39717, 1941, 229, 405];\n    var RefinementReusedContexts = [32, 8];\n    function decodeBitmapTemplate0(width, height, decodingContext) {\n      var decoder = decodingContext.decoder;\n      var contexts = decodingContext.contextCache.getContexts(\"GB\");\n      var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n      var OLD_PIXEL_MASK = 31735;\n      for (i = 0; i < height; i++) {\n        row = bitmap[i] = new Uint8Array(width);\n        row1 = i < 1 ? row : bitmap[i - 1];\n        row2 = i < 2 ? row : bitmap[i - 2];\n        contextLabel =\n          (row2[0] << 13) |\n          (row2[1] << 12) |\n          (row2[2] << 11) |\n          (row1[0] << 7) |\n          (row1[1] << 6) |\n          (row1[2] << 5) |\n          (row1[3] << 4);\n        for (j = 0; j < width; j++) {\n          row[j] = pixel = decoder.readBit(contexts, contextLabel);\n          contextLabel =\n            ((contextLabel & OLD_PIXEL_MASK) << 1) |\n            (j + 3 < width ? row2[j + 3] << 11 : 0) |\n            (j + 4 < width ? row1[j + 4] << 4 : 0) |\n            pixel;\n        }\n      }\n      return bitmap;\n    }\n    function decodeBitmap(\n      mmr,\n      width,\n      height,\n      templateIndex,\n      prediction,\n      skip,\n      at,\n      decodingContext,\n    ) {\n      if (mmr) {\n        error(\"JBIG2 error: MMR encoding is not supported\");\n      }\n      if (\n        templateIndex === 0 &&\n        !skip &&\n        !prediction &&\n        at.length === 4 &&\n        at[0].x === 3 &&\n        at[0].y === -1 &&\n        at[1].x === -3 &&\n        at[1].y === -1 &&\n        at[2].x === 2 &&\n        at[2].y === -2 &&\n        at[3].x === -2 &&\n        at[3].y === -2\n      ) {\n        return decodeBitmapTemplate0(width, height, decodingContext);\n      }\n      var useskip = !!skip;\n      var template = CodingTemplates[templateIndex].concat(at);\n      template.sort(function (a, b) {\n        return a.y - b.y || a.x - b.x;\n      });\n      var templateLength = template.length;\n      var templateX = new Int8Array(templateLength);\n      var templateY = new Int8Array(templateLength);\n      var changingTemplateEntries = [];\n      var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n      var c, k;\n      for (k = 0; k < templateLength; k++) {\n        templateX[k] = template[k].x;\n        templateY[k] = template[k].y;\n        minX = Math.min(minX, template[k].x);\n        maxX = Math.max(maxX, template[k].x);\n        minY = Math.min(minY, template[k].y);\n        if (\n          k < templateLength - 1 &&\n          template[k].y === template[k + 1].y &&\n          template[k].x === template[k + 1].x - 1\n        ) {\n          reuseMask |= 1 << (templateLength - 1 - k);\n        } else {\n          changingTemplateEntries.push(k);\n        }\n      }\n      var changingEntriesLength = changingTemplateEntries.length;\n      var changingTemplateX = new Int8Array(changingEntriesLength);\n      var changingTemplateY = new Int8Array(changingEntriesLength);\n      var changingTemplateBit = new Uint16Array(changingEntriesLength);\n      for (c = 0; c < changingEntriesLength; c++) {\n        k = changingTemplateEntries[c];\n        changingTemplateX[c] = template[k].x;\n        changingTemplateY[c] = template[k].y;\n        changingTemplateBit[c] = 1 << (templateLength - 1 - k);\n      }\n      var sbb_left = -minX;\n      var sbb_top = -minY;\n      var sbb_right = width - maxX;\n      var pseudoPixelContext = ReusedContexts[templateIndex];\n      var row = new Uint8Array(width);\n      var bitmap = [];\n      var decoder = decodingContext.decoder;\n      var contexts = decodingContext.contextCache.getContexts(\"GB\");\n      var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n      for (var i = 0; i < height; i++) {\n        if (prediction) {\n          var sltp = decoder.readBit(contexts, pseudoPixelContext);\n          ltp ^= sltp;\n          if (ltp) {\n            bitmap.push(row);\n            continue;\n          }\n        }\n        row = new Uint8Array(row);\n        bitmap.push(row);\n        for (j = 0; j < width; j++) {\n          if (useskip && skip[i][j]) {\n            row[j] = 0;\n            continue;\n          }\n          if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n            contextLabel = (contextLabel << 1) & reuseMask;\n            for (k = 0; k < changingEntriesLength; k++) {\n              i0 = i + changingTemplateY[k];\n              j0 = j + changingTemplateX[k];\n              bit = bitmap[i0][j0];\n              if (bit) {\n                bit = changingTemplateBit[k];\n                contextLabel |= bit;\n              }\n            }\n          } else {\n            contextLabel = 0;\n            shift = templateLength - 1;\n            for (k = 0; k < templateLength; k++, shift--) {\n              j0 = j + templateX[k];\n              if (j0 >= 0 && j0 < width) {\n                i0 = i + templateY[k];\n                if (i0 >= 0) {\n                  bit = bitmap[i0][j0];\n                  if (bit) {\n                    contextLabel |= bit << shift;\n                  }\n                }\n              }\n            }\n          }\n          var pixel = decoder.readBit(contexts, contextLabel);\n          row[j] = pixel;\n        }\n      }\n      return bitmap;\n    }\n    function decodeRefinement(\n      width,\n      height,\n      templateIndex,\n      referenceBitmap,\n      offsetX,\n      offsetY,\n      prediction,\n      at,\n      decodingContext,\n    ) {\n      var codingTemplate = RefinementTemplates[templateIndex].coding;\n      if (templateIndex === 0) {\n        codingTemplate = codingTemplate.concat([at[0]]);\n      }\n      var codingTemplateLength = codingTemplate.length;\n      var codingTemplateX = new Int32Array(codingTemplateLength);\n      var codingTemplateY = new Int32Array(codingTemplateLength);\n      var k;\n      for (k = 0; k < codingTemplateLength; k++) {\n        codingTemplateX[k] = codingTemplate[k].x;\n        codingTemplateY[k] = codingTemplate[k].y;\n      }\n      var referenceTemplate = RefinementTemplates[templateIndex].reference;\n      if (templateIndex === 0) {\n        referenceTemplate = referenceTemplate.concat([at[1]]);\n      }\n      var referenceTemplateLength = referenceTemplate.length;\n      var referenceTemplateX = new Int32Array(referenceTemplateLength);\n      var referenceTemplateY = new Int32Array(referenceTemplateLength);\n      for (k = 0; k < referenceTemplateLength; k++) {\n        referenceTemplateX[k] = referenceTemplate[k].x;\n        referenceTemplateY[k] = referenceTemplate[k].y;\n      }\n      var referenceWidth = referenceBitmap[0].length;\n      var referenceHeight = referenceBitmap.length;\n      var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n      var bitmap = [];\n      var decoder = decodingContext.decoder;\n      var contexts = decodingContext.contextCache.getContexts(\"GR\");\n      var ltp = 0;\n      for (var i = 0; i < height; i++) {\n        if (prediction) {\n          var sltp = decoder.readBit(contexts, pseudoPixelContext);\n          ltp ^= sltp;\n          if (ltp) {\n            error(\"JBIG2 error: prediction is not supported\");\n          }\n        }\n        var row = new Uint8Array(width);\n        bitmap.push(row);\n        for (var j = 0; j < width; j++) {\n          var i0, j0;\n          var contextLabel = 0;\n          for (k = 0; k < codingTemplateLength; k++) {\n            i0 = i + codingTemplateY[k];\n            j0 = j + codingTemplateX[k];\n            if (i0 < 0 || j0 < 0 || j0 >= width) {\n              contextLabel <<= 1;\n            } else {\n              contextLabel = (contextLabel << 1) | bitmap[i0][j0];\n            }\n          }\n          for (k = 0; k < referenceTemplateLength; k++) {\n            i0 = i + referenceTemplateY[k] + offsetY;\n            j0 = j + referenceTemplateX[k] + offsetX;\n            if (\n              i0 < 0 ||\n              i0 >= referenceHeight ||\n              j0 < 0 ||\n              j0 >= referenceWidth\n            ) {\n              contextLabel <<= 1;\n            } else {\n              contextLabel = (contextLabel << 1) | referenceBitmap[i0][j0];\n            }\n          }\n          var pixel = decoder.readBit(contexts, contextLabel);\n          row[j] = pixel;\n        }\n      }\n      return bitmap;\n    }\n    function decodeSymbolDictionary(\n      huffman,\n      refinement,\n      symbols,\n      numberOfNewSymbols,\n      numberOfExportedSymbols,\n      huffmanTables,\n      templateIndex,\n      at,\n      refinementTemplateIndex,\n      refinementAt,\n      decodingContext,\n    ) {\n      if (huffman) {\n        error(\"JBIG2 error: huffman is not supported\");\n      }\n      var newSymbols = [];\n      var currentHeight = 0;\n      var symbolCodeLength = log2(symbols.length + numberOfNewSymbols);\n      var decoder = decodingContext.decoder;\n      var contextCache = decodingContext.contextCache;\n      while (newSymbols.length < numberOfNewSymbols) {\n        var deltaHeight = decodeInteger(contextCache, \"IADH\", decoder);\n        currentHeight += deltaHeight;\n        var currentWidth = 0;\n        var totalWidth = 0;\n        while (true) {\n          var deltaWidth = decodeInteger(contextCache, \"IADW\", decoder);\n          if (deltaWidth === null) {\n            break;\n          }\n          currentWidth += deltaWidth;\n          totalWidth += currentWidth;\n          var bitmap;\n          if (refinement) {\n            var numberOfInstances = decodeInteger(\n              contextCache,\n              \"IAAI\",\n              decoder,\n            );\n            if (numberOfInstances > 1) {\n              bitmap = decodeTextRegion(\n                huffman,\n                refinement,\n                currentWidth,\n                currentHeight,\n                0,\n                numberOfInstances,\n                1,\n                symbols.concat(newSymbols),\n                symbolCodeLength,\n                0,\n                0,\n                1,\n                0,\n                huffmanTables,\n                refinementTemplateIndex,\n                refinementAt,\n                decodingContext,\n              );\n            } else {\n              var symbolId = decodeIAID(\n                contextCache,\n                decoder,\n                symbolCodeLength,\n              );\n              var rdx = decodeInteger(contextCache, \"IARDX\", decoder);\n              var rdy = decodeInteger(contextCache, \"IARDY\", decoder);\n              var symbol =\n                symbolId < symbols.length\n                  ? symbols[symbolId]\n                  : newSymbols[symbolId - symbols.length];\n              bitmap = decodeRefinement(\n                currentWidth,\n                currentHeight,\n                refinementTemplateIndex,\n                symbol,\n                rdx,\n                rdy,\n                false,\n                refinementAt,\n                decodingContext,\n              );\n            }\n          } else {\n            bitmap = decodeBitmap(\n              false,\n              currentWidth,\n              currentHeight,\n              templateIndex,\n              false,\n              null,\n              at,\n              decodingContext,\n            );\n          }\n          newSymbols.push(bitmap);\n        }\n      }\n      var exportedSymbols = [];\n      var flags = [],\n        currentFlag = false;\n      var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n      while (flags.length < totalSymbolsLength) {\n        var runLength = decodeInteger(contextCache, \"IAEX\", decoder);\n        while (runLength--) {\n          flags.push(currentFlag);\n        }\n        currentFlag = !currentFlag;\n      }\n      for (var i = 0, ii = symbols.length; i < ii; i++) {\n        if (flags[i]) {\n          exportedSymbols.push(symbols[i]);\n        }\n      }\n      for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n        if (flags[i]) {\n          exportedSymbols.push(newSymbols[j]);\n        }\n      }\n      return exportedSymbols;\n    }\n    function decodeTextRegion(\n      huffman,\n      refinement,\n      width,\n      height,\n      defaultPixelValue,\n      numberOfSymbolInstances,\n      stripSize,\n      inputSymbols,\n      symbolCodeLength,\n      transposed,\n      dsOffset,\n      referenceCorner,\n      combinationOperator,\n      huffmanTables,\n      refinementTemplateIndex,\n      refinementAt,\n      decodingContext,\n    ) {\n      if (huffman) {\n        error(\"JBIG2 error: huffman is not supported\");\n      }\n      var bitmap = [];\n      var i, row;\n      for (i = 0; i < height; i++) {\n        row = new Uint8Array(width);\n        if (defaultPixelValue) {\n          for (var j = 0; j < width; j++) {\n            row[j] = defaultPixelValue;\n          }\n        }\n        bitmap.push(row);\n      }\n      var decoder = decodingContext.decoder;\n      var contextCache = decodingContext.contextCache;\n      var stripT = -decodeInteger(contextCache, \"IADT\", decoder);\n      var firstS = 0;\n      i = 0;\n      while (i < numberOfSymbolInstances) {\n        var deltaT = decodeInteger(contextCache, \"IADT\", decoder);\n        stripT += deltaT;\n        var deltaFirstS = decodeInteger(contextCache, \"IAFS\", decoder);\n        firstS += deltaFirstS;\n        var currentS = firstS;\n        do {\n          var currentT =\n            stripSize === 1 ? 0 : decodeInteger(contextCache, \"IAIT\", decoder);\n          var t = stripSize * stripT + currentT;\n          var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n          var applyRefinement =\n            refinement && decodeInteger(contextCache, \"IARI\", decoder);\n          var symbolBitmap = inputSymbols[symbolId];\n          var symbolWidth = symbolBitmap[0].length;\n          var symbolHeight = symbolBitmap.length;\n          if (applyRefinement) {\n            var rdw = decodeInteger(contextCache, \"IARDW\", decoder);\n            var rdh = decodeInteger(contextCache, \"IARDH\", decoder);\n            var rdx = decodeInteger(contextCache, \"IARDX\", decoder);\n            var rdy = decodeInteger(contextCache, \"IARDY\", decoder);\n            symbolWidth += rdw;\n            symbolHeight += rdh;\n            symbolBitmap = decodeRefinement(\n              symbolWidth,\n              symbolHeight,\n              refinementTemplateIndex,\n              symbolBitmap,\n              (rdw >> 1) + rdx,\n              (rdh >> 1) + rdy,\n              false,\n              refinementAt,\n              decodingContext,\n            );\n          }\n          var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight);\n          var offsetS = currentS - (referenceCorner & 2 ? symbolWidth : 0);\n          var s2, t2, symbolRow;\n          if (transposed) {\n            for (s2 = 0; s2 < symbolHeight; s2++) {\n              row = bitmap[offsetS + s2];\n              if (!row) {\n                continue;\n              }\n              symbolRow = symbolBitmap[s2];\n              var maxWidth = Math.min(width - offsetT, symbolWidth);\n              switch (combinationOperator) {\n                case 0:\n                  for (t2 = 0; t2 < maxWidth; t2++) {\n                    row[offsetT + t2] |= symbolRow[t2];\n                  }\n                  break;\n\n                case 2:\n                  for (t2 = 0; t2 < maxWidth; t2++) {\n                    row[offsetT + t2] ^= symbolRow[t2];\n                  }\n                  break;\n\n                default:\n                  error(\n                    \"JBIG2 error: operator \" +\n                      combinationOperator +\n                      \" is not supported\",\n                  );\n              }\n            }\n            currentS += symbolHeight - 1;\n          } else {\n            for (t2 = 0; t2 < symbolHeight; t2++) {\n              row = bitmap[offsetT + t2];\n              if (!row) {\n                continue;\n              }\n              symbolRow = symbolBitmap[t2];\n              switch (combinationOperator) {\n                case 0:\n                  for (s2 = 0; s2 < symbolWidth; s2++) {\n                    row[offsetS + s2] |= symbolRow[s2];\n                  }\n                  break;\n\n                case 2:\n                  for (s2 = 0; s2 < symbolWidth; s2++) {\n                    row[offsetS + s2] ^= symbolRow[s2];\n                  }\n                  break;\n\n                default:\n                  error(\n                    \"JBIG2 error: operator \" +\n                      combinationOperator +\n                      \" is not supported\",\n                  );\n              }\n            }\n            currentS += symbolWidth - 1;\n          }\n          i++;\n          var deltaS = decodeInteger(contextCache, \"IADS\", decoder);\n          if (deltaS === null) {\n            break;\n          }\n          currentS += deltaS + dsOffset;\n        } while (true);\n      }\n      return bitmap;\n    }\n    function readSegmentHeader(data, start) {\n      var segmentHeader = {};\n      segmentHeader.number = readUint32(data, start);\n      var flags = data[start + 4];\n      var segmentType = flags & 63;\n      if (!SegmentTypes[segmentType]) {\n        error(\"JBIG2 error: invalid segment type: \" + segmentType);\n      }\n      segmentHeader.type = segmentType;\n      segmentHeader.typeName = SegmentTypes[segmentType];\n      segmentHeader.deferredNonRetain = !!(flags & 128);\n      var pageAssociationFieldSize = !!(flags & 64);\n      var referredFlags = data[start + 5];\n      var referredToCount = (referredFlags >> 5) & 7;\n      var retainBits = [referredFlags & 31];\n      var position = start + 6;\n      if (referredFlags === 7) {\n        referredToCount = readUint32(data, position - 1) & 536870911;\n        position += 3;\n        var bytes = (referredToCount + 7) >> 3;\n        retainBits[0] = data[position++];\n        while (--bytes > 0) {\n          retainBits.push(data[position++]);\n        }\n      } else if (referredFlags === 5 || referredFlags === 6) {\n        error(\"JBIG2 error: invalid referred-to flags\");\n      }\n      segmentHeader.retainBits = retainBits;\n      var referredToSegmentNumberSize =\n        segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n      var referredTo = [];\n      var i, ii;\n      for (i = 0; i < referredToCount; i++) {\n        var number =\n          referredToSegmentNumberSize === 1\n            ? data[position]\n            : referredToSegmentNumberSize === 2\n              ? readUint16(data, position)\n              : readUint32(data, position);\n        referredTo.push(number);\n        position += referredToSegmentNumberSize;\n      }\n      segmentHeader.referredTo = referredTo;\n      if (!pageAssociationFieldSize) {\n        segmentHeader.pageAssociation = data[position++];\n      } else {\n        segmentHeader.pageAssociation = readUint32(data, position);\n        position += 4;\n      }\n      segmentHeader.length = readUint32(data, position);\n      position += 4;\n      if (segmentHeader.length === 4294967295) {\n        if (segmentType === 38) {\n          var genericRegionInfo = readRegionSegmentInformation(data, position);\n          var genericRegionSegmentFlags =\n            data[position + RegionSegmentInformationFieldLength];\n          var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n          var searchPatternLength = 6;\n          var searchPattern = new Uint8Array(searchPatternLength);\n          if (!genericRegionMmr) {\n            searchPattern[0] = 255;\n            searchPattern[1] = 172;\n          }\n          searchPattern[2] = (genericRegionInfo.height >>> 24) & 255;\n          searchPattern[3] = (genericRegionInfo.height >> 16) & 255;\n          searchPattern[4] = (genericRegionInfo.height >> 8) & 255;\n          searchPattern[5] = genericRegionInfo.height & 255;\n          for (i = position, ii = data.length; i < ii; i++) {\n            var j = 0;\n            while (\n              j < searchPatternLength &&\n              searchPattern[j] === data[i + j]\n            ) {\n              j++;\n            }\n            if (j === searchPatternLength) {\n              segmentHeader.length = i + searchPatternLength;\n              break;\n            }\n          }\n          if (segmentHeader.length === 4294967295) {\n            error(\"JBIG2 error: segment end was not found\");\n          }\n        } else {\n          error(\"JBIG2 error: invalid unknown segment length\");\n        }\n      }\n      segmentHeader.headerEnd = position;\n      return segmentHeader;\n    }\n    function readSegments(header, data, start, end) {\n      var segments = [];\n      var position = start;\n      while (position < end) {\n        var segmentHeader = readSegmentHeader(data, position);\n        position = segmentHeader.headerEnd;\n        var segment = {\n          header: segmentHeader,\n          data: data,\n        };\n        if (!header.randomAccess) {\n          segment.start = position;\n          position += segmentHeader.length;\n          segment.end = position;\n        }\n        segments.push(segment);\n        if (segmentHeader.type === 51) {\n          break;\n        }\n      }\n      if (header.randomAccess) {\n        for (var i = 0, ii = segments.length; i < ii; i++) {\n          segments[i].start = position;\n          position += segments[i].header.length;\n          segments[i].end = position;\n        }\n      }\n      return segments;\n    }\n    function readRegionSegmentInformation(data, start) {\n      return {\n        width: readUint32(data, start),\n        height: readUint32(data, start + 4),\n        x: readUint32(data, start + 8),\n        y: readUint32(data, start + 12),\n        combinationOperator: data[start + 16] & 7,\n      };\n    }\n    var RegionSegmentInformationFieldLength = 17;\n    function processSegment(segment, visitor) {\n      var header = segment.header;\n      var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n      var args, at, i, atLength;\n      switch (header.type) {\n        case 0:\n          var dictionary = {};\n          var dictionaryFlags = readUint16(data, position);\n          dictionary.huffman = !!(dictionaryFlags & 1);\n          dictionary.refinement = !!(dictionaryFlags & 2);\n          dictionary.huffmanDHSelector = (dictionaryFlags >> 2) & 3;\n          dictionary.huffmanDWSelector = (dictionaryFlags >> 4) & 3;\n          dictionary.bitmapSizeSelector = (dictionaryFlags >> 6) & 1;\n          dictionary.aggregationInstancesSelector = (dictionaryFlags >> 7) & 1;\n          dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n          dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n          dictionary.template = (dictionaryFlags >> 10) & 3;\n          dictionary.refinementTemplate = (dictionaryFlags >> 12) & 1;\n          position += 2;\n          if (!dictionary.huffman) {\n            atLength = dictionary.template === 0 ? 4 : 1;\n            at = [];\n            for (i = 0; i < atLength; i++) {\n              at.push({\n                x: readInt8(data, position),\n                y: readInt8(data, position + 1),\n              });\n              position += 2;\n            }\n            dictionary.at = at;\n          }\n          if (dictionary.refinement && !dictionary.refinementTemplate) {\n            at = [];\n            for (i = 0; i < 2; i++) {\n              at.push({\n                x: readInt8(data, position),\n                y: readInt8(data, position + 1),\n              });\n              position += 2;\n            }\n            dictionary.refinementAt = at;\n          }\n          dictionary.numberOfExportedSymbols = readUint32(data, position);\n          position += 4;\n          dictionary.numberOfNewSymbols = readUint32(data, position);\n          position += 4;\n          args = [\n            dictionary,\n            header.number,\n            header.referredTo,\n            data,\n            position,\n            end,\n          ];\n          break;\n\n        case 6:\n        case 7:\n          var textRegion = {};\n          textRegion.info = readRegionSegmentInformation(data, position);\n          position += RegionSegmentInformationFieldLength;\n          var textRegionSegmentFlags = readUint16(data, position);\n          position += 2;\n          textRegion.huffman = !!(textRegionSegmentFlags & 1);\n          textRegion.refinement = !!(textRegionSegmentFlags & 2);\n          textRegion.stripSize = 1 << ((textRegionSegmentFlags >> 2) & 3);\n          textRegion.referenceCorner = (textRegionSegmentFlags >> 4) & 3;\n          textRegion.transposed = !!(textRegionSegmentFlags & 64);\n          textRegion.combinationOperator = (textRegionSegmentFlags >> 7) & 3;\n          textRegion.defaultPixelValue = (textRegionSegmentFlags >> 9) & 1;\n          textRegion.dsOffset = (textRegionSegmentFlags << 17) >> 27;\n          textRegion.refinementTemplate = (textRegionSegmentFlags >> 15) & 1;\n          if (textRegion.huffman) {\n            var textRegionHuffmanFlags = readUint16(data, position);\n            position += 2;\n            textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n            textRegion.huffmanDS = (textRegionHuffmanFlags >> 2) & 3;\n            textRegion.huffmanDT = (textRegionHuffmanFlags >> 4) & 3;\n            textRegion.huffmanRefinementDW = (textRegionHuffmanFlags >> 6) & 3;\n            textRegion.huffmanRefinementDH = (textRegionHuffmanFlags >> 8) & 3;\n            textRegion.huffmanRefinementDX = (textRegionHuffmanFlags >> 10) & 3;\n            textRegion.huffmanRefinementDY = (textRegionHuffmanFlags >> 12) & 3;\n            textRegion.huffmanRefinementSizeSelector = !!(\n              textRegionHuffmanFlags & 14\n            );\n          }\n          if (textRegion.refinement && !textRegion.refinementTemplate) {\n            at = [];\n            for (i = 0; i < 2; i++) {\n              at.push({\n                x: readInt8(data, position),\n                y: readInt8(data, position + 1),\n              });\n              position += 2;\n            }\n            textRegion.refinementAt = at;\n          }\n          textRegion.numberOfSymbolInstances = readUint32(data, position);\n          position += 4;\n          if (textRegion.huffman) {\n            error(\"JBIG2 error: huffman is not supported\");\n          }\n          args = [textRegion, header.referredTo, data, position, end];\n          break;\n\n        case 38:\n        case 39:\n          var genericRegion = {};\n          genericRegion.info = readRegionSegmentInformation(data, position);\n          position += RegionSegmentInformationFieldLength;\n          var genericRegionSegmentFlags = data[position++];\n          genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n          genericRegion.template = (genericRegionSegmentFlags >> 1) & 3;\n          genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n          if (!genericRegion.mmr) {\n            atLength = genericRegion.template === 0 ? 4 : 1;\n            at = [];\n            for (i = 0; i < atLength; i++) {\n              at.push({\n                x: readInt8(data, position),\n                y: readInt8(data, position + 1),\n              });\n              position += 2;\n            }\n            genericRegion.at = at;\n          }\n          args = [genericRegion, data, position, end];\n          break;\n\n        case 48:\n          var pageInfo = {\n            width: readUint32(data, position),\n            height: readUint32(data, position + 4),\n            resolutionX: readUint32(data, position + 8),\n            resolutionY: readUint32(data, position + 12),\n          };\n          if (pageInfo.height === 4294967295) {\n            delete pageInfo.height;\n          }\n          var pageSegmentFlags = data[position + 16];\n          var pageStripingInformatiom = readUint16(data, position + 17);\n          pageInfo.lossless = !!(pageSegmentFlags & 1);\n          pageInfo.refinement = !!(pageSegmentFlags & 2);\n          pageInfo.defaultPixelValue = (pageSegmentFlags >> 2) & 1;\n          pageInfo.combinationOperator = (pageSegmentFlags >> 3) & 3;\n          pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n          pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n          args = [pageInfo];\n          break;\n\n        case 49:\n          break;\n\n        case 50:\n          break;\n\n        case 51:\n          break;\n\n        case 62:\n          break;\n\n        default:\n          error(\n            \"JBIG2 error: segment type \" +\n              header.typeName +\n              \"(\" +\n              header.type +\n              \") is not implemented\",\n          );\n      }\n      var callbackName = \"on\" + header.typeName;\n      if (callbackName in visitor) {\n        visitor[callbackName].apply(visitor, args);\n      }\n    }\n    function processSegments(segments, visitor) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        processSegment(segments[i], visitor);\n      }\n    }\n    function parseJbig2(data, start, end) {\n      var position = start;\n      if (\n        data[position] !== 151 ||\n        data[position + 1] !== 74 ||\n        data[position + 2] !== 66 ||\n        data[position + 3] !== 50 ||\n        data[position + 4] !== 13 ||\n        data[position + 5] !== 10 ||\n        data[position + 6] !== 26 ||\n        data[position + 7] !== 10\n      ) {\n        error(\"JBIG2 error: invalid header\");\n      }\n      var header = {};\n      position += 8;\n      var flags = data[position++];\n      header.randomAccess = !(flags & 1);\n      if (!(flags & 2)) {\n        header.numberOfPages = readUint32(data, position);\n        position += 4;\n      }\n      var segments = readSegments(header, data, position, end);\n      error(\"Not implemented\");\n    }\n    function parseJbig2Chunks(chunks) {\n      var visitor = new SimpleSegmentVisitor();\n      for (var i = 0, ii = chunks.length; i < ii; i++) {\n        var chunk = chunks[i];\n        var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n        processSegments(segments, visitor);\n      }\n      return visitor;\n    }\n    function SimpleSegmentVisitor() {}\n    SimpleSegmentVisitor.prototype = {\n      onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n        this.currentPageInfo = info;\n        var rowSize = (info.width + 7) >> 3;\n        var buffer = new Uint8Array(rowSize * info.height);\n        if (info.defaultPixelValue) {\n          for (var i = 0, ii = buffer.length; i < ii; i++) {\n            buffer[i] = 255;\n          }\n        }\n        this.buffer = buffer;\n      },\n      drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n        var pageInfo = this.currentPageInfo;\n        var width = regionInfo.width,\n          height = regionInfo.height;\n        var rowSize = (pageInfo.width + 7) >> 3;\n        var combinationOperator = pageInfo.combinationOperatorOverride\n          ? regionInfo.combinationOperator\n          : pageInfo.combinationOperator;\n        var buffer = this.buffer;\n        var mask0 = 128 >> (regionInfo.x & 7);\n        var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n        var i, j, mask, offset;\n        switch (combinationOperator) {\n          case 0:\n            for (i = 0; i < height; i++) {\n              mask = mask0;\n              offset = offset0;\n              for (j = 0; j < width; j++) {\n                if (bitmap[i][j]) {\n                  buffer[offset] |= mask;\n                }\n                mask >>= 1;\n                if (!mask) {\n                  mask = 128;\n                  offset++;\n                }\n              }\n              offset0 += rowSize;\n            }\n            break;\n\n          case 2:\n            for (i = 0; i < height; i++) {\n              mask = mask0;\n              offset = offset0;\n              for (j = 0; j < width; j++) {\n                if (bitmap[i][j]) {\n                  buffer[offset] ^= mask;\n                }\n                mask >>= 1;\n                if (!mask) {\n                  mask = 128;\n                  offset++;\n                }\n              }\n              offset0 += rowSize;\n            }\n            break;\n\n          default:\n            error(\n              \"JBIG2 error: operator \" +\n                combinationOperator +\n                \" is not supported\",\n            );\n        }\n      },\n      onImmediateGenericRegion:\n        function SimpleSegmentVisitor_onImmediateGenericRegion(\n          region,\n          data,\n          start,\n          end,\n        ) {\n          var regionInfo = region.info;\n          var decodingContext = new DecodingContext(data, start, end);\n          var bitmap = decodeBitmap(\n            region.mmr,\n            regionInfo.width,\n            regionInfo.height,\n            region.template,\n            region.prediction,\n            null,\n            region.at,\n            decodingContext,\n          );\n          this.drawBitmap(regionInfo, bitmap);\n        },\n      onImmediateLosslessGenericRegion:\n        function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n          this.onImmediateGenericRegion.apply(this, arguments);\n        },\n      onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(\n        dictionary,\n        currentSegment,\n        referredSegments,\n        data,\n        start,\n        end,\n      ) {\n        var huffmanTables;\n        if (dictionary.huffman) {\n          error(\"JBIG2 error: huffman is not supported\");\n        }\n        var symbols = this.symbols;\n        if (!symbols) {\n          this.symbols = symbols = {};\n        }\n        var inputSymbols = [];\n        for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n          inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n        }\n        var decodingContext = new DecodingContext(data, start, end);\n        symbols[currentSegment] = decodeSymbolDictionary(\n          dictionary.huffman,\n          dictionary.refinement,\n          inputSymbols,\n          dictionary.numberOfNewSymbols,\n          dictionary.numberOfExportedSymbols,\n          huffmanTables,\n          dictionary.template,\n          dictionary.at,\n          dictionary.refinementTemplate,\n          dictionary.refinementAt,\n          decodingContext,\n        );\n      },\n      onImmediateTextRegion:\n        function SimpleSegmentVisitor_onImmediateTextRegion(\n          region,\n          referredSegments,\n          data,\n          start,\n          end,\n        ) {\n          var regionInfo = region.info;\n          var huffmanTables;\n          var symbols = this.symbols;\n          var inputSymbols = [];\n          for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n            inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n          }\n          var symbolCodeLength = log2(inputSymbols.length);\n          var decodingContext = new DecodingContext(data, start, end);\n          var bitmap = decodeTextRegion(\n            region.huffman,\n            region.refinement,\n            regionInfo.width,\n            regionInfo.height,\n            region.defaultPixelValue,\n            region.numberOfSymbolInstances,\n            region.stripSize,\n            inputSymbols,\n            symbolCodeLength,\n            region.transposed,\n            region.dsOffset,\n            region.referenceCorner,\n            region.combinationOperator,\n            huffmanTables,\n            region.refinementTemplate,\n            region.refinementAt,\n            decodingContext,\n          );\n          this.drawBitmap(regionInfo, bitmap);\n        },\n      onImmediateLosslessTextRegion:\n        function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n          this.onImmediateTextRegion.apply(this, arguments);\n        },\n    };\n    function Jbig2Image() {}\n    Jbig2Image.prototype = {\n      parseChunks: function Jbig2Image_parseChunks(chunks) {\n        return parseJbig2Chunks(chunks);\n      },\n    };\n    return Jbig2Image;\n  })();\n  function log2(x) {\n    var n = 1,\n      i = 0;\n    while (x > n) {\n      n <<= 1;\n      i++;\n    }\n    return i;\n  }\n  function readInt8(data, start) {\n    return (data[start] << 24) >> 24;\n  }\n  function readUint16(data, offset) {\n    return (data[offset] << 8) | data[offset + 1];\n  }\n  function readUint32(data, offset) {\n    return (\n      ((data[offset] << 24) |\n        (data[offset + 1] << 16) |\n        (data[offset + 2] << 8) |\n        data[offset + 3]) >>>\n      0\n    );\n  }\n  function shadow(obj, prop, value) {\n    Object.defineProperty(obj, prop, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: false,\n    });\n    return value;\n  }\n  var error = function () {\n    console.error.apply(console, arguments);\n    throw new Error(\"PDFJS error: \" + arguments[0]);\n  };\n  var warn = function () {\n    console.warn.apply(console, arguments);\n  };\n  var info = function () {\n    console.info.apply(console, arguments);\n  };\n  Jbig2Image.prototype.parse = function parseJbig2(data) {\n    var position = 0,\n      end = data.length;\n    if (\n      data[position] !== 151 ||\n      data[position + 1] !== 74 ||\n      data[position + 2] !== 66 ||\n      data[position + 3] !== 50 ||\n      data[position + 4] !== 13 ||\n      data[position + 5] !== 10 ||\n      data[position + 6] !== 26 ||\n      data[position + 7] !== 10\n    ) {\n      error(\"JBIG2 error: invalid header\");\n    }\n    var header = {};\n    position += 8;\n    var flags = data[position++];\n    header.randomAccess = !(flags & 1);\n    if (!(flags & 2)) {\n      header.numberOfPages = readUint32(data, position);\n      position += 4;\n    }\n    var visitor = this.parseChunks([\n      {\n        data: data,\n        start: position,\n        end: end,\n      },\n    ]);\n    var width = visitor.currentPageInfo.width;\n    var height = visitor.currentPageInfo.height;\n    var bitPacked = visitor.buffer;\n    var data = new Uint8Array(width * height);\n    var q = 0,\n      k = 0;\n    for (var i = 0; i < height; i++) {\n      var mask = 0,\n        buffer;\n      for (var j = 0; j < width; j++) {\n        if (!mask) {\n          mask = 128;\n          buffer = bitPacked[k++];\n        }\n        data[q++] = buffer & mask ? 0 : 255;\n        mask >>= 1;\n      }\n    }\n    this.width = width;\n    this.height = height;\n    this.data = data;\n  };\n  PDFJS.JpegImage = JpegImage;\n  PDFJS.JpxImage = JpxImage;\n  PDFJS.Jbig2Image = Jbig2Image;\n})(PDFJS || (PDFJS = {}));\n\nvar JpegDecoder = PDFJS.JpegImage;\n\nvar JpxDecoder = PDFJS.JpxImage;\n\nvar Jbig2Decoder = PDFJS.Jbig2Image;\n\nexport { JpegImage, JpegDecoder, JpxDecoder, Jbig2Decoder };\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeJpeg } from \"#src/async_computation/decode_jpeg_request.js\";\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\nimport { JpegDecoder } from \"#src/third_party/jpgjs/jpg.js\";\nimport { transposeArray2d } from \"#src/util/array.js\";\n\nregisterAsyncComputation(\n  decodeJpeg,\n  async (\n    data: Uint8Array,\n    width: number | undefined,\n    height: number | undefined,\n    numComponents: number | undefined,\n    convertToGrayscale: boolean,\n  ) => {\n    const parser = new JpegDecoder();\n    parser.parse(data);\n    // Just check that the total number pixels matches the expected value.\n    if (\n      width !== undefined &&\n      height !== undefined &&\n      parser.width * parser.height !== width * height\n    ) {\n      throw new Error(\n        \"JPEG data does not have the expected dimensions: \" +\n          `width=${parser.width}, height=${parser.height}, ` +\n          `expected width=${width}, expected height=${height}`,\n      );\n    }\n    width = parser.width;\n    height = parser.height;\n    if (numComponents !== undefined && parser.numComponents !== numComponents) {\n      throw new Error(\n        \"JPEG data does not have the expected number of components: \" +\n          `components=${parser.numComponents}, expected=${numComponents}`,\n      );\n    }\n    numComponents = parser.numComponents;\n    let result: Uint8Array;\n    if (parser.numComponents === 1) {\n      result = parser.getData(\n        parser.width,\n        parser.height,\n        /*forceRGBOutput=*/ false,\n      );\n    } else if (parser.numComponents === 3) {\n      result = parser.getData(\n        parser.width,\n        parser.height,\n        /*forceRGBOutput=*/ false,\n      );\n      if (convertToGrayscale) {\n        const length = width * height;\n        const converted = new Uint8Array(length);\n        for (let i = 0; i < length; ++i) {\n          converted[i] = result[i * 3];\n        }\n        result = converted;\n      } else {\n        result = transposeArray2d(result, parser.width * parser.height, 3);\n      }\n    } else {\n      throw new Error(\n        `JPEG data has an unsupported number of components: components=${parser.numComponents}`,\n      );\n    }\n    return {\n      value: { width, height, numComponents, uint8Array: result },\n      transfer: [result.buffer],\n    };\n  },\n);\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport const decodeGzip =\n  asyncComputation<(data: Uint8Array) => Uint8Array>(\"decodeGzip\");\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeGzip } from \"#src/async_computation/decode_gzip_request.js\";\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\n\nregisterAsyncComputation(decodeGzip, async (data: Uint8Array) => {\n  const result = (await import(\"pako\")).inflate(data);\n  return { value: result, transfer: [result.buffer] };\n});\n","/**\n * @license\n * Copyright 2022 William Silversmith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport interface DecodedImage {\n  width: number;\n  height: number;\n  numComponents: number;\n  uint8Array: Uint8Array;\n}\n\nexport const decodePng =\n  asyncComputation<\n    (\n      data: Uint8Array,\n      width: number | undefined,\n      height: number | undefined,\n      numComponents: number | undefined,\n      bytesPerPixel: number,\n      convertToGrayscale: boolean,\n    ) => DecodedImage\n  >(\"decodePng\");\n","/**\n * @license\n * Copyright 2022 William Silvermsith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { DecodedImage } from \"#src/async_computation/decode_png_request.js\";\n\nconst libraryEnv = {\n  emscripten_notify_memory_growth: () => {},\n  proc_exit: (code: number) => {\n    throw `proc exit: ${code}`;\n  },\n};\n\nlet pngModulePromise: Promise<WebAssembly.Instance> | undefined;\n\nfunction getPngModulePromise() {\n  if (pngModulePromise === undefined) {\n    pngModulePromise = (async () => {\n      const m = (\n        await WebAssembly.instantiateStreaming(\n          fetch(new URL(\"./libpng.wasm\", import.meta.url)),\n          {\n            env: libraryEnv,\n            wasi_snapshot_preview1: libraryEnv,\n          },\n        )\n      ).instance;\n      (m.exports._initialize as Function)();\n      return m;\n    })();\n  }\n  return pngModulePromise;\n}\n\nenum PngColorSpace {\n  GRAYSCALE = 0,\n  RGB = 2,\n  PALETTE = 3,\n  GRAYSCALE_ALPHA = 4,\n  RGBA = 6,\n}\n\n// header constants\nconst magicSpec = [137, 80, 78, 71, 13, 10, 26, 10];\nconst validHeaderCode = [\"I\", \"H\", \"D\", \"R\"];\n\n// not a full implementation of read header, just the parts we need\n// References:\n// 1. Overall PNG structure: http://www.libpng.org/pub/png/spec/1.2/PNG-Structure.html\n// 2. Header structure: http://www.libpng.org/pub/png/spec/1.2/PNG-Chunks.html\nfunction readHeader(buffer: Uint8Array): {\n  sx: number;\n  sy: number;\n  dataWidth: number;\n  numChannels: number;\n} {\n  function arrayEqualTrucated(a: any, b: any): boolean {\n    return a.every((val: number, idx: number) => val === b[idx]);\n  }\n\n  if (buffer.length < 8 + 4) {\n    throw new Error(\"png: Invalid image size: {buffer.length}\");\n  }\n\n  // check for header for magic sequence\n  const validMagic = arrayEqualTrucated(magicSpec, buffer);\n  if (!validMagic) {\n    throw new Error(`png: didn't match magic numbers: {buffer.slice(0,8)}`);\n  }\n\n  // offset into IHDR chunk so we can read more naturally\n  const bufview = new DataView(buffer.buffer, magicSpec.length);\n  const chunkLength = bufview.getUint32(0, /*littleEndian=*/ false);\n  const chunkHeaderLength = 12; // len (4), code (4), CRC (4)\n\n  if (buffer.length < magicSpec.length + chunkLength + chunkHeaderLength) {\n    throw new Error(\"png: Invalid image size: {buffer.length}\");\n  }\n\n  const chunkCode = [4, 5, 6, 7].map((i) =>\n    String.fromCharCode(bufview.getUint8(i)),\n  );\n\n  if (!arrayEqualTrucated(chunkCode, validHeaderCode)) {\n    throw new Error(`png: Invalid header code (should be IHDR): ${chunkCode}`);\n  }\n\n  const sx = bufview.getUint32(8, /*littleEndian=*/ false);\n  const sy = bufview.getUint32(12, /*littleEndian=*/ false);\n  const bitDepth = bufview.getUint8(16);\n  const colorSpace = bufview.getUint8(17);\n  const compressionMethod = bufview.getUint8(18);\n  const filterMethod = bufview.getUint8(19);\n  const interlaceMethod = bufview.getUint8(20);\n\n  if (sx === 0 || sy === 0) {\n    throw new Error(\n      `png: 0 is not a valid width or height. width: ${sx} height: ${sy}`,\n    );\n  }\n  if (compressionMethod !== 0) {\n    throw new Error(\n      `png: Invalid compression method Only 0 is supported (DEFLATE). Got: ${compressionMethod}`,\n    );\n  }\n  if (filterMethod !== 0) {\n    throw new Error(\n      `png: Invalid filter method. Only 0 (adaptive filtering) is supported. Got: ${filterMethod}`,\n    );\n  }\n  if (interlaceMethod > 1) {\n    throw new Error(\n      `png: invalid interlace method. Only 0 (no interlace) and 1 (adam7) are supported. Got: ${interlaceMethod}`,\n    );\n  }\n\n  const validBitDepths = [1, 2, 4, 8, 16];\n  if (validBitDepths.indexOf(bitDepth) === -1) {\n    throw new Error(\n      `png: invalid bit depth. Got: ${bitDepth} Valid Depths: ${validBitDepths}`,\n    );\n  }\n\n  let dataWidth = bitDepth <= 8 ? 1 : 2;\n  let numChannels = 1;\n  if (colorSpace === PngColorSpace.GRAYSCALE) {\n    // do nothing, defaults are fine.\n  } else if (colorSpace === PngColorSpace.RGB) {\n    if (bitDepth !== 8 && bitDepth !== 16) {\n      throw new Error(\n        `png: invalid bit depth for RGB colorspace. Got: ${bitDepth}`,\n      );\n    }\n    numChannels = 3;\n  } else if (colorSpace === PngColorSpace.PALETTE) {\n    dataWidth = 1;\n    numChannels = 3;\n  } else if (colorSpace === PngColorSpace.RGBA) {\n    if (bitDepth !== 8 && bitDepth !== 16) {\n      throw new Error(\n        `png: invalid bit depth for RGBA colorspace. Got: ${bitDepth}`,\n      );\n    }\n    numChannels = 4;\n  } else if (colorSpace === PngColorSpace.GRAYSCALE_ALPHA) {\n    if (bitDepth !== 8 && bitDepth !== 16) {\n      throw new Error(\n        `png: invalid bit depth for grayscale + alpha channel colorspace. Got: ${bitDepth}`,\n      );\n    }\n    numChannels = 4;\n  } else {\n    throw new Error(`png: Invalid color space: ${colorSpace}`);\n  }\n\n  return { sx, sy, dataWidth, numChannels };\n}\n\nexport async function decompressPng(\n  buffer: Uint8Array,\n  width: number | undefined,\n  height: number | undefined,\n  numComponents: number | undefined,\n  bytesPerPixel: number,\n  convertToGrayscale: boolean,\n): Promise<DecodedImage> {\n  const m = await getPngModulePromise();\n  let { sx, sy, dataWidth, numChannels } = readHeader(buffer);\n\n  if (convertToGrayscale) {\n    dataWidth = 1;\n    numChannels = 1;\n  }\n\n  if (\n    (width !== undefined && sx !== width) ||\n    (height !== undefined && sy !== height) ||\n    (numComponents !== undefined && numComponents !== numChannels) ||\n    bytesPerPixel !== dataWidth\n  ) {\n    throw new Error(\n      `png: Image decode parameters did not match expected chunk parameters.\n         Expected: width: ${width} height: ${height} channels: ${numComponents} bytes per pixel: ${bytesPerPixel} \n         Decoded:  width: ${sx} height: ${sy} channels: ${numChannels} bytes per pixel: ${dataWidth}\n         Convert to Grayscale? ${convertToGrayscale}\n        `,\n    );\n  }\n\n  const nbytes = sx * sy * dataWidth * numChannels;\n  if (nbytes < 0) {\n    throw new Error(\n      `png: Failed to decode png image size. image size: ${nbytes}`,\n    );\n  }\n\n  // heap must be referenced after creating bufPtr and imagePtr because\n  // memory growth can detatch the buffer.\n  const bufPtr = (m.exports.malloc as Function)(buffer.byteLength);\n  const imagePtr = (m.exports.malloc as Function)(nbytes);\n  const heap = new Uint8Array((m.exports.memory as WebAssembly.Memory).buffer);\n  heap.set(buffer, bufPtr);\n\n  const code = (m.exports.png_decompress as Function)(\n    bufPtr,\n    buffer.byteLength,\n    imagePtr,\n    nbytes,\n    convertToGrayscale,\n  );\n\n  try {\n    if (code !== 0) {\n      throw new Error(`png: Failed to decode png image. decoder code: ${code}`);\n    }\n\n    // Likewise, we reference memory.buffer instead of heap.buffer\n    // because memory growth during decompress could have detached\n    // the buffer.\n    const image = new Uint8Array(\n      (m.exports.memory as WebAssembly.Memory).buffer,\n      imagePtr,\n      nbytes,\n    );\n    // copy the array so it can be memory managed by JS\n    // and we can free the emscripten buffer\n    return {\n      width: sx,\n      height: sy,\n      numComponents: numChannels,\n      uint8Array: image.slice(0),\n    };\n  } finally {\n    (m.exports.free as Function)(bufPtr);\n    (m.exports.free as Function)(imagePtr);\n  }\n}\n","/**\n * @license\n * Copyright 2022 William Silversmith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodePng } from \"#src/async_computation/decode_png_request.js\";\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\nimport { decompressPng } from \"#src/sliceview/png/index.js\";\n\nregisterAsyncComputation(\n  decodePng,\n  async (\n    data: Uint8Array,\n    width: number | undefined,\n    height: number | undefined,\n    numComponents: number | undefined,\n    bytesPerPixel: number,\n    convertToGrayscale: boolean,\n  ) => {\n    const result = await decompressPng(\n      data,\n      width,\n      height,\n      numComponents,\n      bytesPerPixel,\n      convertToGrayscale,\n    );\n    return { value: result, transfer: [result.uint8Array.buffer] };\n  },\n);\n","/**\n * @license\n * Copyright 2020 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport const decodeBlosc =\n  asyncComputation<(data: Uint8Array) => Uint8Array>(\"decodeBlosc\");\n","/**\n * @license\n * Copyright 2020 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeBlosc } from \"#src/async_computation/decode_blosc_request.js\";\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\n\nregisterAsyncComputation(decodeBlosc, async (data: Uint8Array) => {\n  const { default: Blosc } = await import(\"numcodecs/blosc\");\n  const codec = Blosc.fromConfig({ id: \"blosc\" });\n  const result = await codec.decode(data);\n  return { value: result, transfer: [result.buffer] };\n});\n","/**\n * @license\n * Copyright 2023 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport const decodeZstd =\n  asyncComputation<(data: Uint8Array) => Uint8Array>(\"decodeZstd\");\n","/**\n * @license\n * Copyright 2023 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeZstd } from \"#src/async_computation/decode_zstd_request.js\";\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\n\nregisterAsyncComputation(decodeZstd, async (data: Uint8Array) => {\n  const { default: Zstd } = await import(\"numcodecs/zstd\");\n  const codec = Zstd.fromConfig({ id: \"blosc\" });\n  const result = await codec.decode(data);\n  return { value: result, transfer: [result.buffer] };\n});\n","/**\n * @license\n * Copyright 2020 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\nimport type { SingleMesh } from \"#src/single_mesh/backend.js\";\n\nexport const parseOBJFromArrayBuffer = asyncComputation<\n  (buffer: ArrayBuffer) => {\n    data: SingleMesh;\n    size: number;\n  }\n>(\"parseOBJFromArrayBuffer\");\n","// DO NOT EDIT.  Generated from templates/neuroglancer/util/typedarray_builder.template.ts.\n/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Float32ArrayBuilder {\n  length = 0;\n  data: Float32Array;\n\n  constructor(initialCapacity = 16) {\n    this.data = new Float32Array(initialCapacity);\n  }\n\n  resize(newLength: number) {\n    const { data } = this;\n    if (newLength > data.length) {\n      const newData = new Float32Array(Math.max(newLength, data.length * 2));\n      newData.set(data.subarray(0, this.length));\n      this.data = newData;\n    }\n    this.length = newLength;\n  }\n\n  get view() {\n    const { data } = this;\n    return new Float32Array(data.buffer, data.byteOffset, this.length);\n  }\n\n  shrinkToFit() {\n    this.data = new Float32Array(this.view);\n  }\n\n  clear() {\n    this.length = 0;\n  }\n\n  appendArray(other: ArrayLike<number>) {\n    const { length } = this;\n    this.resize(length + other.length);\n    this.data.set(other, length);\n  }\n\n  eraseRange(start: number, end: number) {\n    this.data.copyWithin(start, end, this.length);\n    this.length -= end - start;\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Detects gzip format based on the 2 magic bytes at the start.\n */\nexport function isGzipFormat(data: ArrayBufferView) {\n  const view = new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n  return view.length > 2 && view[0] === 0x1f && view[1] === 0x8b;\n}\n\n/**\n * Decompress `data` if it is in gzip format, otherwise just return it.\n */\nexport async function maybeDecompressGzip(data: ArrayBuffer | ArrayBufferView) {\n  let byteView: Uint8Array;\n  if (data instanceof ArrayBuffer) {\n    byteView = new Uint8Array(data);\n  } else {\n    byteView = new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n  }\n  if (isGzipFormat(byteView)) {\n    return (await import(\"pako\")).inflate(byteView);\n  }\n  return byteView;\n}\n","/**\n * @license\n * Copyright 2020 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\nimport { parseOBJFromArrayBuffer } from \"#src/async_computation/obj_mesh_request.js\";\nimport type { SingleMesh } from \"#src/single_mesh/backend.js\";\nimport { Float32ArrayBuilder } from \"#src/util/float32array_builder.js\";\nimport { maybeDecompressGzip } from \"#src/util/gzip.js\";\nimport { Uint32ArrayBuilder } from \"#src/util/uint32array_builder.js\";\n\nregisterAsyncComputation(\n  parseOBJFromArrayBuffer,\n  async (buffer: ArrayBuffer) => {\n    buffer = await maybeDecompressGzip(buffer);\n    let text = new TextDecoder().decode(buffer);\n    // Strip comments\n    text = text.replace(/#.*/g, \"\");\n    const vertexPositions = new Float32ArrayBuilder();\n    const indices = new Uint32ArrayBuilder();\n\n    // Find vertices\n    for (const match of text.matchAll(\n      /^v\\s+([-0-9.eE]+)\\s+([-0-9.eE]+)\\s+([-0-9.eE]+)\\s*$/gm,\n    )) {\n      vertexPositions.appendArray([\n        parseFloat(match[1]),\n        parseFloat(match[2]),\n        parseFloat(match[3]),\n      ]);\n    }\n\n    // Find indices\n    for (const match of text.matchAll(\n      /^f\\s+([0-9]+)\\s+([0-9]+)\\s+([0-9]+)\\s*$/gm,\n    )) {\n      indices.appendArray([\n        parseInt(match[1], 10) - 1,\n        parseInt(match[2], 10) - 1,\n        parseInt(match[3], 10) - 1,\n      ]);\n    }\n\n    vertexPositions.shrinkToFit();\n    indices.shrinkToFit();\n\n    const mesh: SingleMesh = {\n      info: {\n        numVertices: vertexPositions.length / 3,\n        numTriangles: indices.length / 3,\n        vertexAttributes: [],\n      },\n      vertexPositions: vertexPositions.view,\n      indices: indices.view,\n      vertexAttributes: [],\n    };\n\n    const size = mesh.vertexPositions.byteLength + mesh.indices.byteLength;\n    console.log(mesh);\n\n    return {\n      value: { data: mesh, size },\n      transfer: [mesh.indices.buffer, mesh.vertexPositions.buffer],\n    };\n  },\n);\n","/**\n * @license\n * Copyright 2021 William Silversmith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport const decodeCompresso =\n  asyncComputation<(data: Uint8Array) => Uint8Array>(\"decodeCompresso\");\n","/**\n * @license\n * Copyright 2021 William Silvermsith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst libraryEnv = {\n  emscripten_notify_memory_growth: () => {},\n  proc_exit: (code: number) => {\n    throw `proc exit: ${code}`;\n  },\n};\n\nlet compressoModulePromise: Promise<WebAssembly.Instance> | undefined;\n\nfunction getCompressoModulePromise() {\n  if (compressoModulePromise === undefined) {\n    compressoModulePromise = (async () => {\n      const m = (\n        await WebAssembly.instantiateStreaming(\n          fetch(new URL(\"./compresso.wasm\", import.meta.url)),\n          {\n            env: libraryEnv,\n            wasi_snapshot_preview1: libraryEnv,\n          },\n        )\n      ).instance;\n      (m.exports._initialize as Function)();\n      return m;\n    })();\n  }\n  return compressoModulePromise;\n}\n\n// not a full implementation of read header, just the parts we need\nfunction readHeader(buffer: Uint8Array): {\n  sx: number;\n  sy: number;\n  sz: number;\n  dataWidth: number;\n} {\n  // check for header \"cpso\"\n  const magic =\n    buffer[0] === \"c\".charCodeAt(0) &&\n    buffer[1] === \"p\".charCodeAt(0) &&\n    buffer[2] === \"s\".charCodeAt(0) &&\n    buffer[3] === \"o\".charCodeAt(0);\n  if (!magic) {\n    throw new Error(\"compresso: didn't match magic numbers\");\n  }\n  const format = buffer[4];\n  if (format > 1) {\n    throw new Error(\"compresso: didn't match format version\");\n  }\n\n  const bufview = new DataView(buffer.buffer, 0);\n\n  const dataWidth = buffer[5];\n  const sx = bufview.getUint16(6, /*littleEndian=*/ true);\n  const sy = bufview.getUint16(8, /*littleEndian=*/ true);\n  const sz = bufview.getUint16(10, /*littleEndian=*/ true);\n\n  return { sx, sy, sz, dataWidth };\n}\n\nexport async function decompressCompresso(\n  buffer: Uint8Array,\n): Promise<Uint8Array> {\n  const m = await getCompressoModulePromise();\n\n  const { sx, sy, sz, dataWidth } = readHeader(buffer);\n  const voxels = sx * sy * sz;\n  const nbytes = voxels * dataWidth;\n\n  if (nbytes < 0) {\n    throw new Error(`Failed to decode compresso image. image size: ${nbytes}`);\n  }\n\n  // heap must be referenced after creating bufPtr because\n  // memory growth can detatch the buffer.\n  const imagePtr = (m.exports.malloc as Function)(nbytes);\n  const bufPtr = (m.exports.malloc as Function)(buffer.byteLength);\n  const heap = new Uint8Array((m.exports.memory as WebAssembly.Memory).buffer);\n  heap.set(buffer, bufPtr);\n\n  const code = (m.exports.compresso_decompress as Function)(\n    bufPtr,\n    buffer.byteLength,\n    imagePtr,\n  );\n\n  try {\n    if (code !== 0) {\n      throw new Error(\n        `Failed to decode compresso image. decoder code: ${code}`,\n      );\n    }\n\n    // Likewise, we reference memory.buffer instead of heap.buffer\n    // because memory growth during decompress could have detached\n    // the buffer.\n    const image = new Uint8Array(\n      (m.exports.memory as WebAssembly.Memory).buffer,\n      imagePtr,\n      voxels * dataWidth,\n    );\n    // copy the array so it can be memory managed by JS\n    // and we can free the emscripten buffer\n    return image.slice(0);\n  } finally {\n    (m.exports.free as Function)(bufPtr);\n    (m.exports.free as Function)(imagePtr);\n  }\n}\n","/**\n * @license\n * Copyright 2021 William Silversmith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeCompresso } from \"#src/async_computation/decode_compresso_request.js\";\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\nimport { decompressCompresso } from \"#src/sliceview/compresso/index.js\";\n\nregisterAsyncComputation(decodeCompresso, async (data: Uint8Array) => {\n  const result = await decompressCompresso(data);\n  return { value: result, transfer: [result.buffer] };\n});\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\nimport type { TriangularMesh } from \"#src/datasource/vtk/parse.js\";\n\nexport const parseVTKFromArrayBuffer = asyncComputation<\n  (buffer: ArrayBuffer) => {\n    data: TriangularMesh;\n    size: number;\n  }\n>(\"parseVTKFromArrayBuffer\");\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file\n * Parser for VTK file format.\n * See http://www.vtk.org/wp-content/uploads/2015/04/file-formats.pdf\n */\n\nconst maxHeaderLength = 1000;\n\nconst vtkHeaderPattern =\n  /^[ \\t]*#[ \\t]+vtk[ \\t]+DataFile[ \\t]+Version[ \\t]+([^\\s]+)[ \\t]*\\n(.*)\\n[ \\t]*(ASCII|BINARY)[ \\t]*\\n[ \\t]*DATASET[ \\t]+([^ ]+)[ \\t]*\\n/;\n\nconst pointDataHeaderPattern = /^[ \\t]*POINT_DATA[ \\t]+([0-9]+)[ \\t]*$/;\n\nconst pointsHeaderPattern = /^[ \\t]*POINTS[ \\t]+([0-9]+)[ \\t]+([^\\s]+)[ \\t]*$/;\nconst scalarsHeaderPattern =\n  /^[ \\t]*SCALARS[ \\t]+([^\\s]+)[ \\t]+([^\\s]+)(?:[ \\t]+([0-9]+))?[ \\t]*$/;\nconst scalarsLookupTableHeaderPattern =\n  /^[ \\t]*LOOKUP_TABLE[ \\t]+([^\\s]+)[ \\t]*$/;\nconst polygonsHeaderPattern =\n  /^[ \\t]*POLYGONS[ \\t]+([0-9]+)[ \\t]+([0-9]+)[ \\t]*$/;\n\nconst trianglePattern =\n  /^[ \\t]*3[ \\t]+([0-9]+)[ \\t]+([0-9]+)[ \\t]+([0-9]+)[ \\t]*$/;\n\nconst blankLinePattern = /^[ \\t]*$/;\n\nexport interface VTKHeader {\n  version: string;\n  comment: string;\n  datasetType: string;\n  dataFormat: string;\n}\n\nexport interface VertexAttribute {\n  name: string;\n  data: Float32Array;\n  numComponents: number;\n  tableName: string;\n  dataType: string;\n}\n\nexport class TriangularMesh {\n  constructor(\n    public header: VTKHeader,\n    public numVertices: number,\n    public vertexPositions: Float32Array,\n    public numTriangles: number,\n    public indices: Uint32Array,\n    public vertexAttributes: VertexAttribute[],\n  ) {}\n}\n\nexport function getTriangularMeshSize(mesh: TriangularMesh) {\n  let size = mesh.vertexPositions.byteLength + mesh.indices.byteLength;\n  for (const attribute of mesh.vertexAttributes) {\n    size += attribute.data.byteLength;\n  }\n  return size;\n}\n\nfunction parsePolydataAscii(\n  header: VTKHeader,\n  data: ArrayBufferView,\n): TriangularMesh {\n  const decoder = new TextDecoder();\n  const text = decoder.decode(data);\n  const lines = text.split(\"\\n\");\n  const numLines = lines.length;\n  let lineNumber = 0;\n\n  let numVertices = -1;\n  let vertexPositions: Float32Array | undefined = undefined;\n  let numTriangles = -1;\n  let indices: Uint32Array | undefined = undefined;\n\n  const vertexAttributes = new Array<VertexAttribute>();\n\n  function parseArray(\n    fieldName: string,\n    n: number,\n    numComponents: number,\n    _dataType: string,\n  ) {\n    // TODO(jbms): respect dataType\n    const pattern = RegExp(\n      \"^[ \\t]*\" + \"([^s]+)[ \\t]+\".repeat(numComponents - 1) + \"([^s]+)[ \\t]*$\",\n    );\n    if (numLines - lineNumber < n) {\n      throw new Error(\n        `VTK data ended unexpectedly while parsing ${fieldName}.`,\n      );\n    }\n    const result = new Float32Array(n * numComponents);\n    let outIndex = 0;\n    for (let i = 0; i < n; ++i) {\n      const line = lines[lineNumber++];\n      const m = line.match(pattern);\n      if (m === null) {\n        throw new Error(\n          `Failed to parse ${fieldName} line ${i}: ${JSON.stringify(line)}.`,\n        );\n      }\n      for (let j = 0; j < numComponents; ++j) {\n        result[outIndex++] = parseFloat(m[j + 1]);\n      }\n    }\n    return result;\n  }\n\n  function parsePoints(nVertices: number, dataType: string) {\n    if (indices !== undefined) {\n      throw new Error(\"POINTS specified more than once.\");\n    }\n    numVertices = nVertices;\n    vertexPositions = parseArray(\"POINTS\", nVertices, 3, dataType);\n  }\n\n  function parsePolygons(numFaces: number, numValues: number) {\n    if (indices !== undefined) {\n      throw new Error(\"VERTICES specified more than once.\");\n    }\n    if (numLines - lineNumber < numFaces) {\n      throw new Error(\"VTK data ended unexpectedly\");\n    }\n    if (numValues !== numFaces * 4) {\n      throw new Error(\"Only triangular faces are supported.\");\n    }\n    numTriangles = numFaces;\n    indices = new Uint32Array(numFaces * 3);\n    let outIndex = 0;\n    for (let i = 0; i < numFaces; ++i) {\n      const m = lines[lineNumber++].match(trianglePattern);\n      if (m === null) {\n        throw new Error(`Failed to parse indices for face ${i}`);\n      }\n      indices[outIndex++] = parseInt(m[1], 10);\n      indices[outIndex++] = parseInt(m[2], 10);\n      indices[outIndex++] = parseInt(m[3], 10);\n    }\n  }\n\n  function parseScalars(name: string, dataType: string, numComponents: number) {\n    if (lineNumber === numLines) {\n      throw new Error(\"Expected LOOKUP_TABLE directive.\");\n    }\n    const firstLine = lines[lineNumber++];\n    const match = firstLine.match(scalarsLookupTableHeaderPattern);\n    if (match === null) {\n      throw new Error(\n        `Expected LOOKUP_TABLE directive in ${JSON.stringify(firstLine)}.`,\n      );\n    }\n    const tableName = match[1];\n    const values = parseArray(\n      `SCALARS(${name})`,\n      numVertices,\n      numComponents,\n      dataType,\n    );\n    vertexAttributes.push({\n      name,\n      data: values,\n      numComponents,\n      dataType,\n      tableName,\n    });\n  }\n\n  function parsePointData(nVertices: number) {\n    if (numVertices !== nVertices) {\n      throw new Error(\n        `Number of vertices specified in POINT_DATA section (${nVertices}) ` +\n          `must match number of points (${numVertices}).`,\n      );\n    }\n    while (lineNumber < numLines) {\n      const line = lines[lineNumber];\n      if (line.match(blankLinePattern)) {\n        ++lineNumber;\n        continue;\n      }\n      const match = line.match(scalarsHeaderPattern);\n      if (match !== null) {\n        let numComponents: number;\n        if (match[3] === undefined) {\n          numComponents = 1;\n        } else {\n          numComponents = parseInt(match[3], 10);\n        }\n        ++lineNumber;\n        parseScalars(match[1], match[2], numComponents);\n      }\n    }\n  }\n\n  while (lineNumber < numLines) {\n    const line = lines[lineNumber];\n    if (line.match(blankLinePattern)) {\n      ++lineNumber;\n      continue;\n    }\n    let match: RegExpMatchArray | null;\n    match = line.match(pointsHeaderPattern);\n    if (match !== null) {\n      ++lineNumber;\n      parsePoints(parseInt(match[1], 10), match[2]);\n      continue;\n    }\n    match = line.match(polygonsHeaderPattern);\n    if (match !== null) {\n      ++lineNumber;\n      parsePolygons(parseInt(match[1], 10), parseInt(match[2], 10));\n      continue;\n    }\n    match = line.match(pointDataHeaderPattern);\n    if (match !== null) {\n      ++lineNumber;\n      parsePointData(parseInt(match[1], 10));\n      break;\n    }\n    throw new Error(`Failed to parse VTK line ${JSON.stringify(line)}.`);\n  }\n\n  if (vertexPositions === undefined) {\n    throw new Error(\"Vertex positions not specified.\");\n  }\n  if (indices === undefined) {\n    throw new Error(\"Indices not specified.\");\n  }\n  return new TriangularMesh(\n    header,\n    numVertices,\n    vertexPositions,\n    numTriangles,\n    indices,\n    vertexAttributes,\n  );\n}\n\nconst asciiFormatParsers = new Map([[\"POLYDATA\", parsePolydataAscii]]);\n\nexport function parseVTK(data: ArrayBufferView): TriangularMesh {\n  // Decode start of data as UTF-8 to determine whether it is ASCII or BINARY format.  Decoding\n  // errors (as will occur if it is binary format) will be ignored.\n  const decoder = new TextDecoder();\n  const decodedHeaderString = decoder.decode(\n    new Uint8Array(\n      data.buffer,\n      data.byteOffset,\n      Math.min(data.byteLength, maxHeaderLength),\n    ),\n  );\n  const headerMatch = decodedHeaderString.match(vtkHeaderPattern);\n  if (headerMatch === null) {\n    throw new Error(\"Failed to parse VTK file header.\");\n  }\n  const byteOffset = headerMatch[0].length;\n  const datasetType = headerMatch[4];\n  const dataFormat = headerMatch[3];\n  const header: VTKHeader = {\n    version: headerMatch[1],\n    comment: headerMatch[2],\n    datasetType,\n    dataFormat,\n  };\n  const remainingData = new Uint8Array(\n    data.buffer,\n    data.byteOffset + byteOffset,\n    data.byteLength - byteOffset,\n  );\n  if (dataFormat === \"ASCII\") {\n    const formatParser = asciiFormatParsers.get(datasetType);\n    if (formatParser === undefined) {\n      throw new Error(\n        `VTK dataset type ${JSON.stringify(datasetType)} is not supported.`,\n      );\n    }\n    return formatParser(header, remainingData);\n  }\n  throw new Error(\n    `VTK data format ${JSON.stringify(dataFormat)} is not supported.`,\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\nimport { parseVTKFromArrayBuffer } from \"#src/async_computation/vtk_mesh_request.js\";\nimport { getTriangularMeshSize, parseVTK } from \"#src/datasource/vtk/parse.js\";\nimport { maybeDecompressGzip } from \"#src/util/gzip.js\";\n\nregisterAsyncComputation(\n  parseVTKFromArrayBuffer,\n  async (buffer: ArrayBuffer) => {\n    const mesh = parseVTK(await maybeDecompressGzip(buffer));\n    return {\n      value: { data: mesh, size: getTriangularMeshSize(mesh) },\n      transfer: [\n        mesh.indices.buffer,\n        mesh.vertexPositions.buffer,\n        ...Array.from(mesh.vertexAttributes.values()).map((a) => a.data.buffer),\n      ],\n    };\n  },\n);\n"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","__webpack_modules__","exports","definition","key","chunkId","promises","obj","prop","scriptUrl","installedChunks","installChunk","data","ids","modules","runtime","i","installedChunkData","promise","e","resolve","asyncComputation","id","encodeCompressedSegmentationUint32","encodeCompressedSegmentationUint64","handlers","setupChannel","port","msg","t","args","value","transfer","error","registerAsyncComputation","request","handler","BLOCK_HEADER_SIZE","newCache","writeEncodedRepresentation","outputData","outputOffset","encodingBuffer","indexBuffer","encodedBits","encodedSize32Bits","wordIndex","elementIndex","word","writeBlock","output","baseOffset","cache","numBlockElements","numUniqueValues","valuesBuffer2","indexBuffer2","uint32sPerElement","encodedSize32bits","encodedValueBaseOffset","elementsToWrite","writeTable","tableOffset","curOutputOff","length","encodeChannel","blockSize","rawData","volumeSize","baseInputOffset","inputStrides","encodeBlock","gridSize","blockIndexSize","curGridSize","gx","gy","gz","xSize","ySize","zSize","xBlockSize","yBlockSize","zBlockSize","headerOffset","actualSize","sx","sy","sz","bz","by","bx","inputOffset","encodeChannels","channelOffsetOutputBase","numChannels","channel","partitionArray","array","start","end","predicate","x","filterArrayInplace","outIndex","maybePadArray","newSize","newArray","size","baseStride","strides","stride","transposeArray2d","majorSize","minorSize","transpose","j","index","tile2dArray","majorDimension","minorTiles","majorTiles","minorDimension","result","minorTileStride","majorTileStride","minorStride","minor","major","inputValue","minorTile","majorTile","binarySearch","haystack","needle","compare","low","high","mid","compareResult","findClosestMatchInSortedArray","bestIndex","bestDistance","distance","binarySearchLowerBound","begin","count","step","findMatchingIndices","input","out","getIndicesComplement","indices","max","mask","arraysEqual","b","arraysEqualWithPredicate","elementsEqual","a","getInsertPermutation","n","sourceIndex","targetIndex","newToOld","oldDim","newDim","scatterUpdate","dest","source","destIndex","gatherUpdate","transposeNestedArrays","outerIndex","outerLength","inner","innerIndex","innerLength","resultInner","spliceArray","splices","parts","origOffset","numSplices","retainCount","deleteCount","insertCount","origLength","getMergeSplices","oldArray","oldIndex","newIndex","oldCount","newCount","c","oldValue","newValue","getFixedOrderMergeSplices","equal","mergeSequences","aCount","bCount","aCallback","bCallback","abCallback","tempEncodingBuffer","tempValuesBuffer1","tempValuesBuffer2","tempIndexBuffer1","tempIndexBuffer2","ax","ay","az","valuesBuffer1","indexBuffer1","noAdjacentDuplicateIndex","prevLow","curInputOff","blockElementIndex","bsy","bsz","z","y","valueLow","valueIndex","outputIndex2","prevHigh","valueHigh","aHigh","bHigh","aLow","bLow","Uint32ArrayBuilder","initialCapacity","newLength","newData","other","tempBuffer","shape","decodeJpeg","loadURLasArrayBuffer","path","callback","offset","arr","xhr","JpegImage","PDFJS","buffer","width","height","imageData","imageDataBytes","imageDataArray","values","rgb","dctZigZag","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","constructor","buildHuffmanTable","codeLengths","k","code","p","q","getBlockBufferOffset","component","row","col","decodeScan","frame","components","resetInterval","spectralStart","spectralEnd","successivePrev","successive","precision","samplesPerLine","scanLines","mcusPerLine","progressive","maxH","maxV","startOffset","bitsData","bitsCount","readBit","nextByte","decodeHuffman","tree","node","receive","receiveAndExtend","decodeBaseline","diff","rs","s","r","decodeDCFirst","decodeDCSuccessive","eobrun","decodeACFirst","successiveACState","successiveACNextValue","decodeACSuccessive","decodeMcu","decode","mcu","mcuRow","mcuCol","blockRow","blockCol","decodeBlock","componentsLength","decodeFn","marker","mcuExpected","h","v","quantizeAndInverse","blockBufferOffset","qt","blockData","v0","v1","v2","v3","v4","v5","v6","v7","p0","p1","p2","p3","p4","p5","p6","p7","buildComponentData","blocksPerLine","blocksPerColumn","computationBuffer","clamp0to255","readUint16","readDataBlock","prepareComponents","mcusPerColumn","blocksPerLineForMcu","blocksPerColumnForMcu","blocksBufferSize","jfif","adobe","pixels","quantizationTables","huffmanTablesAC","huffmanTablesDC","fileMarker","l","appData","quantizationTablesLength","quantizationTablesEnd","quantizationTableSpec","tableData","componentsCount","componentId","qId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","scanLength","selectorsCount","componentIndex","tableSpec","successiveApproximation","processed","scaleX","scaleY","componentScaleX","componentScaleY","blocksPerScanline","numComponents","dataLength","xScaleBlockOffset","mask3LSB","transform","Y","Cb","Cr","g","m","min","scale","forceRGBoutput","ArithmeticDecoder","QeTable","bp","b1","contexts","pos","cx_index","cx_mps","qeTableIcx","qeIcx","d","JpxImage","SubbandsGainLog2","head","position","headerSize","lbox","readUint32","tbox","jumpDataLength","method","precedence","approximation","colorspace","warn","info","headerType","stream","newByte","oldByte","Xsiz","Ysiz","XOsiz","YOsiz","Csiz","context","doNotRecover","sqcd","spqcds","spqcdSize","scalarExpounded","tile","siz","calculateComponentDimensions","calculateTileGrids","qcd","spqcd","qcc","cqcc","cod","scod","blockStyle","precinctsSizes","precinctsSize","unsupported","initializeTile","buildPackets","parseTilePackets","transformComponents","tiles","numXtiles","numYtiles","ii","jj","tileComponent","getBlocksDimensions","codOrCoc","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","numprecinctshigh","numprecincts","buildCodeblocks","subband","xcb_","ycb_","codeblockWidth","codeblockHeight","cbx0","cby0","cbx1","cby1","precinctParameters","codeblocks","precincts","codeblock","precinctNumber","pi","pj","precinct","createPacket","layerNumber","precinctCodeblocks","subbands","LayerResolutionComponentPositionIterator","tileIndex","layersCount","maxDecompositionLevelsCount","packet","ResolutionLayerComponentPositionIterator","ResolutionPositionComponentLayerIterator","maxNumPrecinctsInLevel","maxNumPrecincts","resolutions","PositionComponentResolutionLayerIterator","getPrecinctSizesInImageScale","precinctsIterationSizes","px","py","decompositionLevelsCount","sizeInImageScale","getPrecinctIndexIfExist","ComponentPositionResolutionLayerIterator","pxIndex","pyIndex","precinctIterationSizes","posX","posY","startPrecinctRowIndex","minWidth","minHeight","maxNumWide","maxNumHigh","sizePerComponent","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","widthCurrentResolution","heightCurrentResolution","blocksDimensions","bscale","resolutionSubbands","progressionOrder","bufferSize","skipNextBit","readBits","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","sopMarkerUsed","ephMarkerUsed","packetsIterator","queue","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","valueReady","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","codingpasses","codingpassesLog2","log2","bits","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","segmentationSymbolUsed","x0","y0","right","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","totalLength","dataItem","encodedData","chunk","decoder","sign","magnitude","bitsDecoded","magnitudeCorrection","nb","interleave","levelOffset","transformTile","codingStyleParameters","quantizationParameters","guardBits","ReversibleTransform","IrreversibleTransform","subbandCoefficients","mu","epsilon","gainLog2","resultImages","transformedTiles","tile0","shift","maxK","y1","y2","val","fourComponents","y0items","y1items","y2items","y3items","component0","alpha01","items","qcdOrQcc","levelsLength","level","currentLevel","defaultValue","stopValue","levelIndex","currentValue","UNIFORM_CONTEXT","RUNLENGTH_CONTEXT","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","zeroBitPlanes","coefficientCount","column","neighborsSignificance","left","coefficentsMagnitude","coefficentsSign","processingFlags","labels","processedInverseMask","processedMask","firstMagnitudeBitMask","i0","i1","contextLabel","decision","contribution","sign0","sign1","significance1","decoded","horizontalContribution","width4","index0","indexNext","significance","bit","oneRowDown","twoRowsDown","threeRowsDown","iNext","indexBase","checkAllEmpty","allEmpty","hasSignificantCoefficent","i2","symbol","Transform","u0","ll","j1","j2","hl_lh_hh","llWidth","llHeight","llItems","u","bufferPadding","rowBuffer","numBuffers","colBuffers","currentBuffer","len","current","next","alpha","beta","gamma","K","K_","Jbig2Image","ContextCache","DecodingContext","shadow","decodeInteger","contextCache","procedure","prev","decodeIAID","codeLength","SegmentTypes","CodingTemplates","RefinementTemplates","ReusedContexts","RefinementReusedContexts","decodeBitmapTemplate0","decodingContext","pixel","row1","row2","bitmap","OLD_PIXEL_MASK","decodeBitmap","mmr","templateIndex","prediction","skip","at","useskip","template","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","maxX","minY","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ltp","j0","sltp","decodeRefinement","referenceBitmap","offsetX","offsetY","codingTemplate","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeSymbolDictionary","huffman","refinement","symbols","numberOfNewSymbols","numberOfExportedSymbols","huffmanTables","refinementTemplateIndex","refinementAt","newSymbols","currentHeight","symbolCodeLength","deltaHeight","currentWidth","totalWidth","deltaWidth","numberOfInstances","decodeTextRegion","symbolId","rdx","rdy","exportedSymbols","flags","currentFlag","totalSymbolsLength","runLength","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","transposed","dsOffset","referenceCorner","combinationOperator","stripT","firstS","deltaT","deltaFirstS","currentS","currentT","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","offsetT","offsetS","s2","t2","symbolRow","maxWidth","deltaS","readSegmentHeader","segmentHeader","segmentType","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","bytes","referredToSegmentNumberSize","referredTo","number","genericRegionInfo","readRegionSegmentInformation","genericRegionSegmentFlags","RegionSegmentInformationFieldLength","genericRegionMmr","searchPatternLength","searchPattern","readSegments","header","segments","segment","processSegment","visitor","atLength","dictionary","dictionaryFlags","readInt8","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","genericRegion","pageInfo","pageSegmentFlags","pageStripingInformatiom","callbackName","processSegments","parseJbig2","parseJbig2Chunks","chunks","SimpleSegmentVisitor","rowSize","regionInfo","mask0","offset0","region","currentSegment","referredSegments","bitPacked","JpegDecoder","JpxDecoder","Jbig2Decoder","convertToGrayscale","parser","converted","decodeGzip","decodePng","libraryEnv","pngModulePromise","getPngModulePromise","PngColorSpace","magicSpec","validHeaderCode","readHeader","arrayEqualTrucated","idx","bufview","chunkLength","chunkCode","bitDepth","colorSpace","compressionMethod","filterMethod","interlaceMethod","validBitDepths","dataWidth","decompressPng","bytesPerPixel","nbytes","bufPtr","imagePtr","image","decodeBlosc","Blosc","decodeZstd","Zstd","parseOBJFromArrayBuffer","Float32ArrayBuilder","isGzipFormat","view","maybeDecompressGzip","byteView","text","vertexPositions","match","mesh","decodeCompresso","compressoModulePromise","getCompressoModulePromise","decompressCompresso","voxels","parseVTKFromArrayBuffer","maxHeaderLength","vtkHeaderPattern","pointDataHeaderPattern","pointsHeaderPattern","scalarsHeaderPattern","scalarsLookupTableHeaderPattern","polygonsHeaderPattern","trianglePattern","blankLinePattern","TriangularMesh","numVertices","numTriangles","vertexAttributes","getTriangularMeshSize","attribute","parsePolydataAscii","lines","numLines","lineNumber","parseArray","fieldName","_dataType","pattern","line","parsePoints","nVertices","dataType","parsePolygons","numFaces","numValues","parseScalars","name","firstLine","tableName","parsePointData","asciiFormatParsers","parseVTK","headerMatch","byteOffset","datasetType","dataFormat","remainingData","formatParser"],"sourceRoot":""}