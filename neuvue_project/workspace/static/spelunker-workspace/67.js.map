{"version":3,"file":"67.js","sources":["webpack://neuroglancer/./src/sliceview/compressed_segmentation/encode_uint32.ts","webpack://neuroglancer/./src/sliceview/compressed_segmentation/encode_uint64.ts","webpack://neuroglancer/./src/sliceview/png/index.ts","webpack://neuroglancer/./src/sliceview/jxl/index.ts","webpack://neuroglancer/./src/sliceview/compresso/index.ts","webpack://neuroglancer/./src/async_computation/index.ts","webpack://neuroglancer/./src/async_computation/handler.ts","webpack://neuroglancer/./src/sliceview/compressed_segmentation/encode_common.ts","webpack://neuroglancer/./src/util/array.ts","webpack://neuroglancer/./src/util/uint32array_builder.ts","webpack://neuroglancer/./src/async_computation/encode_compressed_segmentation.ts","webpack://neuroglancer/./src/async_computation/encode_compressed_segmentation_request.ts","webpack://neuroglancer/./src/third_party/jpgjs/jpg.js","webpack://neuroglancer/./src/async_computation/decode_jpeg.ts","webpack://neuroglancer/./src/async_computation/decode_jpeg_request.ts","webpack://neuroglancer/./src/async_computation/decode_png.ts","webpack://neuroglancer/./src/async_computation/decode_png_request.ts","webpack://neuroglancer/./src/async_computation/decode_blosc.ts","webpack://neuroglancer/./src/async_computation/decode_blosc_request.ts","webpack://neuroglancer/./src/async_computation/decode_zstd.ts","webpack://neuroglancer/./src/async_computation/decode_zstd_request.ts","webpack://neuroglancer/./src/util/float32array_builder.ts","webpack://neuroglancer/./src/util/gzip.ts","webpack://neuroglancer/./src/async_computation/obj_mesh.ts","webpack://neuroglancer/./src/async_computation/obj_mesh_request.ts","webpack://neuroglancer/./src/async_computation/decode_jxl.ts","webpack://neuroglancer/./src/async_computation/decode_jxl_request.ts","webpack://neuroglancer/./src/async_computation/decode_compresso.ts","webpack://neuroglancer/./src/async_computation/decode_compresso_request.ts","webpack://neuroglancer/./src/datasource/vtk/parse.ts","webpack://neuroglancer/./src/async_computation/vtk_mesh.ts","webpack://neuroglancer/./src/async_computation/vtk_mesh_request.ts"],"sourcesContent":["// DO NOT EDIT.  Generated from templates/sliceview/compressed_segmentation/encode.template.ts.\n/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file\n * Support for compressing uint32/uint64 segment label chunks.\n */\n\nimport {\n  encodeChannel as encodeChannelCommon,\n  encodeChannels as encodeChannelsCommon,\n  writeBlock,\n} from \"#src/sliceview/compressed_segmentation/encode_common.js\";\nimport { getFortranOrderStrides } from \"#src/util/array.js\";\nimport type { Uint32ArrayBuilder } from \"#src/util/uint32array_builder.js\";\n\nexport { newCache } from \"#src/sliceview/compressed_segmentation/encode_common.js\";\n\nlet tempEncodingBuffer: Uint32Array;\nlet tempValuesBuffer1: Uint32Array;\nlet tempValuesBuffer2: Uint32Array;\nlet tempIndexBuffer1: Uint32Array;\nlet tempIndexBuffer2: Uint32Array;\n\nconst uint32sPerElement = 1;\n\nexport function encodeBlock(\n  rawData: Uint32Array,\n  inputOffset: number,\n  inputStrides: ArrayLike<number>,\n  blockSize: ArrayLike<number>,\n  actualSize: ArrayLike<number>,\n  baseOffset: number,\n  cache: Map<string, number>,\n  output: Uint32ArrayBuilder,\n): [number, number] {\n  const ax = actualSize[0],\n    ay = actualSize[1],\n    az = actualSize[2];\n  const bx = blockSize[0],\n    by = blockSize[1],\n    bz = blockSize[2];\n  const sx = inputStrides[0];\n  let sy = inputStrides[1],\n    sz = inputStrides[2];\n  sz -= sy * ay;\n  sy -= sx * ax;\n  if (ax * ay * az === 0) {\n    return [0, 0];\n  }\n\n  const numBlockElements = bx * by * bz + 31; // Add padding elements.\n  if (\n    tempEncodingBuffer === undefined ||\n    tempEncodingBuffer.length < numBlockElements\n  ) {\n    tempEncodingBuffer = new Uint32Array(numBlockElements);\n    tempValuesBuffer1 = new Uint32Array(numBlockElements * uint32sPerElement);\n    tempValuesBuffer2 = new Uint32Array(numBlockElements * uint32sPerElement);\n    tempIndexBuffer1 = new Uint32Array(numBlockElements);\n    tempIndexBuffer2 = new Uint32Array(numBlockElements);\n  }\n\n  const encodingBuffer = tempEncodingBuffer.subarray(0, numBlockElements);\n  encodingBuffer.fill(0);\n  const valuesBuffer1 = tempValuesBuffer1;\n  const valuesBuffer2 = tempValuesBuffer2;\n  const indexBuffer1 = tempIndexBuffer1;\n  const indexBuffer2 = tempIndexBuffer2;\n\n  let noAdjacentDuplicateIndex = 0;\n  {\n    let prevLow = (rawData[inputOffset] + 1) >>> 0;\n\n    let curInputOff = inputOffset;\n    let blockElementIndex = 0;\n    const bsy = bx - ax;\n    const bsz = bx * by - bx * ay;\n    for (let z = 0; z < az; ++z, curInputOff += sz, blockElementIndex += bsz) {\n      for (\n        let y = 0;\n        y < ay;\n        ++y, curInputOff += sy, blockElementIndex += bsy\n      ) {\n        for (let x = 0; x < ax; ++x, curInputOff += sx) {\n          const valueLow = rawData[curInputOff];\n\n          if (valueLow !== prevLow) {\n            prevLow = valuesBuffer1[noAdjacentDuplicateIndex * 1] = valueLow;\n\n            indexBuffer1[noAdjacentDuplicateIndex] = noAdjacentDuplicateIndex++;\n          }\n          encodingBuffer[blockElementIndex++] = noAdjacentDuplicateIndex;\n        }\n      }\n    }\n  }\n\n  indexBuffer1.subarray(0, noAdjacentDuplicateIndex).sort((a, b) => {\n    return valuesBuffer1[a] - valuesBuffer1[b];\n  });\n\n  let numUniqueValues = -1;\n  {\n    let prevLow =\n      (valuesBuffer1[indexBuffer1[0] * uint32sPerElement] + 1) >>> 0;\n\n    for (let i = 0; i < noAdjacentDuplicateIndex; ++i) {\n      const index = indexBuffer1[i];\n      const valueIndex = index * uint32sPerElement;\n      const valueLow = valuesBuffer1[valueIndex];\n\n      if (valueLow !== prevLow) {\n        ++numUniqueValues;\n        const outputIndex2 = numUniqueValues * uint32sPerElement;\n        prevLow = valuesBuffer2[outputIndex2] = valueLow;\n      }\n      indexBuffer2[index + 1] = numUniqueValues;\n    }\n    ++numUniqueValues;\n  }\n\n  return writeBlock(\n    output,\n    baseOffset,\n    cache,\n    bx * by * bz,\n    numUniqueValues,\n    valuesBuffer2,\n    encodingBuffer,\n    indexBuffer2,\n    uint32sPerElement,\n  );\n}\n\nexport function encodeChannel(\n  output: Uint32ArrayBuilder,\n  blockSize: ArrayLike<number>,\n  rawData: Uint32Array,\n  volumeSize: ArrayLike<number>,\n  baseInputOffset: number = 0,\n  inputStrides = getFortranOrderStrides(volumeSize, 1),\n) {\n  return encodeChannelCommon(\n    output,\n    blockSize,\n    rawData,\n    volumeSize,\n    baseInputOffset,\n    inputStrides,\n    encodeBlock,\n  );\n}\n\nexport function encodeChannels(\n  output: Uint32ArrayBuilder,\n  blockSize: ArrayLike<number>,\n  rawData: Uint32Array,\n  volumeSize: ArrayLike<number>,\n  baseInputOffset: number = 0,\n  inputStrides = getFortranOrderStrides(volumeSize, 1),\n) {\n  return encodeChannelsCommon(\n    output,\n    blockSize,\n    rawData,\n    volumeSize,\n    baseInputOffset,\n    inputStrides,\n    encodeBlock,\n  );\n}\n","// DO NOT EDIT.  Generated from templates/sliceview/compressed_segmentation/encode.template.ts.\n/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file\n * Support for compressing uint32/uint64 segment label chunks.\n */\n\nimport {\n  encodeChannel as encodeChannelCommon,\n  encodeChannels as encodeChannelsCommon,\n  writeBlock,\n} from \"#src/sliceview/compressed_segmentation/encode_common.js\";\nimport { getFortranOrderStrides } from \"#src/util/array.js\";\nimport type { Uint32ArrayBuilder } from \"#src/util/uint32array_builder.js\";\n\nexport { newCache } from \"#src/sliceview/compressed_segmentation/encode_common.js\";\n\nlet tempEncodingBuffer: Uint32Array;\nlet tempValuesBuffer1: Uint32Array;\nlet tempValuesBuffer2: Uint32Array;\nlet tempIndexBuffer1: Uint32Array;\nlet tempIndexBuffer2: Uint32Array;\n\nconst uint32sPerElement = 2;\n\nexport function encodeBlock(\n  rawData: Uint32Array,\n  inputOffset: number,\n  inputStrides: ArrayLike<number>,\n  blockSize: ArrayLike<number>,\n  actualSize: ArrayLike<number>,\n  baseOffset: number,\n  cache: Map<string, number>,\n  output: Uint32ArrayBuilder,\n): [number, number] {\n  const ax = actualSize[0],\n    ay = actualSize[1],\n    az = actualSize[2];\n  const bx = blockSize[0],\n    by = blockSize[1],\n    bz = blockSize[2];\n  const sx = inputStrides[0];\n  let sy = inputStrides[1],\n    sz = inputStrides[2];\n  sz -= sy * ay;\n  sy -= sx * ax;\n  if (ax * ay * az === 0) {\n    return [0, 0];\n  }\n\n  const numBlockElements = bx * by * bz + 31; // Add padding elements.\n  if (\n    tempEncodingBuffer === undefined ||\n    tempEncodingBuffer.length < numBlockElements\n  ) {\n    tempEncodingBuffer = new Uint32Array(numBlockElements);\n    tempValuesBuffer1 = new Uint32Array(numBlockElements * uint32sPerElement);\n    tempValuesBuffer2 = new Uint32Array(numBlockElements * uint32sPerElement);\n    tempIndexBuffer1 = new Uint32Array(numBlockElements);\n    tempIndexBuffer2 = new Uint32Array(numBlockElements);\n  }\n\n  const encodingBuffer = tempEncodingBuffer.subarray(0, numBlockElements);\n  encodingBuffer.fill(0);\n  const valuesBuffer1 = tempValuesBuffer1;\n  const valuesBuffer2 = tempValuesBuffer2;\n  const indexBuffer1 = tempIndexBuffer1;\n  const indexBuffer2 = tempIndexBuffer2;\n\n  let noAdjacentDuplicateIndex = 0;\n  {\n    let prevLow = (rawData[inputOffset] + 1) >>> 0;\n\n    let prevHigh = 0;\n\n    let curInputOff = inputOffset;\n    let blockElementIndex = 0;\n    const bsy = bx - ax;\n    const bsz = bx * by - bx * ay;\n    for (let z = 0; z < az; ++z, curInputOff += sz, blockElementIndex += bsz) {\n      for (\n        let y = 0;\n        y < ay;\n        ++y, curInputOff += sy, blockElementIndex += bsy\n      ) {\n        for (let x = 0; x < ax; ++x, curInputOff += sx) {\n          const valueLow = rawData[curInputOff];\n\n          const valueHigh = rawData[curInputOff + 1];\n\n          if (valueLow !== prevLow || valueHigh !== prevHigh) {\n            prevLow = valuesBuffer1[noAdjacentDuplicateIndex * 2] = valueLow;\n\n            prevHigh = valuesBuffer1[noAdjacentDuplicateIndex * 2 + 1] =\n              valueHigh;\n\n            indexBuffer1[noAdjacentDuplicateIndex] = noAdjacentDuplicateIndex++;\n          }\n          encodingBuffer[blockElementIndex++] = noAdjacentDuplicateIndex;\n        }\n      }\n    }\n  }\n\n  indexBuffer1.subarray(0, noAdjacentDuplicateIndex).sort((a, b) => {\n    const aHigh = valuesBuffer1[2 * a + 1];\n    const bHigh = valuesBuffer1[2 * b + 1];\n    const aLow = valuesBuffer1[2 * a];\n    const bLow = valuesBuffer1[2 * b];\n    return aHigh - bHigh || aLow - bLow;\n  });\n\n  let numUniqueValues = -1;\n  {\n    let prevLow =\n      (valuesBuffer1[indexBuffer1[0] * uint32sPerElement] + 1) >>> 0;\n\n    let prevHigh = 0;\n\n    for (let i = 0; i < noAdjacentDuplicateIndex; ++i) {\n      const index = indexBuffer1[i];\n      const valueIndex = index * uint32sPerElement;\n      const valueLow = valuesBuffer1[valueIndex];\n\n      const valueHigh = valuesBuffer1[valueIndex + 1];\n\n      if (valueLow !== prevLow || valueHigh !== prevHigh) {\n        ++numUniqueValues;\n        const outputIndex2 = numUniqueValues * uint32sPerElement;\n        prevLow = valuesBuffer2[outputIndex2] = valueLow;\n\n        prevHigh = valuesBuffer2[outputIndex2 + 1] = valueHigh;\n      }\n      indexBuffer2[index + 1] = numUniqueValues;\n    }\n    ++numUniqueValues;\n  }\n\n  return writeBlock(\n    output,\n    baseOffset,\n    cache,\n    bx * by * bz,\n    numUniqueValues,\n    valuesBuffer2,\n    encodingBuffer,\n    indexBuffer2,\n    uint32sPerElement,\n  );\n}\n\nexport function encodeChannel(\n  output: Uint32ArrayBuilder,\n  blockSize: ArrayLike<number>,\n  rawData: Uint32Array,\n  volumeSize: ArrayLike<number>,\n  baseInputOffset: number = 0,\n  inputStrides = getFortranOrderStrides(volumeSize, 2),\n) {\n  return encodeChannelCommon(\n    output,\n    blockSize,\n    rawData,\n    volumeSize,\n    baseInputOffset,\n    inputStrides,\n    encodeBlock,\n  );\n}\n\nexport function encodeChannels(\n  output: Uint32ArrayBuilder,\n  blockSize: ArrayLike<number>,\n  rawData: Uint32Array,\n  volumeSize: ArrayLike<number>,\n  baseInputOffset: number = 0,\n  inputStrides = getFortranOrderStrides(volumeSize, 2),\n) {\n  return encodeChannelsCommon(\n    output,\n    blockSize,\n    rawData,\n    volumeSize,\n    baseInputOffset,\n    inputStrides,\n    encodeBlock,\n  );\n}\n","/**\n * @license\n * Copyright 2022 William Silvermsith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { DecodedImage } from \"#src/async_computation/decode_png_request.js\";\nimport { transposeArray2d } from \"#src/util/array.js\";\n\nconst libraryEnv = {\n  emscripten_notify_memory_growth: () => {},\n  proc_exit: (code: number) => {\n    throw `proc exit: ${code}`;\n  },\n};\n\nlet pngModulePromise: Promise<WebAssembly.Instance> | undefined;\n\nfunction getPngModulePromise() {\n  if (pngModulePromise === undefined) {\n    pngModulePromise = (async () => {\n      const m = (\n        await WebAssembly.instantiateStreaming(\n          fetch(new URL(\"./libpng.wasm\", import.meta.url)),\n          {\n            env: libraryEnv,\n            wasi_snapshot_preview1: libraryEnv,\n          },\n        )\n      ).instance;\n      (m.exports._initialize as Function)();\n      return m;\n    })();\n  }\n  return pngModulePromise;\n}\n\nenum PngColorSpace {\n  GRAYSCALE = 0,\n  RGB = 2,\n  PALETTE = 3,\n  GRAYSCALE_ALPHA = 4,\n  RGBA = 6,\n}\n\n// header constants\nconst magicSpec = [137, 80, 78, 71, 13, 10, 26, 10];\nconst validHeaderCode = [\"I\", \"H\", \"D\", \"R\"];\n\n// not a full implementation of read header, just the parts we need\n// References:\n// 1. Overall PNG structure: http://www.libpng.org/pub/png/spec/1.2/PNG-Structure.html\n// 2. Header structure: http://www.libpng.org/pub/png/spec/1.2/PNG-Chunks.html\nfunction readHeader(buffer: Uint8Array): {\n  sx: number;\n  sy: number;\n  dataWidth: number;\n  numChannels: number;\n} {\n  function arrayEqualTrucated(a: any, b: any): boolean {\n    return a.every((val: number, idx: number) => val === b[idx]);\n  }\n\n  if (buffer.length < 8 + 4) {\n    throw new Error(`png: Invalid image size: ${buffer.length}`);\n  }\n\n  // check for header for magic sequence\n  const validMagic = arrayEqualTrucated(magicSpec, buffer);\n  if (!validMagic) {\n    throw new Error(`png: didn't match magic numbers: ${buffer.slice(0, 8)}`);\n  }\n\n  // offset into IHDR chunk so we can read more naturally\n  const bufview = new DataView(buffer.buffer, magicSpec.length);\n  const chunkLength = bufview.getUint32(0, /*littleEndian=*/ false);\n  const chunkHeaderLength = 12; // len (4), code (4), CRC (4)\n\n  if (buffer.length < magicSpec.length + chunkLength + chunkHeaderLength) {\n    throw new Error(`png: Invalid image size: ${buffer.length}`);\n  }\n\n  const chunkCode = [4, 5, 6, 7].map((i) =>\n    String.fromCharCode(bufview.getUint8(i)),\n  );\n\n  if (!arrayEqualTrucated(chunkCode, validHeaderCode)) {\n    throw new Error(`png: Invalid header code (should be IHDR): ${chunkCode}`);\n  }\n\n  const sx = bufview.getUint32(8, /*littleEndian=*/ false);\n  const sy = bufview.getUint32(12, /*littleEndian=*/ false);\n  const bitDepth = bufview.getUint8(16);\n  const colorSpace = bufview.getUint8(17);\n  const compressionMethod = bufview.getUint8(18);\n  const filterMethod = bufview.getUint8(19);\n  const interlaceMethod = bufview.getUint8(20);\n\n  if (sx === 0 || sy === 0) {\n    throw new Error(\n      `png: 0 is not a valid width or height. width: ${sx} height: ${sy}`,\n    );\n  }\n  if (compressionMethod !== 0) {\n    throw new Error(\n      `png: Invalid compression method Only 0 is supported (DEFLATE). Got: ${compressionMethod}`,\n    );\n  }\n  if (filterMethod !== 0) {\n    throw new Error(\n      `png: Invalid filter method. Only 0 (adaptive filtering) is supported. Got: ${filterMethod}`,\n    );\n  }\n  if (interlaceMethod > 1) {\n    throw new Error(\n      `png: invalid interlace method. Only 0 (no interlace) and 1 (adam7) are supported. Got: ${interlaceMethod}`,\n    );\n  }\n\n  const validBitDepths = [1, 2, 4, 8, 16];\n  if (validBitDepths.indexOf(bitDepth) === -1) {\n    throw new Error(\n      `png: invalid bit depth. Got: ${bitDepth} Valid Depths: ${validBitDepths}`,\n    );\n  }\n\n  let dataWidth = bitDepth <= 8 ? 1 : 2;\n  let numChannels = 1;\n  if (colorSpace === PngColorSpace.GRAYSCALE) {\n    // do nothing, defaults are fine.\n  } else if (colorSpace === PngColorSpace.RGB) {\n    if (bitDepth !== 8 && bitDepth !== 16) {\n      throw new Error(\n        `png: invalid bit depth for RGB colorspace. Got: ${bitDepth}`,\n      );\n    }\n    numChannels = 3;\n  } else if (colorSpace === PngColorSpace.PALETTE) {\n    dataWidth = 1;\n    numChannels = 3;\n  } else if (colorSpace === PngColorSpace.RGBA) {\n    if (bitDepth !== 8 && bitDepth !== 16) {\n      throw new Error(\n        `png: invalid bit depth for RGBA colorspace. Got: ${bitDepth}`,\n      );\n    }\n    numChannels = 4;\n  } else if (colorSpace === PngColorSpace.GRAYSCALE_ALPHA) {\n    if (bitDepth !== 8 && bitDepth !== 16) {\n      throw new Error(\n        `png: invalid bit depth for grayscale + alpha channel colorspace. Got: ${bitDepth}`,\n      );\n    }\n    numChannels = 2;\n  } else {\n    throw new Error(`png: Invalid color space: ${colorSpace}`);\n  }\n\n  return { sx, sy, dataWidth, numChannels };\n}\n\nexport async function decompressPng(\n  buffer: Uint8Array,\n  width: number | undefined,\n  height: number | undefined,\n  area: number | undefined,\n  numComponents: number | undefined,\n  bytesPerPixel: number,\n  convertToGrayscale: boolean,\n): Promise<DecodedImage> {\n  const m = await getPngModulePromise();\n  let { sx, sy, dataWidth, numChannels } = readHeader(buffer);\n\n  if (convertToGrayscale) {\n    dataWidth = 1;\n    numChannels = 1;\n  }\n\n  if (\n    (width !== undefined && sx !== width) ||\n    (height !== undefined && sy !== height) ||\n    (area !== undefined && sx * sy !== area) ||\n    (numComponents !== undefined && numComponents !== numChannels) ||\n    bytesPerPixel !== dataWidth\n  ) {\n    throw new Error(\n      `png: Image decode parameters did not match expected chunk parameters.  ` +\n        `Expected: width: ${width} height: ${height} area: ${area} ` +\n        `channels: ${numComponents} bytes per pixel: ${bytesPerPixel}.  ` +\n        `Decoded:  width: ${sx} height: ${sy} channels: ${numChannels} ` +\n        `bytes per pixel: ${dataWidth}.  ` +\n        `Convert to Grayscale? ${convertToGrayscale}`,\n    );\n  }\n\n  const nbytes = sx * sy * dataWidth * numChannels;\n  if (nbytes < 0) {\n    throw new Error(\n      `png: Failed to decode png image size. image size: ${nbytes}`,\n    );\n  }\n\n  // heap must be referenced after creating bufPtr and imagePtr because\n  // memory growth can detatch the buffer.\n  const bufPtr = (m.exports.malloc as Function)(buffer.byteLength);\n  const imagePtr = (m.exports.malloc as Function)(nbytes);\n  const heap = new Uint8Array((m.exports.memory as WebAssembly.Memory).buffer);\n  heap.set(buffer, bufPtr);\n\n  const code = (m.exports.png_decompress as Function)(\n    bufPtr,\n    buffer.byteLength,\n    imagePtr,\n    nbytes,\n    convertToGrayscale,\n  );\n\n  try {\n    if (code !== 0) {\n      throw new Error(`png: Failed to decode png image. decoder code: ${code}`);\n    }\n\n    // Likewise, we reference memory.buffer instead of heap.buffer\n    // because memory growth during decompress could have detached\n    // the buffer.\n    let image = new Uint8Array(\n      (m.exports.memory as WebAssembly.Memory).buffer,\n      imagePtr,\n      nbytes,\n    );\n\n    if (numChannels !== 1) {\n      image = transposeArray2d(image, sx * sy, numChannels);\n    }\n\n    // copy the array so it can be memory managed by JS\n    // and we can free the emscripten buffer\n    return {\n      width: sx,\n      height: sy,\n      numComponents: numChannels,\n      uint8Array: image.slice(0),\n    };\n  } finally {\n    (m.exports.free as Function)(bufPtr);\n    (m.exports.free as Function)(imagePtr);\n  }\n}\n","/**\n * @license\n * Copyright 2024 William Silvermsith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { DecodedImage } from \"#src/async_computation/decode_png_request.js\";\n\nconst libraryEnv = {};\n\nlet jxlModulePromise: Promise<WebAssembly.Instance> | undefined;\n\nasync function getJxlModulePromise() {\n  if (jxlModulePromise === undefined) {\n    jxlModulePromise = (async () => {\n      const m = (\n        await WebAssembly.instantiateStreaming(\n          fetch(new URL(\"./jxl_decoder.wasm\", import.meta.url)),\n          {\n            env: libraryEnv,\n            wasi_snapshot_preview1: libraryEnv,\n          },\n        )\n      ).instance;\n      return m;\n    })();\n  }\n  return jxlModulePromise;\n}\n\n// header constants\n// obtained from\n// // https://github.com/libjxl/libjxl/blob/8f22cb1fb98ed27ceee59887bd291ef4d277c89d/lib/jxl/decode.cc#L118-L130\nconst magicSpec = [\n  0,\n  0,\n  0,\n  0xc,\n  \"J\".charCodeAt(0),\n  \"X\".charCodeAt(0),\n  \"L\".charCodeAt(0),\n  \" \".charCodeAt(0),\n  0xd,\n  0xa,\n  0x87,\n  0xa,\n];\n\n// not a full implementation of read header, just the parts we need\nfunction checkHeader(buffer: Uint8Array) {\n  function arrayEqualTrucated(a: any, b: any): boolean {\n    return a.every((val: number, idx: number) => val === b[idx]);\n  }\n\n  const len = buffer.length;\n  const kCodestreamMarker = 0x0a;\n\n  if (len < 8 + 4) {\n    throw new Error(`jxl: Invalid image size: ${len}`);\n  }\n\n  // JPEG XL codestream: 0xff 0x0a\n  if (len >= 1 && buffer[0] === 0xff) {\n    if (len < 2) {\n      throw new Error(`jxl: Not enough bytes. Got: ${len}`);\n    } else if (buffer[1] === kCodestreamMarker) {\n      // valid codestream\n      return;\n    } else {\n      throw new Error(`jxl: Invalid codestream.`);\n    }\n  }\n\n  // JPEG XL container\n  // check for header for magic sequence\n  const validMagic = arrayEqualTrucated(magicSpec, buffer);\n  if (!validMagic) {\n    throw new Error(`jxl: didn't match magic numbers: ${buffer.slice(0, 12)}`);\n  }\n}\n\nexport async function decompressJxl(\n  buffer: Uint8Array,\n  area: number | undefined,\n  numComponents: number | undefined,\n  bytesPerPixel: number,\n): Promise<DecodedImage> {\n  const m = await getJxlModulePromise();\n  checkHeader(buffer);\n\n  area ||= 0;\n  numComponents ||= 1;\n\n  const nbytes = area * bytesPerPixel * numComponents;\n\n  const jxlImagePtr = (m.exports.malloc as Function)(buffer.byteLength);\n  const heap = new Uint8Array((m.exports.memory as WebAssembly.Memory).buffer);\n  heap.set(buffer, jxlImagePtr);\n\n  let imagePtr = null;\n\n  try {\n    const width = (m.exports.width as Function)(\n      jxlImagePtr,\n      buffer.byteLength,\n      nbytes,\n    );\n    const height = (m.exports.height as Function)(\n      jxlImagePtr,\n      buffer.byteLength,\n      nbytes,\n    );\n\n    if (width <= 0 || height <= 0) {\n      throw new Error(\n        `jxl: Decoding failed. Width (${width}) and/or height (${height}) invalid.`,\n      );\n    }\n\n    if (area !== undefined && width * height !== area) {\n      throw new Error(\n        `jxl: Expected width and height (${width} x ${height}, ${width * height}) to match area: ${area}.`,\n      );\n    }\n\n    imagePtr = (m.exports.decode as Function)(\n      jxlImagePtr,\n      buffer.byteLength,\n      nbytes,\n    );\n\n    if (imagePtr === 0) {\n      throw new Error(\"jxl: Decoding failed. Null pointer returned.\");\n    }\n\n    // Likewise, we reference memory.buffer instead of heap.buffer\n    // because memory growth during decompress could have detached\n    // the buffer.\n    const image = new Uint8Array(\n      (m.exports.memory as WebAssembly.Memory).buffer,\n      imagePtr,\n      nbytes,\n    );\n\n    // copy the array so it can be memory managed by JS\n    // and we can free the emscripten buffer\n    return {\n      width: width || 0,\n      height: height || 0,\n      numComponents: numComponents || 1,\n      uint8Array: image.slice(0),\n    };\n  } finally {\n    (m.exports.free as Function)(jxlImagePtr, buffer.byteLength);\n    if (imagePtr) {\n      (m.exports.free as Function)(imagePtr, nbytes);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2021 William Silvermsith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst libraryEnv = {\n  emscripten_notify_memory_growth: () => {},\n  proc_exit: (code: number) => {\n    throw `proc exit: ${code}`;\n  },\n};\n\nlet compressoModulePromise: Promise<WebAssembly.Instance> | undefined;\n\nfunction getCompressoModulePromise() {\n  if (compressoModulePromise === undefined) {\n    compressoModulePromise = (async () => {\n      const m = (\n        await WebAssembly.instantiateStreaming(\n          fetch(new URL(\"./compresso.wasm\", import.meta.url)),\n          {\n            env: libraryEnv,\n            wasi_snapshot_preview1: libraryEnv,\n          },\n        )\n      ).instance;\n      (m.exports._initialize as Function)();\n      return m;\n    })();\n  }\n  return compressoModulePromise;\n}\n\n// not a full implementation of read header, just the parts we need\nfunction readHeader(buffer: Uint8Array): {\n  sx: number;\n  sy: number;\n  sz: number;\n  dataWidth: number;\n} {\n  // check for header \"cpso\"\n  const magic =\n    buffer[0] === \"c\".charCodeAt(0) &&\n    buffer[1] === \"p\".charCodeAt(0) &&\n    buffer[2] === \"s\".charCodeAt(0) &&\n    buffer[3] === \"o\".charCodeAt(0);\n  if (!magic) {\n    throw new Error(\"compresso: didn't match magic numbers\");\n  }\n  const format = buffer[4];\n  if (format > 1) {\n    throw new Error(\"compresso: didn't match format version\");\n  }\n\n  const bufview = new DataView(buffer.buffer, 0);\n\n  const dataWidth = buffer[5];\n  const sx = bufview.getUint16(6, /*littleEndian=*/ true);\n  const sy = bufview.getUint16(8, /*littleEndian=*/ true);\n  const sz = bufview.getUint16(10, /*littleEndian=*/ true);\n\n  return { sx, sy, sz, dataWidth };\n}\n\nexport async function decompressCompresso(\n  buffer: Uint8Array,\n): Promise<Uint8Array<ArrayBuffer>> {\n  const m = await getCompressoModulePromise();\n\n  const { sx, sy, sz, dataWidth } = readHeader(buffer);\n  const voxels = sx * sy * sz;\n  const nbytes = voxels * dataWidth;\n\n  if (nbytes < 0) {\n    throw new Error(`Failed to decode compresso image. image size: ${nbytes}`);\n  }\n\n  // heap must be referenced after creating bufPtr because\n  // memory growth can detatch the buffer.\n  const imagePtr = (m.exports.malloc as Function)(nbytes);\n  const bufPtr = (m.exports.malloc as Function)(buffer.byteLength);\n  const heap = new Uint8Array((m.exports.memory as WebAssembly.Memory).buffer);\n  heap.set(buffer, bufPtr);\n\n  const code = (m.exports.compresso_decompress as Function)(\n    bufPtr,\n    buffer.byteLength,\n    imagePtr,\n  );\n\n  try {\n    if (code !== 0) {\n      throw new Error(\n        `Failed to decode compresso image. decoder code: ${code}`,\n      );\n    }\n\n    // Likewise, we reference memory.buffer instead of heap.buffer\n    // because memory growth during decompress could have detached\n    // the buffer.\n    const image = new Uint8Array(\n      (m.exports.memory as WebAssembly.Memory).buffer,\n      imagePtr,\n      voxels * dataWidth,\n    );\n    // copy the array so it can be memory managed by JS\n    // and we can free the emscripten buffer\n    return image.slice(0);\n  } finally {\n    (m.exports.free as Function)(bufPtr);\n    (m.exports.free as Function)(imagePtr);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Interface for defining transcode operations.\n */\n\nexport interface AsyncComputationSpec<Signature extends (...args: any) => any> {\n  id: string;\n  t?: Signature;\n}\n\n/**\n * Declares an asynchronous operation.\n */\nexport function asyncComputation<Signature extends (...args: any) => any>(\n  id: string,\n): AsyncComputationSpec<Signature> {\n  return { id };\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { AsyncComputationSpec } from \"#src/async_computation/index.js\";\n\nconst handlers = new Map<\n  string,\n  (...args: any[]) => Promise<{ value: any; transfer?: Transferable[] }>\n>();\n\nfunction setupChannel(port: DedicatedWorkerGlobalScope) {\n  self.onmessage = (msg: any) => {\n    const { t, id, args } = msg.data as { t: string; id: number; args: any[] };\n    const handler = handlers.get(t)!;\n    handler(...args).then(\n      ({ value, transfer }) => port.postMessage({ id, value }, { transfer }),\n      (error) =>\n        port.postMessage({\n          id,\n          error: error instanceof Error ? error.message : error.toString(),\n        }),\n    );\n  };\n  // Notify that the worker is ready to receive messages.\n  self.postMessage(null);\n}\n\nsetupChannel(self as DedicatedWorkerGlobalScope);\n\nexport function registerAsyncComputation<\n  Signature extends (...args: any) => any,\n>(\n  request: AsyncComputationSpec<Signature>,\n  handler: (\n    ...args: Parameters<Signature>\n  ) => Promise<{ value: ReturnType<Signature>; transfer?: Transferable[] }>,\n) {\n  handlers.set(request.id, handler);\n}\n","// DO NOT EDIT.  Generated from templates/sliceview/compressed_segmentation/encode_common.template.ts.\n/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Uint32ArrayBuilder } from \"#src/util/uint32array_builder.js\";\n\nexport const BLOCK_HEADER_SIZE = 2;\n\nexport function newCache() {\n  return new Map<string, number>();\n}\n\nfunction writeEncodedRepresentation(\n  outputData: Uint32Array,\n  outputOffset: number,\n  encodingBuffer: Uint32Array,\n  indexBuffer: Uint32Array,\n  encodedBits: number,\n  encodedSize32Bits: number,\n) {\n  // Write encoded representation.\n  if (encodedBits > 0) {\n    switch (encodedBits) {\n      case 1:\n        {\n          for (\n            let wordIndex = 0, elementIndex = 0;\n            wordIndex < encodedSize32Bits;\n            ++wordIndex\n          ) {\n            let word = 0;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 0]] << 0;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 1]] << 1;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 2]] << 2;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 3]] << 3;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 4]] << 4;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 5]] << 5;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 6]] << 6;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 7]] << 7;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 8]] << 8;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 9]] << 9;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 10]] << 10;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 11]] << 11;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 12]] << 12;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 13]] << 13;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 14]] << 14;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 15]] << 15;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 16]] << 16;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 17]] << 17;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 18]] << 18;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 19]] << 19;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 20]] << 20;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 21]] << 21;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 22]] << 22;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 23]] << 23;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 24]] << 24;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 25]] << 25;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 26]] << 26;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 27]] << 27;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 28]] << 28;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 29]] << 29;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 30]] << 30;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 31]] << 31;\n\n            outputData[outputOffset + wordIndex] = word;\n            elementIndex += 32;\n          }\n        }\n        break;\n\n      case 2:\n        {\n          for (\n            let wordIndex = 0, elementIndex = 0;\n            wordIndex < encodedSize32Bits;\n            ++wordIndex\n          ) {\n            let word = 0;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 0]] << 0;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 1]] << 2;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 2]] << 4;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 3]] << 6;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 4]] << 8;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 5]] << 10;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 6]] << 12;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 7]] << 14;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 8]] << 16;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 9]] << 18;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 10]] << 20;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 11]] << 22;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 12]] << 24;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 13]] << 26;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 14]] << 28;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 15]] << 30;\n\n            outputData[outputOffset + wordIndex] = word;\n            elementIndex += 16;\n          }\n        }\n        break;\n\n      case 4:\n        {\n          for (\n            let wordIndex = 0, elementIndex = 0;\n            wordIndex < encodedSize32Bits;\n            ++wordIndex\n          ) {\n            let word = 0;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 0]] << 0;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 1]] << 4;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 2]] << 8;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 3]] << 12;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 4]] << 16;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 5]] << 20;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 6]] << 24;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 7]] << 28;\n\n            outputData[outputOffset + wordIndex] = word;\n            elementIndex += 8;\n          }\n        }\n        break;\n\n      case 8:\n        {\n          for (\n            let wordIndex = 0, elementIndex = 0;\n            wordIndex < encodedSize32Bits;\n            ++wordIndex\n          ) {\n            let word = 0;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 0]] << 0;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 1]] << 8;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 2]] << 16;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 3]] << 24;\n\n            outputData[outputOffset + wordIndex] = word;\n            elementIndex += 4;\n          }\n        }\n        break;\n\n      case 16:\n        {\n          for (\n            let wordIndex = 0, elementIndex = 0;\n            wordIndex < encodedSize32Bits;\n            ++wordIndex\n          ) {\n            let word = 0;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 0]] << 0;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 1]] << 16;\n\n            outputData[outputOffset + wordIndex] = word;\n            elementIndex += 2;\n          }\n        }\n        break;\n\n      case 32:\n        {\n          for (\n            let wordIndex = 0, elementIndex = 0;\n            wordIndex < encodedSize32Bits;\n            ++wordIndex\n          ) {\n            let word = 0;\n\n            word |= indexBuffer[encodingBuffer[elementIndex + 0]] << 0;\n\n            outputData[outputOffset + wordIndex] = word;\n            elementIndex += 1;\n          }\n        }\n        break;\n    }\n  }\n}\n\ntype ValueTableCache = Map<string, number>;\n\nexport function writeBlock(\n  output: Uint32ArrayBuilder,\n  baseOffset: number,\n  cache: ValueTableCache,\n  numBlockElements: number,\n  numUniqueValues: number,\n  valuesBuffer2: Uint32Array,\n  encodingBuffer: Uint32Array,\n  indexBuffer2: Uint32Array,\n  uint32sPerElement: number,\n): [number, number] {\n  let encodedBits: number;\n  if (numUniqueValues === 1) {\n    encodedBits = 0;\n  } else {\n    encodedBits = 1;\n    while (1 << encodedBits < numUniqueValues) {\n      encodedBits *= 2;\n    }\n  }\n\n  const encodedSize32bits = Math.ceil((encodedBits * numBlockElements) / 32);\n\n  const encodedValueBaseOffset = output.length;\n  let elementsToWrite = encodedSize32bits;\n\n  let writeTable = false;\n  const key = Array.prototype.join.call(\n    valuesBuffer2.subarray(0, numUniqueValues * uint32sPerElement),\n    \",\",\n  );\n  let tableOffset = cache.get(key);\n\n  if (tableOffset === undefined) {\n    writeTable = true;\n    elementsToWrite += numUniqueValues * uint32sPerElement;\n    tableOffset = encodedValueBaseOffset + encodedSize32bits - baseOffset;\n    cache.set(key, tableOffset);\n  }\n\n  output.resize(encodedValueBaseOffset + elementsToWrite);\n  const outputData = output.data;\n\n  writeEncodedRepresentation(\n    outputData,\n    encodedValueBaseOffset,\n    encodingBuffer,\n    indexBuffer2,\n    encodedBits,\n    encodedSize32bits,\n  );\n\n  // Write table\n  if (writeTable) {\n    let curOutputOff = encodedValueBaseOffset + encodedSize32bits;\n    for (\n      let i = 0, length = numUniqueValues * uint32sPerElement;\n      i < length;\n      ++i\n    ) {\n      outputData[curOutputOff++] = valuesBuffer2[i];\n    }\n  }\n  return [encodedBits, tableOffset];\n}\n\ntype EncodeBlockFunction = (\n  rawData: Uint32Array,\n  inputOffset: number,\n  inputStrides: ArrayLike<number>,\n  blockSize: ArrayLike<number>,\n  actualSize: ArrayLike<number>,\n  baseOffset: number,\n  cache: ValueTableCache,\n  output: Uint32ArrayBuilder,\n) => [number, number];\n\nexport function encodeChannel(\n  output: Uint32ArrayBuilder,\n  blockSize: ArrayLike<number>,\n  rawData: Uint32Array,\n  volumeSize: ArrayLike<number>,\n  baseInputOffset: number,\n  inputStrides: ArrayLike<number>,\n  encodeBlock: EncodeBlockFunction,\n) {\n  // Maps a sorted list of table entries in the form <low>,<high>,<low>,<high>,... to the table\n  // offset relative to baseOffset.\n  const cache = newCache();\n  const gridSize = new Array<number>(3);\n  let blockIndexSize = BLOCK_HEADER_SIZE;\n  for (let i = 0; i < 3; ++i) {\n    const curGridSize = (gridSize[i] = Math.ceil(volumeSize[i] / blockSize[i]));\n    blockIndexSize *= curGridSize;\n  }\n  const gx = gridSize[0],\n    gy = gridSize[1],\n    gz = gridSize[2];\n  const xSize = volumeSize[0],\n    ySize = volumeSize[1],\n    zSize = volumeSize[2];\n  const xBlockSize = blockSize[0],\n    yBlockSize = blockSize[1],\n    zBlockSize = blockSize[2];\n  const baseOffset = output.length;\n  let headerOffset = baseOffset;\n  const actualSize = [0, 0, 0];\n  output.resize(baseOffset + blockIndexSize);\n  const sx = inputStrides[0],\n    sy = inputStrides[1],\n    sz = inputStrides[2];\n  for (let bz = 0; bz < gz; ++bz) {\n    actualSize[2] = Math.min(zBlockSize, zSize - bz * zBlockSize);\n    for (let by = 0; by < gy; ++by) {\n      actualSize[1] = Math.min(yBlockSize, ySize - by * yBlockSize);\n      for (let bx = 0; bx < gx; ++bx) {\n        actualSize[0] = Math.min(xBlockSize, xSize - bx * xBlockSize);\n        const inputOffset =\n          bz * zBlockSize * sz + by * yBlockSize * sy + bx * xBlockSize * sx;\n        const encodedValueBaseOffset = output.length - baseOffset;\n        const [encodedBits, tableOffset] = encodeBlock(\n          rawData,\n          baseInputOffset + inputOffset,\n          inputStrides,\n          blockSize,\n          actualSize,\n          baseOffset,\n          cache,\n          output,\n        );\n        const outputData = output.data;\n        outputData[headerOffset++] = tableOffset | (encodedBits << 24);\n        outputData[headerOffset++] = encodedValueBaseOffset;\n      }\n    }\n  }\n}\n\nexport function encodeChannels(\n  output: Uint32ArrayBuilder,\n  blockSize: ArrayLike<number>,\n  rawData: Uint32Array,\n  volumeSize: ArrayLike<number>,\n  baseInputOffset: number,\n  inputStrides: ArrayLike<number>,\n  encodeBlock: EncodeBlockFunction,\n) {\n  const channelOffsetOutputBase = output.length;\n  const numChannels = volumeSize[3];\n  output.resize(channelOffsetOutputBase + numChannels);\n  for (let channel = 0; channel < numChannels; ++channel) {\n    output.data[channelOffsetOutputBase + channel] = output.length;\n    encodeChannel(\n      output,\n      blockSize,\n      rawData,\n      volumeSize,\n      baseInputOffset + inputStrides[3] * channel,\n      inputStrides,\n      encodeBlock,\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface WritableArrayLike<T> {\n  length: number;\n  [n: number]: T;\n}\n\n/**\n * Partitions array[start:end] such that all elements for which predicate\n * returns true are before the elements for which predicate returns false.\n *\n * predicate will be called exactly once for each element in array[start:end],\n * in order.\n *\n * @returns {number} The index of the first element for which predicate returns\n * false, or end if there is no such element.\n */\nexport function partitionArray<T>(\n  array: T[],\n  start: number,\n  end: number,\n  predicate: (x: T) => boolean,\n): number {\n  while (start < end) {\n    const x = array[start];\n    if (predicate(x)) {\n      ++start;\n      continue;\n    }\n    --end;\n    array[start] = array[end];\n    array[end] = x;\n  }\n  return end;\n}\n\nexport function filterArrayInplace<T>(\n  array: T[],\n  predicate: (x: T, index: number, array: T[]) => boolean,\n) {\n  const length = array.length;\n  let outIndex = 0;\n  for (let i = 0; i < length; ++i) {\n    if (predicate(array[i], i, array)) {\n      array[outIndex] = array[i];\n      ++outIndex;\n    }\n  }\n  array.length = outIndex;\n}\n\nexport type TypedArrayConstructor<\n  TArrayBuffer extends ArrayBufferLike = ArrayBufferLike,\n> = (\n  | typeof Int8Array<TArrayBuffer>\n  | typeof Uint8Array<TArrayBuffer>\n  | typeof Int16Array<TArrayBuffer>\n  | typeof Uint16Array<TArrayBuffer>\n  | typeof Int32Array<TArrayBuffer>\n  | typeof Uint32Array<TArrayBuffer>\n  | typeof Float32Array<TArrayBuffer>\n  | typeof Float64Array<TArrayBuffer>\n) &\n  (TArrayBuffer extends ArrayBuffer\n    ? { new (count: number): TypedArray<ArrayBuffer> }\n    : Record<string, never>);\n\nexport type TypedArray<TArrayBuffer extends ArrayBufferLike = ArrayBufferLike> =\n\n    | Int8Array<TArrayBuffer>\n    | Uint8Array<TArrayBuffer>\n    | Int16Array<TArrayBuffer>\n    | Uint16Array<TArrayBuffer>\n    | Int32Array<TArrayBuffer>\n    | Uint32Array<TArrayBuffer>\n    | Float32Array<TArrayBuffer>\n    | Float64Array<TArrayBuffer>;\n\n/**\n * Returns an array of size newSize that starts with the contents of array.\n * Either returns array if it has the correct size, or a new array with zero\n * padding at the end.\n */\nexport function maybePadArray<\n  TArrayBuffer extends ArrayBufferLike,\n  T extends TypedArray<TArrayBuffer>,\n>(array: T, newSize: number): T {\n  if (array.length === newSize) {\n    return array;\n  }\n  const newArray = new (<any>array.constructor)(newSize);\n  newArray.set(array);\n  return newArray;\n}\n\nexport function getFortranOrderStrides(\n  size: ArrayLike<number>,\n  baseStride = 1,\n) {\n  const length = size.length;\n  const strides = new Array<number>(length);\n  let stride = (strides[0] = baseStride);\n  for (let i = 1; i < length; ++i) {\n    stride *= size[i - 1];\n    strides[i] = stride;\n  }\n  return strides;\n}\n\n/**\n * Converts an array of shape [majorSize, minorSize] to\n * [minorSize, majorSize].\n */\nexport function transposeArray2d<T extends TypedArray>(\n  array: T,\n  majorSize: number,\n  minorSize: number,\n): T {\n  const transpose = new (<any>array.constructor)(array.length);\n  for (let i = 0; i < majorSize * minorSize; i += minorSize) {\n    for (let j = 0; j < minorSize; j++) {\n      const index: number = i / minorSize;\n      transpose[j * majorSize + index] = array[i + j];\n    }\n  }\n  return transpose;\n}\n\nexport function tile2dArray<T extends TypedArray>(\n  array: T,\n  majorDimension: number,\n  minorTiles: number,\n  majorTiles: number,\n) {\n  const minorDimension = array.length / majorDimension;\n  const length = array.length * minorTiles * majorTiles;\n  const result: T = new (<any>array.constructor)(length);\n  const minorTileStride = array.length * majorTiles;\n  const majorTileStride = majorDimension;\n  const minorStride = majorDimension * majorTiles;\n  for (let minor = 0; minor < minorDimension; ++minor) {\n    for (let major = 0; major < majorDimension; ++major) {\n      const inputValue = array[minor * majorDimension + major];\n      const baseOffset = minor * minorStride + major;\n      for (let minorTile = 0; minorTile < minorTiles; ++minorTile) {\n        for (let majorTile = 0; majorTile < majorTiles; ++majorTile) {\n          result[\n            minorTile * minorTileStride +\n              majorTile * majorTileStride +\n              baseOffset\n          ] = inputValue;\n        }\n      }\n    }\n  }\n  return result;\n}\n\nexport function binarySearch<T>(\n  haystack: ArrayLike<T>,\n  needle: T,\n  compare: (a: T, b: T) => number,\n  low = 0,\n  high = haystack.length,\n) {\n  while (low < high) {\n    const mid = (low + high - 1) >> 1;\n    const compareResult = compare(needle, haystack[mid]);\n    if (compareResult > 0) {\n      low = mid + 1;\n    } else if (compareResult < 0) {\n      high = mid;\n    } else {\n      return mid;\n    }\n  }\n  return ~low;\n}\n\n/**\n * Returns the index of the element in `haystack` that is closest to `needle`, according to\n * `compare`.  If there are multiple elements that are equally close, the index of the first such\n * element encountered is returned.  If `haystack` is empty, returns -1.\n */\nexport function findClosestMatchInSortedArray<T>(\n  haystack: ArrayLike<T>,\n  needle: T,\n  compare: (a: T, b: T) => number,\n  low = 0,\n  high = haystack.length,\n): number {\n  let bestIndex = -1;\n  let bestDistance = Infinity;\n  while (low < high) {\n    const mid = (low + high - 1) >> 1;\n    const compareResult = compare(needle, haystack[mid]);\n    if (compareResult > 0) {\n      low = mid + 1;\n    } else if (compareResult < 0) {\n      high = mid;\n    } else {\n      return mid;\n    }\n    const distance = Math.abs(compareResult);\n    if (distance < bestDistance) {\n      bestDistance = distance;\n      bestIndex = mid;\n    }\n  }\n  return bestIndex;\n}\n\n/**\n * Returns the first index in `[begin, end)` for which `predicate` is `true`, or returns `end` if no\n * such index exists.\n *\n * For any index `i` in `(begin, end)`, it must be the case that `predicate(i) >= predicate(i - 1)`.\n */\nexport function binarySearchLowerBound(\n  begin: number,\n  end: number,\n  predicate: (index: number) => boolean,\n): number {\n  let count = end - begin;\n  while (count > 0) {\n    const step = Math.floor(count / 2);\n    const i = begin + step;\n    if (predicate(i)) {\n      count = step;\n    } else {\n      begin = i + 1;\n      count -= step + 1;\n    }\n  }\n  return begin;\n}\n\n/**\n * Returns an array of indices into `input` that equal (under `===`) `value`.\n */\nexport function findMatchingIndices<T>(input: T[], value: T) {\n  const out: number[] = [];\n  for (let i = 0, length = input.length; i < length; ++i) {\n    if (input[i] === value) {\n      out.push(i);\n    }\n  }\n  return out;\n}\n\n/**\n * Returns an array of the indices in `[0, ..., max)` not in `indices`.\n */\nexport function getIndicesComplement(indices: number[], max: number) {\n  const mask: boolean[] = [];\n  mask.length = max;\n  for (const i of indices) {\n    mask[i] = true;\n  }\n  return findMatchingIndices(mask, undefined);\n}\n\nexport function arraysEqual<T>(a: ArrayLike<T>, b: ArrayLike<T>) {\n  const length = a.length;\n  if (b.length !== length) return false;\n  for (let i = 0; i < length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n\nexport function arraysEqualWithPredicate<T>(\n  a: ArrayLike<T>,\n  b: ArrayLike<T>,\n  elementsEqual: (a: T, b: T) => boolean = (a, b) => a === b,\n) {\n  const length = a.length;\n  if (b.length !== length) return false;\n  for (let i = 0; i < length; ++i) {\n    if (!elementsEqual(a[i], b[i])) return false;\n  }\n  return true;\n}\n\nexport function getInsertPermutation(\n  n: number,\n  sourceIndex: number,\n  targetIndex: number,\n) {\n  const newToOld: number[] = [];\n  if (targetIndex === sourceIndex) {\n    for (let i = 0; i < n; ++i) {\n      newToOld[i] = i;\n    }\n    return newToOld;\n  }\n  newToOld[targetIndex] = sourceIndex;\n  for (let oldDim = 0, newDim = 0; oldDim < n; ) {\n    if (oldDim === sourceIndex) {\n      ++oldDim;\n      continue;\n    }\n    if (newDim === targetIndex) {\n      ++newDim;\n    }\n    newToOld[newDim++] = oldDim++;\n  }\n  return newToOld;\n}\n\nexport function scatterUpdate<\n  T,\n  Dest extends { [index: number]: T },\n  Source extends { readonly [index: number]: T },\n>(dest: Dest, source: Source, indices: ArrayLike<number>): Dest {\n  for (\n    let sourceIndex = 0, length = indices.length;\n    sourceIndex < length;\n    ++sourceIndex\n  ) {\n    const destIndex = indices[sourceIndex];\n    if (destIndex === -1) continue;\n    dest[destIndex] = source[sourceIndex];\n  }\n  return dest;\n}\n\nexport function gatherUpdate<\n  T,\n  Dest extends { [index: number]: T },\n  Source extends { readonly [index: number]: T },\n>(dest: Dest, source: Source, indices: ArrayLike<number>): Dest {\n  for (\n    let destIndex = 0, length = indices.length;\n    destIndex < length;\n    ++destIndex\n  ) {\n    const sourceIndex = indices[destIndex];\n    if (sourceIndex === -1) continue;\n    dest[destIndex] = source[sourceIndex];\n  }\n  return dest;\n}\n\nexport function transposeNestedArrays<T>(x: T[][]) {\n  const result: T[][] = [];\n  for (\n    let outerIndex = 0, outerLength = x.length;\n    outerIndex < outerLength;\n    ++outerIndex\n  ) {\n    const inner = x[outerIndex];\n    for (\n      let innerIndex = 0, innerLength = inner.length;\n      innerIndex < innerLength;\n      ++innerIndex\n    ) {\n      let resultInner = result[innerIndex];\n      if (resultInner === undefined) {\n        resultInner = result[innerIndex] = [];\n      }\n      resultInner.push(inner[innerIndex]);\n    }\n  }\n  return result;\n}\n\nexport interface ArraySpliceOp {\n  retainCount: number;\n  deleteCount: number;\n  insertCount: number;\n}\n\nexport function spliceArray<T>(\n  array: T[],\n  splices: readonly Readonly<ArraySpliceOp>[],\n) {\n  const parts: T[][] = [];\n  let origOffset = 0;\n  for (let i = 0, numSplices = splices.length; i < numSplices; ++i) {\n    const { retainCount, deleteCount, insertCount } = splices[i];\n    if (retainCount !== 0) {\n      parts.push(array.slice(origOffset, origOffset + retainCount));\n      origOffset += retainCount;\n    }\n    origOffset += deleteCount;\n    if (insertCount !== 0) {\n      parts.push(new Array<T>(insertCount));\n    }\n  }\n  const origLength = array.length;\n  if (origOffset !== origLength) {\n    parts.push(array.slice(origOffset));\n  }\n  return new Array(0).concat(...parts);\n}\n\nexport function getMergeSplices<T>(\n  oldArray: readonly T[],\n  newArray: readonly T[],\n  compare: (a: T, b: T) => number,\n): ArraySpliceOp[] {\n  const splices: ArraySpliceOp[] = [];\n  let oldIndex = 0;\n  let newIndex = 0;\n  const oldCount = oldArray.length;\n  const newCount = newArray.length;\n  while (oldIndex < oldCount && newIndex < newCount) {\n    let c: number;\n    const oldValue = oldArray[oldIndex];\n    const newValue = newArray[newIndex];\n    c = compare(oldValue, newValue);\n    if (c === 0) {\n      let retainCount = 1;\n      ++oldIndex;\n      ++newIndex;\n      while (\n        oldIndex < oldCount &&\n        newIndex < newCount &&\n        (c = compare(oldArray[oldIndex], newArray[newIndex])) === 0\n      ) {\n        ++retainCount;\n        ++oldIndex;\n        ++newIndex;\n      }\n      splices.push({ retainCount, deleteCount: 0, insertCount: 0 });\n      continue;\n    }\n    if (c < 0) {\n      let deleteCount = 1;\n      while (\n        ++oldIndex < oldCount &&\n        (c = compare(oldArray[oldIndex], newValue)) < 0\n      ) {\n        ++deleteCount;\n      }\n      splices.push({ retainCount: 0, deleteCount, insertCount: 0 });\n      continue;\n    }\n    if (c > 0) {\n      let insertCount = 1;\n      while (\n        ++newIndex < newCount &&\n        (c = compare(oldValue, newArray[newIndex])) > 0\n      ) {\n        ++insertCount;\n      }\n      splices.push({ retainCount: 0, deleteCount: 0, insertCount });\n    }\n  }\n  if (oldIndex < oldCount || newIndex < newCount) {\n    splices.push({\n      retainCount: 0,\n      deleteCount: oldCount - oldIndex,\n      insertCount: newCount - newIndex,\n    });\n  }\n  return splices;\n}\n\nexport function getFixedOrderMergeSplices<T>(\n  oldArray: readonly T[],\n  newArray: readonly T[],\n  equal: (a: T, b: T) => boolean,\n): ArraySpliceOp[] {\n  const splices: ArraySpliceOp[] = [];\n  let oldIndex = 0;\n  let newIndex = 0;\n  const oldCount = oldArray.length;\n  const newCount = newArray.length;\n  while (oldIndex < oldCount) {\n    let retainCount = 0;\n    while (\n      oldIndex < oldCount &&\n      newIndex < newCount &&\n      equal(oldArray[oldIndex], newArray[newIndex])\n    ) {\n      ++retainCount;\n      ++oldIndex;\n      ++newIndex;\n    }\n    if (retainCount !== 0) {\n      splices.push({ retainCount, deleteCount: 0, insertCount: 0 });\n    }\n    let deleteCount = 0;\n    while (\n      oldIndex < oldCount &&\n      (newIndex === newCount || !equal(oldArray[oldIndex], newArray[newIndex]))\n    ) {\n      ++deleteCount;\n      ++oldIndex;\n    }\n    if (deleteCount !== 0) {\n      splices.push({ retainCount: 0, deleteCount, insertCount: 0 });\n    }\n  }\n  if (newIndex !== newCount) {\n    splices.push({\n      retainCount: 0,\n      deleteCount: 0,\n      insertCount: newCount - newIndex,\n    });\n  }\n  return splices;\n}\n\nexport function mergeSequences(\n  aCount: number,\n  bCount: number,\n  compare: (a: number, b: number) => number,\n  aCallback: (a: number) => void,\n  bCallback: (b: number) => void,\n  abCallback: (a: number, b: number) => void,\n) {\n  let a = 0;\n  let b = 0;\n  if (aCount !== 0 && bCount !== 0) {\n    while (true) {\n      const x = compare(a, b);\n      if (x < 0) {\n        aCallback(a);\n        if (++a === aCount) break;\n      } else if (x > 0) {\n        bCallback(b);\n        if (++b === bCount) break;\n      } else {\n        abCallback(a, b);\n        ++a;\n        ++b;\n        if (a === aCount || b === bCount) break;\n      }\n    }\n  }\n  while (a < aCount) {\n    aCallback(a);\n    ++a;\n  }\n  while (b < bCount) {\n    bCallback(b);\n    ++b;\n  }\n}\n","// DO NOT EDIT.  Generated from templates/util/typedarray_builder.template.ts.\n/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Uint32ArrayBuilder {\n  length = 0;\n  data: Uint32Array<ArrayBuffer>;\n\n  constructor(initialCapacity: number = 16) {\n    this.data = new Uint32Array(initialCapacity);\n  }\n\n  resize(newLength: number) {\n    const { data } = this;\n    if (newLength > data.length) {\n      const newData = new Uint32Array(Math.max(newLength, data.length * 2));\n      newData.set(data.subarray(0, this.length));\n      this.data = newData;\n    }\n    this.length = newLength;\n  }\n\n  get view() {\n    const { data } = this;\n    return new Uint32Array<ArrayBuffer>(\n      data.buffer,\n      data.byteOffset,\n      this.length,\n    );\n  }\n\n  shrinkToFit() {\n    this.data = new Uint32Array(this.view);\n  }\n\n  clear() {\n    this.length = 0;\n  }\n\n  appendArray(other: ArrayLike<number>) {\n    const { length } = this;\n    this.resize(length + other.length);\n    this.data.set(other, length);\n  }\n\n  eraseRange(start: number, end: number) {\n    this.data.copyWithin(start, end, this.length);\n    this.length -= end - start;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  encodeCompressedSegmentationUint32,\n  encodeCompressedSegmentationUint64,\n} from \"#src/async_computation/encode_compressed_segmentation_request.js\";\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\nimport { encodeChannels as encodeChannelsUint32 } from \"#src/sliceview/compressed_segmentation/encode_uint32.js\";\nimport { encodeChannels as encodeChannelsUint64 } from \"#src/sliceview/compressed_segmentation/encode_uint64.js\";\nimport { Uint32ArrayBuilder } from \"#src/util/uint32array_builder.js\";\n\nconst tempBuffer = new Uint32ArrayBuilder(20000);\n\nregisterAsyncComputation(\n  encodeCompressedSegmentationUint32,\n  async (rawData, shape, blockSize) => {\n    tempBuffer.clear();\n    encodeChannelsUint32(tempBuffer, blockSize, rawData, shape);\n    return { value: tempBuffer.view };\n  },\n);\n\nregisterAsyncComputation(\n  encodeCompressedSegmentationUint64,\n  async (rawData, shape, blockSize) => {\n    tempBuffer.clear();\n    encodeChannelsUint64(tempBuffer, blockSize, rawData, shape);\n    return { value: tempBuffer.view };\n  },\n);\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport const encodeCompressedSegmentationUint32 = asyncComputation<\n  (\n    rawData: Uint32Array,\n    shape: ArrayLike<number>,\n    blockSize: ArrayLike<number>,\n  ) => Uint32Array\n>(\"encodeCompressedSegmentationUint32\");\n\nexport const encodeCompressedSegmentationUint64 = asyncComputation<\n  (\n    rawData: Uint32Array,\n    shape: ArrayLike<number>,\n    blockSize: ArrayLike<number>,\n  ) => Uint32Array\n>(\"encodeCompressedSegmentationUint64\");\n","/**\n * @license\n * Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction loadURLasArrayBuffer(path, callback) {\n  if (path.indexOf(\"data:\") === 0) {\n    var offset = path.indexOf(\"base64,\") + 7;\n    var data = atob(path.substring(offset));\n    var arr = new Uint8Array(data.length);\n    for (var i = data.length - 1; i >= 0; i--) {\n      arr[i] = data.charCodeAt(i);\n    }\n    callback(arr.buffer);\n    return;\n  }\n  var xhr = new XMLHttpRequest();\n  xhr.open(\"GET\", path, true);\n  xhr.responseType = \"arraybuffer\";\n  xhr.onload = function () {\n    callback(xhr.response);\n  };\n  xhr.send(null);\n}\n\nvar JpegImage = (function jpegImage() {\n  function JpegImage() {\n    this._src = null;\n    this._parser = new PDFJS.JpegImage();\n    this.onload = null;\n  }\n  JpegImage.prototype = {\n    get src() {\n      return this._src;\n    },\n    set src(value) {\n      this.load(value);\n    },\n    get width() {\n      return this._parser.width;\n    },\n    get height() {\n      return this._parser.height;\n    },\n    load: function load(path) {\n      this._src = path;\n      loadURLasArrayBuffer(\n        path,\n        function (buffer) {\n          this.parse(new Uint8Array(buffer));\n          if (this.onload) {\n            this.onload();\n          }\n        }.bind(this),\n      );\n    },\n    parse: function (data) {\n      this._parser.parse(data);\n    },\n    getData: function (width, height) {\n      return this._parser.getData(width, height, false);\n    },\n    copyToImageData: function copyToImageData(imageData) {\n      if (this._parser.numComponents === 2 || this._parser.numComponents > 4) {\n        throw new Error(\"Unsupported amount of components\");\n      }\n      var width = imageData.width,\n        height = imageData.height;\n      var imageDataBytes = width * height * 4;\n      var imageDataArray = imageData.data;\n      var i, j;\n      if (this._parser.numComponents === 1) {\n        var values = this._parser.getData(width, height, false);\n        for (i = 0, j = 0; i < imageDataBytes; ) {\n          var value = values[j++];\n          imageDataArray[i++] = value;\n          imageDataArray[i++] = value;\n          imageDataArray[i++] = value;\n          imageDataArray[i++] = 255;\n        }\n        return;\n      }\n      var rgb = this._parser.getData(width, height, true);\n      for (i = 0, j = 0; i < imageDataBytes; ) {\n        imageDataArray[i++] = rgb[j++];\n        imageDataArray[i++] = rgb[j++];\n        imageDataArray[i++] = rgb[j++];\n        imageDataArray[i++] = 255;\n      }\n    },\n  };\n  return JpegImage;\n})();\n\nvar PDFJS;\n\n(function (PDFJS) {\n  \"use strict\";\n  var JpegImage = (function jpegImage() {\n    var dctZigZag = new Uint8Array([\n      0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33,\n      40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43,\n      36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53,\n      60, 61, 54, 47, 55, 62, 63,\n    ]);\n    var dctCos1 = 4017;\n    var dctSin1 = 799;\n    var dctCos3 = 3406;\n    var dctSin3 = 2276;\n    var dctCos6 = 1567;\n    var dctSin6 = 3784;\n    var dctSqrt2 = 5793;\n    var dctSqrt1d2 = 2896;\n    function constructor() {}\n    function buildHuffmanTable(codeLengths, values) {\n      var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n      while (length > 0 && !codeLengths[length - 1]) {\n        length--;\n      }\n      code.push({\n        children: [],\n        index: 0,\n      });\n      var p = code[0],\n        q;\n      for (i = 0; i < length; i++) {\n        for (j = 0; j < codeLengths[i]; j++) {\n          p = code.pop();\n          p.children[p.index] = values[k];\n          while (p.index > 0) {\n            p = code.pop();\n          }\n          p.index++;\n          code.push(p);\n          while (code.length <= i) {\n            code.push(\n              (q = {\n                children: [],\n                index: 0,\n              }),\n            );\n            p.children[p.index] = q.children;\n            p = q;\n          }\n          k++;\n        }\n        if (i + 1 < length) {\n          code.push(\n            (q = {\n              children: [],\n              index: 0,\n            }),\n          );\n          p.children[p.index] = q.children;\n          p = q;\n        }\n      }\n      return code[0].children;\n    }\n    function getBlockBufferOffset(component, row, col) {\n      return 64 * ((component.blocksPerLine + 1) * row + col);\n    }\n    function decodeScan(\n      data,\n      offset,\n      frame,\n      components,\n      resetInterval,\n      spectralStart,\n      spectralEnd,\n      successivePrev,\n      successive,\n    ) {\n      var precision = frame.precision;\n      var samplesPerLine = frame.samplesPerLine;\n      var scanLines = frame.scanLines;\n      var mcusPerLine = frame.mcusPerLine;\n      var progressive = frame.progressive;\n      var maxH = frame.maxH,\n        maxV = frame.maxV;\n      var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n      function readBit() {\n        if (bitsCount > 0) {\n          bitsCount--;\n          return (bitsData >> bitsCount) & 1;\n        }\n        bitsData = data[offset++];\n        if (bitsData === 255) {\n          var nextByte = data[offset++];\n          if (nextByte) {\n            throw (\n              \"unexpected marker: \" + ((bitsData << 8) | nextByte).toString(16)\n            );\n          }\n        }\n        bitsCount = 7;\n        return bitsData >>> 7;\n      }\n      function decodeHuffman(tree) {\n        var node = tree;\n        while (true) {\n          node = node[readBit()];\n          if (typeof node === \"number\") {\n            return node;\n          }\n          if (typeof node !== \"object\") {\n            throw \"invalid huffman sequence\";\n          }\n        }\n      }\n      function receive(length) {\n        var n = 0;\n        while (length > 0) {\n          n = (n << 1) | readBit();\n          length--;\n        }\n        return n;\n      }\n      function receiveAndExtend(length) {\n        if (length === 1) {\n          return readBit() === 1 ? 1 : -1;\n        }\n        var n = receive(length);\n        if (n >= 1 << (length - 1)) {\n          return n;\n        }\n        return n + (-1 << length) + 1;\n      }\n      function decodeBaseline(component, offset) {\n        var t = decodeHuffman(component.huffmanTableDC);\n        var diff = t === 0 ? 0 : receiveAndExtend(t);\n        component.blockData[offset] = component.pred += diff;\n        var k = 1;\n        while (k < 64) {\n          var rs = decodeHuffman(component.huffmanTableAC);\n          var s = rs & 15,\n            r = rs >> 4;\n          if (s === 0) {\n            if (r < 15) {\n              break;\n            }\n            k += 16;\n            continue;\n          }\n          k += r;\n          var z = dctZigZag[k];\n          component.blockData[offset + z] = receiveAndExtend(s);\n          k++;\n        }\n      }\n      function decodeDCFirst(component, offset) {\n        var t = decodeHuffman(component.huffmanTableDC);\n        var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n        component.blockData[offset] = component.pred += diff;\n      }\n      function decodeDCSuccessive(component, offset) {\n        component.blockData[offset] |= readBit() << successive;\n      }\n      var eobrun = 0;\n      function decodeACFirst(component, offset) {\n        if (eobrun > 0) {\n          eobrun--;\n          return;\n        }\n        var k = spectralStart,\n          e = spectralEnd;\n        while (k <= e) {\n          var rs = decodeHuffman(component.huffmanTableAC);\n          var s = rs & 15,\n            r = rs >> 4;\n          if (s === 0) {\n            if (r < 15) {\n              eobrun = receive(r) + (1 << r) - 1;\n              break;\n            }\n            k += 16;\n            continue;\n          }\n          k += r;\n          var z = dctZigZag[k];\n          component.blockData[offset + z] =\n            receiveAndExtend(s) * (1 << successive);\n          k++;\n        }\n      }\n      var successiveACState = 0,\n        successiveACNextValue;\n      function decodeACSuccessive(component, offset) {\n        var k = spectralStart;\n        var e = spectralEnd;\n        var r = 0;\n        var s;\n        var rs;\n        while (k <= e) {\n          var z = dctZigZag[k];\n          switch (successiveACState) {\n            case 0:\n              rs = decodeHuffman(component.huffmanTableAC);\n              s = rs & 15;\n              r = rs >> 4;\n              if (s === 0) {\n                if (r < 15) {\n                  eobrun = receive(r) + (1 << r);\n                  successiveACState = 4;\n                } else {\n                  r = 16;\n                  successiveACState = 1;\n                }\n              } else {\n                if (s !== 1) {\n                  throw \"invalid ACn encoding\";\n                }\n                successiveACNextValue = receiveAndExtend(s);\n                successiveACState = r ? 2 : 3;\n              }\n              continue;\n\n            case 1:\n            case 2:\n              if (component.blockData[offset + z]) {\n                component.blockData[offset + z] += readBit() << successive;\n              } else {\n                r--;\n                if (r === 0) {\n                  successiveACState = successiveACState === 2 ? 3 : 0;\n                }\n              }\n              break;\n\n            case 3:\n              if (component.blockData[offset + z]) {\n                component.blockData[offset + z] += readBit() << successive;\n              } else {\n                component.blockData[offset + z] =\n                  successiveACNextValue << successive;\n                successiveACState = 0;\n              }\n              break;\n\n            case 4:\n              if (component.blockData[offset + z]) {\n                component.blockData[offset + z] += readBit() << successive;\n              }\n              break;\n          }\n          k++;\n        }\n        if (successiveACState === 4) {\n          eobrun--;\n          if (eobrun === 0) {\n            successiveACState = 0;\n          }\n        }\n      }\n      function decodeMcu(component, decode, mcu, row, col) {\n        var mcuRow = (mcu / mcusPerLine) | 0;\n        var mcuCol = mcu % mcusPerLine;\n        var blockRow = mcuRow * component.v + row;\n        var blockCol = mcuCol * component.h + col;\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        decode(component, offset);\n      }\n      function decodeBlock(component, decode, mcu) {\n        var blockRow = (mcu / component.blocksPerLine) | 0;\n        var blockCol = mcu % component.blocksPerLine;\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        decode(component, offset);\n      }\n      var componentsLength = components.length;\n      var component, i, j, k, n;\n      var decodeFn;\n      if (progressive) {\n        if (spectralStart === 0) {\n          decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n        } else {\n          decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n        }\n      } else {\n        decodeFn = decodeBaseline;\n      }\n      var mcu = 0,\n        marker;\n      var mcuExpected;\n      if (componentsLength === 1) {\n        mcuExpected =\n          components[0].blocksPerLine * components[0].blocksPerColumn;\n      } else {\n        mcuExpected = mcusPerLine * frame.mcusPerColumn;\n      }\n      if (!resetInterval) {\n        resetInterval = mcuExpected;\n      }\n      var h, v;\n      while (mcu < mcuExpected) {\n        for (i = 0; i < componentsLength; i++) {\n          components[i].pred = 0;\n        }\n        eobrun = 0;\n        if (componentsLength === 1) {\n          component = components[0];\n          for (n = 0; n < resetInterval; n++) {\n            decodeBlock(component, decodeFn, mcu);\n            mcu++;\n          }\n        } else {\n          for (n = 0; n < resetInterval; n++) {\n            for (i = 0; i < componentsLength; i++) {\n              component = components[i];\n              h = component.h;\n              v = component.v;\n              for (j = 0; j < v; j++) {\n                for (k = 0; k < h; k++) {\n                  decodeMcu(component, decodeFn, mcu, j, k);\n                }\n              }\n            }\n            mcu++;\n          }\n        }\n        bitsCount = 0;\n        marker = (data[offset] << 8) | data[offset + 1];\n        if (marker <= 65280) {\n          throw \"marker was not found\";\n        }\n        if (marker >= 65488 && marker <= 65495) {\n          offset += 2;\n        } else {\n          break;\n        }\n      }\n      return offset - startOffset;\n    }\n    function quantizeAndInverse(component, blockBufferOffset, p) {\n      var qt = component.quantizationTable,\n        blockData = component.blockData;\n      var v0, v1, v2, v3, v4, v5, v6, v7;\n      var p0, p1, p2, p3, p4, p5, p6, p7;\n      var t;\n      for (var row = 0; row < 64; row += 8) {\n        p0 = blockData[blockBufferOffset + row];\n        p1 = blockData[blockBufferOffset + row + 1];\n        p2 = blockData[blockBufferOffset + row + 2];\n        p3 = blockData[blockBufferOffset + row + 3];\n        p4 = blockData[blockBufferOffset + row + 4];\n        p5 = blockData[blockBufferOffset + row + 5];\n        p6 = blockData[blockBufferOffset + row + 6];\n        p7 = blockData[blockBufferOffset + row + 7];\n        p0 *= qt[row];\n        if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n          t = (dctSqrt2 * p0 + 512) >> 10;\n          p[row] = t;\n          p[row + 1] = t;\n          p[row + 2] = t;\n          p[row + 3] = t;\n          p[row + 4] = t;\n          p[row + 5] = t;\n          p[row + 6] = t;\n          p[row + 7] = t;\n          continue;\n        }\n        p1 *= qt[row + 1];\n        p2 *= qt[row + 2];\n        p3 *= qt[row + 3];\n        p4 *= qt[row + 4];\n        p5 *= qt[row + 5];\n        p6 *= qt[row + 6];\n        p7 *= qt[row + 7];\n        v0 = (dctSqrt2 * p0 + 128) >> 8;\n        v1 = (dctSqrt2 * p4 + 128) >> 8;\n        v2 = p2;\n        v3 = p6;\n        v4 = (dctSqrt1d2 * (p1 - p7) + 128) >> 8;\n        v7 = (dctSqrt1d2 * (p1 + p7) + 128) >> 8;\n        v5 = p3 << 4;\n        v6 = p5 << 4;\n        v0 = (v0 + v1 + 1) >> 1;\n        v1 = v0 - v1;\n        t = (v2 * dctSin6 + v3 * dctCos6 + 128) >> 8;\n        v2 = (v2 * dctCos6 - v3 * dctSin6 + 128) >> 8;\n        v3 = t;\n        v4 = (v4 + v6 + 1) >> 1;\n        v6 = v4 - v6;\n        v7 = (v7 + v5 + 1) >> 1;\n        v5 = v7 - v5;\n        v0 = (v0 + v3 + 1) >> 1;\n        v3 = v0 - v3;\n        v1 = (v1 + v2 + 1) >> 1;\n        v2 = v1 - v2;\n        t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n        v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n        v7 = t;\n        t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n        v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n        v6 = t;\n        p[row] = v0 + v7;\n        p[row + 7] = v0 - v7;\n        p[row + 1] = v1 + v6;\n        p[row + 6] = v1 - v6;\n        p[row + 2] = v2 + v5;\n        p[row + 5] = v2 - v5;\n        p[row + 3] = v3 + v4;\n        p[row + 4] = v3 - v4;\n      }\n      for (var col = 0; col < 8; ++col) {\n        p0 = p[col];\n        p1 = p[col + 8];\n        p2 = p[col + 16];\n        p3 = p[col + 24];\n        p4 = p[col + 32];\n        p5 = p[col + 40];\n        p6 = p[col + 48];\n        p7 = p[col + 56];\n        if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n          t = (dctSqrt2 * p0 + 8192) >> 14;\n          t = t < -2040 ? 0 : t >= 2024 ? 255 : (t + 2056) >> 4;\n          blockData[blockBufferOffset + col] = t;\n          blockData[blockBufferOffset + col + 8] = t;\n          blockData[blockBufferOffset + col + 16] = t;\n          blockData[blockBufferOffset + col + 24] = t;\n          blockData[blockBufferOffset + col + 32] = t;\n          blockData[blockBufferOffset + col + 40] = t;\n          blockData[blockBufferOffset + col + 48] = t;\n          blockData[blockBufferOffset + col + 56] = t;\n          continue;\n        }\n        v0 = (dctSqrt2 * p0 + 2048) >> 12;\n        v1 = (dctSqrt2 * p4 + 2048) >> 12;\n        v2 = p2;\n        v3 = p6;\n        v4 = (dctSqrt1d2 * (p1 - p7) + 2048) >> 12;\n        v7 = (dctSqrt1d2 * (p1 + p7) + 2048) >> 12;\n        v5 = p3;\n        v6 = p5;\n        v0 = ((v0 + v1 + 1) >> 1) + 4112;\n        v1 = v0 - v1;\n        t = (v2 * dctSin6 + v3 * dctCos6 + 2048) >> 12;\n        v2 = (v2 * dctCos6 - v3 * dctSin6 + 2048) >> 12;\n        v3 = t;\n        v4 = (v4 + v6 + 1) >> 1;\n        v6 = v4 - v6;\n        v7 = (v7 + v5 + 1) >> 1;\n        v5 = v7 - v5;\n        v0 = (v0 + v3 + 1) >> 1;\n        v3 = v0 - v3;\n        v1 = (v1 + v2 + 1) >> 1;\n        v2 = v1 - v2;\n        t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n        v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n        v7 = t;\n        t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n        v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n        v6 = t;\n        p0 = v0 + v7;\n        p7 = v0 - v7;\n        p1 = v1 + v6;\n        p6 = v1 - v6;\n        p2 = v2 + v5;\n        p5 = v2 - v5;\n        p3 = v3 + v4;\n        p4 = v3 - v4;\n        p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n        p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n        p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n        p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n        p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n        p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n        p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n        p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n        blockData[blockBufferOffset + col] = p0;\n        blockData[blockBufferOffset + col + 8] = p1;\n        blockData[blockBufferOffset + col + 16] = p2;\n        blockData[blockBufferOffset + col + 24] = p3;\n        blockData[blockBufferOffset + col + 32] = p4;\n        blockData[blockBufferOffset + col + 40] = p5;\n        blockData[blockBufferOffset + col + 48] = p6;\n        blockData[blockBufferOffset + col + 56] = p7;\n      }\n    }\n    function buildComponentData(frame, component) {\n      var blocksPerLine = component.blocksPerLine;\n      var blocksPerColumn = component.blocksPerColumn;\n      var computationBuffer = new Int16Array(64);\n      for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n        for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n          var offset = getBlockBufferOffset(component, blockRow, blockCol);\n          quantizeAndInverse(component, offset, computationBuffer);\n        }\n      }\n      return component.blockData;\n    }\n    function clamp0to255(a) {\n      return a <= 0 ? 0 : a >= 255 ? 255 : a;\n    }\n    constructor.prototype = {\n      parse: function parse(data) {\n        function readUint16() {\n          var value = (data[offset] << 8) | data[offset + 1];\n          offset += 2;\n          return value;\n        }\n        function readDataBlock() {\n          var length = readUint16();\n          var array = data.subarray(offset, offset + length - 2);\n          offset += array.length;\n          return array;\n        }\n        function prepareComponents(frame) {\n          var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n          var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n          for (var i = 0; i < frame.components.length; i++) {\n            component = frame.components[i];\n            var blocksPerLine = Math.ceil(\n              (Math.ceil(frame.samplesPerLine / 8) * component.h) / frame.maxH,\n            );\n            var blocksPerColumn = Math.ceil(\n              (Math.ceil(frame.scanLines / 8) * component.v) / frame.maxV,\n            );\n            var blocksPerLineForMcu = mcusPerLine * component.h;\n            var blocksPerColumnForMcu = mcusPerColumn * component.v;\n            var blocksBufferSize =\n              64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n            component.blockData = new Int16Array(blocksBufferSize);\n            component.blocksPerLine = blocksPerLine;\n            component.blocksPerColumn = blocksPerColumn;\n          }\n          frame.mcusPerLine = mcusPerLine;\n          frame.mcusPerColumn = mcusPerColumn;\n        }\n        var offset = 0,\n          length = data.length;\n        var jfif = null;\n        var adobe = null;\n        var pixels = null;\n        var frame, resetInterval;\n        var quantizationTables = [];\n        var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n        var fileMarker = readUint16();\n        if (fileMarker !== 65496) {\n          throw \"SOI not found\";\n        }\n        fileMarker = readUint16();\n        while (fileMarker !== 65497) {\n          var i, j, l;\n          switch (fileMarker) {\n            case 65504:\n            case 65505:\n            case 65506:\n            case 65507:\n            case 65508:\n            case 65509:\n            case 65510:\n            case 65511:\n            case 65512:\n            case 65513:\n            case 65514:\n            case 65515:\n            case 65516:\n            case 65517:\n            case 65518:\n            case 65519:\n            case 65534:\n              var appData = readDataBlock();\n              if (fileMarker === 65504) {\n                if (\n                  appData[0] === 74 &&\n                  appData[1] === 70 &&\n                  appData[2] === 73 &&\n                  appData[3] === 70 &&\n                  appData[4] === 0\n                ) {\n                  jfif = {\n                    version: {\n                      major: appData[5],\n                      minor: appData[6],\n                    },\n                    densityUnits: appData[7],\n                    xDensity: (appData[8] << 8) | appData[9],\n                    yDensity: (appData[10] << 8) | appData[11],\n                    thumbWidth: appData[12],\n                    thumbHeight: appData[13],\n                    thumbData: appData.subarray(\n                      14,\n                      14 + 3 * appData[12] * appData[13],\n                    ),\n                  };\n                }\n              }\n              if (fileMarker === 65518) {\n                if (\n                  appData[0] === 65 &&\n                  appData[1] === 100 &&\n                  appData[2] === 111 &&\n                  appData[3] === 98 &&\n                  appData[4] === 101 &&\n                  appData[5] === 0\n                ) {\n                  adobe = {\n                    version: appData[6],\n                    flags0: (appData[7] << 8) | appData[8],\n                    flags1: (appData[9] << 8) | appData[10],\n                    transformCode: appData[11],\n                  };\n                }\n              }\n              break;\n\n            case 65499:\n              var quantizationTablesLength = readUint16();\n              var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n              var z;\n              while (offset < quantizationTablesEnd) {\n                var quantizationTableSpec = data[offset++];\n                var tableData = new Uint16Array(64);\n                if (quantizationTableSpec >> 4 === 0) {\n                  for (j = 0; j < 64; j++) {\n                    z = dctZigZag[j];\n                    tableData[z] = data[offset++];\n                  }\n                } else if (quantizationTableSpec >> 4 === 1) {\n                  for (j = 0; j < 64; j++) {\n                    z = dctZigZag[j];\n                    tableData[z] = readUint16();\n                  }\n                } else {\n                  throw \"DQT: invalid table spec\";\n                }\n                quantizationTables[quantizationTableSpec & 15] = tableData;\n              }\n              break;\n\n            case 65472:\n            case 65473:\n            case 65474:\n              if (frame) {\n                throw \"Only single frame JPEGs supported\";\n              }\n              readUint16();\n              frame = {};\n              frame.extended = fileMarker === 65473;\n              frame.progressive = fileMarker === 65474;\n              frame.precision = data[offset++];\n              frame.scanLines = readUint16();\n              frame.samplesPerLine = readUint16();\n              frame.components = [];\n              frame.componentIds = {};\n              var componentsCount = data[offset++],\n                componentId;\n              var maxH = 0,\n                maxV = 0;\n              for (i = 0; i < componentsCount; i++) {\n                componentId = data[offset];\n                var h = data[offset + 1] >> 4;\n                var v = data[offset + 1] & 15;\n                if (maxH < h) {\n                  maxH = h;\n                }\n                if (maxV < v) {\n                  maxV = v;\n                }\n                var qId = data[offset + 2];\n                l = frame.components.push({\n                  h: h,\n                  v: v,\n                  quantizationTable: quantizationTables[qId],\n                });\n                frame.componentIds[componentId] = l - 1;\n                offset += 3;\n              }\n              frame.maxH = maxH;\n              frame.maxV = maxV;\n              prepareComponents(frame);\n              break;\n\n            case 65476:\n              var huffmanLength = readUint16();\n              for (i = 2; i < huffmanLength; ) {\n                var huffmanTableSpec = data[offset++];\n                var codeLengths = new Uint8Array(16);\n                var codeLengthSum = 0;\n                for (j = 0; j < 16; j++, offset++) {\n                  codeLengthSum += codeLengths[j] = data[offset];\n                }\n                var huffmanValues = new Uint8Array(codeLengthSum);\n                for (j = 0; j < codeLengthSum; j++, offset++) {\n                  huffmanValues[j] = data[offset];\n                }\n                i += 17 + codeLengthSum;\n                (huffmanTableSpec >> 4 === 0\n                  ? huffmanTablesDC\n                  : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(\n                  codeLengths,\n                  huffmanValues,\n                );\n              }\n              break;\n\n            case 65501:\n              readUint16();\n              resetInterval = readUint16();\n              break;\n\n            case 65498:\n              var scanLength = readUint16();\n              var selectorsCount = data[offset++];\n              var components = [],\n                component;\n              for (i = 0; i < selectorsCount; i++) {\n                var componentIndex = frame.componentIds[data[offset++]];\n                component = frame.components[componentIndex];\n                var tableSpec = data[offset++];\n                component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n                component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n                components.push(component);\n              }\n              var spectralStart = data[offset++];\n              var spectralEnd = data[offset++];\n              var successiveApproximation = data[offset++];\n              var processed = decodeScan(\n                data,\n                offset,\n                frame,\n                components,\n                resetInterval,\n                spectralStart,\n                spectralEnd,\n                successiveApproximation >> 4,\n                successiveApproximation & 15,\n              );\n              offset += processed;\n              break;\n\n            case 65535:\n              if (data[offset] !== 255) {\n                offset--;\n              }\n              break;\n\n            default:\n              if (\n                data[offset - 3] === 255 &&\n                data[offset - 2] >= 192 &&\n                data[offset - 2] <= 254\n              ) {\n                offset -= 3;\n                break;\n              }\n              throw \"unknown JPEG marker \" + fileMarker.toString(16);\n          }\n          fileMarker = readUint16();\n        }\n        this.width = frame.samplesPerLine;\n        this.height = frame.scanLines;\n        this.jfif = jfif;\n        this.adobe = adobe;\n        this.components = [];\n        for (i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          this.components.push({\n            output: buildComponentData(frame, component),\n            scaleX: component.h / frame.maxH,\n            scaleY: component.v / frame.maxV,\n            blocksPerLine: component.blocksPerLine,\n            blocksPerColumn: component.blocksPerColumn,\n          });\n        }\n        this.numComponents = this.components.length;\n      },\n      _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n        var scaleX = this.width / width,\n          scaleY = this.height / height;\n        var component, componentScaleX, componentScaleY, blocksPerScanline;\n        var x, y, i, j, k;\n        var index;\n        var offset = 0;\n        var output;\n        var numComponents = this.components.length;\n        var dataLength = width * height * numComponents;\n        var data = new Uint8Array(dataLength);\n        var xScaleBlockOffset = new Uint32Array(width);\n        var mask3LSB = 4294967288;\n        for (i = 0; i < numComponents; i++) {\n          component = this.components[i];\n          componentScaleX = component.scaleX * scaleX;\n          componentScaleY = component.scaleY * scaleY;\n          offset = i;\n          output = component.output;\n          blocksPerScanline = (component.blocksPerLine + 1) << 3;\n          for (x = 0; x < width; x++) {\n            j = 0 | (x * componentScaleX);\n            xScaleBlockOffset[x] = ((j & mask3LSB) << 3) | (j & 7);\n          }\n          for (y = 0; y < height; y++) {\n            j = 0 | (y * componentScaleY);\n            index = (blocksPerScanline * (j & mask3LSB)) | ((j & 7) << 3);\n            for (x = 0; x < width; x++) {\n              data[offset] = output[index + xScaleBlockOffset[x]];\n              offset += numComponents;\n            }\n          }\n        }\n        var transform = this.decodeTransform;\n        if (transform) {\n          for (i = 0; i < dataLength; ) {\n            for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n              data[i] = ((data[i] * transform[k]) >> 8) + transform[k + 1];\n            }\n          }\n        }\n        return data;\n      },\n      _isColorConversionNeeded: function isColorConversionNeeded() {\n        if (this.adobe && this.adobe.transformCode) {\n          return true;\n        } else if (this.numComponents === 3) {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      _convertYccToRgb: function convertYccToRgb(data) {\n        var Y, Cb, Cr;\n        for (var i = 0, length = data.length; i < length; i += 3) {\n          Y = data[i];\n          Cb = data[i + 1];\n          Cr = data[i + 2];\n          data[i] = clamp0to255(Y - 179.456 + 1.402 * Cr);\n          data[i + 1] = clamp0to255(Y + 135.459 - 0.344 * Cb - 0.714 * Cr);\n          data[i + 2] = clamp0to255(Y - 226.816 + 1.772 * Cb);\n        }\n        return data;\n      },\n      _convertYcckToRgb: function convertYcckToRgb(data) {\n        var Y, Cb, Cr, k;\n        var offset = 0;\n        for (var i = 0, length = data.length; i < length; i += 4) {\n          Y = data[i];\n          Cb = data[i + 1];\n          Cr = data[i + 2];\n          k = data[i + 3];\n          var r =\n            -122.67195406894 +\n            Cb *\n              (-660635669420364e-19 * Cb +\n                0.000437130475926232 * Cr -\n                54080610064599e-18 * Y +\n                0.00048449797120281 * k -\n                0.154362151871126) +\n            Cr *\n              (-0.000957964378445773 * Cr +\n                0.000817076911346625 * Y -\n                0.00477271405408747 * k +\n                1.53380253221734) +\n            Y *\n              (0.000961250184130688 * Y -\n                0.00266257332283933 * k +\n                0.48357088451265) +\n            k * (-0.000336197177618394 * k + 0.484791561490776);\n          var g =\n            107.268039397724 +\n            Cb *\n              (219927104525741e-19 * Cb -\n                0.000640992018297945 * Cr +\n                0.000659397001245577 * Y +\n                0.000426105652938837 * k -\n                0.176491792462875) +\n            Cr *\n              (-0.000778269941513683 * Cr +\n                0.00130872261408275 * Y +\n                0.000770482631801132 * k -\n                0.151051492775562) +\n            Y *\n              (0.00126935368114843 * Y -\n                0.00265090189010898 * k +\n                0.25802910206845) +\n            k * (-0.000318913117588328 * k - 0.213742400323665);\n          var b =\n            -20.810012546947 +\n            Cb *\n              (-0.000570115196973677 * Cb -\n                263409051004589e-19 * Cr +\n                0.0020741088115012 * Y -\n                0.00288260236853442 * k +\n                0.814272968359295) +\n            Cr *\n              (-153496057440975e-19 * Cr -\n                0.000132689043961446 * Y +\n                0.000560833691242812 * k -\n                0.195152027534049) +\n            Y *\n              (0.00174418132927582 * Y -\n                0.00255243321439347 * k +\n                0.116935020465145) +\n            k * (-0.000343531996510555 * k + 0.24165260232407);\n          data[offset++] = clamp0to255(r);\n          data[offset++] = clamp0to255(g);\n          data[offset++] = clamp0to255(b);\n        }\n        return data;\n      },\n      _convertYcckToCmyk: function convertYcckToCmyk(data) {\n        var Y, Cb, Cr;\n        for (var i = 0, length = data.length; i < length; i += 4) {\n          Y = data[i];\n          Cb = data[i + 1];\n          Cr = data[i + 2];\n          data[i] = clamp0to255(434.456 - Y - 1.402 * Cr);\n          data[i + 1] = clamp0to255(119.541 - Y + 0.344 * Cb + 0.714 * Cr);\n          data[i + 2] = clamp0to255(481.816 - Y - 1.772 * Cb);\n        }\n        return data;\n      },\n      _convertCmykToRgb: function convertCmykToRgb(data) {\n        var c, m, y, k;\n        var offset = 0;\n        var min = -255 * 255 * 255;\n        var scale = 1 / 255 / 255;\n        for (var i = 0, length = data.length; i < length; i += 4) {\n          c = data[i];\n          m = data[i + 1];\n          y = data[i + 2];\n          k = data[i + 3];\n          var r =\n            c *\n              (-4.387332384609988 * c +\n                54.48615194189176 * m +\n                18.82290502165302 * y +\n                212.25662451639585 * k -\n                72734.4411664936) +\n            m *\n              (1.7149763477362134 * m -\n                5.6096736904047315 * y -\n                17.873870861415444 * k -\n                1401.7366389350734) +\n            y *\n              (-2.5217340131683033 * y -\n                21.248923337353073 * k +\n                4465.541406466231) -\n            k * (21.86122147463605 * k + 48317.86113160301);\n          var g =\n            c *\n              (8.841041422036149 * c +\n                60.118027045597366 * m +\n                6.871425592049007 * y +\n                31.159100130055922 * k -\n                20220.756542821975) +\n            m *\n              (-15.310361306967817 * m +\n                17.575251261109482 * y +\n                131.35250912493976 * k -\n                48691.05921601825) +\n            y *\n              (4.444339102852739 * y +\n                9.8632861493405 * k -\n                6341.191035517494) -\n            k * (20.737325471181034 * k + 47890.15695978492);\n          var b =\n            c *\n              (0.8842522430003296 * c +\n                8.078677503112928 * m +\n                30.89978309703729 * y -\n                0.23883238689178934 * k -\n                3616.812083916688) +\n            m *\n              (10.49593273432072 * m +\n                63.02378494754052 * y +\n                50.606957656360734 * k -\n                28620.90484698408) +\n            y *\n              (0.03296041114873217 * y +\n                115.60384449646641 * k -\n                49363.43385999684) -\n            k * (22.33816807309886 * k + 45932.16563550634);\n          data[offset++] = r >= 0 ? 255 : r <= min ? 0 : (255 + r * scale) | 0;\n          data[offset++] = g >= 0 ? 255 : g <= min ? 0 : (255 + g * scale) | 0;\n          data[offset++] = b >= 0 ? 255 : b <= min ? 0 : (255 + b * scale) | 0;\n        }\n        return data;\n      },\n      getData: function getData(width, height, forceRGBoutput) {\n        if (this.numComponents > 4) {\n          throw \"Unsupported color mode\";\n        }\n        var data = this._getLinearizedBlockData(width, height);\n        if (this.numComponents === 3) {\n          return this._convertYccToRgb(data);\n        } else if (this.numComponents === 4) {\n          if (this._isColorConversionNeeded()) {\n            if (forceRGBoutput) {\n              return this._convertYcckToRgb(data);\n            } else {\n              return this._convertYcckToCmyk(data);\n            }\n          } else if (forceRGBoutput) {\n            return this._convertCmykToRgb(data);\n          }\n        }\n        return data;\n      },\n    };\n    return constructor;\n  })();\n  (\"use strict\");\n  var ArithmeticDecoder = (function ArithmeticDecoderClosure() {\n    var QeTable = [\n      {\n        qe: 22017,\n        nmps: 1,\n        nlps: 1,\n        switchFlag: 1,\n      },\n      {\n        qe: 13313,\n        nmps: 2,\n        nlps: 6,\n        switchFlag: 0,\n      },\n      {\n        qe: 6145,\n        nmps: 3,\n        nlps: 9,\n        switchFlag: 0,\n      },\n      {\n        qe: 2753,\n        nmps: 4,\n        nlps: 12,\n        switchFlag: 0,\n      },\n      {\n        qe: 1313,\n        nmps: 5,\n        nlps: 29,\n        switchFlag: 0,\n      },\n      {\n        qe: 545,\n        nmps: 38,\n        nlps: 33,\n        switchFlag: 0,\n      },\n      {\n        qe: 22017,\n        nmps: 7,\n        nlps: 6,\n        switchFlag: 1,\n      },\n      {\n        qe: 21505,\n        nmps: 8,\n        nlps: 14,\n        switchFlag: 0,\n      },\n      {\n        qe: 18433,\n        nmps: 9,\n        nlps: 14,\n        switchFlag: 0,\n      },\n      {\n        qe: 14337,\n        nmps: 10,\n        nlps: 14,\n        switchFlag: 0,\n      },\n      {\n        qe: 12289,\n        nmps: 11,\n        nlps: 17,\n        switchFlag: 0,\n      },\n      {\n        qe: 9217,\n        nmps: 12,\n        nlps: 18,\n        switchFlag: 0,\n      },\n      {\n        qe: 7169,\n        nmps: 13,\n        nlps: 20,\n        switchFlag: 0,\n      },\n      {\n        qe: 5633,\n        nmps: 29,\n        nlps: 21,\n        switchFlag: 0,\n      },\n      {\n        qe: 22017,\n        nmps: 15,\n        nlps: 14,\n        switchFlag: 1,\n      },\n      {\n        qe: 21505,\n        nmps: 16,\n        nlps: 14,\n        switchFlag: 0,\n      },\n      {\n        qe: 20737,\n        nmps: 17,\n        nlps: 15,\n        switchFlag: 0,\n      },\n      {\n        qe: 18433,\n        nmps: 18,\n        nlps: 16,\n        switchFlag: 0,\n      },\n      {\n        qe: 14337,\n        nmps: 19,\n        nlps: 17,\n        switchFlag: 0,\n      },\n      {\n        qe: 13313,\n        nmps: 20,\n        nlps: 18,\n        switchFlag: 0,\n      },\n      {\n        qe: 12289,\n        nmps: 21,\n        nlps: 19,\n        switchFlag: 0,\n      },\n      {\n        qe: 10241,\n        nmps: 22,\n        nlps: 19,\n        switchFlag: 0,\n      },\n      {\n        qe: 9217,\n        nmps: 23,\n        nlps: 20,\n        switchFlag: 0,\n      },\n      {\n        qe: 8705,\n        nmps: 24,\n        nlps: 21,\n        switchFlag: 0,\n      },\n      {\n        qe: 7169,\n        nmps: 25,\n        nlps: 22,\n        switchFlag: 0,\n      },\n      {\n        qe: 6145,\n        nmps: 26,\n        nlps: 23,\n        switchFlag: 0,\n      },\n      {\n        qe: 5633,\n        nmps: 27,\n        nlps: 24,\n        switchFlag: 0,\n      },\n      {\n        qe: 5121,\n        nmps: 28,\n        nlps: 25,\n        switchFlag: 0,\n      },\n      {\n        qe: 4609,\n        nmps: 29,\n        nlps: 26,\n        switchFlag: 0,\n      },\n      {\n        qe: 4353,\n        nmps: 30,\n        nlps: 27,\n        switchFlag: 0,\n      },\n      {\n        qe: 2753,\n        nmps: 31,\n        nlps: 28,\n        switchFlag: 0,\n      },\n      {\n        qe: 2497,\n        nmps: 32,\n        nlps: 29,\n        switchFlag: 0,\n      },\n      {\n        qe: 2209,\n        nmps: 33,\n        nlps: 30,\n        switchFlag: 0,\n      },\n      {\n        qe: 1313,\n        nmps: 34,\n        nlps: 31,\n        switchFlag: 0,\n      },\n      {\n        qe: 1089,\n        nmps: 35,\n        nlps: 32,\n        switchFlag: 0,\n      },\n      {\n        qe: 673,\n        nmps: 36,\n        nlps: 33,\n        switchFlag: 0,\n      },\n      {\n        qe: 545,\n        nmps: 37,\n        nlps: 34,\n        switchFlag: 0,\n      },\n      {\n        qe: 321,\n        nmps: 38,\n        nlps: 35,\n        switchFlag: 0,\n      },\n      {\n        qe: 273,\n        nmps: 39,\n        nlps: 36,\n        switchFlag: 0,\n      },\n      {\n        qe: 133,\n        nmps: 40,\n        nlps: 37,\n        switchFlag: 0,\n      },\n      {\n        qe: 73,\n        nmps: 41,\n        nlps: 38,\n        switchFlag: 0,\n      },\n      {\n        qe: 37,\n        nmps: 42,\n        nlps: 39,\n        switchFlag: 0,\n      },\n      {\n        qe: 21,\n        nmps: 43,\n        nlps: 40,\n        switchFlag: 0,\n      },\n      {\n        qe: 9,\n        nmps: 44,\n        nlps: 41,\n        switchFlag: 0,\n      },\n      {\n        qe: 5,\n        nmps: 45,\n        nlps: 42,\n        switchFlag: 0,\n      },\n      {\n        qe: 1,\n        nmps: 45,\n        nlps: 43,\n        switchFlag: 0,\n      },\n      {\n        qe: 22017,\n        nmps: 46,\n        nlps: 46,\n        switchFlag: 0,\n      },\n    ];\n    function ArithmeticDecoder(data, start, end) {\n      this.data = data;\n      this.bp = start;\n      this.dataEnd = end;\n      this.chigh = data[start];\n      this.clow = 0;\n      this.byteIn();\n      this.chigh = ((this.chigh << 7) & 65535) | ((this.clow >> 9) & 127);\n      this.clow = (this.clow << 7) & 65535;\n      this.ct -= 7;\n      this.a = 32768;\n    }\n    ArithmeticDecoder.prototype = {\n      byteIn: function ArithmeticDecoder_byteIn() {\n        var data = this.data;\n        var bp = this.bp;\n        if (data[bp] === 255) {\n          var b1 = data[bp + 1];\n          if (b1 > 143) {\n            this.clow += 65280;\n            this.ct = 8;\n          } else {\n            bp++;\n            this.clow += data[bp] << 9;\n            this.ct = 7;\n            this.bp = bp;\n          }\n        } else {\n          bp++;\n          this.clow += bp < this.dataEnd ? data[bp] << 8 : 65280;\n          this.ct = 8;\n          this.bp = bp;\n        }\n        if (this.clow > 65535) {\n          this.chigh += this.clow >> 16;\n          this.clow &= 65535;\n        }\n      },\n      readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n        var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n        var qeTableIcx = QeTable[cx_index];\n        var qeIcx = qeTableIcx.qe;\n        var d;\n        var a = this.a - qeIcx;\n        if (this.chigh < qeIcx) {\n          if (a < qeIcx) {\n            a = qeIcx;\n            d = cx_mps;\n            cx_index = qeTableIcx.nmps;\n          } else {\n            a = qeIcx;\n            d = 1 ^ cx_mps;\n            if (qeTableIcx.switchFlag === 1) {\n              cx_mps = d;\n            }\n            cx_index = qeTableIcx.nlps;\n          }\n        } else {\n          this.chigh -= qeIcx;\n          if ((a & 32768) !== 0) {\n            this.a = a;\n            return cx_mps;\n          }\n          if (a < qeIcx) {\n            d = 1 ^ cx_mps;\n            if (qeTableIcx.switchFlag === 1) {\n              cx_mps = d;\n            }\n            cx_index = qeTableIcx.nlps;\n          } else {\n            d = cx_mps;\n            cx_index = qeTableIcx.nmps;\n          }\n        }\n        do {\n          if (this.ct === 0) {\n            this.byteIn();\n          }\n          a <<= 1;\n          this.chigh = ((this.chigh << 1) & 65535) | ((this.clow >> 15) & 1);\n          this.clow = (this.clow << 1) & 65535;\n          this.ct--;\n        } while ((a & 32768) === 0);\n        this.a = a;\n        contexts[pos] = (cx_index << 1) | cx_mps;\n        return d;\n      },\n    };\n    return ArithmeticDecoder;\n  })();\n  (\"use strict\");\n  var JpxImage = (function JpxImageClosure() {\n    var SubbandsGainLog2 = {\n      LL: 0,\n      LH: 1,\n      HL: 1,\n      HH: 2,\n    };\n    function JpxImage() {\n      this.failOnCorruptedImage = false;\n    }\n    JpxImage.prototype = {\n      parse: function JpxImage_parse(data) {\n        var head = readUint16(data, 0);\n        if (head === 65359) {\n          this.parseCodestream(data, 0, data.length);\n          return;\n        }\n        var position = 0,\n          length = data.length;\n        while (position < length) {\n          var headerSize = 8;\n          var lbox = readUint32(data, position);\n          var tbox = readUint32(data, position + 4);\n          position += headerSize;\n          if (lbox === 1) {\n            lbox =\n              readUint32(data, position) * 4294967296 +\n              readUint32(data, position + 4);\n            position += 8;\n            headerSize += 8;\n          }\n          if (lbox === 0) {\n            lbox = length - position + headerSize;\n          }\n          if (lbox < headerSize) {\n            throw new Error(\"JPX Error: Invalid box field size\");\n          }\n          var dataLength = lbox - headerSize;\n          var jumpDataLength = true;\n          switch (tbox) {\n            case 1785737832:\n              jumpDataLength = false;\n              break;\n\n            case 1668246642:\n              var method = data[position];\n              var precedence = data[position + 1];\n              var approximation = data[position + 2];\n              if (method === 1) {\n                var colorspace = readUint32(data, position + 3);\n                switch (colorspace) {\n                  case 16:\n                  case 17:\n                  case 18:\n                    break;\n\n                  default:\n                    warn(\"Unknown colorspace \" + colorspace);\n                    break;\n                }\n              } else if (method === 2) {\n                info(\"ICC profile not supported\");\n              }\n              break;\n\n            case 1785737827:\n              this.parseCodestream(data, position, position + dataLength);\n              break;\n\n            case 1783636e3:\n              if (218793738 !== readUint32(data, position)) {\n                warn(\"Invalid JP2 signature\");\n              }\n              break;\n\n            case 1783634458:\n            case 1718909296:\n            case 1920099697:\n            case 1919251232:\n            case 1768449138:\n              break;\n\n            default:\n              var headerType = String.fromCharCode(\n                (tbox >> 24) & 255,\n                (tbox >> 16) & 255,\n                (tbox >> 8) & 255,\n                tbox & 255,\n              );\n              warn(\"Unsupported header type \" + tbox + \" (\" + headerType + \")\");\n              break;\n          }\n          if (jumpDataLength) {\n            position += dataLength;\n          }\n        }\n      },\n      parseImageProperties: function JpxImage_parseImageProperties(stream) {\n        var newByte = stream.getByte();\n        while (newByte >= 0) {\n          var oldByte = newByte;\n          newByte = stream.getByte();\n          var code = (oldByte << 8) | newByte;\n          if (code === 65361) {\n            stream.skip(4);\n            var Xsiz = stream.getInt32() >>> 0;\n            var Ysiz = stream.getInt32() >>> 0;\n            var XOsiz = stream.getInt32() >>> 0;\n            var YOsiz = stream.getInt32() >>> 0;\n            stream.skip(16);\n            var Csiz = stream.getUint16();\n            this.width = Xsiz - XOsiz;\n            this.height = Ysiz - YOsiz;\n            this.componentsCount = Csiz;\n            this.bitsPerComponent = 8;\n            return;\n          }\n        }\n        throw new Error(\"JPX Error: No size marker found in JPX stream\");\n      },\n      parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n        var context = {};\n        try {\n          var doNotRecover = false;\n          var position = start;\n          while (position + 1 < end) {\n            var code = readUint16(data, position);\n            position += 2;\n            var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n            switch (code) {\n              case 65359:\n                context.mainHeader = true;\n                break;\n\n              case 65497:\n                break;\n\n              case 65361:\n                length = readUint16(data, position);\n                var siz = {};\n                siz.Xsiz = readUint32(data, position + 4);\n                siz.Ysiz = readUint32(data, position + 8);\n                siz.XOsiz = readUint32(data, position + 12);\n                siz.YOsiz = readUint32(data, position + 16);\n                siz.XTsiz = readUint32(data, position + 20);\n                siz.YTsiz = readUint32(data, position + 24);\n                siz.XTOsiz = readUint32(data, position + 28);\n                siz.YTOsiz = readUint32(data, position + 32);\n                var componentsCount = readUint16(data, position + 36);\n                siz.Csiz = componentsCount;\n                var components = [];\n                j = position + 38;\n                for (var i = 0; i < componentsCount; i++) {\n                  var component = {\n                    precision: (data[j] & 127) + 1,\n                    isSigned: !!(data[j] & 128),\n                    XRsiz: data[j + 1],\n                    YRsiz: data[j + 1],\n                  };\n                  calculateComponentDimensions(component, siz);\n                  components.push(component);\n                }\n                context.SIZ = siz;\n                context.components = components;\n                calculateTileGrids(context, components);\n                context.QCC = [];\n                context.COC = [];\n                break;\n\n              case 65372:\n                length = readUint16(data, position);\n                var qcd = {};\n                j = position + 2;\n                sqcd = data[j++];\n                switch (sqcd & 31) {\n                  case 0:\n                    spqcdSize = 8;\n                    scalarExpounded = true;\n                    break;\n\n                  case 1:\n                    spqcdSize = 16;\n                    scalarExpounded = false;\n                    break;\n\n                  case 2:\n                    spqcdSize = 16;\n                    scalarExpounded = true;\n                    break;\n\n                  default:\n                    throw new Error(\"JPX Error: Invalid SQcd value \" + sqcd);\n                }\n                qcd.noQuantization = spqcdSize === 8;\n                qcd.scalarExpounded = scalarExpounded;\n                qcd.guardBits = sqcd >> 5;\n                spqcds = [];\n                while (j < length + position) {\n                  var spqcd = {};\n                  if (spqcdSize === 8) {\n                    spqcd.epsilon = data[j++] >> 3;\n                    spqcd.mu = 0;\n                  } else {\n                    spqcd.epsilon = data[j] >> 3;\n                    spqcd.mu = ((data[j] & 7) << 8) | data[j + 1];\n                    j += 2;\n                  }\n                  spqcds.push(spqcd);\n                }\n                qcd.SPqcds = spqcds;\n                if (context.mainHeader) {\n                  context.QCD = qcd;\n                } else {\n                  context.currentTile.QCD = qcd;\n                  context.currentTile.QCC = [];\n                }\n                break;\n\n              case 65373:\n                length = readUint16(data, position);\n                var qcc = {};\n                j = position + 2;\n                var cqcc;\n                if (context.SIZ.Csiz < 257) {\n                  cqcc = data[j++];\n                } else {\n                  cqcc = readUint16(data, j);\n                  j += 2;\n                }\n                sqcd = data[j++];\n                switch (sqcd & 31) {\n                  case 0:\n                    spqcdSize = 8;\n                    scalarExpounded = true;\n                    break;\n\n                  case 1:\n                    spqcdSize = 16;\n                    scalarExpounded = false;\n                    break;\n\n                  case 2:\n                    spqcdSize = 16;\n                    scalarExpounded = true;\n                    break;\n\n                  default:\n                    throw new Error(\"JPX Error: Invalid SQcd value \" + sqcd);\n                }\n                qcc.noQuantization = spqcdSize === 8;\n                qcc.scalarExpounded = scalarExpounded;\n                qcc.guardBits = sqcd >> 5;\n                spqcds = [];\n                while (j < length + position) {\n                  spqcd = {};\n                  if (spqcdSize === 8) {\n                    spqcd.epsilon = data[j++] >> 3;\n                    spqcd.mu = 0;\n                  } else {\n                    spqcd.epsilon = data[j] >> 3;\n                    spqcd.mu = ((data[j] & 7) << 8) | data[j + 1];\n                    j += 2;\n                  }\n                  spqcds.push(spqcd);\n                }\n                qcc.SPqcds = spqcds;\n                if (context.mainHeader) {\n                  context.QCC[cqcc] = qcc;\n                } else {\n                  context.currentTile.QCC[cqcc] = qcc;\n                }\n                break;\n\n              case 65362:\n                length = readUint16(data, position);\n                var cod = {};\n                j = position + 2;\n                var scod = data[j++];\n                cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n                cod.sopMarkerUsed = !!(scod & 2);\n                cod.ephMarkerUsed = !!(scod & 4);\n                cod.progressionOrder = data[j++];\n                cod.layersCount = readUint16(data, j);\n                j += 2;\n                cod.multipleComponentTransform = data[j++];\n                cod.decompositionLevelsCount = data[j++];\n                cod.xcb = (data[j++] & 15) + 2;\n                cod.ycb = (data[j++] & 15) + 2;\n                var blockStyle = data[j++];\n                cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n                cod.resetContextProbabilities = !!(blockStyle & 2);\n                cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n                cod.verticalyStripe = !!(blockStyle & 8);\n                cod.predictableTermination = !!(blockStyle & 16);\n                cod.segmentationSymbolUsed = !!(blockStyle & 32);\n                cod.reversibleTransformation = data[j++];\n                if (cod.entropyCoderWithCustomPrecincts) {\n                  var precinctsSizes = [];\n                  while (j < length + position) {\n                    var precinctsSize = data[j++];\n                    precinctsSizes.push({\n                      PPx: precinctsSize & 15,\n                      PPy: precinctsSize >> 4,\n                    });\n                  }\n                  cod.precinctsSizes = precinctsSizes;\n                }\n                var unsupported = [];\n                if (cod.selectiveArithmeticCodingBypass) {\n                  unsupported.push(\"selectiveArithmeticCodingBypass\");\n                }\n                if (cod.resetContextProbabilities) {\n                  unsupported.push(\"resetContextProbabilities\");\n                }\n                if (cod.terminationOnEachCodingPass) {\n                  unsupported.push(\"terminationOnEachCodingPass\");\n                }\n                if (cod.verticalyStripe) {\n                  unsupported.push(\"verticalyStripe\");\n                }\n                if (cod.predictableTermination) {\n                  unsupported.push(\"predictableTermination\");\n                }\n                if (unsupported.length > 0) {\n                  doNotRecover = true;\n                  throw new Error(\n                    \"JPX Error: Unsupported COD options (\" +\n                      unsupported.join(\", \") +\n                      \")\",\n                  );\n                }\n                if (context.mainHeader) {\n                  context.COD = cod;\n                } else {\n                  context.currentTile.COD = cod;\n                  context.currentTile.COC = [];\n                }\n                break;\n\n              case 65424:\n                length = readUint16(data, position);\n                tile = {};\n                tile.index = readUint16(data, position + 2);\n                tile.length = readUint32(data, position + 4);\n                tile.dataEnd = tile.length + position - 2;\n                tile.partIndex = data[position + 8];\n                tile.partsCount = data[position + 9];\n                context.mainHeader = false;\n                if (tile.partIndex === 0) {\n                  tile.COD = context.COD;\n                  tile.COC = context.COC.slice(0);\n                  tile.QCD = context.QCD;\n                  tile.QCC = context.QCC.slice(0);\n                }\n                context.currentTile = tile;\n                break;\n\n              case 65427:\n                tile = context.currentTile;\n                if (tile.partIndex === 0) {\n                  initializeTile(context, tile.index);\n                  buildPackets(context);\n                }\n                length = tile.dataEnd - position;\n                parseTilePackets(context, data, position, length);\n                break;\n\n              case 65365:\n              case 65367:\n              case 65368:\n              case 65380:\n                length = readUint16(data, position);\n                break;\n\n              case 65363:\n                throw new Error(\n                  \"JPX Error: Codestream code 0xFF53 (COC) is \" +\n                    \"not implemented\",\n                );\n\n              default:\n                throw new Error(\n                  \"JPX Error: Unknown codestream code: \" + code.toString(16),\n                );\n            }\n            position += length;\n          }\n        } catch (e) {\n          if (doNotRecover || this.failOnCorruptedImage) {\n            throw e;\n          } else {\n            warn(\"Trying to recover from \" + e.message);\n          }\n        }\n        this.tiles = transformComponents(context);\n        this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n        this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n        this.componentsCount = context.SIZ.Csiz;\n      },\n    };\n    function calculateComponentDimensions(component, siz) {\n      component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n      component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n      component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n      component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n      component.width = component.x1 - component.x0;\n      component.height = component.y1 - component.y0;\n    }\n    function calculateTileGrids(context, components) {\n      var siz = context.SIZ;\n      var tile,\n        tiles = [];\n      var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n      var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n      for (var q = 0; q < numYtiles; q++) {\n        for (var p = 0; p < numXtiles; p++) {\n          tile = {};\n          tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n          tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n          tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n          tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n          tile.width = tile.tx1 - tile.tx0;\n          tile.height = tile.ty1 - tile.ty0;\n          tile.components = [];\n          tiles.push(tile);\n        }\n      }\n      context.tiles = tiles;\n      var componentsCount = siz.Csiz;\n      for (var i = 0, ii = componentsCount; i < ii; i++) {\n        var component = components[i];\n        for (var j = 0, jj = tiles.length; j < jj; j++) {\n          var tileComponent = {};\n          tile = tiles[j];\n          tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n          tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n          tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n          tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n          tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n          tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n          tile.components[i] = tileComponent;\n        }\n      }\n    }\n    function getBlocksDimensions(context, component, r) {\n      var codOrCoc = component.codingStyleParameters;\n      var result = {};\n      if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n        result.PPx = 15;\n        result.PPy = 15;\n      } else {\n        result.PPx = codOrCoc.precinctsSizes[r].PPx;\n        result.PPy = codOrCoc.precinctsSizes[r].PPy;\n      }\n      result.xcb_ =\n        r > 0\n          ? Math.min(codOrCoc.xcb, result.PPx - 1)\n          : Math.min(codOrCoc.xcb, result.PPx);\n      result.ycb_ =\n        r > 0\n          ? Math.min(codOrCoc.ycb, result.PPy - 1)\n          : Math.min(codOrCoc.ycb, result.PPy);\n      return result;\n    }\n    function buildPrecincts(context, resolution, dimensions) {\n      var precinctWidth = 1 << dimensions.PPx;\n      var precinctHeight = 1 << dimensions.PPy;\n      var isZeroRes = resolution.resLevel === 0;\n      var precinctWidthInSubband = 1 << (dimensions.PPx + (isZeroRes ? 0 : -1));\n      var precinctHeightInSubband =\n        1 << (dimensions.PPy + (isZeroRes ? 0 : -1));\n      var numprecinctswide =\n        resolution.trx1 > resolution.trx0\n          ? Math.ceil(resolution.trx1 / precinctWidth) -\n            Math.floor(resolution.trx0 / precinctWidth)\n          : 0;\n      var numprecinctshigh =\n        resolution.try1 > resolution.try0\n          ? Math.ceil(resolution.try1 / precinctHeight) -\n            Math.floor(resolution.try0 / precinctHeight)\n          : 0;\n      var numprecincts = numprecinctswide * numprecinctshigh;\n      resolution.precinctParameters = {\n        precinctWidth: precinctWidth,\n        precinctHeight: precinctHeight,\n        numprecinctswide: numprecinctswide,\n        numprecinctshigh: numprecinctshigh,\n        numprecincts: numprecincts,\n        precinctWidthInSubband: precinctWidthInSubband,\n        precinctHeightInSubband: precinctHeightInSubband,\n      };\n    }\n    function buildCodeblocks(context, subband, dimensions) {\n      var xcb_ = dimensions.xcb_;\n      var ycb_ = dimensions.ycb_;\n      var codeblockWidth = 1 << xcb_;\n      var codeblockHeight = 1 << ycb_;\n      var cbx0 = subband.tbx0 >> xcb_;\n      var cby0 = subband.tby0 >> ycb_;\n      var cbx1 = (subband.tbx1 + codeblockWidth - 1) >> xcb_;\n      var cby1 = (subband.tby1 + codeblockHeight - 1) >> ycb_;\n      var precinctParameters = subband.resolution.precinctParameters;\n      var codeblocks = [];\n      var precincts = [];\n      var i, j, codeblock, precinctNumber;\n      for (j = cby0; j < cby1; j++) {\n        for (i = cbx0; i < cbx1; i++) {\n          codeblock = {\n            cbx: i,\n            cby: j,\n            tbx0: codeblockWidth * i,\n            tby0: codeblockHeight * j,\n            tbx1: codeblockWidth * (i + 1),\n            tby1: codeblockHeight * (j + 1),\n          };\n          codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n          codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n          codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n          codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n          var pi = Math.floor(\n            (codeblock.tbx0_ - subband.tbx0) /\n              precinctParameters.precinctWidthInSubband,\n          );\n          var pj = Math.floor(\n            (codeblock.tby0_ - subband.tby0) /\n              precinctParameters.precinctHeightInSubband,\n          );\n          precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n          codeblock.precinctNumber = precinctNumber;\n          codeblock.subbandType = subband.type;\n          codeblock.Lblock = 3;\n          if (\n            codeblock.tbx1_ <= codeblock.tbx0_ ||\n            codeblock.tby1_ <= codeblock.tby0_\n          ) {\n            continue;\n          }\n          codeblocks.push(codeblock);\n          var precinct = precincts[precinctNumber];\n          if (precinct !== undefined) {\n            if (i < precinct.cbxMin) {\n              precinct.cbxMin = i;\n            } else if (i > precinct.cbxMax) {\n              precinct.cbxMax = i;\n            }\n            if (j < precinct.cbyMin) {\n              precinct.cbxMin = j;\n            } else if (j > precinct.cbyMax) {\n              precinct.cbyMax = j;\n            }\n          } else {\n            precincts[precinctNumber] = precinct = {\n              cbxMin: i,\n              cbyMin: j,\n              cbxMax: i,\n              cbyMax: j,\n            };\n          }\n          codeblock.precinct = precinct;\n        }\n      }\n      subband.codeblockParameters = {\n        codeblockWidth: xcb_,\n        codeblockHeight: ycb_,\n        numcodeblockwide: cbx1 - cbx0 + 1,\n        numcodeblockhigh: cby1 - cby0 + 1,\n      };\n      subband.codeblocks = codeblocks;\n      subband.precincts = precincts;\n    }\n    function createPacket(resolution, precinctNumber, layerNumber) {\n      var precinctCodeblocks = [];\n      var subbands = resolution.subbands;\n      for (var i = 0, ii = subbands.length; i < ii; i++) {\n        var subband = subbands[i];\n        var codeblocks = subband.codeblocks;\n        for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n          var codeblock = codeblocks[j];\n          if (codeblock.precinctNumber !== precinctNumber) {\n            continue;\n          }\n          precinctCodeblocks.push(codeblock);\n        }\n      }\n      return {\n        layerNumber: layerNumber,\n        codeblocks: precinctCodeblocks,\n      };\n    }\n    function LayerResolutionComponentPositionIterator(context) {\n      var siz = context.SIZ;\n      var tileIndex = context.currentTile.index;\n      var tile = context.tiles[tileIndex];\n      var layersCount = tile.codingStyleDefaultParameters.layersCount;\n      var componentsCount = siz.Csiz;\n      var maxDecompositionLevelsCount = 0;\n      for (var q = 0; q < componentsCount; q++) {\n        maxDecompositionLevelsCount = Math.max(\n          maxDecompositionLevelsCount,\n          tile.components[q].codingStyleParameters.decompositionLevelsCount,\n        );\n      }\n      var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n      this.nextPacket = function JpxImage_nextPacket() {\n        for (; l < layersCount; l++) {\n          for (; r <= maxDecompositionLevelsCount; r++) {\n            for (; i < componentsCount; i++) {\n              var component = tile.components[i];\n              if (\n                r > component.codingStyleParameters.decompositionLevelsCount\n              ) {\n                continue;\n              }\n              var resolution = component.resolutions[r];\n              var numprecincts = resolution.precinctParameters.numprecincts;\n              for (; k < numprecincts; ) {\n                var packet = createPacket(resolution, k, l);\n                k++;\n                return packet;\n              }\n              k = 0;\n            }\n            i = 0;\n          }\n          r = 0;\n        }\n        throw new Error(\"JPX Error: Out of packets\");\n      };\n    }\n    function ResolutionLayerComponentPositionIterator(context) {\n      var siz = context.SIZ;\n      var tileIndex = context.currentTile.index;\n      var tile = context.tiles[tileIndex];\n      var layersCount = tile.codingStyleDefaultParameters.layersCount;\n      var componentsCount = siz.Csiz;\n      var maxDecompositionLevelsCount = 0;\n      for (var q = 0; q < componentsCount; q++) {\n        maxDecompositionLevelsCount = Math.max(\n          maxDecompositionLevelsCount,\n          tile.components[q].codingStyleParameters.decompositionLevelsCount,\n        );\n      }\n      var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n      this.nextPacket = function JpxImage_nextPacket() {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; l < layersCount; l++) {\n            for (; i < componentsCount; i++) {\n              var component = tile.components[i];\n              if (\n                r > component.codingStyleParameters.decompositionLevelsCount\n              ) {\n                continue;\n              }\n              var resolution = component.resolutions[r];\n              var numprecincts = resolution.precinctParameters.numprecincts;\n              for (; k < numprecincts; ) {\n                var packet = createPacket(resolution, k, l);\n                k++;\n                return packet;\n              }\n              k = 0;\n            }\n            i = 0;\n          }\n          l = 0;\n        }\n        throw new Error(\"JPX Error: Out of packets\");\n      };\n    }\n    function ResolutionPositionComponentLayerIterator(context) {\n      var siz = context.SIZ;\n      var tileIndex = context.currentTile.index;\n      var tile = context.tiles[tileIndex];\n      var layersCount = tile.codingStyleDefaultParameters.layersCount;\n      var componentsCount = siz.Csiz;\n      var l, r, c, p;\n      var maxDecompositionLevelsCount = 0;\n      for (c = 0; c < componentsCount; c++) {\n        var component = tile.components[c];\n        maxDecompositionLevelsCount = Math.max(\n          maxDecompositionLevelsCount,\n          component.codingStyleParameters.decompositionLevelsCount,\n        );\n      }\n      var maxNumPrecinctsInLevel = new Int32Array(\n        maxDecompositionLevelsCount + 1,\n      );\n      for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n        var maxNumPrecincts = 0;\n        for (c = 0; c < componentsCount; ++c) {\n          var resolutions = tile.components[c].resolutions;\n          if (r < resolutions.length) {\n            maxNumPrecincts = Math.max(\n              maxNumPrecincts,\n              resolutions[r].precinctParameters.numprecincts,\n            );\n          }\n        }\n        maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n      }\n      l = 0;\n      r = 0;\n      c = 0;\n      p = 0;\n      this.nextPacket = function JpxImage_nextPacket() {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; p < maxNumPrecinctsInLevel[r]; p++) {\n            for (; c < componentsCount; c++) {\n              var component = tile.components[c];\n              if (\n                r > component.codingStyleParameters.decompositionLevelsCount\n              ) {\n                continue;\n              }\n              var resolution = component.resolutions[r];\n              var numprecincts = resolution.precinctParameters.numprecincts;\n              if (p >= numprecincts) {\n                continue;\n              }\n              for (; l < layersCount; ) {\n                var packet = createPacket(resolution, p, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            c = 0;\n          }\n          p = 0;\n        }\n        throw new Error(\"JPX Error: Out of packets\");\n      };\n    }\n    function PositionComponentResolutionLayerIterator(context) {\n      var siz = context.SIZ;\n      var tileIndex = context.currentTile.index;\n      var tile = context.tiles[tileIndex];\n      var layersCount = tile.codingStyleDefaultParameters.layersCount;\n      var componentsCount = siz.Csiz;\n      var precinctsSizes = getPrecinctSizesInImageScale(tile);\n      var precinctsIterationSizes = precinctsSizes;\n      var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n      this.nextPacket = function JpxImage_nextPacket() {\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; c < componentsCount; c++) {\n              var component = tile.components[c];\n              var decompositionLevelsCount =\n                component.codingStyleParameters.decompositionLevelsCount;\n              for (; r <= decompositionLevelsCount; r++) {\n                var resolution = component.resolutions[r];\n                var sizeInImageScale =\n                  precinctsSizes.components[c].resolutions[r];\n                var k = getPrecinctIndexIfExist(\n                  px,\n                  py,\n                  sizeInImageScale,\n                  precinctsIterationSizes,\n                  resolution,\n                );\n                if (k === null) {\n                  continue;\n                }\n                for (; l < layersCount; ) {\n                  var packet = createPacket(resolution, k, l);\n                  l++;\n                  return packet;\n                }\n                l = 0;\n              }\n              r = 0;\n            }\n            c = 0;\n          }\n          px = 0;\n        }\n        throw new Error(\"JPX Error: Out of packets\");\n      };\n    }\n    function ComponentPositionResolutionLayerIterator(context) {\n      var siz = context.SIZ;\n      var tileIndex = context.currentTile.index;\n      var tile = context.tiles[tileIndex];\n      var layersCount = tile.codingStyleDefaultParameters.layersCount;\n      var componentsCount = siz.Csiz;\n      var precinctsSizes = getPrecinctSizesInImageScale(tile);\n      var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n      this.nextPacket = function JpxImage_nextPacket() {\n        for (; c < componentsCount; ++c) {\n          var component = tile.components[c];\n          var precinctsIterationSizes = precinctsSizes.components[c];\n          var decompositionLevelsCount =\n            component.codingStyleParameters.decompositionLevelsCount;\n          for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n            for (; px < precinctsIterationSizes.maxNumWide; px++) {\n              for (; r <= decompositionLevelsCount; r++) {\n                var resolution = component.resolutions[r];\n                var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n                var k = getPrecinctIndexIfExist(\n                  px,\n                  py,\n                  sizeInImageScale,\n                  precinctsIterationSizes,\n                  resolution,\n                );\n                if (k === null) {\n                  continue;\n                }\n                for (; l < layersCount; ) {\n                  var packet = createPacket(resolution, k, l);\n                  l++;\n                  return packet;\n                }\n                l = 0;\n              }\n              r = 0;\n            }\n            px = 0;\n          }\n          py = 0;\n        }\n        throw new Error(\"JPX Error: Out of packets\");\n      };\n    }\n    function getPrecinctIndexIfExist(\n      pxIndex,\n      pyIndex,\n      sizeInImageScale,\n      precinctIterationSizes,\n      resolution,\n    ) {\n      var posX = pxIndex * precinctIterationSizes.minWidth;\n      var posY = pyIndex * precinctIterationSizes.minHeight;\n      if (\n        posX % sizeInImageScale.width !== 0 ||\n        posY % sizeInImageScale.height !== 0\n      ) {\n        return null;\n      }\n      var startPrecinctRowIndex =\n        (posY / sizeInImageScale.width) *\n        resolution.precinctParameters.numprecinctswide;\n      return posX / sizeInImageScale.height + startPrecinctRowIndex;\n    }\n    function getPrecinctSizesInImageScale(tile) {\n      var componentsCount = tile.components.length;\n      var minWidth = Number.MAX_VALUE;\n      var minHeight = Number.MAX_VALUE;\n      var maxNumWide = 0;\n      var maxNumHigh = 0;\n      var sizePerComponent = new Array(componentsCount);\n      for (var c = 0; c < componentsCount; c++) {\n        var component = tile.components[c];\n        var decompositionLevelsCount =\n          component.codingStyleParameters.decompositionLevelsCount;\n        var sizePerResolution = new Array(decompositionLevelsCount + 1);\n        var minWidthCurrentComponent = Number.MAX_VALUE;\n        var minHeightCurrentComponent = Number.MAX_VALUE;\n        var maxNumWideCurrentComponent = 0;\n        var maxNumHighCurrentComponent = 0;\n        var scale = 1;\n        for (var r = decompositionLevelsCount; r >= 0; --r) {\n          var resolution = component.resolutions[r];\n          var widthCurrentResolution =\n            scale * resolution.precinctParameters.precinctWidth;\n          var heightCurrentResolution =\n            scale * resolution.precinctParameters.precinctHeight;\n          minWidthCurrentComponent = Math.min(\n            minWidthCurrentComponent,\n            widthCurrentResolution,\n          );\n          minHeightCurrentComponent = Math.min(\n            minHeightCurrentComponent,\n            heightCurrentResolution,\n          );\n          maxNumWideCurrentComponent = Math.max(\n            maxNumWideCurrentComponent,\n            resolution.precinctParameters.numprecinctswide,\n          );\n          maxNumHighCurrentComponent = Math.max(\n            maxNumHighCurrentComponent,\n            resolution.precinctParameters.numprecinctshigh,\n          );\n          sizePerResolution[r] = {\n            width: widthCurrentResolution,\n            height: heightCurrentResolution,\n          };\n          scale <<= 1;\n        }\n        minWidth = Math.min(minWidth, minWidthCurrentComponent);\n        minHeight = Math.min(minHeight, minHeightCurrentComponent);\n        maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n        maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n        sizePerComponent[c] = {\n          resolutions: sizePerResolution,\n          minWidth: minWidthCurrentComponent,\n          minHeight: minHeightCurrentComponent,\n          maxNumWide: maxNumWideCurrentComponent,\n          maxNumHigh: maxNumHighCurrentComponent,\n        };\n      }\n      return {\n        components: sizePerComponent,\n        minWidth: minWidth,\n        minHeight: minHeight,\n        maxNumWide: maxNumWide,\n        maxNumHigh: maxNumHigh,\n      };\n    }\n    function buildPackets(context) {\n      var siz = context.SIZ;\n      var tileIndex = context.currentTile.index;\n      var tile = context.tiles[tileIndex];\n      var componentsCount = siz.Csiz;\n      for (var c = 0; c < componentsCount; c++) {\n        var component = tile.components[c];\n        var decompositionLevelsCount =\n          component.codingStyleParameters.decompositionLevelsCount;\n        var resolutions = [];\n        var subbands = [];\n        for (var r = 0; r <= decompositionLevelsCount; r++) {\n          var blocksDimensions = getBlocksDimensions(context, component, r);\n          var resolution = {};\n          var scale = 1 << (decompositionLevelsCount - r);\n          resolution.trx0 = Math.ceil(component.tcx0 / scale);\n          resolution.try0 = Math.ceil(component.tcy0 / scale);\n          resolution.trx1 = Math.ceil(component.tcx1 / scale);\n          resolution.try1 = Math.ceil(component.tcy1 / scale);\n          resolution.resLevel = r;\n          buildPrecincts(context, resolution, blocksDimensions);\n          resolutions.push(resolution);\n          var subband;\n          if (r === 0) {\n            subband = {};\n            subband.type = \"LL\";\n            subband.tbx0 = Math.ceil(component.tcx0 / scale);\n            subband.tby0 = Math.ceil(component.tcy0 / scale);\n            subband.tbx1 = Math.ceil(component.tcx1 / scale);\n            subband.tby1 = Math.ceil(component.tcy1 / scale);\n            subband.resolution = resolution;\n            buildCodeblocks(context, subband, blocksDimensions);\n            subbands.push(subband);\n            resolution.subbands = [subband];\n          } else {\n            var bscale = 1 << (decompositionLevelsCount - r + 1);\n            var resolutionSubbands = [];\n            subband = {};\n            subband.type = \"HL\";\n            subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n            subband.tby0 = Math.ceil(component.tcy0 / bscale);\n            subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n            subband.tby1 = Math.ceil(component.tcy1 / bscale);\n            subband.resolution = resolution;\n            buildCodeblocks(context, subband, blocksDimensions);\n            subbands.push(subband);\n            resolutionSubbands.push(subband);\n            subband = {};\n            subband.type = \"LH\";\n            subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n            subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n            subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n            subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n            subband.resolution = resolution;\n            buildCodeblocks(context, subband, blocksDimensions);\n            subbands.push(subband);\n            resolutionSubbands.push(subband);\n            subband = {};\n            subband.type = \"HH\";\n            subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n            subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n            subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n            subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n            subband.resolution = resolution;\n            buildCodeblocks(context, subband, blocksDimensions);\n            subbands.push(subband);\n            resolutionSubbands.push(subband);\n            resolution.subbands = resolutionSubbands;\n          }\n        }\n        component.resolutions = resolutions;\n        component.subbands = subbands;\n      }\n      var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n      switch (progressionOrder) {\n        case 0:\n          tile.packetsIterator = new LayerResolutionComponentPositionIterator(\n            context,\n          );\n          break;\n\n        case 1:\n          tile.packetsIterator = new ResolutionLayerComponentPositionIterator(\n            context,\n          );\n          break;\n\n        case 2:\n          tile.packetsIterator = new ResolutionPositionComponentLayerIterator(\n            context,\n          );\n          break;\n\n        case 3:\n          tile.packetsIterator = new PositionComponentResolutionLayerIterator(\n            context,\n          );\n          break;\n\n        case 4:\n          tile.packetsIterator = new ComponentPositionResolutionLayerIterator(\n            context,\n          );\n          break;\n\n        default:\n          throw new Error(\n            \"JPX Error: Unsupported progression order \" + progressionOrder,\n          );\n      }\n    }\n    function parseTilePackets(context, data, offset, dataLength) {\n      var position = 0;\n      var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n      function readBits(count) {\n        while (bufferSize < count) {\n          var b = data[offset + position];\n          position++;\n          if (skipNextBit) {\n            buffer = (buffer << 7) | b;\n            bufferSize += 7;\n            skipNextBit = false;\n          } else {\n            buffer = (buffer << 8) | b;\n            bufferSize += 8;\n          }\n          if (b === 255) {\n            skipNextBit = true;\n          }\n        }\n        bufferSize -= count;\n        return (buffer >>> bufferSize) & ((1 << count) - 1);\n      }\n      function skipMarkerIfEqual(value) {\n        if (\n          data[offset + position - 1] === 255 &&\n          data[offset + position] === value\n        ) {\n          skipBytes(1);\n          return true;\n        } else if (\n          data[offset + position] === 255 &&\n          data[offset + position + 1] === value\n        ) {\n          skipBytes(2);\n          return true;\n        }\n        return false;\n      }\n      function skipBytes(count) {\n        position += count;\n      }\n      function alignToByte() {\n        bufferSize = 0;\n        if (skipNextBit) {\n          position++;\n          skipNextBit = false;\n        }\n      }\n      function readCodingpasses() {\n        if (readBits(1) === 0) {\n          return 1;\n        }\n        if (readBits(1) === 0) {\n          return 2;\n        }\n        var value = readBits(2);\n        if (value < 3) {\n          return value + 3;\n        }\n        value = readBits(5);\n        if (value < 31) {\n          return value + 6;\n        }\n        value = readBits(7);\n        return value + 37;\n      }\n      var tileIndex = context.currentTile.index;\n      var tile = context.tiles[tileIndex];\n      var sopMarkerUsed = context.COD.sopMarkerUsed;\n      var ephMarkerUsed = context.COD.ephMarkerUsed;\n      var packetsIterator = tile.packetsIterator;\n      while (position < dataLength) {\n        alignToByte();\n        if (sopMarkerUsed && skipMarkerIfEqual(145)) {\n          skipBytes(4);\n        }\n        var packet = packetsIterator.nextPacket();\n        if (!readBits(1)) {\n          continue;\n        }\n        var layerNumber = packet.layerNumber;\n        var queue = [],\n          codeblock;\n        for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n          codeblock = packet.codeblocks[i];\n          var precinct = codeblock.precinct;\n          var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n          var codeblockRow = codeblock.cby - precinct.cbyMin;\n          var codeblockIncluded = false;\n          var firstTimeInclusion = false;\n          var valueReady;\n          if (codeblock[\"included\"] !== undefined) {\n            codeblockIncluded = !!readBits(1);\n          } else {\n            precinct = codeblock.precinct;\n            var inclusionTree, zeroBitPlanesTree;\n            if (precinct[\"inclusionTree\"] !== undefined) {\n              inclusionTree = precinct.inclusionTree;\n            } else {\n              var width = precinct.cbxMax - precinct.cbxMin + 1;\n              var height = precinct.cbyMax - precinct.cbyMin + 1;\n              inclusionTree = new InclusionTree(width, height, layerNumber);\n              zeroBitPlanesTree = new TagTree(width, height);\n              precinct.inclusionTree = inclusionTree;\n              precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n            }\n            if (\n              inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)\n            ) {\n              while (true) {\n                if (readBits(1)) {\n                  valueReady = !inclusionTree.nextLevel();\n                  if (valueReady) {\n                    codeblock.included = true;\n                    codeblockIncluded = firstTimeInclusion = true;\n                    break;\n                  }\n                } else {\n                  inclusionTree.incrementValue(layerNumber);\n                  break;\n                }\n              }\n            }\n          }\n          if (!codeblockIncluded) {\n            continue;\n          }\n          if (firstTimeInclusion) {\n            zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n            zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !zeroBitPlanesTree.nextLevel();\n                if (valueReady) {\n                  break;\n                }\n              } else {\n                zeroBitPlanesTree.incrementValue();\n              }\n            }\n            codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n          }\n          var codingpasses = readCodingpasses();\n          while (readBits(1)) {\n            codeblock.Lblock++;\n          }\n          var codingpassesLog2 = log2(codingpasses);\n          var bits =\n            (codingpasses < 1 << codingpassesLog2\n              ? codingpassesLog2 - 1\n              : codingpassesLog2) + codeblock.Lblock;\n          var codedDataLength = readBits(bits);\n          queue.push({\n            codeblock: codeblock,\n            codingpasses: codingpasses,\n            dataLength: codedDataLength,\n          });\n        }\n        alignToByte();\n        if (ephMarkerUsed) {\n          skipMarkerIfEqual(146);\n        }\n        while (queue.length > 0) {\n          var packetItem = queue.shift();\n          codeblock = packetItem.codeblock;\n          if (codeblock[\"data\"] === undefined) {\n            codeblock.data = [];\n          }\n          codeblock.data.push({\n            data: data,\n            start: offset + position,\n            end: offset + position + packetItem.dataLength,\n            codingpasses: packetItem.codingpasses,\n          });\n          position += packetItem.dataLength;\n        }\n      }\n      return position;\n    }\n    function copyCoefficients(\n      coefficients,\n      levelWidth,\n      levelHeight,\n      subband,\n      delta,\n      mb,\n      reversible,\n      segmentationSymbolUsed,\n    ) {\n      var x0 = subband.tbx0;\n      var y0 = subband.tby0;\n      var width = subband.tbx1 - subband.tbx0;\n      var codeblocks = subband.codeblocks;\n      var right = subband.type.charAt(0) === \"H\" ? 1 : 0;\n      var bottom = subband.type.charAt(1) === \"H\" ? levelWidth : 0;\n      for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n        var codeblock = codeblocks[i];\n        var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n        var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n        if (blockWidth === 0 || blockHeight === 0) {\n          continue;\n        }\n        if (codeblock[\"data\"] === undefined) {\n          continue;\n        }\n        var bitModel, currentCodingpassType;\n        bitModel = new BitModel(\n          blockWidth,\n          blockHeight,\n          codeblock.subbandType,\n          codeblock.zeroBitPlanes,\n          mb,\n        );\n        currentCodingpassType = 2;\n        var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n        var j, jj, dataItem;\n        for (j = 0, jj = data.length; j < jj; j++) {\n          dataItem = data[j];\n          totalLength += dataItem.end - dataItem.start;\n          codingpasses += dataItem.codingpasses;\n        }\n        var encodedData = new Uint8Array(totalLength);\n        var position = 0;\n        for (j = 0, jj = data.length; j < jj; j++) {\n          dataItem = data[j];\n          var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n          encodedData.set(chunk, position);\n          position += chunk.length;\n        }\n        var decoder = new ArithmeticDecoder(encodedData, 0, totalLength);\n        bitModel.setDecoder(decoder);\n        for (j = 0; j < codingpasses; j++) {\n          switch (currentCodingpassType) {\n            case 0:\n              bitModel.runSignificancePropogationPass();\n              break;\n\n            case 1:\n              bitModel.runMagnitudeRefinementPass();\n              break;\n\n            case 2:\n              bitModel.runCleanupPass();\n              if (segmentationSymbolUsed) {\n                bitModel.checkSegmentationSymbol();\n              }\n              break;\n          }\n          currentCodingpassType = (currentCodingpassType + 1) % 3;\n        }\n        var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n        var sign = bitModel.coefficentsSign;\n        var magnitude = bitModel.coefficentsMagnitude;\n        var bitsDecoded = bitModel.bitsDecoded;\n        var magnitudeCorrection = reversible ? 0 : 0.5;\n        var k, n, nb;\n        position = 0;\n        var interleave = subband.type !== \"LL\";\n        for (j = 0; j < blockHeight; j++) {\n          var row = (offset / width) | 0;\n          var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n          for (k = 0; k < blockWidth; k++) {\n            n = magnitude[position];\n            if (n !== 0) {\n              n = (n + magnitudeCorrection) * delta;\n              if (sign[position] !== 0) {\n                n = -n;\n              }\n              nb = bitsDecoded[position];\n              var pos = interleave ? levelOffset + (offset << 1) : offset;\n              if (reversible && nb >= mb) {\n                coefficients[pos] = n;\n              } else {\n                coefficients[pos] = n * (1 << (mb - nb));\n              }\n            }\n            offset++;\n            position++;\n          }\n          offset += width - blockWidth;\n        }\n      }\n    }\n    function transformTile(context, tile, c) {\n      var component = tile.components[c];\n      var codingStyleParameters = component.codingStyleParameters;\n      var quantizationParameters = component.quantizationParameters;\n      var decompositionLevelsCount =\n        codingStyleParameters.decompositionLevelsCount;\n      var spqcds = quantizationParameters.SPqcds;\n      var scalarExpounded = quantizationParameters.scalarExpounded;\n      var guardBits = quantizationParameters.guardBits;\n      var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n      var precision = context.components[c].precision;\n      var reversible = codingStyleParameters.reversibleTransformation;\n      var transform = reversible\n        ? new ReversibleTransform()\n        : new IrreversibleTransform();\n      var subbandCoefficients = [];\n      var b = 0;\n      for (var i = 0; i <= decompositionLevelsCount; i++) {\n        var resolution = component.resolutions[i];\n        var width = resolution.trx1 - resolution.trx0;\n        var height = resolution.try1 - resolution.try0;\n        var coefficients = new Float32Array(width * height);\n        for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n          var mu, epsilon;\n          if (!scalarExpounded) {\n            mu = spqcds[0].mu;\n            epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n          } else {\n            mu = spqcds[b].mu;\n            epsilon = spqcds[b].epsilon;\n            b++;\n          }\n          var subband = resolution.subbands[j];\n          var gainLog2 = SubbandsGainLog2[subband.type];\n          var delta = reversible\n            ? 1\n            : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n          var mb = guardBits + epsilon - 1;\n          copyCoefficients(\n            coefficients,\n            width,\n            height,\n            subband,\n            delta,\n            mb,\n            reversible,\n            segmentationSymbolUsed,\n          );\n        }\n        subbandCoefficients.push({\n          width: width,\n          height: height,\n          items: coefficients,\n        });\n      }\n      var result = transform.calculate(\n        subbandCoefficients,\n        component.tcx0,\n        component.tcy0,\n      );\n      return {\n        left: component.tcx0,\n        top: component.tcy0,\n        width: result.width,\n        height: result.height,\n        items: result.items,\n      };\n    }\n    function transformComponents(context) {\n      var siz = context.SIZ;\n      var components = context.components;\n      var componentsCount = siz.Csiz;\n      var resultImages = [];\n      for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n        var tile = context.tiles[i];\n        var transformedTiles = [];\n        var c;\n        for (c = 0; c < componentsCount; c++) {\n          transformedTiles[c] = transformTile(context, tile, c);\n        }\n        var tile0 = transformedTiles[0];\n        var out = new Uint8Array(tile0.items.length * componentsCount);\n        var result = {\n          left: tile0.left,\n          top: tile0.top,\n          width: tile0.width,\n          height: tile0.height,\n          items: out,\n        };\n        var shift, offset, max, min, maxK;\n        var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2,\n          r,\n          g,\n          b,\n          k,\n          val;\n        if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n          var fourComponents = componentsCount === 4;\n          var y0items = transformedTiles[0].items;\n          var y1items = transformedTiles[1].items;\n          var y2items = transformedTiles[2].items;\n          var y3items = fourComponents ? transformedTiles[3].items : null;\n          shift = components[0].precision - 8;\n          offset = (128 << shift) + 0.5;\n          max = 255 * (1 << shift);\n          maxK = max * 0.5;\n          min = -maxK;\n          var component0 = tile.components[0];\n          var alpha01 = componentsCount - 3;\n          jj = y0items.length;\n          if (!component0.codingStyleParameters.reversibleTransformation) {\n            for (j = 0; j < jj; j++, pos += alpha01) {\n              y0 = y0items[j] + offset;\n              y1 = y1items[j];\n              y2 = y2items[j];\n              r = y0 + 1.402 * y2;\n              g = y0 - 0.34413 * y1 - 0.71414 * y2;\n              b = y0 + 1.772 * y1;\n              out[pos++] = r <= 0 ? 0 : r >= max ? 255 : r >> shift;\n              out[pos++] = g <= 0 ? 0 : g >= max ? 255 : g >> shift;\n              out[pos++] = b <= 0 ? 0 : b >= max ? 255 : b >> shift;\n            }\n          } else {\n            for (j = 0; j < jj; j++, pos += alpha01) {\n              y0 = y0items[j] + offset;\n              y1 = y1items[j];\n              y2 = y2items[j];\n              g = y0 - ((y2 + y1) >> 2);\n              r = g + y2;\n              b = g + y1;\n              out[pos++] = r <= 0 ? 0 : r >= max ? 255 : r >> shift;\n              out[pos++] = g <= 0 ? 0 : g >= max ? 255 : g >> shift;\n              out[pos++] = b <= 0 ? 0 : b >= max ? 255 : b >> shift;\n            }\n          }\n          if (fourComponents) {\n            for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n              k = y3items[j];\n              out[pos] = k <= min ? 0 : k >= maxK ? 255 : (k + offset) >> shift;\n            }\n          }\n        } else {\n          for (c = 0; c < componentsCount; c++) {\n            var items = transformedTiles[c].items;\n            shift = components[c].precision - 8;\n            offset = (128 << shift) + 0.5;\n            max = 127.5 * (1 << shift);\n            min = -max;\n            for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n              val = items[j];\n              out[pos] =\n                val <= min ? 0 : val >= max ? 255 : (val + offset) >> shift;\n              pos += componentsCount;\n            }\n          }\n        }\n        resultImages.push(result);\n      }\n      return resultImages;\n    }\n    function initializeTile(context, tileIndex) {\n      var siz = context.SIZ;\n      var componentsCount = siz.Csiz;\n      var tile = context.tiles[tileIndex];\n      for (var c = 0; c < componentsCount; c++) {\n        var component = tile.components[c];\n        var qcdOrQcc =\n          context.currentTile.QCC[c] !== undefined\n            ? context.currentTile.QCC[c]\n            : context.currentTile.QCD;\n        component.quantizationParameters = qcdOrQcc;\n        var codOrCoc =\n          context.currentTile.COC[c] !== undefined\n            ? context.currentTile.COC[c]\n            : context.currentTile.COD;\n        component.codingStyleParameters = codOrCoc;\n      }\n      tile.codingStyleDefaultParameters = context.currentTile.COD;\n    }\n    var TagTree = (function TagTreeClosure() {\n      function TagTree(width, height) {\n        var levelsLength = log2(Math.max(width, height)) + 1;\n        this.levels = [];\n        for (var i = 0; i < levelsLength; i++) {\n          var level = {\n            width: width,\n            height: height,\n            items: [],\n          };\n          this.levels.push(level);\n          width = Math.ceil(width / 2);\n          height = Math.ceil(height / 2);\n        }\n      }\n      TagTree.prototype = {\n        reset: function TagTree_reset(i, j) {\n          var currentLevel = 0,\n            value = 0,\n            level;\n          while (currentLevel < this.levels.length) {\n            level = this.levels[currentLevel];\n            var index = i + j * level.width;\n            if (level.items[index] !== undefined) {\n              value = level.items[index];\n              break;\n            }\n            level.index = index;\n            i >>= 1;\n            j >>= 1;\n            currentLevel++;\n          }\n          currentLevel--;\n          level = this.levels[currentLevel];\n          level.items[level.index] = value;\n          this.currentLevel = currentLevel;\n          delete this.value;\n        },\n        incrementValue: function TagTree_incrementValue() {\n          var level = this.levels[this.currentLevel];\n          level.items[level.index]++;\n        },\n        nextLevel: function TagTree_nextLevel() {\n          var currentLevel = this.currentLevel;\n          var level = this.levels[currentLevel];\n          var value = level.items[level.index];\n          currentLevel--;\n          if (currentLevel < 0) {\n            this.value = value;\n            return false;\n          }\n          this.currentLevel = currentLevel;\n          level = this.levels[currentLevel];\n          level.items[level.index] = value;\n          return true;\n        },\n      };\n      return TagTree;\n    })();\n    var InclusionTree = (function InclusionTreeClosure() {\n      function InclusionTree(width, height, defaultValue) {\n        var levelsLength = log2(Math.max(width, height)) + 1;\n        this.levels = [];\n        for (var i = 0; i < levelsLength; i++) {\n          var items = new Uint8Array(width * height);\n          for (var j = 0, jj = items.length; j < jj; j++) {\n            items[j] = defaultValue;\n          }\n          var level = {\n            width: width,\n            height: height,\n            items: items,\n          };\n          this.levels.push(level);\n          width = Math.ceil(width / 2);\n          height = Math.ceil(height / 2);\n        }\n      }\n      InclusionTree.prototype = {\n        reset: function InclusionTree_reset(i, j, stopValue) {\n          var currentLevel = 0;\n          while (currentLevel < this.levels.length) {\n            var level = this.levels[currentLevel];\n            var index = i + j * level.width;\n            level.index = index;\n            var value = level.items[index];\n            if (value === 255) {\n              break;\n            }\n            if (value > stopValue) {\n              this.currentLevel = currentLevel;\n              this.propagateValues();\n              return false;\n            }\n            i >>= 1;\n            j >>= 1;\n            currentLevel++;\n          }\n          this.currentLevel = currentLevel - 1;\n          return true;\n        },\n        incrementValue: function InclusionTree_incrementValue(stopValue) {\n          var level = this.levels[this.currentLevel];\n          level.items[level.index] = stopValue + 1;\n          this.propagateValues();\n        },\n        propagateValues: function InclusionTree_propagateValues() {\n          var levelIndex = this.currentLevel;\n          var level = this.levels[levelIndex];\n          var currentValue = level.items[level.index];\n          while (--levelIndex >= 0) {\n            level = this.levels[levelIndex];\n            level.items[level.index] = currentValue;\n          }\n        },\n        nextLevel: function InclusionTree_nextLevel() {\n          var currentLevel = this.currentLevel;\n          var level = this.levels[currentLevel];\n          var value = level.items[level.index];\n          level.items[level.index] = 255;\n          currentLevel--;\n          if (currentLevel < 0) {\n            return false;\n          }\n          this.currentLevel = currentLevel;\n          level = this.levels[currentLevel];\n          level.items[level.index] = value;\n          return true;\n        },\n      };\n      return InclusionTree;\n    })();\n    var BitModel = (function BitModelClosure() {\n      var UNIFORM_CONTEXT = 17;\n      var RUNLENGTH_CONTEXT = 18;\n      var LLAndLHContextsLabel = new Uint8Array([\n        0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0,\n        4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0,\n        2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0,\n        4, 7, 8,\n      ]);\n      var HLContextLabel = new Uint8Array([\n        0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0,\n        8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0,\n        2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0,\n        8, 8, 8,\n      ]);\n      var HHContextLabel = new Uint8Array([\n        0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0,\n        5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0,\n        8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0,\n        8, 8, 8,\n      ]);\n      function BitModel(width, height, subband, zeroBitPlanes, mb) {\n        this.width = width;\n        this.height = height;\n        this.contextLabelTable =\n          subband === \"HH\"\n            ? HHContextLabel\n            : subband === \"HL\"\n              ? HLContextLabel\n              : LLAndLHContextsLabel;\n        var coefficientCount = width * height;\n        this.neighborsSignificance = new Uint8Array(coefficientCount);\n        this.coefficentsSign = new Uint8Array(coefficientCount);\n        this.coefficentsMagnitude =\n          mb > 14\n            ? new Uint32Array(coefficientCount)\n            : mb > 6\n              ? new Uint16Array(coefficientCount)\n              : new Uint8Array(coefficientCount);\n        this.processingFlags = new Uint8Array(coefficientCount);\n        var bitsDecoded = new Uint8Array(coefficientCount);\n        if (zeroBitPlanes !== 0) {\n          for (var i = 0; i < coefficientCount; i++) {\n            bitsDecoded[i] = zeroBitPlanes;\n          }\n        }\n        this.bitsDecoded = bitsDecoded;\n        this.reset();\n      }\n      BitModel.prototype = {\n        setDecoder: function BitModel_setDecoder(decoder) {\n          this.decoder = decoder;\n        },\n        reset: function BitModel_reset() {\n          this.contexts = new Int8Array(19);\n          this.contexts[0] = (4 << 1) | 0;\n          this.contexts[UNIFORM_CONTEXT] = (46 << 1) | 0;\n          this.contexts[RUNLENGTH_CONTEXT] = (3 << 1) | 0;\n        },\n        setNeighborsSignificance: function BitModel_setNeighborsSignificance(\n          row,\n          column,\n          index,\n        ) {\n          var neighborsSignificance = this.neighborsSignificance;\n          var width = this.width,\n            height = this.height;\n          var left = column > 0;\n          var right = column + 1 < width;\n          var i;\n          if (row > 0) {\n            i = index - width;\n            if (left) {\n              neighborsSignificance[i - 1] += 16;\n            }\n            if (right) {\n              neighborsSignificance[i + 1] += 16;\n            }\n            neighborsSignificance[i] += 4;\n          }\n          if (row + 1 < height) {\n            i = index + width;\n            if (left) {\n              neighborsSignificance[i - 1] += 16;\n            }\n            if (right) {\n              neighborsSignificance[i + 1] += 16;\n            }\n            neighborsSignificance[i] += 4;\n          }\n          if (left) {\n            neighborsSignificance[index - 1] += 1;\n          }\n          if (right) {\n            neighborsSignificance[index + 1] += 1;\n          }\n          neighborsSignificance[index] |= 128;\n        },\n        runSignificancePropogationPass:\n          function BitModel_runSignificancePropogationPass() {\n            var decoder = this.decoder;\n            var width = this.width,\n              height = this.height;\n            var coefficentsMagnitude = this.coefficentsMagnitude;\n            var coefficentsSign = this.coefficentsSign;\n            var neighborsSignificance = this.neighborsSignificance;\n            var processingFlags = this.processingFlags;\n            var contexts = this.contexts;\n            var labels = this.contextLabelTable;\n            var bitsDecoded = this.bitsDecoded;\n            var processedInverseMask = ~1;\n            var processedMask = 1;\n            var firstMagnitudeBitMask = 2;\n            for (var i0 = 0; i0 < height; i0 += 4) {\n              for (var j = 0; j < width; j++) {\n                var index = i0 * width + j;\n                for (var i1 = 0; i1 < 4; i1++, index += width) {\n                  var i = i0 + i1;\n                  if (i >= height) {\n                    break;\n                  }\n                  processingFlags[index] &= processedInverseMask;\n                  if (\n                    coefficentsMagnitude[index] ||\n                    !neighborsSignificance[index]\n                  ) {\n                    continue;\n                  }\n                  var contextLabel = labels[neighborsSignificance[index]];\n                  var decision = decoder.readBit(contexts, contextLabel);\n                  if (decision) {\n                    var sign = this.decodeSignBit(i, j, index);\n                    coefficentsSign[index] = sign;\n                    coefficentsMagnitude[index] = 1;\n                    this.setNeighborsSignificance(i, j, index);\n                    processingFlags[index] |= firstMagnitudeBitMask;\n                  }\n                  bitsDecoded[index]++;\n                  processingFlags[index] |= processedMask;\n                }\n              }\n            }\n          },\n        decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n          var width = this.width,\n            height = this.height;\n          var coefficentsMagnitude = this.coefficentsMagnitude;\n          var coefficentsSign = this.coefficentsSign;\n          var contribution, sign0, sign1, significance1;\n          var contextLabel, decoded;\n          significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n          if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n            sign1 = coefficentsSign[index + 1];\n            if (significance1) {\n              sign0 = coefficentsSign[index - 1];\n              contribution = 1 - sign1 - sign0;\n            } else {\n              contribution = 1 - sign1 - sign1;\n            }\n          } else if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign0 - sign0;\n          } else {\n            contribution = 0;\n          }\n          var horizontalContribution = 3 * contribution;\n          significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n          if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n            sign1 = coefficentsSign[index + width];\n            if (significance1) {\n              sign0 = coefficentsSign[index - width];\n              contribution = 1 - sign1 - sign0 + horizontalContribution;\n            } else {\n              contribution = 1 - sign1 - sign1 + horizontalContribution;\n            }\n          } else if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign0 - sign0 + horizontalContribution;\n          } else {\n            contribution = horizontalContribution;\n          }\n          if (contribution >= 0) {\n            contextLabel = 9 + contribution;\n            decoded = this.decoder.readBit(this.contexts, contextLabel);\n          } else {\n            contextLabel = 9 - contribution;\n            decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n          }\n          return decoded;\n        },\n        runMagnitudeRefinementPass:\n          function BitModel_runMagnitudeRefinementPass() {\n            var decoder = this.decoder;\n            var width = this.width,\n              height = this.height;\n            var coefficentsMagnitude = this.coefficentsMagnitude;\n            var neighborsSignificance = this.neighborsSignificance;\n            var contexts = this.contexts;\n            var bitsDecoded = this.bitsDecoded;\n            var processingFlags = this.processingFlags;\n            var processedMask = 1;\n            var firstMagnitudeBitMask = 2;\n            var length = width * height;\n            var width4 = width * 4;\n            for (\n              var index0 = 0, indexNext;\n              index0 < length;\n              index0 = indexNext\n            ) {\n              indexNext = Math.min(length, index0 + width4);\n              for (var j = 0; j < width; j++) {\n                for (\n                  var index = index0 + j;\n                  index < indexNext;\n                  index += width\n                ) {\n                  if (\n                    !coefficentsMagnitude[index] ||\n                    (processingFlags[index] & processedMask) !== 0\n                  ) {\n                    continue;\n                  }\n                  var contextLabel = 16;\n                  if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                    processingFlags[index] ^= firstMagnitudeBitMask;\n                    var significance = neighborsSignificance[index] & 127;\n                    contextLabel = significance === 0 ? 15 : 14;\n                  }\n                  var bit = decoder.readBit(contexts, contextLabel);\n                  coefficentsMagnitude[index] =\n                    (coefficentsMagnitude[index] << 1) | bit;\n                  bitsDecoded[index]++;\n                  processingFlags[index] |= processedMask;\n                }\n              }\n            }\n          },\n        runCleanupPass: function BitModel_runCleanupPass() {\n          var decoder = this.decoder;\n          var width = this.width,\n            height = this.height;\n          var neighborsSignificance = this.neighborsSignificance;\n          var coefficentsMagnitude = this.coefficentsMagnitude;\n          var coefficentsSign = this.coefficentsSign;\n          var contexts = this.contexts;\n          var labels = this.contextLabelTable;\n          var bitsDecoded = this.bitsDecoded;\n          var processingFlags = this.processingFlags;\n          var processedMask = 1;\n          var firstMagnitudeBitMask = 2;\n          var oneRowDown = width;\n          var twoRowsDown = width * 2;\n          var threeRowsDown = width * 3;\n          var iNext;\n          for (var i0 = 0; i0 < height; i0 = iNext) {\n            iNext = Math.min(i0 + 4, height);\n            var indexBase = i0 * width;\n            var checkAllEmpty = i0 + 3 < height;\n            for (var j = 0; j < width; j++) {\n              var index0 = indexBase + j;\n              var allEmpty =\n                checkAllEmpty &&\n                processingFlags[index0] === 0 &&\n                processingFlags[index0 + oneRowDown] === 0 &&\n                processingFlags[index0 + twoRowsDown] === 0 &&\n                processingFlags[index0 + threeRowsDown] === 0 &&\n                neighborsSignificance[index0] === 0 &&\n                neighborsSignificance[index0 + oneRowDown] === 0 &&\n                neighborsSignificance[index0 + twoRowsDown] === 0 &&\n                neighborsSignificance[index0 + threeRowsDown] === 0;\n              var i1 = 0,\n                index = index0;\n              var i = i0,\n                sign;\n              if (allEmpty) {\n                var hasSignificantCoefficent = decoder.readBit(\n                  contexts,\n                  RUNLENGTH_CONTEXT,\n                );\n                if (!hasSignificantCoefficent) {\n                  bitsDecoded[index0]++;\n                  bitsDecoded[index0 + oneRowDown]++;\n                  bitsDecoded[index0 + twoRowsDown]++;\n                  bitsDecoded[index0 + threeRowsDown]++;\n                  continue;\n                }\n                i1 =\n                  (decoder.readBit(contexts, UNIFORM_CONTEXT) << 1) |\n                  decoder.readBit(contexts, UNIFORM_CONTEXT);\n                if (i1 !== 0) {\n                  i = i0 + i1;\n                  index += i1 * width;\n                }\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n                index = index0;\n                for (var i2 = i0; i2 <= i; i2++, index += width) {\n                  bitsDecoded[index]++;\n                }\n                i1++;\n              }\n              for (i = i0 + i1; i < iNext; i++, index += width) {\n                if (\n                  coefficentsMagnitude[index] ||\n                  (processingFlags[index] & processedMask) !== 0\n                ) {\n                  continue;\n                }\n                var contextLabel = labels[neighborsSignificance[index]];\n                var decision = decoder.readBit(contexts, contextLabel);\n                if (decision === 1) {\n                  sign = this.decodeSignBit(i, j, index);\n                  coefficentsSign[index] = sign;\n                  coefficentsMagnitude[index] = 1;\n                  this.setNeighborsSignificance(i, j, index);\n                  processingFlags[index] |= firstMagnitudeBitMask;\n                }\n                bitsDecoded[index]++;\n              }\n            }\n          }\n        },\n        checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n          var decoder = this.decoder;\n          var contexts = this.contexts;\n          var symbol =\n            (decoder.readBit(contexts, UNIFORM_CONTEXT) << 3) |\n            (decoder.readBit(contexts, UNIFORM_CONTEXT) << 2) |\n            (decoder.readBit(contexts, UNIFORM_CONTEXT) << 1) |\n            decoder.readBit(contexts, UNIFORM_CONTEXT);\n          if (symbol !== 10) {\n            throw new Error(\"JPX Error: Invalid segmentation symbol\");\n          }\n        },\n      };\n      return BitModel;\n    })();\n    var Transform = (function TransformClosure() {\n      function Transform() {}\n      Transform.prototype.calculate = function transformCalculate(\n        subbands,\n        u0,\n        v0,\n      ) {\n        var ll = subbands[0];\n        for (var i = 1, ii = subbands.length; i < ii; i++) {\n          ll = this.iterate(ll, subbands[i], u0, v0);\n        }\n        return ll;\n      };\n      Transform.prototype.extend = function extend(buffer, offset, size) {\n        var i1 = offset - 1,\n          j1 = offset + 1;\n        var i2 = offset + size - 2,\n          j2 = offset + size;\n        buffer[i1--] = buffer[j1++];\n        buffer[j2++] = buffer[i2--];\n        buffer[i1--] = buffer[j1++];\n        buffer[j2++] = buffer[i2--];\n        buffer[i1--] = buffer[j1++];\n        buffer[j2++] = buffer[i2--];\n        buffer[i1] = buffer[j1];\n        buffer[j2] = buffer[i2];\n      };\n      Transform.prototype.iterate = function Transform_iterate(\n        ll,\n        hl_lh_hh,\n        u0,\n        v0,\n      ) {\n        var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n        var width = hl_lh_hh.width;\n        var height = hl_lh_hh.height;\n        var items = hl_lh_hh.items;\n        var i, j, k, l, u, v;\n        for (k = 0, i = 0; i < llHeight; i++) {\n          l = i * 2 * width;\n          for (j = 0; j < llWidth; j++, k++, l += 2) {\n            items[l] = llItems[k];\n          }\n        }\n        llItems = ll.items = null;\n        var bufferPadding = 4;\n        var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n        if (width === 1) {\n          if ((u0 & 1) !== 0) {\n            for (v = 0, k = 0; v < height; v++, k += width) {\n              items[k] *= 0.5;\n            }\n          }\n        } else {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n            this.extend(rowBuffer, bufferPadding, width);\n            this.filter(rowBuffer, bufferPadding, width);\n            items.set(\n              rowBuffer.subarray(bufferPadding, bufferPadding + width),\n              k,\n            );\n          }\n        }\n        var numBuffers = 16;\n        var colBuffers = [];\n        for (i = 0; i < numBuffers; i++) {\n          colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n        }\n        var b,\n          currentBuffer = 0;\n        ll = bufferPadding + height;\n        if (height === 1) {\n          if ((v0 & 1) !== 0) {\n            for (u = 0; u < width; u++) {\n              items[u] *= 0.5;\n            }\n          }\n        } else {\n          for (u = 0; u < width; u++) {\n            if (currentBuffer === 0) {\n              numBuffers = Math.min(width - u, numBuffers);\n              for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n                for (b = 0; b < numBuffers; b++) {\n                  colBuffers[b][l] = items[k + b];\n                }\n              }\n              currentBuffer = numBuffers;\n            }\n            currentBuffer--;\n            var buffer = colBuffers[currentBuffer];\n            this.extend(buffer, bufferPadding, height);\n            this.filter(buffer, bufferPadding, height);\n            if (currentBuffer === 0) {\n              k = u - numBuffers + 1;\n              for (l = bufferPadding; l < ll; k += width, l++) {\n                for (b = 0; b < numBuffers; b++) {\n                  items[k + b] = colBuffers[b][l];\n                }\n              }\n            }\n          }\n        }\n        return {\n          width: width,\n          height: height,\n          items: items,\n        };\n      };\n      return Transform;\n    })();\n    var IrreversibleTransform = (function IrreversibleTransformClosure() {\n      function IrreversibleTransform() {\n        Transform.call(this);\n      }\n      IrreversibleTransform.prototype = Object.create(Transform.prototype);\n      IrreversibleTransform.prototype.filter =\n        function irreversibleTransformFilter(x, offset, length) {\n          var len = length >> 1;\n          offset = offset | 0;\n          var j, n, current, next;\n          var alpha = -1.586134342059924;\n          var beta = -0.052980118572961;\n          var gamma = 0.882911075530934;\n          var delta = 0.443506852043971;\n          var K = 1.230174104914001;\n          var K_ = 1 / K;\n          j = offset - 3;\n          for (n = len + 4; n--; j += 2) {\n            x[j] *= K_;\n          }\n          j = offset - 2;\n          current = delta * x[j - 1];\n          for (n = len + 3; n--; j += 2) {\n            next = delta * x[j + 1];\n            x[j] = K * x[j] - current - next;\n            if (n--) {\n              j += 2;\n              current = delta * x[j + 1];\n              x[j] = K * x[j] - current - next;\n            } else {\n              break;\n            }\n          }\n          j = offset - 1;\n          current = gamma * x[j - 1];\n          for (n = len + 2; n--; j += 2) {\n            next = gamma * x[j + 1];\n            x[j] -= current + next;\n            if (n--) {\n              j += 2;\n              current = gamma * x[j + 1];\n              x[j] -= current + next;\n            } else {\n              break;\n            }\n          }\n          j = offset;\n          current = beta * x[j - 1];\n          for (n = len + 1; n--; j += 2) {\n            next = beta * x[j + 1];\n            x[j] -= current + next;\n            if (n--) {\n              j += 2;\n              current = beta * x[j + 1];\n              x[j] -= current + next;\n            } else {\n              break;\n            }\n          }\n          if (len !== 0) {\n            j = offset + 1;\n            current = alpha * x[j - 1];\n            for (n = len; n--; j += 2) {\n              next = alpha * x[j + 1];\n              x[j] -= current + next;\n              if (n--) {\n                j += 2;\n                current = alpha * x[j + 1];\n                x[j] -= current + next;\n              } else {\n                break;\n              }\n            }\n          }\n        };\n      return IrreversibleTransform;\n    })();\n    var ReversibleTransform = (function ReversibleTransformClosure() {\n      function ReversibleTransform() {\n        Transform.call(this);\n      }\n      ReversibleTransform.prototype = Object.create(Transform.prototype);\n      ReversibleTransform.prototype.filter = function reversibleTransformFilter(\n        x,\n        offset,\n        length,\n      ) {\n        var len = length >> 1;\n        offset = offset | 0;\n        var j, n;\n        for (j = offset, n = len + 1; n--; j += 2) {\n          x[j] -= (x[j - 1] + x[j + 1] + 2) >> 2;\n        }\n        for (j = offset + 1, n = len; n--; j += 2) {\n          x[j] += (x[j - 1] + x[j + 1]) >> 1;\n        }\n      };\n      return ReversibleTransform;\n    })();\n    return JpxImage;\n  })();\n  (\"use strict\");\n  var Jbig2Image = (function Jbig2ImageClosure() {\n    function ContextCache() {}\n    ContextCache.prototype = {\n      getContexts: function (id) {\n        if (id in this) {\n          return this[id];\n        }\n        return (this[id] = new Int8Array(1 << 16));\n      },\n    };\n    function DecodingContext(data, start, end) {\n      this.data = data;\n      this.start = start;\n      this.end = end;\n    }\n    DecodingContext.prototype = {\n      get decoder() {\n        var decoder = new ArithmeticDecoder(this.data, this.start, this.end);\n        return shadow(this, \"decoder\", decoder);\n      },\n      get contextCache() {\n        var cache = new ContextCache();\n        return shadow(this, \"contextCache\", cache);\n      },\n    };\n    function decodeInteger(contextCache, procedure, decoder) {\n      var contexts = contextCache.getContexts(procedure);\n      var prev = 1;\n      function readBits(length) {\n        var v = 0;\n        for (var i = 0; i < length; i++) {\n          var bit = decoder.readBit(contexts, prev);\n          prev =\n            prev < 256 ? (prev << 1) | bit : (((prev << 1) | bit) & 511) | 256;\n          v = (v << 1) | bit;\n        }\n        return v >>> 0;\n      }\n      var sign = readBits(1);\n      var value = readBits(1)\n        ? readBits(1)\n          ? readBits(1)\n            ? readBits(1)\n              ? readBits(1)\n                ? readBits(32) + 4436\n                : readBits(12) + 340\n              : readBits(8) + 84\n            : readBits(6) + 20\n          : readBits(4) + 4\n        : readBits(2);\n      return sign === 0 ? value : value > 0 ? -value : null;\n    }\n    function decodeIAID(contextCache, decoder, codeLength) {\n      var contexts = contextCache.getContexts(\"IAID\");\n      var prev = 1;\n      for (var i = 0; i < codeLength; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = (prev << 1) | bit;\n      }\n      if (codeLength < 31) {\n        return prev & ((1 << codeLength) - 1);\n      }\n      return prev & 2147483647;\n    }\n    var SegmentTypes = [\n      \"SymbolDictionary\",\n      null,\n      null,\n      null,\n      \"IntermediateTextRegion\",\n      null,\n      \"ImmediateTextRegion\",\n      \"ImmediateLosslessTextRegion\",\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      \"patternDictionary\",\n      null,\n      null,\n      null,\n      \"IntermediateHalftoneRegion\",\n      null,\n      \"ImmediateHalftoneRegion\",\n      \"ImmediateLosslessHalftoneRegion\",\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      \"IntermediateGenericRegion\",\n      null,\n      \"ImmediateGenericRegion\",\n      \"ImmediateLosslessGenericRegion\",\n      \"IntermediateGenericRefinementRegion\",\n      null,\n      \"ImmediateGenericRefinementRegion\",\n      \"ImmediateLosslessGenericRefinementRegion\",\n      null,\n      null,\n      null,\n      null,\n      \"PageInformation\",\n      \"EndOfPage\",\n      \"EndOfStripe\",\n      \"EndOfFile\",\n      \"Profiles\",\n      \"Tables\",\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      \"Extension\",\n    ];\n    var CodingTemplates = [\n      [\n        {\n          x: -1,\n          y: -2,\n        },\n        {\n          x: 0,\n          y: -2,\n        },\n        {\n          x: 1,\n          y: -2,\n        },\n        {\n          x: -2,\n          y: -1,\n        },\n        {\n          x: -1,\n          y: -1,\n        },\n        {\n          x: 0,\n          y: -1,\n        },\n        {\n          x: 1,\n          y: -1,\n        },\n        {\n          x: 2,\n          y: -1,\n        },\n        {\n          x: -4,\n          y: 0,\n        },\n        {\n          x: -3,\n          y: 0,\n        },\n        {\n          x: -2,\n          y: 0,\n        },\n        {\n          x: -1,\n          y: 0,\n        },\n      ],\n      [\n        {\n          x: -1,\n          y: -2,\n        },\n        {\n          x: 0,\n          y: -2,\n        },\n        {\n          x: 1,\n          y: -2,\n        },\n        {\n          x: 2,\n          y: -2,\n        },\n        {\n          x: -2,\n          y: -1,\n        },\n        {\n          x: -1,\n          y: -1,\n        },\n        {\n          x: 0,\n          y: -1,\n        },\n        {\n          x: 1,\n          y: -1,\n        },\n        {\n          x: 2,\n          y: -1,\n        },\n        {\n          x: -3,\n          y: 0,\n        },\n        {\n          x: -2,\n          y: 0,\n        },\n        {\n          x: -1,\n          y: 0,\n        },\n      ],\n      [\n        {\n          x: -1,\n          y: -2,\n        },\n        {\n          x: 0,\n          y: -2,\n        },\n        {\n          x: 1,\n          y: -2,\n        },\n        {\n          x: -2,\n          y: -1,\n        },\n        {\n          x: -1,\n          y: -1,\n        },\n        {\n          x: 0,\n          y: -1,\n        },\n        {\n          x: 1,\n          y: -1,\n        },\n        {\n          x: -2,\n          y: 0,\n        },\n        {\n          x: -1,\n          y: 0,\n        },\n      ],\n      [\n        {\n          x: -3,\n          y: -1,\n        },\n        {\n          x: -2,\n          y: -1,\n        },\n        {\n          x: -1,\n          y: -1,\n        },\n        {\n          x: 0,\n          y: -1,\n        },\n        {\n          x: 1,\n          y: -1,\n        },\n        {\n          x: -4,\n          y: 0,\n        },\n        {\n          x: -3,\n          y: 0,\n        },\n        {\n          x: -2,\n          y: 0,\n        },\n        {\n          x: -1,\n          y: 0,\n        },\n      ],\n    ];\n    var RefinementTemplates = [\n      {\n        coding: [\n          {\n            x: 0,\n            y: -1,\n          },\n          {\n            x: 1,\n            y: -1,\n          },\n          {\n            x: -1,\n            y: 0,\n          },\n        ],\n        reference: [\n          {\n            x: 0,\n            y: -1,\n          },\n          {\n            x: 1,\n            y: -1,\n          },\n          {\n            x: -1,\n            y: 0,\n          },\n          {\n            x: 0,\n            y: 0,\n          },\n          {\n            x: 1,\n            y: 0,\n          },\n          {\n            x: -1,\n            y: 1,\n          },\n          {\n            x: 0,\n            y: 1,\n          },\n          {\n            x: 1,\n            y: 1,\n          },\n        ],\n      },\n      {\n        coding: [\n          {\n            x: -1,\n            y: -1,\n          },\n          {\n            x: 0,\n            y: -1,\n          },\n          {\n            x: 1,\n            y: -1,\n          },\n          {\n            x: -1,\n            y: 0,\n          },\n        ],\n        reference: [\n          {\n            x: 0,\n            y: -1,\n          },\n          {\n            x: -1,\n            y: 0,\n          },\n          {\n            x: 0,\n            y: 0,\n          },\n          {\n            x: 1,\n            y: 0,\n          },\n          {\n            x: 0,\n            y: 1,\n          },\n          {\n            x: 1,\n            y: 1,\n          },\n        ],\n      },\n    ];\n    var ReusedContexts = [39717, 1941, 229, 405];\n    var RefinementReusedContexts = [32, 8];\n    function decodeBitmapTemplate0(width, height, decodingContext) {\n      var decoder = decodingContext.decoder;\n      var contexts = decodingContext.contextCache.getContexts(\"GB\");\n      var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n      var OLD_PIXEL_MASK = 31735;\n      for (i = 0; i < height; i++) {\n        row = bitmap[i] = new Uint8Array(width);\n        row1 = i < 1 ? row : bitmap[i - 1];\n        row2 = i < 2 ? row : bitmap[i - 2];\n        contextLabel =\n          (row2[0] << 13) |\n          (row2[1] << 12) |\n          (row2[2] << 11) |\n          (row1[0] << 7) |\n          (row1[1] << 6) |\n          (row1[2] << 5) |\n          (row1[3] << 4);\n        for (j = 0; j < width; j++) {\n          row[j] = pixel = decoder.readBit(contexts, contextLabel);\n          contextLabel =\n            ((contextLabel & OLD_PIXEL_MASK) << 1) |\n            (j + 3 < width ? row2[j + 3] << 11 : 0) |\n            (j + 4 < width ? row1[j + 4] << 4 : 0) |\n            pixel;\n        }\n      }\n      return bitmap;\n    }\n    function decodeBitmap(\n      mmr,\n      width,\n      height,\n      templateIndex,\n      prediction,\n      skip,\n      at,\n      decodingContext,\n    ) {\n      if (mmr) {\n        error(\"JBIG2 error: MMR encoding is not supported\");\n      }\n      if (\n        templateIndex === 0 &&\n        !skip &&\n        !prediction &&\n        at.length === 4 &&\n        at[0].x === 3 &&\n        at[0].y === -1 &&\n        at[1].x === -3 &&\n        at[1].y === -1 &&\n        at[2].x === 2 &&\n        at[2].y === -2 &&\n        at[3].x === -2 &&\n        at[3].y === -2\n      ) {\n        return decodeBitmapTemplate0(width, height, decodingContext);\n      }\n      var useskip = !!skip;\n      var template = CodingTemplates[templateIndex].concat(at);\n      template.sort(function (a, b) {\n        return a.y - b.y || a.x - b.x;\n      });\n      var templateLength = template.length;\n      var templateX = new Int8Array(templateLength);\n      var templateY = new Int8Array(templateLength);\n      var changingTemplateEntries = [];\n      var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n      var c, k;\n      for (k = 0; k < templateLength; k++) {\n        templateX[k] = template[k].x;\n        templateY[k] = template[k].y;\n        minX = Math.min(minX, template[k].x);\n        maxX = Math.max(maxX, template[k].x);\n        minY = Math.min(minY, template[k].y);\n        if (\n          k < templateLength - 1 &&\n          template[k].y === template[k + 1].y &&\n          template[k].x === template[k + 1].x - 1\n        ) {\n          reuseMask |= 1 << (templateLength - 1 - k);\n        } else {\n          changingTemplateEntries.push(k);\n        }\n      }\n      var changingEntriesLength = changingTemplateEntries.length;\n      var changingTemplateX = new Int8Array(changingEntriesLength);\n      var changingTemplateY = new Int8Array(changingEntriesLength);\n      var changingTemplateBit = new Uint16Array(changingEntriesLength);\n      for (c = 0; c < changingEntriesLength; c++) {\n        k = changingTemplateEntries[c];\n        changingTemplateX[c] = template[k].x;\n        changingTemplateY[c] = template[k].y;\n        changingTemplateBit[c] = 1 << (templateLength - 1 - k);\n      }\n      var sbb_left = -minX;\n      var sbb_top = -minY;\n      var sbb_right = width - maxX;\n      var pseudoPixelContext = ReusedContexts[templateIndex];\n      var row = new Uint8Array(width);\n      var bitmap = [];\n      var decoder = decodingContext.decoder;\n      var contexts = decodingContext.contextCache.getContexts(\"GB\");\n      var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n      for (var i = 0; i < height; i++) {\n        if (prediction) {\n          var sltp = decoder.readBit(contexts, pseudoPixelContext);\n          ltp ^= sltp;\n          if (ltp) {\n            bitmap.push(row);\n            continue;\n          }\n        }\n        row = new Uint8Array(row);\n        bitmap.push(row);\n        for (j = 0; j < width; j++) {\n          if (useskip && skip[i][j]) {\n            row[j] = 0;\n            continue;\n          }\n          if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n            contextLabel = (contextLabel << 1) & reuseMask;\n            for (k = 0; k < changingEntriesLength; k++) {\n              i0 = i + changingTemplateY[k];\n              j0 = j + changingTemplateX[k];\n              bit = bitmap[i0][j0];\n              if (bit) {\n                bit = changingTemplateBit[k];\n                contextLabel |= bit;\n              }\n            }\n          } else {\n            contextLabel = 0;\n            shift = templateLength - 1;\n            for (k = 0; k < templateLength; k++, shift--) {\n              j0 = j + templateX[k];\n              if (j0 >= 0 && j0 < width) {\n                i0 = i + templateY[k];\n                if (i0 >= 0) {\n                  bit = bitmap[i0][j0];\n                  if (bit) {\n                    contextLabel |= bit << shift;\n                  }\n                }\n              }\n            }\n          }\n          var pixel = decoder.readBit(contexts, contextLabel);\n          row[j] = pixel;\n        }\n      }\n      return bitmap;\n    }\n    function decodeRefinement(\n      width,\n      height,\n      templateIndex,\n      referenceBitmap,\n      offsetX,\n      offsetY,\n      prediction,\n      at,\n      decodingContext,\n    ) {\n      var codingTemplate = RefinementTemplates[templateIndex].coding;\n      if (templateIndex === 0) {\n        codingTemplate = codingTemplate.concat([at[0]]);\n      }\n      var codingTemplateLength = codingTemplate.length;\n      var codingTemplateX = new Int32Array(codingTemplateLength);\n      var codingTemplateY = new Int32Array(codingTemplateLength);\n      var k;\n      for (k = 0; k < codingTemplateLength; k++) {\n        codingTemplateX[k] = codingTemplate[k].x;\n        codingTemplateY[k] = codingTemplate[k].y;\n      }\n      var referenceTemplate = RefinementTemplates[templateIndex].reference;\n      if (templateIndex === 0) {\n        referenceTemplate = referenceTemplate.concat([at[1]]);\n      }\n      var referenceTemplateLength = referenceTemplate.length;\n      var referenceTemplateX = new Int32Array(referenceTemplateLength);\n      var referenceTemplateY = new Int32Array(referenceTemplateLength);\n      for (k = 0; k < referenceTemplateLength; k++) {\n        referenceTemplateX[k] = referenceTemplate[k].x;\n        referenceTemplateY[k] = referenceTemplate[k].y;\n      }\n      var referenceWidth = referenceBitmap[0].length;\n      var referenceHeight = referenceBitmap.length;\n      var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n      var bitmap = [];\n      var decoder = decodingContext.decoder;\n      var contexts = decodingContext.contextCache.getContexts(\"GR\");\n      var ltp = 0;\n      for (var i = 0; i < height; i++) {\n        if (prediction) {\n          var sltp = decoder.readBit(contexts, pseudoPixelContext);\n          ltp ^= sltp;\n          if (ltp) {\n            error(\"JBIG2 error: prediction is not supported\");\n          }\n        }\n        var row = new Uint8Array(width);\n        bitmap.push(row);\n        for (var j = 0; j < width; j++) {\n          var i0, j0;\n          var contextLabel = 0;\n          for (k = 0; k < codingTemplateLength; k++) {\n            i0 = i + codingTemplateY[k];\n            j0 = j + codingTemplateX[k];\n            if (i0 < 0 || j0 < 0 || j0 >= width) {\n              contextLabel <<= 1;\n            } else {\n              contextLabel = (contextLabel << 1) | bitmap[i0][j0];\n            }\n          }\n          for (k = 0; k < referenceTemplateLength; k++) {\n            i0 = i + referenceTemplateY[k] + offsetY;\n            j0 = j + referenceTemplateX[k] + offsetX;\n            if (\n              i0 < 0 ||\n              i0 >= referenceHeight ||\n              j0 < 0 ||\n              j0 >= referenceWidth\n            ) {\n              contextLabel <<= 1;\n            } else {\n              contextLabel = (contextLabel << 1) | referenceBitmap[i0][j0];\n            }\n          }\n          var pixel = decoder.readBit(contexts, contextLabel);\n          row[j] = pixel;\n        }\n      }\n      return bitmap;\n    }\n    function decodeSymbolDictionary(\n      huffman,\n      refinement,\n      symbols,\n      numberOfNewSymbols,\n      numberOfExportedSymbols,\n      huffmanTables,\n      templateIndex,\n      at,\n      refinementTemplateIndex,\n      refinementAt,\n      decodingContext,\n    ) {\n      if (huffman) {\n        error(\"JBIG2 error: huffman is not supported\");\n      }\n      var newSymbols = [];\n      var currentHeight = 0;\n      var symbolCodeLength = log2(symbols.length + numberOfNewSymbols);\n      var decoder = decodingContext.decoder;\n      var contextCache = decodingContext.contextCache;\n      while (newSymbols.length < numberOfNewSymbols) {\n        var deltaHeight = decodeInteger(contextCache, \"IADH\", decoder);\n        currentHeight += deltaHeight;\n        var currentWidth = 0;\n        var totalWidth = 0;\n        while (true) {\n          var deltaWidth = decodeInteger(contextCache, \"IADW\", decoder);\n          if (deltaWidth === null) {\n            break;\n          }\n          currentWidth += deltaWidth;\n          totalWidth += currentWidth;\n          var bitmap;\n          if (refinement) {\n            var numberOfInstances = decodeInteger(\n              contextCache,\n              \"IAAI\",\n              decoder,\n            );\n            if (numberOfInstances > 1) {\n              bitmap = decodeTextRegion(\n                huffman,\n                refinement,\n                currentWidth,\n                currentHeight,\n                0,\n                numberOfInstances,\n                1,\n                symbols.concat(newSymbols),\n                symbolCodeLength,\n                0,\n                0,\n                1,\n                0,\n                huffmanTables,\n                refinementTemplateIndex,\n                refinementAt,\n                decodingContext,\n              );\n            } else {\n              var symbolId = decodeIAID(\n                contextCache,\n                decoder,\n                symbolCodeLength,\n              );\n              var rdx = decodeInteger(contextCache, \"IARDX\", decoder);\n              var rdy = decodeInteger(contextCache, \"IARDY\", decoder);\n              var symbol =\n                symbolId < symbols.length\n                  ? symbols[symbolId]\n                  : newSymbols[symbolId - symbols.length];\n              bitmap = decodeRefinement(\n                currentWidth,\n                currentHeight,\n                refinementTemplateIndex,\n                symbol,\n                rdx,\n                rdy,\n                false,\n                refinementAt,\n                decodingContext,\n              );\n            }\n          } else {\n            bitmap = decodeBitmap(\n              false,\n              currentWidth,\n              currentHeight,\n              templateIndex,\n              false,\n              null,\n              at,\n              decodingContext,\n            );\n          }\n          newSymbols.push(bitmap);\n        }\n      }\n      var exportedSymbols = [];\n      var flags = [],\n        currentFlag = false;\n      var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n      while (flags.length < totalSymbolsLength) {\n        var runLength = decodeInteger(contextCache, \"IAEX\", decoder);\n        while (runLength--) {\n          flags.push(currentFlag);\n        }\n        currentFlag = !currentFlag;\n      }\n      for (var i = 0, ii = symbols.length; i < ii; i++) {\n        if (flags[i]) {\n          exportedSymbols.push(symbols[i]);\n        }\n      }\n      for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n        if (flags[i]) {\n          exportedSymbols.push(newSymbols[j]);\n        }\n      }\n      return exportedSymbols;\n    }\n    function decodeTextRegion(\n      huffman,\n      refinement,\n      width,\n      height,\n      defaultPixelValue,\n      numberOfSymbolInstances,\n      stripSize,\n      inputSymbols,\n      symbolCodeLength,\n      transposed,\n      dsOffset,\n      referenceCorner,\n      combinationOperator,\n      huffmanTables,\n      refinementTemplateIndex,\n      refinementAt,\n      decodingContext,\n    ) {\n      if (huffman) {\n        error(\"JBIG2 error: huffman is not supported\");\n      }\n      var bitmap = [];\n      var i, row;\n      for (i = 0; i < height; i++) {\n        row = new Uint8Array(width);\n        if (defaultPixelValue) {\n          for (var j = 0; j < width; j++) {\n            row[j] = defaultPixelValue;\n          }\n        }\n        bitmap.push(row);\n      }\n      var decoder = decodingContext.decoder;\n      var contextCache = decodingContext.contextCache;\n      var stripT = -decodeInteger(contextCache, \"IADT\", decoder);\n      var firstS = 0;\n      i = 0;\n      while (i < numberOfSymbolInstances) {\n        var deltaT = decodeInteger(contextCache, \"IADT\", decoder);\n        stripT += deltaT;\n        var deltaFirstS = decodeInteger(contextCache, \"IAFS\", decoder);\n        firstS += deltaFirstS;\n        var currentS = firstS;\n        do {\n          var currentT =\n            stripSize === 1 ? 0 : decodeInteger(contextCache, \"IAIT\", decoder);\n          var t = stripSize * stripT + currentT;\n          var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n          var applyRefinement =\n            refinement && decodeInteger(contextCache, \"IARI\", decoder);\n          var symbolBitmap = inputSymbols[symbolId];\n          var symbolWidth = symbolBitmap[0].length;\n          var symbolHeight = symbolBitmap.length;\n          if (applyRefinement) {\n            var rdw = decodeInteger(contextCache, \"IARDW\", decoder);\n            var rdh = decodeInteger(contextCache, \"IARDH\", decoder);\n            var rdx = decodeInteger(contextCache, \"IARDX\", decoder);\n            var rdy = decodeInteger(contextCache, \"IARDY\", decoder);\n            symbolWidth += rdw;\n            symbolHeight += rdh;\n            symbolBitmap = decodeRefinement(\n              symbolWidth,\n              symbolHeight,\n              refinementTemplateIndex,\n              symbolBitmap,\n              (rdw >> 1) + rdx,\n              (rdh >> 1) + rdy,\n              false,\n              refinementAt,\n              decodingContext,\n            );\n          }\n          var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight);\n          var offsetS = currentS - (referenceCorner & 2 ? symbolWidth : 0);\n          var s2, t2, symbolRow;\n          if (transposed) {\n            for (s2 = 0; s2 < symbolHeight; s2++) {\n              row = bitmap[offsetS + s2];\n              if (!row) {\n                continue;\n              }\n              symbolRow = symbolBitmap[s2];\n              var maxWidth = Math.min(width - offsetT, symbolWidth);\n              switch (combinationOperator) {\n                case 0:\n                  for (t2 = 0; t2 < maxWidth; t2++) {\n                    row[offsetT + t2] |= symbolRow[t2];\n                  }\n                  break;\n\n                case 2:\n                  for (t2 = 0; t2 < maxWidth; t2++) {\n                    row[offsetT + t2] ^= symbolRow[t2];\n                  }\n                  break;\n\n                default:\n                  error(\n                    \"JBIG2 error: operator \" +\n                      combinationOperator +\n                      \" is not supported\",\n                  );\n              }\n            }\n            currentS += symbolHeight - 1;\n          } else {\n            for (t2 = 0; t2 < symbolHeight; t2++) {\n              row = bitmap[offsetT + t2];\n              if (!row) {\n                continue;\n              }\n              symbolRow = symbolBitmap[t2];\n              switch (combinationOperator) {\n                case 0:\n                  for (s2 = 0; s2 < symbolWidth; s2++) {\n                    row[offsetS + s2] |= symbolRow[s2];\n                  }\n                  break;\n\n                case 2:\n                  for (s2 = 0; s2 < symbolWidth; s2++) {\n                    row[offsetS + s2] ^= symbolRow[s2];\n                  }\n                  break;\n\n                default:\n                  error(\n                    \"JBIG2 error: operator \" +\n                      combinationOperator +\n                      \" is not supported\",\n                  );\n              }\n            }\n            currentS += symbolWidth - 1;\n          }\n          i++;\n          var deltaS = decodeInteger(contextCache, \"IADS\", decoder);\n          if (deltaS === null) {\n            break;\n          }\n          currentS += deltaS + dsOffset;\n        } while (true);\n      }\n      return bitmap;\n    }\n    function readSegmentHeader(data, start) {\n      var segmentHeader = {};\n      segmentHeader.number = readUint32(data, start);\n      var flags = data[start + 4];\n      var segmentType = flags & 63;\n      if (!SegmentTypes[segmentType]) {\n        error(\"JBIG2 error: invalid segment type: \" + segmentType);\n      }\n      segmentHeader.type = segmentType;\n      segmentHeader.typeName = SegmentTypes[segmentType];\n      segmentHeader.deferredNonRetain = !!(flags & 128);\n      var pageAssociationFieldSize = !!(flags & 64);\n      var referredFlags = data[start + 5];\n      var referredToCount = (referredFlags >> 5) & 7;\n      var retainBits = [referredFlags & 31];\n      var position = start + 6;\n      if (referredFlags === 7) {\n        referredToCount = readUint32(data, position - 1) & 536870911;\n        position += 3;\n        var bytes = (referredToCount + 7) >> 3;\n        retainBits[0] = data[position++];\n        while (--bytes > 0) {\n          retainBits.push(data[position++]);\n        }\n      } else if (referredFlags === 5 || referredFlags === 6) {\n        error(\"JBIG2 error: invalid referred-to flags\");\n      }\n      segmentHeader.retainBits = retainBits;\n      var referredToSegmentNumberSize =\n        segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n      var referredTo = [];\n      var i, ii;\n      for (i = 0; i < referredToCount; i++) {\n        var number =\n          referredToSegmentNumberSize === 1\n            ? data[position]\n            : referredToSegmentNumberSize === 2\n              ? readUint16(data, position)\n              : readUint32(data, position);\n        referredTo.push(number);\n        position += referredToSegmentNumberSize;\n      }\n      segmentHeader.referredTo = referredTo;\n      if (!pageAssociationFieldSize) {\n        segmentHeader.pageAssociation = data[position++];\n      } else {\n        segmentHeader.pageAssociation = readUint32(data, position);\n        position += 4;\n      }\n      segmentHeader.length = readUint32(data, position);\n      position += 4;\n      if (segmentHeader.length === 4294967295) {\n        if (segmentType === 38) {\n          var genericRegionInfo = readRegionSegmentInformation(data, position);\n          var genericRegionSegmentFlags =\n            data[position + RegionSegmentInformationFieldLength];\n          var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n          var searchPatternLength = 6;\n          var searchPattern = new Uint8Array(searchPatternLength);\n          if (!genericRegionMmr) {\n            searchPattern[0] = 255;\n            searchPattern[1] = 172;\n          }\n          searchPattern[2] = (genericRegionInfo.height >>> 24) & 255;\n          searchPattern[3] = (genericRegionInfo.height >> 16) & 255;\n          searchPattern[4] = (genericRegionInfo.height >> 8) & 255;\n          searchPattern[5] = genericRegionInfo.height & 255;\n          for (i = position, ii = data.length; i < ii; i++) {\n            var j = 0;\n            while (\n              j < searchPatternLength &&\n              searchPattern[j] === data[i + j]\n            ) {\n              j++;\n            }\n            if (j === searchPatternLength) {\n              segmentHeader.length = i + searchPatternLength;\n              break;\n            }\n          }\n          if (segmentHeader.length === 4294967295) {\n            error(\"JBIG2 error: segment end was not found\");\n          }\n        } else {\n          error(\"JBIG2 error: invalid unknown segment length\");\n        }\n      }\n      segmentHeader.headerEnd = position;\n      return segmentHeader;\n    }\n    function readSegments(header, data, start, end) {\n      var segments = [];\n      var position = start;\n      while (position < end) {\n        var segmentHeader = readSegmentHeader(data, position);\n        position = segmentHeader.headerEnd;\n        var segment = {\n          header: segmentHeader,\n          data: data,\n        };\n        if (!header.randomAccess) {\n          segment.start = position;\n          position += segmentHeader.length;\n          segment.end = position;\n        }\n        segments.push(segment);\n        if (segmentHeader.type === 51) {\n          break;\n        }\n      }\n      if (header.randomAccess) {\n        for (var i = 0, ii = segments.length; i < ii; i++) {\n          segments[i].start = position;\n          position += segments[i].header.length;\n          segments[i].end = position;\n        }\n      }\n      return segments;\n    }\n    function readRegionSegmentInformation(data, start) {\n      return {\n        width: readUint32(data, start),\n        height: readUint32(data, start + 4),\n        x: readUint32(data, start + 8),\n        y: readUint32(data, start + 12),\n        combinationOperator: data[start + 16] & 7,\n      };\n    }\n    var RegionSegmentInformationFieldLength = 17;\n    function processSegment(segment, visitor) {\n      var header = segment.header;\n      var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n      var args, at, i, atLength;\n      switch (header.type) {\n        case 0:\n          var dictionary = {};\n          var dictionaryFlags = readUint16(data, position);\n          dictionary.huffman = !!(dictionaryFlags & 1);\n          dictionary.refinement = !!(dictionaryFlags & 2);\n          dictionary.huffmanDHSelector = (dictionaryFlags >> 2) & 3;\n          dictionary.huffmanDWSelector = (dictionaryFlags >> 4) & 3;\n          dictionary.bitmapSizeSelector = (dictionaryFlags >> 6) & 1;\n          dictionary.aggregationInstancesSelector = (dictionaryFlags >> 7) & 1;\n          dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n          dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n          dictionary.template = (dictionaryFlags >> 10) & 3;\n          dictionary.refinementTemplate = (dictionaryFlags >> 12) & 1;\n          position += 2;\n          if (!dictionary.huffman) {\n            atLength = dictionary.template === 0 ? 4 : 1;\n            at = [];\n            for (i = 0; i < atLength; i++) {\n              at.push({\n                x: readInt8(data, position),\n                y: readInt8(data, position + 1),\n              });\n              position += 2;\n            }\n            dictionary.at = at;\n          }\n          if (dictionary.refinement && !dictionary.refinementTemplate) {\n            at = [];\n            for (i = 0; i < 2; i++) {\n              at.push({\n                x: readInt8(data, position),\n                y: readInt8(data, position + 1),\n              });\n              position += 2;\n            }\n            dictionary.refinementAt = at;\n          }\n          dictionary.numberOfExportedSymbols = readUint32(data, position);\n          position += 4;\n          dictionary.numberOfNewSymbols = readUint32(data, position);\n          position += 4;\n          args = [\n            dictionary,\n            header.number,\n            header.referredTo,\n            data,\n            position,\n            end,\n          ];\n          break;\n\n        case 6:\n        case 7:\n          var textRegion = {};\n          textRegion.info = readRegionSegmentInformation(data, position);\n          position += RegionSegmentInformationFieldLength;\n          var textRegionSegmentFlags = readUint16(data, position);\n          position += 2;\n          textRegion.huffman = !!(textRegionSegmentFlags & 1);\n          textRegion.refinement = !!(textRegionSegmentFlags & 2);\n          textRegion.stripSize = 1 << ((textRegionSegmentFlags >> 2) & 3);\n          textRegion.referenceCorner = (textRegionSegmentFlags >> 4) & 3;\n          textRegion.transposed = !!(textRegionSegmentFlags & 64);\n          textRegion.combinationOperator = (textRegionSegmentFlags >> 7) & 3;\n          textRegion.defaultPixelValue = (textRegionSegmentFlags >> 9) & 1;\n          textRegion.dsOffset = (textRegionSegmentFlags << 17) >> 27;\n          textRegion.refinementTemplate = (textRegionSegmentFlags >> 15) & 1;\n          if (textRegion.huffman) {\n            var textRegionHuffmanFlags = readUint16(data, position);\n            position += 2;\n            textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n            textRegion.huffmanDS = (textRegionHuffmanFlags >> 2) & 3;\n            textRegion.huffmanDT = (textRegionHuffmanFlags >> 4) & 3;\n            textRegion.huffmanRefinementDW = (textRegionHuffmanFlags >> 6) & 3;\n            textRegion.huffmanRefinementDH = (textRegionHuffmanFlags >> 8) & 3;\n            textRegion.huffmanRefinementDX = (textRegionHuffmanFlags >> 10) & 3;\n            textRegion.huffmanRefinementDY = (textRegionHuffmanFlags >> 12) & 3;\n            textRegion.huffmanRefinementSizeSelector = !!(\n              textRegionHuffmanFlags & 14\n            );\n          }\n          if (textRegion.refinement && !textRegion.refinementTemplate) {\n            at = [];\n            for (i = 0; i < 2; i++) {\n              at.push({\n                x: readInt8(data, position),\n                y: readInt8(data, position + 1),\n              });\n              position += 2;\n            }\n            textRegion.refinementAt = at;\n          }\n          textRegion.numberOfSymbolInstances = readUint32(data, position);\n          position += 4;\n          if (textRegion.huffman) {\n            error(\"JBIG2 error: huffman is not supported\");\n          }\n          args = [textRegion, header.referredTo, data, position, end];\n          break;\n\n        case 38:\n        case 39:\n          var genericRegion = {};\n          genericRegion.info = readRegionSegmentInformation(data, position);\n          position += RegionSegmentInformationFieldLength;\n          var genericRegionSegmentFlags = data[position++];\n          genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n          genericRegion.template = (genericRegionSegmentFlags >> 1) & 3;\n          genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n          if (!genericRegion.mmr) {\n            atLength = genericRegion.template === 0 ? 4 : 1;\n            at = [];\n            for (i = 0; i < atLength; i++) {\n              at.push({\n                x: readInt8(data, position),\n                y: readInt8(data, position + 1),\n              });\n              position += 2;\n            }\n            genericRegion.at = at;\n          }\n          args = [genericRegion, data, position, end];\n          break;\n\n        case 48:\n          var pageInfo = {\n            width: readUint32(data, position),\n            height: readUint32(data, position + 4),\n            resolutionX: readUint32(data, position + 8),\n            resolutionY: readUint32(data, position + 12),\n          };\n          if (pageInfo.height === 4294967295) {\n            delete pageInfo.height;\n          }\n          var pageSegmentFlags = data[position + 16];\n          var pageStripingInformatiom = readUint16(data, position + 17);\n          pageInfo.lossless = !!(pageSegmentFlags & 1);\n          pageInfo.refinement = !!(pageSegmentFlags & 2);\n          pageInfo.defaultPixelValue = (pageSegmentFlags >> 2) & 1;\n          pageInfo.combinationOperator = (pageSegmentFlags >> 3) & 3;\n          pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n          pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n          args = [pageInfo];\n          break;\n\n        case 49:\n          break;\n\n        case 50:\n          break;\n\n        case 51:\n          break;\n\n        case 62:\n          break;\n\n        default:\n          error(\n            \"JBIG2 error: segment type \" +\n              header.typeName +\n              \"(\" +\n              header.type +\n              \") is not implemented\",\n          );\n      }\n      var callbackName = \"on\" + header.typeName;\n      if (callbackName in visitor) {\n        visitor[callbackName].apply(visitor, args);\n      }\n    }\n    function processSegments(segments, visitor) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        processSegment(segments[i], visitor);\n      }\n    }\n    function parseJbig2(data, start, end) {\n      var position = start;\n      if (\n        data[position] !== 151 ||\n        data[position + 1] !== 74 ||\n        data[position + 2] !== 66 ||\n        data[position + 3] !== 50 ||\n        data[position + 4] !== 13 ||\n        data[position + 5] !== 10 ||\n        data[position + 6] !== 26 ||\n        data[position + 7] !== 10\n      ) {\n        error(\"JBIG2 error: invalid header\");\n      }\n      var header = {};\n      position += 8;\n      var flags = data[position++];\n      header.randomAccess = !(flags & 1);\n      if (!(flags & 2)) {\n        header.numberOfPages = readUint32(data, position);\n        position += 4;\n      }\n      var segments = readSegments(header, data, position, end);\n      error(\"Not implemented\");\n    }\n    function parseJbig2Chunks(chunks) {\n      var visitor = new SimpleSegmentVisitor();\n      for (var i = 0, ii = chunks.length; i < ii; i++) {\n        var chunk = chunks[i];\n        var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n        processSegments(segments, visitor);\n      }\n      return visitor;\n    }\n    function SimpleSegmentVisitor() {}\n    SimpleSegmentVisitor.prototype = {\n      onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n        this.currentPageInfo = info;\n        var rowSize = (info.width + 7) >> 3;\n        var buffer = new Uint8Array(rowSize * info.height);\n        if (info.defaultPixelValue) {\n          for (var i = 0, ii = buffer.length; i < ii; i++) {\n            buffer[i] = 255;\n          }\n        }\n        this.buffer = buffer;\n      },\n      drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n        var pageInfo = this.currentPageInfo;\n        var width = regionInfo.width,\n          height = regionInfo.height;\n        var rowSize = (pageInfo.width + 7) >> 3;\n        var combinationOperator = pageInfo.combinationOperatorOverride\n          ? regionInfo.combinationOperator\n          : pageInfo.combinationOperator;\n        var buffer = this.buffer;\n        var mask0 = 128 >> (regionInfo.x & 7);\n        var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n        var i, j, mask, offset;\n        switch (combinationOperator) {\n          case 0:\n            for (i = 0; i < height; i++) {\n              mask = mask0;\n              offset = offset0;\n              for (j = 0; j < width; j++) {\n                if (bitmap[i][j]) {\n                  buffer[offset] |= mask;\n                }\n                mask >>= 1;\n                if (!mask) {\n                  mask = 128;\n                  offset++;\n                }\n              }\n              offset0 += rowSize;\n            }\n            break;\n\n          case 2:\n            for (i = 0; i < height; i++) {\n              mask = mask0;\n              offset = offset0;\n              for (j = 0; j < width; j++) {\n                if (bitmap[i][j]) {\n                  buffer[offset] ^= mask;\n                }\n                mask >>= 1;\n                if (!mask) {\n                  mask = 128;\n                  offset++;\n                }\n              }\n              offset0 += rowSize;\n            }\n            break;\n\n          default:\n            error(\n              \"JBIG2 error: operator \" +\n                combinationOperator +\n                \" is not supported\",\n            );\n        }\n      },\n      onImmediateGenericRegion:\n        function SimpleSegmentVisitor_onImmediateGenericRegion(\n          region,\n          data,\n          start,\n          end,\n        ) {\n          var regionInfo = region.info;\n          var decodingContext = new DecodingContext(data, start, end);\n          var bitmap = decodeBitmap(\n            region.mmr,\n            regionInfo.width,\n            regionInfo.height,\n            region.template,\n            region.prediction,\n            null,\n            region.at,\n            decodingContext,\n          );\n          this.drawBitmap(regionInfo, bitmap);\n        },\n      onImmediateLosslessGenericRegion:\n        function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n          this.onImmediateGenericRegion.apply(this, arguments);\n        },\n      onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(\n        dictionary,\n        currentSegment,\n        referredSegments,\n        data,\n        start,\n        end,\n      ) {\n        var huffmanTables;\n        if (dictionary.huffman) {\n          error(\"JBIG2 error: huffman is not supported\");\n        }\n        var symbols = this.symbols;\n        if (!symbols) {\n          this.symbols = symbols = {};\n        }\n        var inputSymbols = [];\n        for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n          inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n        }\n        var decodingContext = new DecodingContext(data, start, end);\n        symbols[currentSegment] = decodeSymbolDictionary(\n          dictionary.huffman,\n          dictionary.refinement,\n          inputSymbols,\n          dictionary.numberOfNewSymbols,\n          dictionary.numberOfExportedSymbols,\n          huffmanTables,\n          dictionary.template,\n          dictionary.at,\n          dictionary.refinementTemplate,\n          dictionary.refinementAt,\n          decodingContext,\n        );\n      },\n      onImmediateTextRegion:\n        function SimpleSegmentVisitor_onImmediateTextRegion(\n          region,\n          referredSegments,\n          data,\n          start,\n          end,\n        ) {\n          var regionInfo = region.info;\n          var huffmanTables;\n          var symbols = this.symbols;\n          var inputSymbols = [];\n          for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n            inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n          }\n          var symbolCodeLength = log2(inputSymbols.length);\n          var decodingContext = new DecodingContext(data, start, end);\n          var bitmap = decodeTextRegion(\n            region.huffman,\n            region.refinement,\n            regionInfo.width,\n            regionInfo.height,\n            region.defaultPixelValue,\n            region.numberOfSymbolInstances,\n            region.stripSize,\n            inputSymbols,\n            symbolCodeLength,\n            region.transposed,\n            region.dsOffset,\n            region.referenceCorner,\n            region.combinationOperator,\n            huffmanTables,\n            region.refinementTemplate,\n            region.refinementAt,\n            decodingContext,\n          );\n          this.drawBitmap(regionInfo, bitmap);\n        },\n      onImmediateLosslessTextRegion:\n        function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n          this.onImmediateTextRegion.apply(this, arguments);\n        },\n    };\n    function Jbig2Image() {}\n    Jbig2Image.prototype = {\n      parseChunks: function Jbig2Image_parseChunks(chunks) {\n        return parseJbig2Chunks(chunks);\n      },\n    };\n    return Jbig2Image;\n  })();\n  function log2(x) {\n    var n = 1,\n      i = 0;\n    while (x > n) {\n      n <<= 1;\n      i++;\n    }\n    return i;\n  }\n  function readInt8(data, start) {\n    return (data[start] << 24) >> 24;\n  }\n  function readUint16(data, offset) {\n    return (data[offset] << 8) | data[offset + 1];\n  }\n  function readUint32(data, offset) {\n    return (\n      ((data[offset] << 24) |\n        (data[offset + 1] << 16) |\n        (data[offset + 2] << 8) |\n        data[offset + 3]) >>>\n      0\n    );\n  }\n  function shadow(obj, prop, value) {\n    Object.defineProperty(obj, prop, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: false,\n    });\n    return value;\n  }\n  var error = function () {\n    console.error.apply(console, arguments);\n    throw new Error(\"PDFJS error: \" + arguments[0]);\n  };\n  var warn = function () {\n    console.warn.apply(console, arguments);\n  };\n  var info = function () {\n    console.info.apply(console, arguments);\n  };\n  Jbig2Image.prototype.parse = function parseJbig2(data) {\n    var position = 0,\n      end = data.length;\n    if (\n      data[position] !== 151 ||\n      data[position + 1] !== 74 ||\n      data[position + 2] !== 66 ||\n      data[position + 3] !== 50 ||\n      data[position + 4] !== 13 ||\n      data[position + 5] !== 10 ||\n      data[position + 6] !== 26 ||\n      data[position + 7] !== 10\n    ) {\n      error(\"JBIG2 error: invalid header\");\n    }\n    var header = {};\n    position += 8;\n    var flags = data[position++];\n    header.randomAccess = !(flags & 1);\n    if (!(flags & 2)) {\n      header.numberOfPages = readUint32(data, position);\n      position += 4;\n    }\n    var visitor = this.parseChunks([\n      {\n        data: data,\n        start: position,\n        end: end,\n      },\n    ]);\n    var width = visitor.currentPageInfo.width;\n    var height = visitor.currentPageInfo.height;\n    var bitPacked = visitor.buffer;\n    var data = new Uint8Array(width * height);\n    var q = 0,\n      k = 0;\n    for (var i = 0; i < height; i++) {\n      var mask = 0,\n        buffer;\n      for (var j = 0; j < width; j++) {\n        if (!mask) {\n          mask = 128;\n          buffer = bitPacked[k++];\n        }\n        data[q++] = buffer & mask ? 0 : 255;\n        mask >>= 1;\n      }\n    }\n    this.width = width;\n    this.height = height;\n    this.data = data;\n  };\n  PDFJS.JpegImage = JpegImage;\n  PDFJS.JpxImage = JpxImage;\n  PDFJS.Jbig2Image = Jbig2Image;\n})(PDFJS || (PDFJS = {}));\n\nvar JpegDecoder = PDFJS.JpegImage;\n\nvar JpxDecoder = PDFJS.JpxImage;\n\nvar Jbig2Decoder = PDFJS.Jbig2Image;\n\nexport { JpegImage, JpegDecoder, JpxDecoder, Jbig2Decoder };\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeJpeg } from \"#src/async_computation/decode_jpeg_request.js\";\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\nimport { JpegDecoder } from \"#src/third_party/jpgjs/jpg.js\";\nimport { transposeArray2d } from \"#src/util/array.js\";\n\nregisterAsyncComputation(\n  decodeJpeg,\n  async (\n    data,\n    width: number | undefined,\n    height: number | undefined,\n    area: number | undefined,\n    numComponents: number | undefined,\n    convertToGrayscale: boolean,\n  ) => {\n    const parser = new JpegDecoder();\n    parser.parse(data);\n    // Just check that the total number pixels matches the expected value.\n    if (\n      (width !== undefined && width !== parser.width) ||\n      (height !== undefined && height !== parser.height) ||\n      (area !== undefined && parser.width * parser.height !== area)\n    ) {\n      throw new Error(\n        \"JPEG data does not have the expected dimensions: \" +\n          `width=${parser.width}, height=${parser.height}, ` +\n          `expected width=${width}, expected height=${height}, expected area=${area}`,\n      );\n    }\n    width = parser.width;\n    height = parser.height;\n    if (numComponents !== undefined && parser.numComponents !== numComponents) {\n      throw new Error(\n        \"JPEG data does not have the expected number of components: \" +\n          `components=${parser.numComponents}, expected=${numComponents}`,\n      );\n    }\n    numComponents = parser.numComponents;\n    let result: Uint8Array<ArrayBuffer>;\n    if (parser.numComponents === 1) {\n      result = parser.getData(\n        parser.width,\n        parser.height,\n        /*forceRGBOutput=*/ false,\n      );\n    } else if (parser.numComponents === 3) {\n      result = parser.getData(\n        parser.width,\n        parser.height,\n        /*forceRGBOutput=*/ false,\n      );\n      if (convertToGrayscale) {\n        const length = width * height;\n        const converted = new Uint8Array(length);\n        for (let i = 0; i < length; ++i) {\n          converted[i] = result[i * 3];\n        }\n        result = converted;\n      } else {\n        result = transposeArray2d(result, parser.width * parser.height, 3);\n      }\n    } else {\n      throw new Error(\n        `JPEG data has an unsupported number of components: components=${parser.numComponents}`,\n      );\n    }\n    return {\n      value: { width, height, numComponents, uint8Array: result },\n      transfer: [result.buffer],\n    };\n  },\n);\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { DecodedImage } from \"#src/async_computation/decode_png_request.js\";\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport const decodeJpeg = asyncComputation<\n  (\n    data: Uint8Array<ArrayBuffer>,\n    width: number | undefined,\n    height: number | undefined,\n    // Expected width * height\n    area: number | undefined,\n    numComponents: number | undefined,\n    convertToGrayscale: boolean,\n  ) => DecodedImage\n>(\"decodeJpeg\");\n","/**\n * @license\n * Copyright 2022 William Silversmith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodePng } from \"#src/async_computation/decode_png_request.js\";\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\nimport { decompressPng } from \"#src/sliceview/png/index.js\";\n\nregisterAsyncComputation(\n  decodePng,\n  async (\n    data,\n    width: number | undefined,\n    height: number | undefined,\n    // Expected width * height\n    area: number | undefined,\n    numComponents: number | undefined,\n    bytesPerPixel: number,\n    convertToGrayscale: boolean,\n  ) => {\n    const result = await decompressPng(\n      data,\n      width,\n      height,\n      area,\n      numComponents,\n      bytesPerPixel,\n      convertToGrayscale,\n    );\n    return { value: result, transfer: [result.uint8Array.buffer] };\n  },\n);\n","/**\n * @license\n * Copyright 2022 William Silversmith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport interface DecodedImage {\n  width: number;\n  height: number;\n  numComponents: number;\n  uint8Array: Uint8Array<ArrayBuffer>;\n}\n\nexport const decodePng = asyncComputation<\n  (\n    data: Uint8Array<ArrayBuffer>,\n    width: number | undefined,\n    height: number | undefined,\n    // Expected width * height\n    area: number | undefined,\n    numComponents: number | undefined,\n    bytesPerPixel: number,\n    convertToGrayscale: boolean,\n  ) => DecodedImage\n>(\"decodePng\");\n","/**\n * @license\n * Copyright 2020 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeBlosc } from \"#src/async_computation/decode_blosc_request.js\";\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\n\nregisterAsyncComputation(decodeBlosc, async (data) => {\n  const { default: Blosc } = await import(\"numcodecs/blosc\");\n  const codec = Blosc.fromConfig({ id: \"blosc\" });\n  const result = (await codec.decode(data)) as Uint8Array<ArrayBuffer>;\n  return { value: result, transfer: [result.buffer] };\n});\n","/**\n * @license\n * Copyright 2020 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport const decodeBlosc =\n  asyncComputation<(data: Uint8Array<ArrayBuffer>) => Uint8Array<ArrayBuffer>>(\n    \"decodeBlosc\",\n  );\n","/**\n * @license\n * Copyright 2023 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeZstd } from \"#src/async_computation/decode_zstd_request.js\";\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\n\nregisterAsyncComputation(decodeZstd, async (data) => {\n  const { default: Zstd } = await import(\"numcodecs/zstd\");\n  const codec = Zstd.fromConfig({ id: \"blosc\" });\n  const result = (await codec.decode(data)) as Uint8Array<ArrayBuffer>;\n  return { value: result, transfer: [result.buffer] };\n});\n","/**\n * @license\n * Copyright 2023 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport const decodeZstd =\n  asyncComputation<(data: Uint8Array<ArrayBuffer>) => Uint8Array<ArrayBuffer>>(\n    \"decodeZstd\",\n  );\n","// DO NOT EDIT.  Generated from templates/util/typedarray_builder.template.ts.\n/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Float32ArrayBuilder {\n  length = 0;\n  data: Float32Array<ArrayBuffer>;\n\n  constructor(initialCapacity: number = 16) {\n    this.data = new Float32Array(initialCapacity);\n  }\n\n  resize(newLength: number) {\n    const { data } = this;\n    if (newLength > data.length) {\n      const newData = new Float32Array(Math.max(newLength, data.length * 2));\n      newData.set(data.subarray(0, this.length));\n      this.data = newData;\n    }\n    this.length = newLength;\n  }\n\n  get view() {\n    const { data } = this;\n    return new Float32Array<ArrayBuffer>(\n      data.buffer,\n      data.byteOffset,\n      this.length,\n    );\n  }\n\n  shrinkToFit() {\n    this.data = new Float32Array(this.view);\n  }\n\n  clear() {\n    this.length = 0;\n  }\n\n  appendArray(other: ArrayLike<number>) {\n    const { length } = this;\n    this.resize(length + other.length);\n    this.data.set(other, length);\n  }\n\n  eraseRange(start: number, end: number) {\n    this.data.copyWithin(start, end, this.length);\n    this.length -= end - start;\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Detects gzip format based on the 2 magic bytes at the start.\n */\nexport function isGzipFormat(data: ArrayBufferView) {\n  const view = new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n  return view.length > 2 && view[0] === 0x1f && view[1] === 0x8b;\n}\n\nexport async function decodeGzip(\n  data: ArrayBuffer | ArrayBufferView,\n  format: CompressionFormat,\n  abortSignal?: AbortSignal,\n) {\n  try {\n    const decompressedStream = new Response(data).body!.pipeThrough(\n      new DecompressionStream(format),\n      { signal: abortSignal },\n    );\n    return await new Response(decompressedStream).arrayBuffer();\n  } catch {\n    abortSignal?.throwIfAborted();\n    throw new Error(`Failed to decode ${format}`);\n  }\n}\n\n/**\n * Decompress `data` if it is in gzip format, otherwise just return it.\n */\nexport async function maybeDecompressGzip(data: ArrayBuffer | ArrayBufferView) {\n  let byteView: Uint8Array;\n  if (data instanceof ArrayBuffer) {\n    byteView = new Uint8Array(data);\n  } else {\n    byteView = new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n  }\n  if (isGzipFormat(byteView)) {\n    return new Uint8Array(await decodeGzip(byteView, \"gzip\"));\n  }\n  return byteView;\n}\n","/**\n * @license\n * Copyright 2020 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\nimport { parseOBJFromArrayBuffer } from \"#src/async_computation/obj_mesh_request.js\";\nimport type { SingleMesh } from \"#src/single_mesh/backend.js\";\nimport { Float32ArrayBuilder } from \"#src/util/float32array_builder.js\";\nimport { maybeDecompressGzip } from \"#src/util/gzip.js\";\nimport { Uint32ArrayBuilder } from \"#src/util/uint32array_builder.js\";\n\nregisterAsyncComputation(\n  parseOBJFromArrayBuffer,\n  async (buffer: ArrayBuffer) => {\n    let text = new TextDecoder().decode(await maybeDecompressGzip(buffer));\n    // Strip comments\n    text = text.replace(/#.*/g, \"\");\n    const vertexPositions = new Float32ArrayBuilder();\n    const indices = new Uint32ArrayBuilder();\n\n    // Find vertices\n    for (const match of text.matchAll(\n      /^v\\s+([-0-9.eE]+)\\s+([-0-9.eE]+)\\s+([-0-9.eE]+)\\s*$/gm,\n    )) {\n      vertexPositions.appendArray([\n        parseFloat(match[1]),\n        parseFloat(match[2]),\n        parseFloat(match[3]),\n      ]);\n    }\n\n    // Find indices\n    for (const match of text.matchAll(\n      /^f\\s+([0-9]+)\\s+([0-9]+)\\s+([0-9]+)\\s*$/gm,\n    )) {\n      indices.appendArray([\n        parseInt(match[1], 10) - 1,\n        parseInt(match[2], 10) - 1,\n        parseInt(match[3], 10) - 1,\n      ]);\n    }\n\n    vertexPositions.shrinkToFit();\n    indices.shrinkToFit();\n\n    const mesh: SingleMesh = {\n      info: {\n        numVertices: vertexPositions.length / 3,\n        numTriangles: indices.length / 3,\n        vertexAttributes: [],\n      },\n      vertexPositions: vertexPositions.view,\n      indices: indices.view,\n      vertexAttributes: [],\n    };\n\n    const size = mesh.vertexPositions.byteLength + mesh.indices.byteLength;\n    console.log(mesh);\n\n    return {\n      value: { data: mesh, size },\n      transfer: [mesh.indices.buffer, mesh.vertexPositions.buffer],\n    };\n  },\n);\n","/**\n * @license\n * Copyright 2020 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\nimport type { SingleMesh } from \"#src/single_mesh/backend.js\";\n\nexport const parseOBJFromArrayBuffer = asyncComputation<\n  (buffer: ArrayBuffer) => {\n    data: SingleMesh;\n    size: number;\n  }\n>(\"parseOBJFromArrayBuffer\");\n","/**\n * @license\n * Copyright 2024 William Silversmith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeJxl } from \"#src/async_computation/decode_jxl_request.js\";\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\nimport { decompressJxl } from \"#src/sliceview/jxl/index.js\";\n\nregisterAsyncComputation(\n  decodeJxl,\n  async (\n    data: Uint8Array,\n    area: number | undefined,\n    numComponents: number | undefined,\n    bytesPerPixel: number,\n  ) => {\n    const result = await decompressJxl(\n      data,\n      area,\n      numComponents,\n      bytesPerPixel,\n    );\n    return { value: result, transfer: [result.uint8Array.buffer] };\n  },\n);\n","/**\n * @license\n * Copyright 2024 William Silversmith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { DecodedImage } from \"#src/async_computation/decode_png_request.js\";\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport const decodeJxl =\n  asyncComputation<\n    (\n      data: Uint8Array,\n      area: number | undefined,\n      numComponents: number | undefined,\n      bytesPerPixel: number,\n    ) => DecodedImage\n  >(\"decodeJxl\");\n","/**\n * @license\n * Copyright 2021 William Silversmith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeCompresso } from \"#src/async_computation/decode_compresso_request.js\";\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\nimport { decompressCompresso } from \"#src/sliceview/compresso/index.js\";\n\nregisterAsyncComputation(decodeCompresso, async (data) => {\n  const result = await decompressCompresso(data);\n  return { value: result, transfer: [result.buffer] };\n});\n","/**\n * @license\n * Copyright 2021 William Silversmith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport const decodeCompresso =\n  asyncComputation<(data: Uint8Array<ArrayBuffer>) => Uint8Array<ArrayBuffer>>(\n    \"decodeCompresso\",\n  );\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file\n * Parser for VTK file format.\n * See http://www.vtk.org/wp-content/uploads/2015/04/file-formats.pdf\n */\n\nconst maxHeaderLength = 1000;\n\nconst vtkHeaderPattern =\n  /^[ \\t]*#[ \\t]+vtk[ \\t]+DataFile[ \\t]+Version[ \\t]+([^\\s]+)[ \\t]*\\n(.*)\\n[ \\t]*(ASCII|BINARY)[ \\t]*\\n[ \\t]*DATASET[ \\t]+([^ ]+)[ \\t]*\\n/;\n\nconst pointDataHeaderPattern = /^[ \\t]*POINT_DATA[ \\t]+([0-9]+)[ \\t]*$/;\n\nconst pointsHeaderPattern = /^[ \\t]*POINTS[ \\t]+([0-9]+)[ \\t]+([^\\s]+)[ \\t]*$/;\nconst scalarsHeaderPattern =\n  /^[ \\t]*SCALARS[ \\t]+([^\\s]+)[ \\t]+([^\\s]+)(?:[ \\t]+([0-9]+))?[ \\t]*$/;\nconst scalarsLookupTableHeaderPattern =\n  /^[ \\t]*LOOKUP_TABLE[ \\t]+([^\\s]+)[ \\t]*$/;\nconst polygonsHeaderPattern =\n  /^[ \\t]*POLYGONS[ \\t]+([0-9]+)[ \\t]+([0-9]+)[ \\t]*$/;\n\nconst trianglePattern =\n  /^[ \\t]*3[ \\t]+([0-9]+)[ \\t]+([0-9]+)[ \\t]+([0-9]+)[ \\t]*$/;\n\nconst blankLinePattern = /^[ \\t]*$/;\n\nexport interface VTKHeader {\n  version: string;\n  comment: string;\n  datasetType: string;\n  dataFormat: string;\n}\n\nexport interface VertexAttribute {\n  name: string;\n  data: Float32Array<ArrayBuffer>;\n  numComponents: number;\n  tableName: string;\n  dataType: string;\n}\n\nexport class TriangularMesh {\n  constructor(\n    public header: VTKHeader,\n    public numVertices: number,\n    public vertexPositions: Float32Array<ArrayBuffer>,\n    public numTriangles: number,\n    public indices: Uint32Array<ArrayBuffer>,\n    public vertexAttributes: VertexAttribute[],\n  ) {}\n}\n\nexport function getTriangularMeshSize(mesh: TriangularMesh) {\n  let size = mesh.vertexPositions.byteLength + mesh.indices.byteLength;\n  for (const attribute of mesh.vertexAttributes) {\n    size += attribute.data.byteLength;\n  }\n  return size;\n}\n\nfunction parsePolydataAscii(\n  header: VTKHeader,\n  data: ArrayBufferView,\n): TriangularMesh {\n  const decoder = new TextDecoder();\n  const text = decoder.decode(data);\n  const lines = text.split(\"\\n\");\n  const numLines = lines.length;\n  let lineNumber = 0;\n\n  let numVertices = -1;\n  let vertexPositions: Float32Array | undefined = undefined;\n  let numTriangles = -1;\n  let indices: Uint32Array | undefined = undefined;\n\n  const vertexAttributes = new Array<VertexAttribute>();\n\n  function parseArray(\n    fieldName: string,\n    n: number,\n    numComponents: number,\n    _dataType: string,\n  ) {\n    // TODO(jbms): respect dataType\n    const pattern = RegExp(\n      \"^[ \\t]*\" + \"([^s]+)[ \\t]+\".repeat(numComponents - 1) + \"([^s]+)[ \\t]*$\",\n    );\n    if (numLines - lineNumber < n) {\n      throw new Error(\n        `VTK data ended unexpectedly while parsing ${fieldName}.`,\n      );\n    }\n    const result = new Float32Array(n * numComponents);\n    let outIndex = 0;\n    for (let i = 0; i < n; ++i) {\n      const line = lines[lineNumber++];\n      const m = line.match(pattern);\n      if (m === null) {\n        throw new Error(\n          `Failed to parse ${fieldName} line ${i}: ${JSON.stringify(line)}.`,\n        );\n      }\n      for (let j = 0; j < numComponents; ++j) {\n        result[outIndex++] = parseFloat(m[j + 1]);\n      }\n    }\n    return result;\n  }\n\n  function parsePoints(nVertices: number, dataType: string) {\n    if (indices !== undefined) {\n      throw new Error(\"POINTS specified more than once.\");\n    }\n    numVertices = nVertices;\n    vertexPositions = parseArray(\"POINTS\", nVertices, 3, dataType);\n  }\n\n  function parsePolygons(numFaces: number, numValues: number) {\n    if (indices !== undefined) {\n      throw new Error(\"VERTICES specified more than once.\");\n    }\n    if (numLines - lineNumber < numFaces) {\n      throw new Error(\"VTK data ended unexpectedly\");\n    }\n    if (numValues !== numFaces * 4) {\n      throw new Error(\"Only triangular faces are supported.\");\n    }\n    numTriangles = numFaces;\n    indices = new Uint32Array(numFaces * 3);\n    let outIndex = 0;\n    for (let i = 0; i < numFaces; ++i) {\n      const m = lines[lineNumber++].match(trianglePattern);\n      if (m === null) {\n        throw new Error(`Failed to parse indices for face ${i}`);\n      }\n      indices[outIndex++] = parseInt(m[1], 10);\n      indices[outIndex++] = parseInt(m[2], 10);\n      indices[outIndex++] = parseInt(m[3], 10);\n    }\n  }\n\n  function parseScalars(name: string, dataType: string, numComponents: number) {\n    if (lineNumber === numLines) {\n      throw new Error(\"Expected LOOKUP_TABLE directive.\");\n    }\n    const firstLine = lines[lineNumber++];\n    const match = firstLine.match(scalarsLookupTableHeaderPattern);\n    if (match === null) {\n      throw new Error(\n        `Expected LOOKUP_TABLE directive in ${JSON.stringify(firstLine)}.`,\n      );\n    }\n    const tableName = match[1];\n    const values = parseArray(\n      `SCALARS(${name})`,\n      numVertices,\n      numComponents,\n      dataType,\n    );\n    vertexAttributes.push({\n      name,\n      data: values,\n      numComponents,\n      dataType,\n      tableName,\n    });\n  }\n\n  function parsePointData(nVertices: number) {\n    if (numVertices !== nVertices) {\n      throw new Error(\n        `Number of vertices specified in POINT_DATA section (${nVertices}) ` +\n          `must match number of points (${numVertices}).`,\n      );\n    }\n    while (lineNumber < numLines) {\n      const line = lines[lineNumber];\n      if (line.match(blankLinePattern)) {\n        ++lineNumber;\n        continue;\n      }\n      const match = line.match(scalarsHeaderPattern);\n      if (match !== null) {\n        let numComponents: number;\n        if (match[3] === undefined) {\n          numComponents = 1;\n        } else {\n          numComponents = parseInt(match[3], 10);\n        }\n        ++lineNumber;\n        parseScalars(match[1], match[2], numComponents);\n      }\n    }\n  }\n\n  while (lineNumber < numLines) {\n    const line = lines[lineNumber];\n    if (line.match(blankLinePattern)) {\n      ++lineNumber;\n      continue;\n    }\n    let match: RegExpMatchArray | null;\n    match = line.match(pointsHeaderPattern);\n    if (match !== null) {\n      ++lineNumber;\n      parsePoints(parseInt(match[1], 10), match[2]);\n      continue;\n    }\n    match = line.match(polygonsHeaderPattern);\n    if (match !== null) {\n      ++lineNumber;\n      parsePolygons(parseInt(match[1], 10), parseInt(match[2], 10));\n      continue;\n    }\n    match = line.match(pointDataHeaderPattern);\n    if (match !== null) {\n      ++lineNumber;\n      parsePointData(parseInt(match[1], 10));\n      break;\n    }\n    throw new Error(`Failed to parse VTK line ${JSON.stringify(line)}.`);\n  }\n\n  if (vertexPositions === undefined) {\n    throw new Error(\"Vertex positions not specified.\");\n  }\n  if (indices === undefined) {\n    throw new Error(\"Indices not specified.\");\n  }\n  return new TriangularMesh(\n    header,\n    numVertices,\n    vertexPositions,\n    numTriangles,\n    indices,\n    vertexAttributes,\n  );\n}\n\nconst asciiFormatParsers = new Map([[\"POLYDATA\", parsePolydataAscii]]);\n\nexport function parseVTK(data: ArrayBufferView): TriangularMesh {\n  // Decode start of data as UTF-8 to determine whether it is ASCII or BINARY format.  Decoding\n  // errors (as will occur if it is binary format) will be ignored.\n  const decoder = new TextDecoder();\n  const decodedHeaderString = decoder.decode(\n    new Uint8Array(\n      data.buffer,\n      data.byteOffset,\n      Math.min(data.byteLength, maxHeaderLength),\n    ),\n  );\n  const headerMatch = decodedHeaderString.match(vtkHeaderPattern);\n  if (headerMatch === null) {\n    throw new Error(\"Failed to parse VTK file header.\");\n  }\n  const byteOffset = headerMatch[0].length;\n  const datasetType = headerMatch[4];\n  const dataFormat = headerMatch[3];\n  const header: VTKHeader = {\n    version: headerMatch[1],\n    comment: headerMatch[2],\n    datasetType,\n    dataFormat,\n  };\n  const remainingData = new Uint8Array(\n    data.buffer,\n    data.byteOffset + byteOffset,\n    data.byteLength - byteOffset,\n  );\n  if (dataFormat === \"ASCII\") {\n    const formatParser = asciiFormatParsers.get(datasetType);\n    if (formatParser === undefined) {\n      throw new Error(\n        `VTK dataset type ${JSON.stringify(datasetType)} is not supported.`,\n      );\n    }\n    return formatParser(header, remainingData);\n  }\n  throw new Error(\n    `VTK data format ${JSON.stringify(dataFormat)} is not supported.`,\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\nimport { parseVTKFromArrayBuffer } from \"#src/async_computation/vtk_mesh_request.js\";\nimport { getTriangularMeshSize, parseVTK } from \"#src/datasource/vtk/parse.js\";\nimport { maybeDecompressGzip } from \"#src/util/gzip.js\";\n\nregisterAsyncComputation(\n  parseVTKFromArrayBuffer,\n  async (buffer: ArrayBuffer) => {\n    const mesh = parseVTK(await maybeDecompressGzip(buffer));\n    return {\n      value: { data: mesh, size: getTriangularMeshSize(mesh) },\n      transfer: [\n        mesh.indices.buffer,\n        mesh.vertexPositions.buffer,\n        ...Array.from(mesh.vertexAttributes.values()).map((a) => a.data.buffer),\n      ],\n    };\n  },\n);\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\nimport type { TriangularMesh } from \"#src/datasource/vtk/parse.js\";\n\nexport const parseVTKFromArrayBuffer = asyncComputation<\n  (buffer: ArrayBuffer) => {\n    data: TriangularMesh;\n    size: number;\n  }\n>(\"parseVTKFromArrayBuffer\");\n"],"names":["tempEncodingBuffer","tempValuesBuffer1","tempValuesBuffer2","tempIndexBuffer1","tempIndexBuffer2","pngModulePromise","jxlModulePromise","compressoModulePromise","asyncComputation","id","handlers","Map","registerAsyncComputation","request","handler","port","self","msg","t","args","value","transfer","error","Error","writeBlock","output","baseOffset","cache","numBlockElements","numUniqueValues","valuesBuffer2","encodingBuffer","indexBuffer2","uint32sPerElement","encodedBits","encodedSize32bits","Math","encodedValueBaseOffset","elementsToWrite","writeTable","key","Array","tableOffset","undefined","outputData","writeEncodedRepresentation","outputOffset","indexBuffer","encodedSize32Bits","wordIndex","elementIndex","word","curOutputOff","i","length","encodeChannels","blockSize","rawData","volumeSize","baseInputOffset","inputStrides","encodeBlock","channelOffsetOutputBase","numChannels","channel","encodeChannel","gridSize","blockIndexSize","gx","gy","gz","xSize","ySize","zSize","xBlockSize","yBlockSize","zBlockSize","headerOffset","actualSize","sx","sy","sz","bz","by","bx","inputOffset","getFortranOrderStrides","size","baseStride","strides","stride","transposeArray2d","array","majorSize","minorSize","transpose","j","ax","ay","az","Uint32Array","valuesBuffer1","indexBuffer1","noAdjacentDuplicateIndex","prevLow","curInputOff","blockElementIndex","bsy","bsz","z","y","x","valueLow","a","b","index","prevHigh","valueHigh","aHigh","bHigh","aLow","bLow","valueIndex","outputIndex2","Uint32ArrayBuilder","initialCapacity","newLength","data","newData","other","start","end","tempBuffer","shape","encodeChannelsUint32","encodeChannelsCommon","encodeChannelsUint64","PDFJS","JpegImage","dctZigZag","Uint8Array","constructor","getBlockBufferOffset","component","row","col","clamp0to255","readUint16","offset","jfif","adobe","quantizationTables","huffmanTablesAC","huffmanTablesDC","fileMarker","appData","readDataBlock","frame","resetInterval","l","quantizationTablesEnd","quantizationTablesLength","quantizationTableSpec","tableData","Uint16Array","componentId","componentsCount","maxH","maxV","h","v","qId","prepareComponents","mcusPerLine","mcusPerColumn","blocksPerLine","blocksPerColumn","blocksPerLineForMcu","blocksBufferSize","Int16Array","huffmanLength","huffmanTableSpec","codeLengths","codeLengthSum","huffmanValues","buildHuffmanTable","values","k","code","q","p","selectorsCount","components","componentIndex","tableSpec","spectralStart","spectralEnd","successiveApproximation","processed","decodeScan","successivePrev","successive","mcuExpected","progressive","startOffset","bitsData","bitsCount","readBit","nextByte","decodeHuffman","tree","node","receive","n","receiveAndExtend","eobrun","successiveACNextValue","successiveACState","componentsLength","decodeFn","diff","rs","s","r","marker","mcu","decodeBlock","decode","blockRow","blockCol","decodeMcu","mcuRow","mcuCol","buildComponentData","computationBuffer","quantizeAndInverse","blockBufferOffset","v0","v1","v2","v3","v4","v5","v6","v7","p0","p1","p2","p3","p4","p5","p6","p7","qt","blockData","width","height","componentScaleX","componentScaleY","blocksPerScanline","scaleX","scaleY","numComponents","dataLength","xScaleBlockOffset","transform","Y","Cb","Cr","g","c","m","scale","forceRGBoutput","ArithmeticDecoder","QeTable","bp","b1","contexts","pos","d","cx_index","cx_mps","qeTableIcx","qeIcx","JpxImage","SubbandsGainLog2","head","position","headerSize","lbox","readUint32","tbox","jumpDataLength","method","colorspace","warn","info","headerType","String","stream","newByte","Xsiz","Ysiz","XOsiz","YOsiz","Csiz","context","doNotRecover","sqcd","spqcds","spqcdSize","scalarExpounded","tile","siz","calculateComponentDimensions","calculateTileGrids","tiles","numXtiles","numYtiles","jj","tileComponent","qcd","spqcd","cqcc","qcc","cod","scod","blockStyle","precinctsSizes","precinctsSize","unsupported","initializeTile","tileIndex","qcdOrQcc","codOrCoc","buildPackets","decompositionLevelsCount","resolutions","subbands","subband","blocksDimensions","getBlocksDimensions","result","resolution","buildPrecincts","dimensions","precinctWidth","precinctHeight","isZeroRes","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","numprecinctshigh","buildCodeblocks","bscale","resolutionSubbands","progressionOrder","LayerResolutionComponentPositionIterator","ResolutionLayerComponentPositionIterator","ResolutionPositionComponentLayerIterator","PositionComponentResolutionLayerIterator","ComponentPositionResolutionLayerIterator","parseTilePackets","buffer","bufferSize","skipNextBit","readBits","count","skipMarkerIfEqual","skipBytes","alignToByte","sopMarkerUsed","ephMarkerUsed","packetsIterator","packet","codeblock","layerNumber","queue","ii","precinct","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","inclusionTree","valueReady","zeroBitPlanesTree","InclusionTree","TagTree","codingpasses","readCodingpasses","codingpassesLog2","log2","codedDataLength","packetItem","e","transformComponents","resultImages","transformedTiles","transformTile","codingStyleParameters","quantizationParameters","guardBits","segmentationSymbolUsed","precision","reversible","ReversibleTransform","IrreversibleTransform","subbandCoefficients","coefficients","Float32Array","mu","epsilon","gainLog2","copyCoefficients","levelWidth","levelHeight","delta","mb","x0","y0","codeblocks","right","bottom","bitModel","currentCodingpassType","dataItem","nb","blockWidth","blockHeight","BitModel","totalLength","encodedData","chunk","decoder","sign","magnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","shift","max","min","maxK","y1","y2","val","tile0","out","fourComponents","y0items","y1items","y2items","y3items","component0","alpha01","items","precinctNumber","xcb_","ycb_","codeblockWidth","codeblockHeight","cbx0","cby0","cbx1","cby1","precinctParameters","precincts","pi","pj","createPacket","precinctCodeblocks","layersCount","maxDecompositionLevelsCount","numprecincts","maxNumPrecinctsInLevel","Int32Array","maxNumPrecincts","getPrecinctSizesInImageScale","px","py","precinctsIterationSizes","sizeInImageScale","getPrecinctIndexIfExist","pxIndex","pyIndex","precinctIterationSizes","posX","posY","startPrecinctRowIndex","minWidth","Number","minHeight","maxNumWide","maxNumHigh","sizePerComponent","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","widthCurrentResolution","heightCurrentResolution","levelsLength","level","currentLevel","defaultValue","stopValue","levelIndex","currentValue","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","zeroBitPlanes","coefficientCount","Int8Array","column","neighborsSignificance","left","coefficentsMagnitude","coefficentsSign","processingFlags","labels","i0","i1","contextLabel","contribution","sign0","sign1","significance1","decoded","horizontalContribution","width4","indexNext","index0","significance","bit","twoRowsDown","threeRowsDown","iNext","indexBase","checkAllEmpty","allEmpty","i2","symbol","Transform","u0","ll","j1","j2","hl_lh_hh","llWidth","llHeight","llItems","rowBuffer","bufferPadding","numBuffers","colBuffers","u","currentBuffer","Object","current","next","len","K_","K","gamma","beta","alpha","Jbig2Image","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","prev","decodeIAID","codeLength","shadow","SegmentTypes","CodingTemplates","RefinementTemplates","ReusedContexts","RefinementReusedContexts","decodeBitmap","mmr","templateIndex","prediction","skip","at","decodingContext","decodeBitmapTemplate0","pixel","row1","row2","bitmap","useskip","template","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","maxX","minY","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","sbb_left","sbb_top","sbb_right","pseudoPixelContext","j0","ltp","decodeRefinement","referenceBitmap","offsetX","offsetY","codingTemplate","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeTextRegion","huffman","refinement","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","symbolCodeLength","transposed","dsOffset","referenceCorner","combinationOperator","huffmanTables","refinementTemplateIndex","refinementAt","stripT","firstS","currentS","s2","t2","symbolRow","currentT","symbolId","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","rdx","rdy","offsetT","offsetS","maxWidth","deltaS","readRegionSegmentInformation","RegionSegmentInformationFieldLength","SimpleSegmentVisitor","rowSize","regionInfo","mask","pageInfo","mask0","offset0","region","arguments","dictionary","currentSegment","referredSegments","symbols","decodeSymbolDictionary","numberOfNewSymbols","numberOfExportedSymbols","newSymbols","currentHeight","currentWidth","totalWidth","deltaWidth","numberOfInstances","exportedSymbols","flags","currentFlag","totalSymbolsLength","runLength","chunks","parseJbig2Chunks","visitor","processSegments","segments","processSegment","segment","atLength","header","dictionaryFlags","readInt8","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","genericRegion","genericRegionSegmentFlags","pageSegmentFlags","callbackName","readSegments","segmentHeader","readSegmentHeader","segmentType","referredFlags","referredToCount","retainBits","bytes","referredToSegmentNumberSize","referredTo","number","genericRegionInfo","searchPattern","obj","prop","console","bitPacked","JpegDecoder","area","convertToGrayscale","parser","converted","libraryEnv","magicSpec","validHeaderCode","decompressPng","bytesPerPixel","WebAssembly","fetch","URL","dataWidth","readHeader","arrayEqualTrucated","idx","bufview","DataView","chunkLength","chunkCode","bitDepth","colorSpace","compressionMethod","filterMethod","interlaceMethod","validBitDepths","nbytes","bufPtr","imagePtr","heap","image","Blosc","codec","Zstd","Float32ArrayBuilder","decodeGzip","format","abortSignal","decompressedStream","Response","DecompressionStream","maybeDecompressGzip","byteView","isGzipFormat","view","ArrayBuffer","text","TextDecoder","vertexPositions","indices","match","parseFloat","parseInt","mesh","getJxlModulePromise","decompressJxl","checkHeader","jxlImagePtr","decompressCompresso","voxels","vtkHeaderPattern","pointDataHeaderPattern","pointsHeaderPattern","scalarsHeaderPattern","scalarsLookupTableHeaderPattern","polygonsHeaderPattern","trianglePattern","blankLinePattern","TriangularMesh","numVertices","numTriangles","vertexAttributes","asciiFormatParsers","lines","numLines","lineNumber","parseArray","fieldName","_dataType","pattern","RegExp","outIndex","line","JSON","parsePoints","nVertices","dataType","parsePolygons","numFaces","numValues","parsePointData","parseScalars","name","firstLine","tableName","parseVTK","headerMatch","decodedHeaderString","byteOffset","datasetType","dataFormat","remainingData","formatParser","getTriangularMeshSize","attribute"],"mappings":"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KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,IACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,IACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,IACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,IACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,IACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,GACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,GACJ,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AC7J,EAAU2S,GACpCA,EAAO,AAACA,GAAQ,EAAKvC,CACvB,QACA,AAAIyC,EAAa,GACRF,EAAQ,AAAC,IAAKE,CAAS,EAAK,EAE9BF,AAAO,WAAPA,CACT,CA7DAL,EAAa,SAAS,CAAG,CACvB,YAAa,SAAUnjB,CAAE,SACvB,AAAIA,KAAM,IAAI,CACL,IAAI,CAACA,EAAG,CAET,IAAI,CAACA,EAAG,CAAG,IAAI4f,UAAU,MACnC,CACF,EAMAwD,EAAgB,SAAS,CAAG,CAC1B,IAAI,SAAU,CAEZ,OAAOO,EAAO,IAAI,CAAE,UADN,IAAIlT,EAAkB,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,GAAG,EAErE,EACA,IAAI,cAAe,CAEjB,OAAOkT,EAAO,IAAI,CAAE,eADR,IAAIR,EAElB,CACF,EAwCA,IAAIS,EAAe,CACjB,mBACA,KACA,KACA,KACA,yBACA,KACA,sBACA,8BACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,oBACA,KACA,KACA,KACA,6BACA,KACA,0BACA,kCACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,4BACA,KACA,yBACA,iCACA,sCACA,KACA,mCACA,2CACA,KACA,KACA,KACA,KACA,kBACA,YACA,cACA,YACA,WACA,SACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,YACD,CACGC,EAAkB,CACpB,CACE,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACD,CACD,CACE,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACD,CACD,CACE,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACD,CACD,CACE,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACD,CACF,CACGC,EAAsB,CACxB,CACE,OAAQ,CACN,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACD,CACD,UAAW,CACT,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,EACH,EAAG,CACL,EACA,CACE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"}