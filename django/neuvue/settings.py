"""
Django settings for neuvue project.

Generated by 'django-admin startproject' using Django 3.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-x&k71)cwa@+a_0eg0sewzjwdyh!rzcy+$)c_e!f*-leem==lcf'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'webpack_loader'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'neuvue.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

TEMPLATE_DIR = os.path.join(BASE_DIR, "templates") 




WSGI_APPLICATION = 'neuvue.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': 'neuvueDB',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

if not DEBUG: 
    STATIC_ROOT = '/home/django/www-data/site.com/static/' #change later


STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]



# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend'
]

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    }
}

LOGIN_REDIRECT_URL = '/tasks'
LOGOUT_REDIRECT_URL = '/'

# Neuvue Specific Settings
NEUVUE_QUEUE_ADDR = "http://172.31.82.83:9005/"
NAMESPACES = {
    "split" : {
        "display_name": "Multi-Soma Split"
    },
    "trace": {
        "display_name": "Tracing"
    }
}

# Data Sources
IMG_SOURCE = "https://bossdb-open-data.s3.amazonaws.com/iarpa_microns/minnie/minnie65/em"
PROD_PCG_SOURCE = "https://minnie.microns-daf.com/segmentation/table/minnie3_v1"
DEV_PCG_SOURCE = None

# Neuroglancer Settings
NG_CLIENT = "https://neuroglancer.neuvue.io"
CONTRAST = {
    "black": 0.35, 
    "white": 0.7
}
VOXEL_RESOLUTION = (4, 4, 40)
from webpack_loader.loader import WebpackLoader
from glob import glob
import json
class MultipleWebpackLoader(WebpackLoader):
    def load_assets(self):
        complete_stats = {'status':None,'assets':{}, 'chunks':{}}

        for fn in self.config['STATS_FILES']:
            with open(fn) as fp:
                stats = json.load(fp)
                if stats['status'] != "done":
                    raise ValueError(f"Failed to load webpack status: {fn}")
                complete_stats['assets'] = {**complete_stats['assets'], **stats['assets']}
                complete_stats['chunks'] = {**complete_stats['chunks'], **stats['chunks']}
        complete_stats['status'] = 'done'
        return complete_stats
WEBPACK_LOADER = {
  'DEFAULT': {
    'LOADER_CLASS': 'neuvue.settings.MultipleWebpackLoader',
    'BUNDLE_DIR_NAME':  'workspace',
    'CACHE': not DEBUG,
    'STATS_FILES': glob(os.path.join(BASE_DIR,'static','ts','wrapper', 'webpack-stats-*.json')),
    'POLL_INTERVAL': 0.1,
    'IGNORE': [r'.+\.hot-update.js', r'.+\.map'],
  }
}
SITE_ID = 3
if DEBUG:
    import mimetypes
    mimetypes.add_type("application/javascript", ".js",True)

STATIC_NG_FILES = os.listdir(os.path.join(BASE_DIR, "static",'workspace'))